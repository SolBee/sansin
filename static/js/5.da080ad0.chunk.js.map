{"version":3,"sources":["../node_modules/@amcharts/amcharts4/.internal/bundled/xlsx/xlsx.mjs"],"names":["__webpack_require__","r","__webpack_exports__","d","version","parse_xlscfb","parse_zip","readSync","readFileSync","writeSync","writeFileSync","writeFileAsync","writeSyncXLSX","writeFileSyncXLSX","utils","set_fs","set_cptable","__stream","SSF","CFB","$cptable","XLSX","current_codepage","current_ansi","VALID_ANSI","CS2CP","0","1","2","77","128","129","130","134","136","161","162","163","177","178","186","204","222","238","255","69","set_ansi","cp","indexOf","set_cp","reset_cp","char_codes","data","o","i","len","length","charCodeAt","utf16leread","String","fromCharCode","join","utf16beread","debom","c1","c2","slice","_getchar","x","_getansi","cptable","decode","cpdoit","DENSE","DIF_XL","Base64_map","Base64_encode","input","c3","e1","e2","e3","e4","isNaN","charAt","Base64_decode","replace","has_buf","Buffer","process","versions","node","Buffer_from","nbfs","from","e","buf","enc","bind","buf_utf16le","toString","new_raw_buf","alloc","Uint8Array","Array","new_unsafe_buf","allocUnsafe","s2a","s","split","map","s2ab","ArrayBuffer","view","a2s","isArray","c","ab2a","Error","bconcat","bufs","concat","isBuffer","maxlen","set","apply","call","chr0","chr1","_strrev","pad0","v","t","fill","pad_","rpad_","p2_32","Math","pow","pad0r","round","pad0r1","pad0r2","SSF_isgeneral","days","months","table_fmt","3","4","9","10","11","12","13","14","15","16","17","18","19","20","21","22","37","38","39","40","45","46","47","48","49","56","SSF_default_map","5","6","7","8","23","24","25","26","27","28","29","30","31","50","51","52","53","54","55","57","58","59","60","61","62","67","68","70","71","72","73","74","75","76","78","79","80","81","82","SSF_default_str","63","64","65","66","41","42","43","44","SSF_frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","SSF_parse_date_code","opts","b2","date","toPrecision","m","n","Number","SSF_normalize_xl_unsafe","time","dow","dout","out","T","u","y","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","SSF_fix_hijri","SSF_strip_decimal","SSF_general_num","V","log","LOG10E","w","toFixed","toExponential","SSF_small_exp","substr","SSF_large_exp","SSF_normalize_exp","toUpperCase","SSF_general","SSF_format","datenum","SSF_write_date","type","fmt","val","ss0","ss","tt","outl","commaify","j","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","rnd","dd","dec","_frac","write_num_flt","match","ffmt","idx","write_num","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","min","max","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","lastIndexOf","SSF_abstime","fmt_is_date","cfregex2","chkcond","thresh","parseFloat","choose_fmt","f","in_str","SSF_split_fmt","l","lat","m1","m2","dateNF","table","flen","dt","lst","hr","toLowerCase","ssm","_dt","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","eval_fmt","SSF_load","undefined","SSF_load_table","tbl","make_ssf","format","load","_table","load_table","parse_date_code","is_date","get_table","SSFImplicit","32","33","34","35","36","dateNFregex","bad_formats","d.m","SSF__load","_fs","CRC32","T0","Int32Array","signed_crc_table","TT","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","fs","exports","dirname","p","filename","write_dos_date","hms","getHours","getMinutes","getSeconds","write_shift","ymd","parse_extra_field","blob","prep_blob","flags","read_shift","sz","tgt","mtime","atime","ctime","mt","sz1","sz2","usz","csz","get_fs","parse","file","options","root","di","row","test","mboundary","boundary","FileIndex","FullPaths","init_cfb","start_di","fcnt","line","parse_mime","parse_mad","mver","nmfs","difat_sec_cnt","dir_start","minifat_start","difat_start","ssz","fat_addrs","mv","chk","HEADER_SIGNATURE","check_get_mver","header","shift","check_shifts","dir_cnt","sectors","nsectors","ceil","sectorify","sleuth_fat","cnt","ENDOFCHAIN","sector","__readInt32LE","push","sector_list","sl","chkd","buf_chain","modulus","k","seen","addr","nodes","__toBuffer","make_sector_list","name","Paths","files","mini","minifat_store","pl","namelen","__utf16le","color","R","clsid","state","start","size","ct","read_date","storage","get_sector_list","content","get_mfat_entry","read_directory","FI","FP","dad","build_full_paths","raw","entry","payload","MSSZ","new_buf","offset","__readUInt32LE","cfb","CLSID","nm","find","rebuild_cfb","seed_cfb","gc","_file","pop","now","fullPaths","Object","create","HEADER_CLSID","sort","Z","namecmp","elt","_write","_opts","fileType","fp","fi","ca","cstr","dispcnt","csl","qp","get_content_type","write_quoted_printable","write_base64_76","write_mad","cdirs","method","compression","start_cd","crcs","sz_cd","namebuf","outbuf","_zlib","deflateRawSync","_deflate","write_zip","mini_size","fat_size","mfat_cnt","fat_base","fat_cnt","difat_cnt","HEADER_SIG","chainit","consts","DIFSECT","FATSECT","_nm","console","error","copy","MAXREGSECT","FREESECT","HEADER_MINOR_VERSION","MAXREGSID","NOSTREAM","EntryTypes","CLEN_ORDER","LEN_LN","DST_LN","bit_swap_8","use_typed_arrays","bitswap8","bit_swap_n","b","rev","read_bits_2","bl","h","read_bits_3","read_bits_5","read_bits_7","read_bits_n","write_bits_3","write_bits_1","write_bits_8","write_bits_16","realloc","a","zero_fill_array","build_tree","clens","cmap","MAX","ccode","bl_count","Uint16Array","ctree","cleni","fix_lmap","fix_dmap","dlens","_deflateRaw","DST_LN_RE","LEN_LN_RE","boff","write_stored","addrs","hash","mlen","len_eb","dst_eb","write_huff_fixed","off","dyn_lmap","dyn_dmap","dyn_cmap","dyn_len_1","dyn_len_2","dyn","_HLIT","_HDIST","_HCLEN","read_bits_4","next_code","hcodes","h1","h2","_inflate","woff","OL","max_len_1","max_len_2","bits","code","dst","inflate","warn_or_throw","wrn","msg","efsz","fcsz","EF","parse_local_file","meth","setMilliseconds","setFullYear","setMonth","setHours","setMinutes","setSeconds","parse_dos_date","_csz","_usz","ef","InflRaw","InflateRaw","_processChunk","_finishFlushFlag","bytesRead","_inflateRawSync","cfb_add","unsafe","ContentTypeMap","htm","xml","gif","jpg","png","mso","thmx","sh33tj5","ctype","ext","text","encoded","si","end","tmp","fdata","fname","cte","trim","oi","parse_quoted_printable","fpath","cfb_gc","path","UCFullPaths","UCPaths","UCPath","read","read_file","write","writeFile","cfb_new","cfb_del","splice","cfb_mov","old_name","new_name","ReadShift","CheckField","use_zlib","zlib","message","_inflateRaw","blobify","a2u","write_dl","Deno","TextEncoder","encode","utf8write","IE_SaveFile","Blob","navigator","msSaveBlob","saveAs","URL","document","createElement","createObjectURL","url","chrome","downloads","download","revokeObjectURL","setTimeout","href","body","appendChild","click","removeChild","b64","Base64_encode_arr","$","File","Folder","open","encoding","close","keys","ks","o2","prototype","hasOwnProperty","evert_key","obj","key","K","evert","evert_num","dnthresh","UTC","dnthresh1","dnthresh2","res","getTime","numdate","setTime","parse_isodur","sec","pdre1","pdre2","pdre3","parseDate","cc2str","arr","debomit","TextDecoder","€","‚","ƒ","„","…","†","‡","ˆ","‰","Š","‹","Œ","Ž","‘","’","“","”","•","–","—","˜","™","š","›","œ","ž","Ÿ","dup","JSON","stringify","fuzzynum","isFinite","NaN","wt","FDRE1","FDRE2","FDISO","utc_append_works","valueOf","lower_months","fuzzydate","local_to_utc","lower","lnos","fuzzytime1","fuzzytime2","getYear","split_regex","safe_split_regex","re","def","utc_to_local","utc","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","local","getMilliseconds","remove_doctype","index","str_match_ng","ei","str_remove_ng","last","xml_boundary"," ","\t","\r","\n",">","str_match_xml","tag","sf","et","str_match_xml_ns","str_match_xml_ns_cache","RegExp","lastIndex","exec","str_match_xml_ns_g","str_remove_xml_ns_g","str_remove_xml_ns_cache","str_match_xml_ig","getdatastr","asNodeBuffer","asBinary","_data","getContent","getdatabin","safegetzipfile","zip","g","getzipfile","getzipdata","safe","getzipstr","zipentries","zip_add_file","widx","ridx","utf8decode","zip_new","zip_read","resolve_path","result","target","step","XML_HEADER","attregexg","tagregex1","tagregex","nsregex","nsregex2","parsexmltag","skip_root","skip_LC","z","eq","quot","strip_ns","encodings","&quot;","&apos;","&gt;","&lt;","&amp;","rencoding","unescapexml","encregex","coderegex","xlsx","raw_unescapexml","decregex","charegex","escapexml","escapexmltag","htmlcharegex","escapehtml","xlml_fixstr","entregex","entrepl","parsexmlbool","value","utf8reada","orig","utf8readb","ww","utf8readc","utf8corpus","utf8read","htmldecode","entities","vtvregex","vtmregex","parseVector","matches","baseType","WTF","forEach","wtregex","writetag","wxt_helper","writextag","write_w3cdtf","toISOString","xlml_normalize","xlmlregex","XMLNS","CORE_PROPS","CUST_PROPS","EXT_PROPS","CT","RELS","TCMNT","dc","dcterms","dcmitype","mx","sjs","vt","xsi","xsd","XMLNS_main","XLMLNS","html","___toBuffer","___utf16le","__readUInt16LE","___hexlify","__hexlify","___utf8","__readUInt8","__utf8","___lpstr","__lpstr","___cpstr","__cpstr","___lpwstr","__lpwstr","___lpp4","__lpp4","___8lpp4","__8lpp4","___double","Infinity","read_double_le","__double","is_buf","readUInt32LE","readDoubleLE","__readInt16LE","__readInt32BE","oI","oR","loc","oo","this","lens","__writeUInt32LE","__writeInt32LE","__writeUInt16LE","WriteShift","cpp","bs","av","LN2","write_double_le","hexstr","fld","pos","parsenoop","recordhopper","cb","tmpbyte","cntbyte","RT","XLSBRecordEnum","buf_array","blksz","newblk","curbuf","endbuf","next","_bufs","write_record","ba","shift_cell_xls","cell","cRel","rRel","biff","shift_range_xls","range","encode_cell_xls","encode_cell","fix_row","encode_range_xls","encode_row","encode_col","decode_row","rowstr","decode_col","colstr","col","decode_cell","decode_range","encode_range","cs","ce","fix_range","a1","formula_quote_sheet_name","sname","safe_decode_range","safe_format_cell","XF","numFmtId","format_cell","BErr","sheet_to_workbook","sheet","sheets","SheetNames","Sheets","sheet_add_aoa","_ws","dense","ws","_R","_C","origin","_origin","_range","__R","__Rstr","__C","nullError","sheetStubs","cellDates","cell_ref","aoa_to_sheet","write_UInt32LE","parse_XLWideString","cchCharacters","write_XLWideString","_null","parse_StrRun","ich","ifnt","parse_RichStr","rgsStrRun","dwSizeStrRun","parse_BrtCommentText","write_BrtCommentText","run","write_StrRun","parse_XLSBCell","iStyleRef","write_XLSBCell","parse_XLSBShortCell","write_XLSBShortCell","parse_XLSBCodeName","write_XLSBCodeName","parse_XLNullableWideString","write_XLNullableWideString","parse_XLNameWideString","parse_RelID","write_RelID","parse_RkNumber","fX100","fInt","RK","write_RkNumber","d100","parse_RfX","parse_UncheckedRfX","write_UncheckedRfX","parse_Xnum","write_Xnum","write_BrtColor","auto","theme","nTS","tint","rgb","parse_ClipboardFormatOrString","VT_I2","VT_I4","VT_VARIANT","VT_USTR","VT_CUSTOM","DocSummaryPIDDSI","2147483648","2147483651","1919054434","SummaryPIDSI","CountryEnum","84","86","90","105","213","216","218","351","354","358","420","886","961","962","963","964","965","966","971","972","974","981","65535","XLSFillPattern","rgbify","XLSIcv","RBErr","#NULL!","#DIV/0!","#VALUE!","#REF!","#NAME?","#NUM!","#N/A","#GETTING_DATA","#WTF?","XLSLblBuiltIn","ct2type","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml","application/vnd.ms-excel.sheet.macroEnabled.main+xml","application/vnd.ms-excel.sheet.binary.macroEnabled.main","application/vnd.ms-excel.addin.macroEnabled.main+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml","application/vnd.ms-excel.worksheet","application/vnd.ms-excel.binIndexWs","application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml","application/vnd.ms-excel.chartsheet","application/vnd.ms-excel.macrosheet+xml","application/vnd.ms-excel.macrosheet","application/vnd.ms-excel.intlmacrosheet","application/vnd.ms-excel.binIndexMs","application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml","application/vnd.ms-excel.dialogsheet","application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml","application/vnd.ms-excel.sharedStrings","application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml","application/vnd.ms-excel.styles","application/vnd.openxmlformats-package.core-properties+xml","application/vnd.openxmlformats-officedocument.custom-properties+xml","application/vnd.openxmlformats-officedocument.extended-properties+xml","application/vnd.openxmlformats-officedocument.customXmlProperties+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty","application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml","application/vnd.ms-excel.comments","application/vnd.ms-excel.threadedcomments+xml","application/vnd.ms-excel.person+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml","application/vnd.ms-excel.sheetMetadata","application/vnd.ms-excel.pivotTable","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml","application/vnd.openxmlformats-officedocument.drawingml.chart+xml","application/vnd.ms-office.chartcolorstyle+xml","application/vnd.ms-office.chartstyle+xml","application/vnd.ms-office.chartex+xml","application/vnd.ms-excel.calcChain","application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings","application/vnd.ms-office.activeX","application/vnd.ms-office.activeX+xml","application/vnd.ms-excel.attachedToolbars","application/vnd.ms-excel.connections","application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml","application/vnd.ms-excel.externalLink","application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml","application/vnd.ms-excel.pivotCacheDefinition","application/vnd.ms-excel.pivotCacheRecords","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml","application/vnd.ms-excel.queryTable","application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml","application/vnd.ms-excel.userNames","application/vnd.ms-excel.revisionHeaders","application/vnd.ms-excel.revisionLog","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml","application/vnd.ms-excel.tableSingleCells","application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml","application/vnd.ms-excel.slicer","application/vnd.ms-excel.slicerCache","application/vnd.ms-excel.slicer+xml","application/vnd.ms-excel.slicerCache+xml","application/vnd.ms-excel.wsSortMap","application/vnd.ms-excel.table","application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml","application/vnd.openxmlformats-officedocument.theme+xml","application/vnd.openxmlformats-officedocument.themeOverride+xml","application/vnd.ms-excel.Timeline+xml","application/vnd.ms-excel.TimelineCache+xml","application/vnd.ms-office.vbaProject","application/vnd.ms-office.vbaProjectSignature","application/vnd.ms-office.volatileDependencies","application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml","application/vnd.ms-excel.controlproperties+xml","application/vnd.openxmlformats-officedocument.model+data","application/vnd.ms-excel.Survey+xml","application/vnd.openxmlformats-officedocument.drawing+xml","application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml","application/vnd.openxmlformats-officedocument.vmlDrawing","application/vnd.openxmlformats-package.relationships+xml","application/vnd.openxmlformats-officedocument.oleObject","image/png","CT_LIST","workbooks","xlsm","xlsb","xlam","xltx","strs","comments","charts","dialogs","macros","metadata","styles","write_ct","type2ct","evert_arr","xmlns","xmlns:xsd","xmlns:xsi","Extension","ContentType","f1","PartName","bookType","f2","f3","WB","SHEET","HLINK","VML","XPATH","XMISS","XLINK","CXML","CXMLP","CMNT","SST","STY","THEME","CHART","CHARTEX","CS","WS","DS","MS","IMG","DRAW","XLMETA","PEOPLE","CONN","VBA","get_rels_path","parse_rels","currentFilePath","rels","!id","rel","Type","Target","Id","TargetMode","canonictarget","write_rels","rid","add_rels","rId","relobj","targetmode","CT_ODS","write_rdf_type","write_meta_ods","wb","parse_core_props","cur","cp_doit","write_core_props","xmlns:cp","xmlns:dc","xmlns:dcterms","xmlns:dcmitype","Props","CreatedDate","xsi:type","ModifiedDate","PseudoPropsPairs","load_props_pairs","HP","TOP","props","hp","parts","Worksheets","NamedRanges","DefinedNames","Chartsheets","ChartNames","write_ext_props","W","Application","xmlns:vt","custregex","write_cust_props","pid","write_vt","fmtid","evert_XLMLDPM","XLMLDocPropsMap","Title","Subject","Author","Keywords","Comments","LastAuthor","RevNumber","LastPrinted","Category","Manager","Company","AppVersion","ContentStatus","Identifier","Language","xlml_set_prop","parse_FILETIME","dwLowDateTime","dwHighDateTime","parse_lpstr","pad","parse_lpwstr","parse_VtStringBase","stringType","parse_VtString","parse_VtHeadingPair","headingString","parse_TypedPropertyValue","parse_dictionary","CodePage","dict","parse_BLOB","bytes","ret","Size","parse_ClipboardData","parse_VtUnalignedString","cElements","parse_VtVecHeadingPairValue","parse_VtVecLpwstrValue","parse_VtVecUnalignedLpstrValue","write_TypedPropertyValue","write_FILETIME","parse_PropertySet","PIDSI","start_addr","NumProps","Dictionary","DictObj","PropID","Offset","PropH","fail","piddsi","oldpos","parsebool","XLSPSSkip","guess_property_type","write_PropertySet","entries","RE","hdr","piao","prop","pr","pio","unshift","pinfo","parse_PropertySetStream","NumSets","FMTID0","FMTID1","Offset0","Offset1","SystemIdentifier","PSet1","PSet0","rval","FMTID","write_PropertySetStream","entries2","clsid2","ps0","ps1","parsenoop2","writebool","parseuint16","writeuint16","parseuint16a","parslurp","parse_Bes","write_Bes","parse_ShortXLUnicodeString","cch","parse_XLUnicodeRichExtendedString","cbExtRst","fExtSt","fRichSt","width","cRun","write_XLUnicodeRichExtendedString","xlstr","otext","parse_XLUnicodeStringNoCch","parse_XLUnicodeString","parse_XLUnicodeString2","write_XLUnicodeString","parse_HyperlinkMoniker","extra","parse_URLMoniker","cAnti","preamble","ansiPath","parse_FileMoniker","parse_HyperlinkString","write_HyperlinkString","write_Hyperlink","hl","hashidx","F","Pretarget","parse_LongRGBA","parse_LongRGB","parse_XLSCell","ixfe","write_XLSCell","parse_XTI","parse_RkRec","parse_Ref8U","rwFirst","rwLast","write_Ref8U","parse_RefU","parse_Ref","parse_FtCmo","ot","id","parse_FtSkip","FtTab","cf","fSharedNote","parse_BOF","BIFFVer","write_BOF","write_BoundSheet8","hs","parse_DefaultRowHeight","miyRw","Unsynced","DyZero","ExAsc","ExDsc","write_Format","b5","parse_BIFF2Format","parse_Dimensions","write_XF","ixfeP","style","write_BIFF3XF","xf","write_BIFF4XF","write_BoolErr","os","parse_XLHeaderFooter","parse_ExternName","fBuiltIn","fWantAdvise","fWantPict","fOle","fOleLink","fIcon","sbcch","udfName","parse_AddinUdf","Name","parse_Lbl","chKey","cce","itab","npflen","rgce","rgcb","parse_Rgce","parse_RgbExtra","parse_NameParsedFormula","parse_ExternSheet","parse_BIFF5ExternSheet","parse_Array","ref","parse_ArrayParsedFormula","write_NOTE_BIFF2","parse_BIFF5OT","cchName","write_HLink","O","write_HLinkTooltip","Tooltip","parse_ColInfo","cellStyles","colFirst","colLast","coldx","level","parse_Blank","parse_Scl","parse_String","write_BIFF2Cell","ifmt","DBF_SUPPORTED_VERSIONS","DBF","dbf_codepage_map","100","101","102","103","104","106","107","120","121","122","123","124","125","126","150","151","152","200","201","202","203","87","88","89","108","135","dbf_reverse_map","dbf_to_sheet","ft","memo","vfp","l7","nrow","fpos","rlen","current_cp","codepage","fields","field","hend","hi","lo","sheetRows","dbf_to_aoa","wch","_RLEN","?","","to_workbook","to_sheet","from_sheet","old_cp","aoa","sheet_to_json","headers","cols","hcnt","coltypes","colwidths","coldecimals","guess","_guess","hf","_f","hb","rout","_n","_l","_s","SYLK","sylk_escapes","AA","BA","CA","DA","HA","JA","AE","BE","CE","HE","AI","BI","CI","HI","AO","BO","CO","DO","HO","AU","BU","CU","HU","Aa","Ba","Ca","Da","Ha","Ja","Ae","Be","Ce","He","Ai","Bi","Ci","Hi","Ao","Bo","Co","Do","Ho","Au","Bu","Cu","Hu","KC","Kc","DN","Dn","Hy","B ","!","\"","#","(","%","'","H ","+",";","<","=","{","sylk_char_regex","sylk_char_fn","_","decode_sylk_char","newcc","encode_sylk_str","sylk_to_aoa_str","records","rj","formats","next_cell_format","sht","rowinfo","colinfo","cw","Mval","Workbook","WBProps","Names","rstr","record","d1904","nn","Sheet","Ref","rc_to_a1","C_seen_K","C_seen_X","C_seen_S","C_seen_E","formula","cell_t","cmnt","cellText","shrbase","shift_formula_str","F_seen","hidden","hpt","hpx","pt2px","process_col","write_ws_cell_sylk","a1_to_rc","write_ws_cmnt_sylk","aoasht","sylk_to_aoa","outwb","_formats","RS","rec","wpx","width2px","px2char","rows","px2pt","write_ws_rows_sylk","DIF","dif_to_aoa_str","dif_to_sheet","dif_to_aoa","make_value","make_value_str","_DIF_XL","ETH","eth_to_sheet","eth_to_aoa","sep","meta","sheet_to_eth_data","coord","PRN","set_text_arr","guess_seps","guess_sep_weights","guess_sep","instr","dsv_to_sheet_str","FS","sepcc","startcc","_re","dateNF_regex","finish_cell","news","Y","datestr","timestr","dateNF_fix","cellNF","outer","prn_to_sheet_str","lines","prn_to_aoa_str","prn_to_sheet","firstbyte","WK_","lotushopper","Enum","WK1Enum","LOTUS_DATE_FMTS","lotus_to_workbook_buf","next_n","sidx","snames","realnames","sdata","refguess","lastcell","FMTS","QPWNFTable","book_append_sheet","CC","fmtidx","delta","newcell","parse_qpw_str","qpw_to_workbook_buf","vers","qpro","works","works2","tmpcell","WK3Enum","osheets","rnames","!ref","parse_cell","get_wk1_fmt","write_LABEL","write_INTEGER","write_NUMBER","wk1_parse_rc","FuncTab","83","109","111","BinOpTab","parse_cell_3","write_LABEL_16","wsidx","parse_NUMBER_17","v1","v2","write_NUMBER_17","log2","parse_NUMBER_27","parse_SHEETNAMECS","write_XFORMAT_SHEETNAME","argc","argL","argR","args","wk1_fmla_to_csf","21506","142","147","153","154","155","156","174","175","176","184","185","187","188","195","205","206","207","208","256","259","260","261","262","263","265","266","267","268","270","271","384","389","390","393","396","512","514","513","516","517","640","641","642","643","644","645","646","647","648","658","659","660","661","662","665","666","768","772","1537","1600","1602","1793","1794","1795","1796","1920","2048","2049","2052","2688","10998","12849","28233","28484","288","304","320","sheet_to_wk1","write_biff_rec","write_BOF_WK1","write_RANGE","max_R","book_to_wk3","wscnt","write_BOF_WK3","parse_rs","parse_r","rpr","font","pass","shadow","outline","strike","uval","family","valign","parse_rpr","rregex","rend","rs","filter","rs_to_html","nlregex","r_to_html","terms","intro","outro","align","parse_rpr2","sitregex","sirregex","parse_si","cellHTML","sstr1","sstr2","straywsregex","write_BrtSSTItem","write_sst_bin","sst","Count","Unique","write_BrtBeginSst","_JS2ANSI","parse_CRYPTOVersion","Major","Minor","parse_DataSpaceMapEntry","comps","parse_Primary","U","parse_TransformInfoHeader","ename","cmode","parse_EncryptionHeader","Flags","AlgID","valid","AlgIDHash","KeySize","ProviderType","CSPName","parse_EncryptionVerifier","Salt","Verifier","VerifierHash","parse_EncInfoStd","parse_EncInfoExt","parse_EncInfoAgl","KeyData","encryptedHmacKey","encryptedHmacValue","encs","uri","crypto_CreatePasswordVerifier_Method1","Password","PasswordArray","PasswordDecoded","crypto_CreateXorArray_Method1","PadArray","InitialCode","XorMatrix","XorRor","byte1","byte2","Byte","password","Temp","PasswordLastChar","PadIndex","XorKey","CurrentElement","Char","CreateXorKey_Method1","Index","ObfuscationArray","crypto_MakeXorDecryptor","XorArrayIndex","XorArray","Data","Value","crypto_DecryptData_Method1","parse_FilePassHeader","Info","EncryptionVersionInfo","EncryptedVerifier","EncryptedVerifierHash","parse_RC4Header","EncryptionHeader","EncryptionVerifier","parse_RC4CryptoHeader","rtf_to_sheet_str","rowtf","rtfre","last_index","rtf_to_workbook","rtf_to_sheet","rgb2Hex","rgb_tint","hex","hsl","G","H6","L2","rgb2HSL","hex2RGB","X","h6","hsl2RGB","DEF_MDW","MAX_MDW","MIN_MDW","MDW","px","char2width","chr","cycle_width","collw","find_mdw_colw","_MDW","coll","customWidth","PPI","pt","XLMLPatternTypeMap","None","Solid","Gray50","Gray75","Gray25","HorzStripe","VertStripe","ReverseDiagStripe","DiagStripe","DiagCross","ThickDiagCross","ThinHorzStripe","ThinVertStripe","ThinReverseDiagStripe","ThinHorzCross","cellXF_uint","cellXF_bool","parse_sty_xml","themes","NumberFmt","formatCode","parse_numFmts","Fonts","bold","italic","underline","condense","extend","vertAlign","scheme","indexed","icv","themeElements","clrScheme","parse_fonts","Fills","patternType","bgColor","fgColor","parse_fills","Borders","border","diagonalUp","diagonalDown","parse_borders","CellXf","alignment","vertical","horizontal","textRotation","indent","wrapText","parse_cellXfs","write_sty_xml","NF","count","write_numFmts","cellXfs","write_cellXfs","write_BrtFmt","write_BrtFont","grbit","write_FontFlags","sss","charset","rev_XLSBFillPTNames","XLSBFillPTNames","parse_BrtFill","write_BrtFill","fls","write_BrtXF","write_Blxf","parse_BrtBorder","write_BORDERS_bin","write_STYLES_bin","xfId","builtinId","write_TABLESTYLES_bin","defTableStyle","defPivotStyle","write_BrtBeginTableStyles","write_sty_bin","write_FMTS_bin","write_FONTS_bin","write_FILLS_bin","fontId","fillId","borderId","write_CELLSTYLEXFS_bin","write_CELLXFS_bin","write_DXFS_bin","XLSXThemeClrScheme","parse_themeElements","lastClr","parse_clrScheme","parse_theme_xml","write_theme","Themes","themeXLSX","parse_FullColorExt","xclrType","nTintShade","xclrValue","parse_IcvXF","parse_ColorTheme","parse_ExtProp","extType","parse_XFExtGradient","write_xlmeta_bin","write_BrtMdtinfo","write_BrtBeginEsfmd","cm","write_BrtBeginEsmdb","mdb","write_BrtMdb","write_vml","csize","bbox","xmlns:v","xmlns:o","xmlns:x","xmlns:mv","v:ext","_shapeid","_comments","joinstyle","gradientshapeok","o:connecttype","coordsize","o:spt","fillopts","color2","angle","fillparm","fillxml","fillcolor","strokecolor","on","obscured","write_vml_comment","sheet_insert_comments","threaded","people","comment","author","write_comments_xml","iauthor","ID","lastauthor","ts","tcnt","write_tcmnt_xml","carr","rootid","tcopts","tcid","parentId","personId","write_people_xml","person","displayName","userId","providerId","parse_BrtCommentAuthor","write_BrtCommentAuthor","write_comments_bin","_ia","CT_VBA","VBAFMTS","rcregex","rcbase","rcfunc","fstr","crefregex","$0","$4","$5","shift_formula_xlsx","_xlfn","parseread1","parse_ColRelU","parse_RgceArea","parse_RgceArea_BIFF2","parse_RgceLoc","parse_RgceLoc_BIFF2","parse_RgceElfLoc","fQuoted","parse_PtgAttrBaxcel","bitSemi","parse_PtgAttrSpaceType","parse_SerAr","parse_PtgExtraMem","parse_PtgExtraArray","parse_PtgElfLoc","parse_PtgElfNoop","parse_PtgElfLel","PtgListRT","PtgTypes","iftab","FtabArgc","Ftab","cparams","tab","parsetab","Cetab","nameindex","rl","parse_RgceLocRel_BIFF2","cl","parse_RgceLocRel","parse_RgceAreaRel","ixti","parse_PtgNameX_BIFF5","PtgDupes","96","97","98","99","110","91","92","93","Ptg18","coltype","rt","Ptg19","bitIf","bitGoto","ptgs","stringify_array","PtgBinOp","PtgAdd","PtgConcat","PtgDiv","PtgEq","PtgGe","PtgGt","PtgLe","PtgLt","PtgMul","PtgNe","PtgPower","PtgSub","make_3d_range","get_ixti_raw","supbooks","XTI","SID","get_ixti","ixtiraw","stringify_formula","stack","nameidx","last_sp","sp","fflen","func","lbl","names","xlfn","externbook","bookidx","ixtidata","lp","rp","sharedf","parsedf","fnd","arrayf","_left","parse_SharedParsedFormula","parse_Formula","parse_FormulaValue","cbf","parse_XLSCellParsedFormula","shared","write_Formula","o1","write_FormulaValue","o3","bf","parse_XLSBParsedFormula","parse_XLSBArrayParsedFormula","parse_XLSBCellParsedFormula","parse_XLSBNameParsedFormula","parse_XLSBSharedParsedFormula","write_XLSBFormulaNum","oint","num","write_XLSBNameParsedFormula","write_XLSBFormulaBool","write_XLSBFormulaErr","write_XLSBFormulaRef","_str","write_XLSBFormulaRange","lastbang","write_XLSBFormulaArea3D","write_XLSBFormulaRef3D","write_XLSBFormulaRangeWS","write_XLSBFormulaRefErr3D","postamble","write_XLSBFormulaStr","85","94","95","112","113","114","115","116","117","118","119","127","131","132","133","137","138","139","140","143","144","145","146","148","149","159","164","166","167","168","169","170","171","172","173","189","190","191","192","193","194","196","197","198","199","209","210","211","212","214","215","217","219","220","223","224","225","226","227","228","229","240","243","249","250","251","252","253","254","269","272","273","274","276","277","278","279","280","281","282","283","284","285","289","290","291","292","293","295","296","297","298","302","305","306","307","308","309","310","311","312","313","314","315","316","318","319","321","322","323","324","325","328","330","336","338","339","342","343","344","350","352","355","356","370","373","374","375","376","377","378","379","380","381","382","383","385","386","388","391","392","394","395","397","398","399","400","412","413","414","415","416","417","421","422","423","424","425","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","480","481","482","485","489","491","493","494","495","509","510","511","518","519","520","521","522","523","545","546","547","548","549","620","621","653","667","673","753","755","808","141","157","158","160","165","179","180","181","182","183","221","230","231","232","233","234","235","236","237","239","241","242","244","245","246","247","248","257","258","264","275","286","287","294","299","300","301","303","317","326","327","329","331","332","334","335","337","340","341","345","346","347","348","349","353","357","359","360","361","362","363","364","365","366","367","368","369","371","372","387","401","402","403","404","405","406","407","408","409","410","411","418","419","426","427","428","429","457","724","479","483","484","ods_to_csf_formula","ods_to_csf_3D","csf_to_ods_3D","_ssfopts","browser_has_Map","Map","get_sst_id","has","revarr","get","col_obj_w","outlineLevel","default_margins","margins","mode","defs","left","right","top","bottom","footer","get_cell_style","revssf","ssf","applyNumberFormat","safe_format","fillid","raw_rgb","check_ws","mergecregex","hlinkregex","dimregex","colregex","afregex","marginregex","sheetprregex","parse_ws_xml","data1","data2","mtch","sheetPr","parse_ws_xml_sheetpr","parse_ws_xml_sheetpr2","nodim","parse_ws_xml_dim","svs","Views","sviewregex","zoomScale","zoom","rightToLeft","RTL","parse_ws_xml_sheetviews","columns","seencol","coli","colm","colM","parse_ws_xml_cols","parse_ws_xml_data","afilter","parse_ws_xml_autofilter","merges","_merge","hlink","location","Rel","tooltip","rng","parse_ws_xml_hlinks","margin","parse_ws_xml_margins","tmpref","codeName","CodeName","sheetprot_deffalse","sheetprot_deftrue","write_ws_xml_cell","oldt","oldv","_vv","bookSST","Strings","revStrings","display","cellregex","rowregex","refregex","sstr","ftag","cells","cref","tagr","tagc","do_format","rowobj","rowrite","marr","marrlen","xlen","rstarti","outa","ht","rslice","cellFormula","___f","_tag","xlmeta","Cell","_r","write_ws_xml","xmlns:r","rdata","_drawing","needed","vbaraw","cname","outlineprops","summaryBelow","summaryRight","above","write_ws_xml_sheetpr","sview","workbookViewId","write_ws_xml_sheetviews","sheetFormat","defaultRowHeight","baseColWidth","outlineLevelRow","write_ws_xml_cols","params","height","_cell","customHeight","write_ws_xml_data","write_ws_xml_protection","write_ws_xml_autofilter","write_ws_xml_merges","relc","ignoreEC","numberStoredAsText","sqref","r:id","write_row_header","ncolspan","lcs","caddr","first","write_BrtRowHdr","parse_BrtWsDim","write_BrtWsDim","write_BrtCellError","ncell","write_BrtShortError","parse_BrtShortReal","parse_BrtMergeCell","write_BrtMergeCell","BrtMarginKeys","write_ws_bin_cell","last_seen","write_BrtShortIsst","write_BrtCellIsst","write_BrtShortSt","write_BrtCellSt","write_BrtShortRk","write_BrtCellRk","write_BrtShortReal","write_BrtCellReal","write_BrtShortBool","write_BrtCellBool","write_BrtShortBlank","write_BrtCellBlank","write_MERGECELLS","write_COLINFOS","write_BrtColInfo","write_IGNOREECS","write_BrtCellIgnoreEC","write_HLINKS","locidx","write_BrtHLink","write_WSVIEWS2","write_BrtBeginWsView","write_SHEETPROTECT","write_ws_bin","write_BrtWsProp","cap","write_CELLTABLE","write_AUTOFILTER","write_LEGACYDRAWING","parse_chart","csheet","!type","nc","cache","nf","parse_Cache","WBPropsDef","WBViewDef","SheetDef","CalcPrDef","push_defaults_array","defaults","push_defaults","parse_wb_defaults","CalcPr","WBView","badchars","check_ws_name","check_wb","N","codes","cn","dn","wbnsregex","parse_BrtFRTArchID$","ArchID","write_BOOKVIEWS","vistab","Hidden","write_BRTNAMES","dname","Comment","write_BrtName","write_EXTERNALS_xlsb","write_SELF_EXTERNS_xlsb","write_wb_bin","write_BrtFileVersion","filterPrivacy","write_BrtWbProp","iTabID","strRelID","write_BrtBundleSh","write_BUNDLESHS","parse_wb","Ptg","parse_wb_bin","dnstart","localSheetId","parse_wb_xml","parse_ws","ai","af","vm","RR","aii","_d","relId","rfx","parse_ws_bin","parse_cs","!drawel","!rel","parse_cs_bin","parse_cs_xml","parse_sty","parse_sty_bin","parse_sst","parse_sst_bin","uniqueCount","parse_sst_xml","parse_cmnt","authors","parse_comments_bin","commentList","authtag","cmnttag","authorId","guid","textMatch","parse_comments_xml","parse_cc","parse_cc_bin","parse_cc_xml","parse_xlink","parse_xlink_bin","parse_xlmeta","Types","metatype","parse_xlmeta_bin","lastmeta","offsets","parse_xlmeta_xml","XLMLFormatMap","attregexg2","attregex2","xlml_parsexmltag","words","xlml_parsexmltagobj","xlml_set_custprop","Custprops","oval","safe_format_xlml","xlml_format","process_style_xlml","stag","Interior","I","Pattern","parse_xlml_data","csty","sid","StyleID","interiors","ssid","Parent","Formula","ArrayRange","xlml_clean_comment","parse_xlml_xml","Rn","opening","ishtml","_o","html_to_sheet","book_new","html_to_workbook","General Number","General Date","Long Date","Medium Date","Short Date","Long Time","Medium Time","Short Time","Currency","Fixed","Standard","Percent","Scientific","Yes/No","True/False","On/Off","sheetnames","cursheet","sheetname","dtag","didx","fidx","pidx","cstys","wsprops","raw_Rn3","HRef","HRefScreenTip","MergeAcross","MergeDown","cma","cmd","AutoFitHeight","Height","Format","ssfidx","Width","_col","Span","_NamedRange","_DefinedName","RefersTo","AutoFilter","Range","parse_fods","Margin","pagemargins","Top","Left","Right","Bottom","bookSheets","bookProps","parse_xlml","fix_read_opts","write_props_xlml","xlml_write_docprops","BLACKLIST","dt:dt","xlml_write_custprops","write_name_xlml","ss:Name","ss:RefersTo","write_ws_xlml_cell","attr","mi","_v","write_ws_xlml_row","write_ws_xlml","write_ws_xlml_names","ss:Index","skip","write_ws_xlml_table","x:Margin","x:Bottom","x:Left","x:Right","x:Top","objects","scenarios","selectLockedCells","selectUnlockedCells","write_ws_xlml_wsopts","write_xlml","General","write_wb_xlml","ss:Format","ss:ID","write_sty_xlml","write_names_xlml","xmlns:ss","xmlns:dt","xmlns:html","parse_compobj","AnsiUserType","AnsiClipboardFormat","parse_ClipboardFormatOrAnsiString","Reserved1","UnicodeClipboardFormat","parse_ClipboardFormatOrUnicodeString","Reserved2","CONTINUE_RT","slurp","RecordType","insitu","nextrt","XLSRecordEnum","ll","safe_format_xf","make_cell","parse_workbook","rngC","rngR","temp_val","country","Directory","last_formula","cur_sheet","Preamble","last_cell","XFs","palette","biff4w","get_rgb","addcell","file_depth","xfd","icvFore","icvBack","process_cell_style","afi","rrtabid","lastuser","winlocked","wtf","last_lbl","last_RT","BIFF2Fmt","BIFF2FmtTable","FilterDatabases","seen_codepage","Date1904","WriteProtect","cpval","CalcRefMode","FullCalc","fDialog","fBelow","fRight","ExternCount","tmpri","1033","1024","1280","1536","biffguess","fakebs8","rknum","rkrec","_fr","_fc","_fe","_arraystart","isst","_j","_ixfe","b4idx","b2idx","cmo","lastobj","TxO","ImData","noteobj","xfe","Encryption","Metadata","Country","PSCLSID","SI","DSI","UDI","CompObj","WorkbookP","bookVBA","newcfb","newpath","make_vba_xls","DocSummary","Summary","HeadingPairs","TitlesOfParts","parse_xls_props","bookFiles","write_xlscfb","wbpath","write_biff_buf","Keys","DSEntries","SEntries","CEntries","DocSummaryRE","SummaryRE","CEntries2","write_xls_props","vba","fill_vba_xls","fBold","fItalic","fUnderline","fStrikeout","fOutline","fShadow","fCondense","fExtend","parse_FontFlags","bCharSet","xColorType","bR","bG","bB","parse_BrtColor","ixfeParent","defaultThemeVersion","strName","autoCompressPictures","backupFile","checkCompatibility","hidePivotFieldList","promptedSolutions","publishItems","refreshAllConnections","saveExternalLinkValues","showBorderUnselectedTables","showInkAnnotation","showObjects","showPivotChartFilter","updateLinks","333","fAlwaysCalc","486","487","488","490","492","496","497","498","499","500","501","502","503","504","505","506","507","508","515","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","550","551","552","553","554","555","556","557","558","559","560","561","562","564","565","566","569","570","572","573","574","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","649","650","651","652","654","655","656","657","663","664","668","669","671","672","674","675","676","677","678","679","680","681","1025","1026","1027","1028","1029","1030","1031","1032","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1177","1178","1180","1181","1182","2050","2051","2053","2054","2055","2056","2057","2058","2060","2067","2068","2069","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","3072","3073","4096","4097","5002","5003","5081","5082","5083","5084","5085","5086","5087","5088","5089","5090","5092","5093","5094","5095","5096","5097","5099","idObj","parse_NoteSh","verificationBytes","verifier","parse_XORObfuscation","dyHeight","fl","Pos","Dim","CurTab","FirstTab","Selected","TabRatio","UserName","fts","parse_BIFF5Obj","parse_FtArray","ccv","rw","rkrecs","lastcol","ixfes","fStyle","alc","fWrap","alcV","fJustLast","trot","cIndent","fShrinkToFit","iReadOrder","fAtrNum","fAtrFnt","fAtrAlc","fAtrBdr","fAtrPat","fAtrProt","dgLeft","dgRight","dgTop","dgBottom","icvLeft","icvRight","grbitDiag","icvTop","icvBottom","icvDiag","dgDiag","fsxButton","parse_CellStyleXF","cmcs","ucnt","extsst","dsst","ctab","virtPath","rgst","texts","accel","parse_ControlInfo","cchText","sVer","targetFrameName","moniker","oleMoniker","fileTime","Loc","parse_Hyperlink","xnum","1212","cUse","wzTooltip","2059","2061","2062","2063","2064","2066","2146","2147","2148","2149","2150","2151","2152","2154","2155","2156","2161","2162","2164","2165","2166","2167","2168","2169","2170","2171","2172","cxfs","crc","2173","cexts","2174","2175","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2194","2195","2196","cchComment","2197","2198","themeXML","2199","2200","2201","2202","2203","2204","2205","2206","2207","2211","parse_frtHeader","2212","2213","2214","2215","4098","4099","4102","4103","4105","4106","4107","4108","4109","4116","4117","4118","4119","4120","4121","4122","4123","4124","4125","4126","4127","4128","4129","4130","4132","4133","4134","4135","4146","4147","4148","4149","4154","4156","4157","4158","4159","4160","4161","4163","4164","area","4165","4166","4168","4170","4171","4174","4175","4176","4177","4187","4188","4189","4191","4192","4193","4194","4195","4196","4197","4198","4199","4200","bestart","env","lcb","2157","2163","2177","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2262","29282","write_BIFF2BERR","write_comments_biff2","write_ws_biff2_cell","_BIFF2FmtTable","write_BIFF2INT","write_BIFF2NUM","write_BIFF2LABEL","write_biff2_buf","_Fonts","write_ws_biff2","write_BIFF2Format","write_BIFF4Format","write_BIFF2XF","b8oid","b8ocnts","write_FONTS_biff8","write_Font","write_ws_cols_biff8","write_ColInfo","write_ws_biff8_cell","write_Number","write_LabelSst","b8","write_Label","write_ws_biff8","_WB","_sheet","MAX_ROWS","guts","write_Guts","write_Dimensions","_oasc","notes","baseid","ci","oasc","oact","txo","cont","conf","notesh","write_comments_biff8","write_Window2","write_MergeCells","HL","write_ws_biff8_hlinks","write_FEAT","write_biff8_global","_sheets","_wb","writezeroes","write_WriteAccess","write_RRTabId","write_Window1","safe1904","write_FMTS_biff8","write_CELLXFS_biff8","acc","write_MsoDrawingGroup","write_biff_continue","write_SST","blen","fix_write_opts","write_biff8_buf","mtch2","hd","midx","colspan","rowspan","_t","make_html_row","editable","HTML_BEGIN","HTML_END","make_html_preamble","sheet_to_html","sheet_add_dom","tagName","or_R","or_C","is_dom_element_hidden","elts","hasAttribute","getAttribute","innerHTML","Aelts","getElementsByTagName","Aelti","parse_dom_table","element","get_computed_style","ownerDocument","defaultView","getComputedStyle","get_get_computed_style_function","getPropertyValue","parse_text_p","fixed","parse_ods_styles","_nfm","number_format_map","NFtag","tNF","etpos","tidx","parse_content_xml","nfidx","sheetag","rowtag","ctag","textp","textpidx","oldtextp","oldtextpidx","textR","oldtextR","row_ol","mrange","rowpeat","colpeat","atag","_Ref","creator","creatoridx","isstub","intable","rptR","rpt","annotag","xlmlidx","styletag","nrange","ptp","parse_ods","FEtag","parse_manifest","Styles","write_styles_ods","master_styles","xmlns:office","xmlns:table","xmlns:style","xmlns:text","xmlns:draw","xmlns:fo","xmlns:xlink","xmlns:number","xmlns:svg","xmlns:of","office:version","write_number_format_ods","nopts","style:name","number:min-integer-digits","number:min-numerator-digits","number:max-denominator-value","number:denominator-value","number:decimal-places","number:min-decimal-places","has_time","np","write_names_ods","scoped","namei","odsref","table:name","table:cell-range-address","table:base-cell-address","write_content_ods","write_text_p","span","null_cell_xml","write_ws","nfs","ods","ROWS","_Fref","text_p","_tgt","xlink:href","acreator","apayload","aprops","xmlns:meta","xmlns:presentation","xmlns:chart","xmlns:dr3d","xmlns:math","xmlns:form","xmlns:script","xmlns:ooo","xmlns:ooow","xmlns:oooc","xmlns:dom","xmlns:xforms","xmlns:sheet","xmlns:rpt","xmlns:xhtml","xmlns:grddl","xmlns:tableooo","xmlns:drawooo","xmlns:calcext","xmlns:loext","xmlns:field","xmlns:formx","xmlns:css3t","fods","xmlns:config","office:mimetype","cidx","colobj","nfi","write_automatic_styles_ods","write_ods","manifest","rdf","write_rdf","write_manifest","u8_to_dataview","array","DataView","buffer","byteOffset","byteLength","u8str","u8","stru8","u8concat","u8a","popcnt","parse_varint49","ptr","varint","write_varint49","parse_packed_varints","write_packed_varints","nums","varint_to_i32","i32","parse_shallow","write_shallow","proto","item","mappa","parse_iwa_file","_a","messages","merge","write_iwa_file","ias","ia","midata","aipayload","mid","parse_snappy_chunk","chunks","clen","u8i","decompress_iwa_file","compress_iwa_file","frame","numbers_lut_new","rsst","ofmt","nfmt","fmla","ferr","numbers_format_cell","_b","_c","ver","dur","dstyle","dmin","dmax","autodur","dstr","zstr","parse_new_storage","lut","dv","getUint32","doff","zidx","d128","ieee","exp","mantissa","readDecimal128LE","getFloat64","rts","cmntidx","iwa","replies","reply","iwa_to_s5s_comment","write_new_storage","setFloat64","writeDecimal128LE","irsst","findIndex","setUint32","s5s","s5s_to_iwa_comment","write_old_storage","parse_cell_storage","parse_old_storage","parse_TSP_Reference","write_TSP_Reference","numbers_add_oref","orefs","numbers_del_oref","parse_TST_TableDataList","pb","le","rtp","rtpref","mtype","tswpsa","richtext","sfields","smartfields","_a2","_b2","objtype","parse_TSD_CommentStorageArchive","_e","_g","_h","_i","csp","as","asp","pi","parse_TST_Tile","_k","_m","used_storage_u8","used_storage","wide_offsets","used_storage_offsets","getUint16","parse_TST_TileRowInfo","nrows","reduce","parse_TST_TableInfoArchive","tableref","dws","store","tile","kv","tl","ref2","mtype2","_tile","parse_TST_TableModelArchive","parse_TN_DocumentArchive","root2","parse_TN_SheetArchive","parse_numbers_iwa","indices","packets","packet","docroot","iwam","write_TST_TileRowInfo","wide","tri","new_7","new_4","last_offset","cell_storage","_dv","_last_offset","_cell_storage","celload","_celload","setUint16","write_iwam","get_unique_msgid","dep","dependents","write_TSP_Color_RGB","Float32Array","get_author_color","random","write_numbers_iwa","numbers","deps","mess","build_numbers_deps","numbers_iwa_find","sheetrefs","sheetref","newsheetref","remap","numbers_iwa_doit","arch","doc","tiaref","sheetroot","sa","drawables","tia","mlist","numbers_meta_add_dep","tmaref","tiaroot","da","dap","oldtmaref","tma","tmaroot","uuid","new_uuid","srrta","hsoa","hsa","hseadata","hsea","oldref","newref","newloc","numbers_add_meta","row_headers","tspref","tiles","tst","oldtileref","newtileref","oldtile","numbers_add_ws","wsname","sheetidx","rootref","tmafile","trunc","R_","LUT","row_header_ref","rowhead","_x","base_bucket","R2","_bucket","col_header_ref","colhead","rbtree","tilestore","tileref","save_token","mlst","parentidx","mm","parent","numbers_meta_del_dep","ntiles","newtileid","tiledata","USE_WIDE_ROWS","tilerow","newtile","tilecontent","mergeid","sstref","sstroot","sstdata","rsstref","rsstroot","rsstdata","style_indices","tswpsaid","tswpsarefs","newhlinkid","numbers_add_msg","smartfield","rtpaid","cmntref","cmntroot","cmntdata","aaaid2","csaid2","aaaid","csaid","write_numbers_tma","write_numbers_ws","newid","dep2","fix_opts_func","parse_sheet_legacy_drawing","draw","aidx","ObjectType","ws_get_cell_stub","parse_vml","safe_parse_sheet","relsPath","sheetRels","stype","dfile","drelsp","chartp","parse_drawing","crelsp","parse_ds","tcomments","parse_tcmnt_xml","strip_front_slash","_zip","getzipbin","index_zip","Bun","binname","dir","threadedcomments","links","coreprops","extprops","custprops","calcchains","drawings","TODO","ctext","calcchain","parse_ct","link","propdata","parse_ext_props","toks","warn","parse_cust_props","bookDeps","wbsheets","wbext","wbrelsi","wbrelsfile","wbrels","displayname","parse_people_xml","safe_parse_wbrels","nmode","wsloop","snjseen","snj","Deps","bin","parse_xlsxcfb","parse_DataSpaceVersionInfo","dsm","parse_DataSpaceMap","seds","parse_DataSpaceDefinition","einfo","parse_EncryptionInfo","decrypt_agile","decrypt_std76","write_zip_xlsx","foo","vbafmt","_sn","wsrels","need_vml","needtc","rId1","sitag","write_sst_xml","write_names","workbookPr","sheetId","write_wb_xml","write_xlmeta_xml","read_plaintext","main","read_utf16","utf16lereadu","read_prn","infile","read_binary","bstrify","ab","vu","read_cfb","OLD_WTF","read_wb_ID","read_zip","read_plaintext_raw","write_cfb_ctr","write_zip_xlsb","write_zip_denouement","oopts","ftype","nodebuffer","string","generate","encrypt_agile","write_string_type","bom","write_stxt_type","Base64_encode_pass","write_binary_type","write_zip_typeXLSX","sheet_to_txt","sheet_to_csv","sheet_to_rtf","write_cfb_type","write_zip_type","resolve_book_type","xls","slk","socialcalc","Sh33tJS","_cb","Function","make_json_row","defval","isempty","defineProperty","enumerable","__rowNum__","rawNumbers","outi","counter","header_cnt","skipHidden","blankrows","qreg","make_csv_row","txt","datarow","forceQuotes","strip","sheet_add_json","js","skipHeader","ROW","JS","RC","roll","cell_set_hyperlink","_Readable","split_cell","sheet_new","json_to_sheet","table_to_sheet","table_to_book","sheet_to_formulae","cmds","sheet_to_row_object_array","sheet_get_cell","book_set_sheet_visibility","sh","vis","wb_sheet_idx","cell_set_number_format","cell_set_internal_link","cell_add_comment","sheet_set_array_formula","dynamic","rngstr","wsr","SHEET_VISIBLE","SHEET_HIDDEN","SHEET_VERY_HIDDEN","to_json","stream","objectMode","_read","to_html","to_csv","BOM","set_readable","readFile","writeXLSX","writeFileXLSX"],"mappings":"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A,qBACAC,IAAA,mBACAvnB,IAAA,UACAwnB,IAAA,UACAC,IAAA,UACAyK,IAAA,UACAxK,IAAA,UACAznB,IAAA,UACAC,IAAA,UACAynB,IAAA,UACAC,IAAA,UACAznB,IAAA,UACA0nB,IAAA,UACAC,IAAA,UACA1nB,IAAA,QACA2nB,IAAA,QACAC,IAAA,UACAC,IAAA,QACAC,IAAA,SACAiK,IAAA,OACAC,IAAA,SACAC,IAAA,UACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,aACAC,IAAA,cACAC,IAAA,YACAC,IAAA,SACAC,IAAA,UACA1K,IAAA,QACAC,IAAA,YACAC,IAAA,YACAC,IAAA,aACAC,IAAA,SACAC,IAAA,WACAsK,IAAA,QACAC,IAAA,SACAniD,IAAA,SACA63C,IAAA,QACAC,IAAA,SACAC,IAAA,MACAC,IAAA,OACAC,IAAA,UACAmK,IAAA,UACAC,IAAA,UACAC,IAAA,UACAC,IAAA,OACArK,IAAA,OACAC,IAAA,WACAC,IAAA,WACAC,IAAA,UACAC,IAAA,WACAC,IAAA,OACAC,IAAA,YACAC,IAAA,YACAC,IAAA,UACAC,IAAA,aACAC,IAAA,aACAC,IAAA,QACAC,IAAA,QACAC,IAAA,WACAC,IAAA,WACAC,IAAA,UACAC,IAAA,SACAC,IAAA,WACAC,IAAA,UACAC,IAAA,QACAC,IAAA,UACAC,IAAA,WACAC,IAAA,YACAC,IAAA,WACAC,IAAA,aACAC,IAAA,UACAC,IAAA,UACA4I,IAAA,UACA3I,IAAA,WACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,cACAC,IAAA,UACAC,IAAA,YACAC,IAAA,WACAC,IAAA,UACAkI,IAAA,UACAjI,IAAA,UACAC,IAAA,WACAC,IAAA,UACAC,IAAA,cACAC,IAAA,MACAC,IAAA,cACAC,IAAA,MACAC,IAAA,aACAC,IAAA,gBACAC,IAAA,UACAyH,IAAA,eACAxH,IAAA,UACAC,IAAA,WACAC,IAAA,SACAuH,IAAA,YACAC,IAAA,cAEA/a,GAAA,CACA5vE,EAAA,EACAuH,EAAA,EACAG,GAAA,EACAK,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAgB,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAG,GAAA,EACAC,GAAA,EACA2M,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACApO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAoD,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAtD,GAAA,EACAE,GAAA,EACAC,GAAA,EACAoB,GAAA,EACAO,GAAA,EACAiB,GAAA,EACAE,GAAA,EACAC,GAAA,EACAlB,GAAA,EACAC,GAAA,EACA3J,GAAA,EACA4J,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAlL,GAAA,EACAoL,GAAA,EACAC,GAAA,EACA0oD,GAAA,EACAmiB,GAAA,EACA7uC,GAAA,EACAod,GAAA,EACAnd,GAAA,EACA6uC,GAAA,EACAC,GAAA,EACAzF,GAAA,EACAC,GAAA,EACAC,GAAA,EACA1tB,IAAA,EACAC,IAAA,EACA7b,IAAA,EACAgc,IAAA,EACAmB,IAAA,EACAuP,IAAA,EACAoiB,IAAA,EACAC,IAAA,EACAC,IAAA,EACAG,IAAA,EACAC,IAAA,EACAC,IAAA,EACAlzB,IAAA,EACAK,IAAA,EACA8yB,IAAA,EACA52E,IAAA,EACAC,IAAA,EACAC,IAAA,EACA22E,IAAA,EACAE,IAAA,EACA52E,IAAA,EACAukD,IAAA,EACAtkD,IAAA,EACA42E,IAAA,EACAC,IAAA,EACAE,IAAA,EACA2N,IAAA,EACA3vB,IAAA,EACAiiB,IAAA,EACAC,IAAA,EACAh3E,IAAA,EACAC,IAAA,EACAC,IAAA,EACAo3E,IAAA,EACAuN,IAAA,EACAhN,IAAA,EACAxiB,IAAA,EACAC,IAAA,EACAn1D,IAAA,EACAC,IAAA,EACA0kF,IAAA,EACAvvB,IAAA,EACAl1D,IAAA,EACA03E,IAAA,EACAC,IAAA,EACAriB,IAAA,EACA0iB,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACA10B,IAAA,EACAgS,IAAA,EACA4iB,IAAA,EACAC,IAAA,EACAC,IAAA,EACA1xC,IAAA,EACA2xC,IAAA,EACAC,IAAA,EACAM,IAAA,EACAI,IAAA,EACA4L,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAM,IAAA,EACAG,IAAA,EACApM,IAAA,EACAsM,IAAA,EACAjwB,IAAA,EACAQ,IAAA,EACAwjB,IAAA,EACAC,IAAA,EACAmM,IAAA,EACAlM,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACA0L,IAAA,EACAC,IAAA,EACAjtB,IAAA,EACAuhB,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAuL,IAAA,EACAtL,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAoL,IAAA,EACAC,IAAA,EACAC,IAAA,EACArL,IAAA,EACAsL,IAAA,EACArtB,IAAA,EACAgiB,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAO,IAAA,EACAqK,IAAA,EACAC,IAAA,EACArK,IAAA,EACAuK,IAAA,EACAC,IAAA,EACAG,IAAA,EACAtK,IAAA,EACAC,IAAA,EACAyK,IAAA,EACAC,IAAA,EACAxK,IAAA,EACA/1C,IAAA,EACAg2C,IAAA,EACA0K,IAAA,EACAG,IAAA,EACAQ,IAAA,EACAC,IAAA,EACAnL,IAAA,EACAoL,IAAA,EACAC,IAAA,EACApL,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAI,IAAA,EACAE,IAAA,EACAI,IAAA,EACAznB,IAAA,EACAC,IAAA,EAC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","file":"static/js/5.da080ad0.chunk.js","sourcesContent":["/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global process:false, Buffer:false, ArrayBuffer:false, DataView:false, Deno:false */\nvar XLSX = {};\nXLSX.version = '0.20.2';\nvar current_codepage = 1200,\n  current_ansi = 1252;\n/*:: declare var cptable:any; */\n/*global cptable:true, window */\nvar $cptable;\nvar VALID_ANSI = [874, 932, 936, 949, 950, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 10000];\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\nvar CS2CP = {\n  0: 1252,\n  /* ANSI */\n  1: 65001,\n  /* DEFAULT */\n  2: 65001,\n  /* SYMBOL */\n  77: 10000,\n  /* MAC */\n  128: 932,\n  /* SHIFTJIS */\n  129: 949,\n  /* HANGUL */\n  130: 1361,\n  /* JOHAB */\n  134: 936,\n  /* GB2312 */\n  136: 950,\n  /* CHINESEBIG5 */\n  161: 1253,\n  /* GREEK */\n  162: 1254,\n  /* TURKISH */\n  163: 1258,\n  /* VIETNAMESE */\n  177: 1255,\n  /* HEBREW */\n  178: 1256,\n  /* ARABIC */\n  186: 1257,\n  /* BALTIC */\n  204: 1251,\n  /* RUSSIAN */\n  222: 874,\n  /* THAI */\n  238: 1250,\n  /* EASTEUROPE */\n  255: 1252,\n  /* OEM */\n  69: 6969 /* MISC */\n} /*:any*/;\nvar set_ansi = function (cp /*:number*/) {\n  if (VALID_ANSI.indexOf(cp) == -1) return;\n  current_ansi = CS2CP[0] = cp;\n};\nfunction reset_ansi() {\n  set_ansi(1252);\n}\nvar set_cp = function (cp /*:number*/) {\n  current_codepage = cp;\n  set_ansi(cp);\n};\nfunction reset_cp() {\n  set_cp(1200);\n  reset_ansi();\n}\nfunction char_codes(data /*:string*/) /*:Array<number>*/{\n  var o /*:Array<number>*/ = [];\n  for (var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i);\n  return o;\n}\nfunction utf16leread(data /*:string*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length >> 1; ++i) o[i] = String.fromCharCode(data.charCodeAt(2 * i) + (data.charCodeAt(2 * i + 1) << 8));\n  return o.join(\"\");\n}\nfunction utf16lereadu(data /*:Uint8Array*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length >> 1; ++i) o[i] = String.fromCharCode(data[2 * i] + (data[2 * i + 1] << 8));\n  return o.join(\"\");\n}\nfunction utf16beread(data /*:string*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length >> 1; ++i) o[i] = String.fromCharCode(data.charCodeAt(2 * i + 1) + (data.charCodeAt(2 * i) << 8));\n  return o.join(\"\");\n}\nvar debom = function (data /*:string*/) /*:string*/{\n  var c1 = data.charCodeAt(0),\n    c2 = data.charCodeAt(1);\n  if (c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n  if (c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n  if (c1 == 0xFEFF) return data.slice(1);\n  return data;\n};\nvar _getchar = function _gc1(x /*:number*/) /*:string*/{\n  return String.fromCharCode(x);\n};\nvar _getansi = function _ga1(x /*:number*/) /*:string*/{\n  return String.fromCharCode(x);\n};\nfunction set_cptable(cptable) {\n  $cptable = cptable;\n  set_cp = function (cp /*:number*/) {\n    current_codepage = cp;\n    set_ansi(cp);\n  };\n  debom = function (data /*:string*/) {\n    if (data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) {\n      return $cptable.utils.decode(1200, char_codes(data.slice(2)));\n    }\n    return data;\n  };\n  _getchar = function _gc2(x /*:number*/) /*:string*/{\n    if (current_codepage === 1200) return String.fromCharCode(x);\n    return $cptable.utils.decode(current_codepage, [x & 255, x >> 8])[0];\n  };\n  _getansi = function _ga2(x /*:number*/) /*:string*/{\n    return $cptable.utils.decode(current_ansi, [x])[0];\n  };\n  cpdoit();\n}\nvar DENSE = null;\nvar DIF_XL = true;\nvar Base64_map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nfunction Base64_encode(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  for (var i = 0; i < input.length;) {\n    c1 = input.charCodeAt(i++);\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_encode_pass(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  for (var i = 0; i < input.length;) {\n    c1 = input.charCodeAt(i++);\n    if (c1 > 255) c1 = 95;\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    if (c2 > 255) c2 = 95;\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    if (c3 > 255) c3 = 95;\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_encode_arr(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  for (var i = 0; i < input.length;) {\n    c1 = input[i++];\n    e1 = c1 >> 2;\n    c2 = input[i++];\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input[i++];\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_decode(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  if (input.slice(0, 5) == \"data:\") {\n    var i = input.slice(0, 1024).indexOf(\";base64,\");\n    if (i > -1) input = input.slice(i + 8);\n  }\n  input = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n  for (var i = 0; i < input.length;) {\n    e1 = Base64_map.indexOf(input.charAt(i++));\n    e2 = Base64_map.indexOf(input.charAt(i++));\n    c1 = e1 << 2 | e2 >> 4;\n    o += String.fromCharCode(c1);\n    e3 = Base64_map.indexOf(input.charAt(i++));\n    c2 = (e2 & 15) << 4 | e3 >> 2;\n    if (e3 !== 64) {\n      o += String.fromCharCode(c2);\n    }\n    e4 = Base64_map.indexOf(input.charAt(i++));\n    c3 = (e3 & 3) << 6 | e4;\n    if (e4 !== 64) {\n      o += String.fromCharCode(c3);\n    }\n  }\n  return o;\n}\nvar has_buf = /*#__PURE__*/function () {\n  return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node;\n}();\nvar Buffer_from = /*#__PURE__*/function () {\n  if (typeof Buffer !== 'undefined') {\n    var nbfs = !Buffer.from;\n    if (!nbfs) try {\n      Buffer.from(\"foo\", \"utf8\");\n    } catch (e) {\n      nbfs = true;\n    }\n    return nbfs ? function (buf, enc) {\n      return enc ? new Buffer(buf, enc) : new Buffer(buf);\n    } : Buffer.from.bind(Buffer);\n  }\n  return function () {};\n}();\nvar buf_utf16le = /*#__PURE__*/function () {\n  if (typeof Buffer === 'undefined') return false;\n  var x = Buffer_from([65, 0]);\n  if (!x) return false;\n  var o = x.toString(\"utf16le\");\n  return o.length == 1;\n}();\nfunction new_raw_buf(len /*:number*/) {\n  /* jshint -W056 */\n  if (has_buf) return Buffer.alloc ? Buffer.alloc(len) : new Buffer(len);\n  return typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n  /* jshint +W056 */\n}\nfunction new_unsafe_buf(len /*:number*/) {\n  /* jshint -W056 */\n  if (has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);\n  return typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n  /* jshint +W056 */\n}\nvar s2a = function s2a(s /*:string*/) /*:any*/{\n  if (has_buf) return Buffer_from(s, \"binary\");\n  return s.split(\"\").map(function (x /*:string*/) /*:number*/{\n    return x.charCodeAt(0) & 0xff;\n  });\n};\nfunction s2ab(s /*:string*/) /*:any*/{\n  if (typeof ArrayBuffer === 'undefined') return s2a(s);\n  var buf = new ArrayBuffer(s.length),\n    view = new Uint8Array(buf);\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\nfunction a2s(data /*:any*/) /*:string*/{\n  if (Array.isArray(data)) return data.map(function (c) {\n    return String.fromCharCode(c);\n  }).join(\"\");\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]);\n  return o.join(\"\");\n}\nfunction a2u(data /*:Array<number>*/) /*:Uint8Array*/{\n  if (typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n  return new Uint8Array(data);\n}\nfunction ab2a(data /*:ArrayBuffer|Uint8Array*/) /*:Array<number>*/{\n  if (typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n  if (data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\n  /*:: if(data instanceof ArrayBuffer) throw new Error(\"unreachable\"); */\n  var o = new Array(data.length);\n  for (var i = 0; i < data.length; ++i) o[i] = data[i];\n  return o;\n}\nvar bconcat = has_buf ? function (bufs) {\n  return Buffer.concat(bufs.map(function (buf) {\n    return Buffer.isBuffer(buf) ? buf : Buffer_from(buf);\n  }));\n} : function (bufs) {\n  if (typeof Uint8Array !== \"undefined\") {\n    var i = 0,\n      maxlen = 0;\n    for (i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n    var o = new Uint8Array(maxlen);\n    var len = 0;\n    for (i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {\n      len = bufs[i].length;\n      if (bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);else if (typeof bufs[i] == \"string\") o.set(new Uint8Array(s2a(bufs[i])), maxlen);else o.set(new Uint8Array(bufs[i]), maxlen);\n    }\n    return o;\n  }\n  return [].concat.apply([], bufs.map(function (buf) {\n    return Array.isArray(buf) ? buf : [].slice.call(buf);\n  }));\n};\nfunction utf8decode(content /*:string*/) {\n  var out = [],\n    widx = 0,\n    L = content.length + 250;\n  var o = new_raw_buf(content.length + 255);\n  for (var ridx = 0; ridx < content.length; ++ridx) {\n    var c = content.charCodeAt(ridx);\n    if (c < 0x80) o[widx++] = c;else if (c < 0x800) {\n      o[widx++] = 192 | c >> 6 & 31;\n      o[widx++] = 128 | c & 63;\n    } else if (c >= 0xD800 && c < 0xE000) {\n      c = (c & 1023) + 64;\n      var d = content.charCodeAt(++ridx) & 1023;\n      o[widx++] = 240 | c >> 8 & 7;\n      o[widx++] = 128 | c >> 2 & 63;\n      o[widx++] = 128 | d >> 6 & 15 | (c & 3) << 4;\n      o[widx++] = 128 | d & 63;\n    } else {\n      o[widx++] = 224 | c >> 12 & 15;\n      o[widx++] = 128 | c >> 6 & 63;\n      o[widx++] = 128 | c & 63;\n    }\n    if (widx > L) {\n      out.push(o.slice(0, widx));\n      widx = 0;\n      o = new_raw_buf(65535);\n      L = 65530;\n    }\n  }\n  out.push(o.slice(0, widx));\n  return bconcat(out);\n}\nvar chr0 = /\\u0000/g,\n  chr1 = /[\\u0001-\\u0006]/g;\n/*::\ndeclare type Block = any;\ndeclare type BufArray = {\n\tnewblk(sz:number):Block;\n\tnext(sz:number):Block;\n\tend():any;\n\tpush(buf:Block):void;\n};\n\ntype RecordHopperCB = {(d:any, Rn:string, RT:number):?boolean;};\n\ntype EvertType = {[string]:string};\ntype EvertNumType = {[string]:number};\ntype EvertArrType = {[string]:Array<string>};\n\ntype StringConv = {(string):string};\n\n*/\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/*jshint -W041 */\nfunction _strrev(x /*:string*/) /*:string*/{\n  var o = \"\",\n    i = x.length - 1;\n  while (i >= 0) o += x.charAt(i--);\n  return o;\n}\nfunction pad0(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : fill('0', d - t.length) + t;\n}\nfunction pad_(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : fill(' ', d - t.length) + t;\n}\nfunction rpad_(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : t + fill(' ', d - t.length);\n}\nfunction pad0r1(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + Math.round(v);\n  return t.length >= d ? t : fill('0', d - t.length) + t;\n}\nfunction pad0r2(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : fill('0', d - t.length) + t;\n}\nvar p2_32 = /*#__PURE__*/Math.pow(2, 32);\nfunction pad0r(v /*:any*/, d /*:number*/) /*:string*/{\n  if (v > p2_32 || v < -p2_32) return pad0r1(v, d);\n  var i = Math.round(v);\n  return pad0r2(i, d);\n}\n/* yes, in 2022 this is still faster than string compare */\nfunction SSF_isgeneral(s /*:string*/, i /*:?number*/) /*:boolean*/{\n  i = i || 0;\n  return s.length >= 7 + i && (s.charCodeAt(i) | 32) === 103 && (s.charCodeAt(i + 1) | 32) === 101 && (s.charCodeAt(i + 2) | 32) === 110 && (s.charCodeAt(i + 3) | 32) === 101 && (s.charCodeAt(i + 4) | 32) === 114 && (s.charCodeAt(i + 5) | 32) === 97 && (s.charCodeAt(i + 6) | 32) === 108;\n}\nvar days /*:Array<Array<string> >*/ = [['Sun', 'Sunday'], ['Mon', 'Monday'], ['Tue', 'Tuesday'], ['Wed', 'Wednesday'], ['Thu', 'Thursday'], ['Fri', 'Friday'], ['Sat', 'Saturday']];\nvar months /*:Array<Array<string> >*/ = [['J', 'Jan', 'January'], ['F', 'Feb', 'February'], ['M', 'Mar', 'March'], ['A', 'Apr', 'April'], ['M', 'May', 'May'], ['J', 'Jun', 'June'], ['J', 'Jul', 'July'], ['A', 'Aug', 'August'], ['S', 'Sep', 'September'], ['O', 'Oct', 'October'], ['N', 'Nov', 'November'], ['D', 'Dec', 'December']];\nfunction SSF_init_table(t /*:any*/) {\n  if (!t) t = {};\n  t[0] = 'General';\n  t[1] = '0';\n  t[2] = '0.00';\n  t[3] = '#,##0';\n  t[4] = '#,##0.00';\n  t[9] = '0%';\n  t[10] = '0.00%';\n  t[11] = '0.00E+00';\n  t[12] = '# ?/?';\n  t[13] = '# ??/??';\n  t[14] = 'm/d/yy';\n  t[15] = 'd-mmm-yy';\n  t[16] = 'd-mmm';\n  t[17] = 'mmm-yy';\n  t[18] = 'h:mm AM/PM';\n  t[19] = 'h:mm:ss AM/PM';\n  t[20] = 'h:mm';\n  t[21] = 'h:mm:ss';\n  t[22] = 'm/d/yy h:mm';\n  t[37] = '#,##0 ;(#,##0)';\n  t[38] = '#,##0 ;[Red](#,##0)';\n  t[39] = '#,##0.00;(#,##0.00)';\n  t[40] = '#,##0.00;[Red](#,##0.00)';\n  t[45] = 'mm:ss';\n  t[46] = '[h]:mm:ss';\n  t[47] = 'mmss.0';\n  t[48] = '##0.0E+0';\n  t[49] = '@';\n  t[56] = '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n  return t;\n}\n/* repeated to satiate webpack */\nvar table_fmt = {\n  0: 'General',\n  1: '0',\n  2: '0.00',\n  3: '#,##0',\n  4: '#,##0.00',\n  9: '0%',\n  10: '0.00%',\n  11: '0.00E+00',\n  12: '# ?/?',\n  13: '# ??/??',\n  14: 'm/d/yy',\n  15: 'd-mmm-yy',\n  16: 'd-mmm',\n  17: 'mmm-yy',\n  18: 'h:mm AM/PM',\n  19: 'h:mm:ss AM/PM',\n  20: 'h:mm',\n  21: 'h:mm:ss',\n  22: 'm/d/yy h:mm',\n  37: '#,##0 ;(#,##0)',\n  38: '#,##0 ;[Red](#,##0)',\n  39: '#,##0.00;(#,##0.00)',\n  40: '#,##0.00;[Red](#,##0.00)',\n  45: 'mm:ss',\n  46: '[h]:mm:ss',\n  47: 'mmss.0',\n  48: '##0.0E+0',\n  49: '@',\n  56: '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"'\n};\n\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar SSF_default_map = {\n  5: 37,\n  6: 38,\n  7: 39,\n  8: 40,\n  //  5 -> 37 ...  8 -> 40\n\n  23: 0,\n  24: 0,\n  25: 0,\n  26: 0,\n  // 23 ->  0 ... 26 ->  0\n\n  27: 14,\n  28: 14,\n  29: 14,\n  30: 14,\n  31: 14,\n  // 27 -> 14 ... 31 -> 14\n\n  50: 14,\n  51: 14,\n  52: 14,\n  53: 14,\n  54: 14,\n  // 50 -> 14 ... 58 -> 14\n  55: 14,\n  56: 14,\n  57: 14,\n  58: 14,\n  59: 1,\n  60: 2,\n  61: 3,\n  62: 4,\n  // 59 ->  1 ... 62 ->  4\n\n  67: 9,\n  68: 10,\n  // 67 ->  9 ... 68 -> 10\n  69: 12,\n  70: 13,\n  71: 14,\n  // 69 -> 12 ... 71 -> 14\n  72: 14,\n  73: 15,\n  74: 16,\n  75: 17,\n  // 72 -> 14 ... 75 -> 17\n  76: 20,\n  77: 21,\n  78: 22,\n  // 76 -> 20 ... 78 -> 22\n  79: 45,\n  80: 46,\n  81: 47,\n  // 79 -> 45 ... 81 -> 47\n  82: 0 // 82 ->  0 ... 65536 -> 0 (omitted)\n};\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar SSF_default_str = {\n  //  5 -- Currency,   0 decimal, black negative\n  5: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  //  6 -- Currency,   0 decimal, red   negative\n  6: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  //  7 -- Currency,   2 decimal, black negative\n  7: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  //  8 -- Currency,   2 decimal, red   negative\n  8: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  // 41 -- Accounting, 0 decimal, No Symbol\n  41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n  // 42 -- Accounting, 0 decimal, $  Symbol\n  42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n  // 43 -- Accounting, 2 decimal, No Symbol\n  43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n  // 44 -- Accounting, 2 decimal, $  Symbol\n  44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\nfunction SSF_frac(x /*:number*/, D /*:number*/, mixed /*:?boolean*/) /*:Array<number>*/{\n  var sgn = x < 0 ? -1 : 1;\n  var B = x * sgn;\n  var P_2 = 0,\n    P_1 = 1,\n    P = 0;\n  var Q_2 = 1,\n    Q_1 = 0,\n    Q = 0;\n  var A = Math.floor(B);\n  while (Q_1 < D) {\n    A = Math.floor(B);\n    P = A * P_1 + P_2;\n    Q = A * Q_1 + Q_2;\n    if (B - A < 0.00000005) break;\n    B = 1 / (B - A);\n    P_2 = P_1;\n    P_1 = P;\n    Q_2 = Q_1;\n    Q_1 = Q;\n  }\n  if (Q > D) {\n    if (Q_1 > D) {\n      Q = Q_2;\n      P = P_2;\n    } else {\n      Q = Q_1;\n      P = P_1;\n    }\n  }\n  if (!mixed) return [0, sgn * P, Q];\n  var q = Math.floor(sgn * P / Q);\n  return [q, sgn * P - q * Q, Q];\n}\nfunction SSF_normalize_xl_unsafe(v /*:number*/) /*:number*/{\n  var s = v.toPrecision(16);\n  if (s.indexOf(\"e\") > -1) {\n    var m = s.slice(0, s.indexOf(\"e\"));\n    m = m.indexOf(\".\") > -1 ? m.slice(0, m.slice(0, 2) == \"0.\" ? 17 : 16) : m.slice(0, 15) + fill(\"0\", m.length - 15);\n    return m + s.slice(s.indexOf(\"e\"));\n  }\n  var n = s.indexOf(\".\") > -1 ? s.slice(0, s.slice(0, 2) == \"0.\" ? 17 : 16) : s.slice(0, 15) + fill(\"0\", s.length - 15);\n  return Number(n);\n}\nfunction SSF_parse_date_code(v /*:number*/, opts /*:?any*/, b2 /*:?boolean*/) {\n  if (v > 2958465 || v < 0) return null;\n  v = SSF_normalize_xl_unsafe(v);\n  var date = v | 0,\n    time = Math.floor(86400 * (v - date)),\n    dow = 0;\n  var dout = [];\n  var out = {\n    D: date,\n    T: time,\n    u: 86400 * (v - date) - time,\n    y: 0,\n    m: 0,\n    d: 0,\n    H: 0,\n    M: 0,\n    S: 0,\n    q: 0\n  };\n  if (Math.abs(out.u) < 1e-6) out.u = 0;\n  if (opts && opts.date1904) date += 1462;\n  if (out.u > 0.9999) {\n    out.u = 0;\n    if (++time == 86400) {\n      out.T = time = 0;\n      ++date;\n      ++out.D;\n    }\n  }\n  if (date === 60) {\n    dout = b2 ? [1317, 10, 29] : [1900, 2, 29];\n    dow = 3;\n  } else if (date === 0) {\n    dout = b2 ? [1317, 8, 29] : [1900, 1, 0];\n    dow = 6;\n  } else {\n    if (date > 60) --date;\n    /* 1 = Jan 1 1900 in Gregorian */\n    var d = new Date(1900, 0, 1);\n    d.setDate(d.getDate() + date - 1);\n    dout = [d.getFullYear(), d.getMonth() + 1, d.getDate()];\n    dow = d.getDay();\n    if (date < 60) dow = (dow + 6) % 7;\n    if (b2) dow = SSF_fix_hijri(d, dout);\n  }\n  out.y = dout[0];\n  out.m = dout[1];\n  out.d = dout[2];\n  out.S = time % 60;\n  time = Math.floor(time / 60);\n  out.M = time % 60;\n  time = Math.floor(time / 60);\n  out.H = time;\n  out.q = dow;\n  return out;\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\n/* exponent >= -9 and <= 9 */\nfunction SSF_strip_decimal(o /*:string*/) /*:string*/{\n  return o.indexOf(\".\") == -1 ? o : o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)$/, \"$1\");\n}\n\n/* General Exponential always shows 2 digits exp and trims the mantissa */\nfunction SSF_normalize_exp(o /*:string*/) /*:string*/{\n  if (o.indexOf(\"E\") == -1) return o;\n  return o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/, \"$1E\").replace(/(E[+-])(\\d)$/, \"$10$2\");\n}\n\n/* exponent >= -9 and <= 9 */\nfunction SSF_small_exp(v /*:number*/) /*:string*/{\n  var w = v < 0 ? 12 : 11;\n  var o = SSF_strip_decimal(v.toFixed(12));\n  if (o.length <= w) return o;\n  o = v.toPrecision(10);\n  if (o.length <= w) return o;\n  return v.toExponential(5);\n}\n\n/* exponent >= 11 or <= -10 likely exponential */\nfunction SSF_large_exp(v /*:number*/) /*:string*/{\n  var o = SSF_strip_decimal(v.toFixed(11));\n  return o.length > (v < 0 ? 12 : 11) || o === \"0\" || o === \"-0\" ? v.toPrecision(6) : o;\n}\nfunction SSF_general_num(v /*:number*/) /*:string*/{\n  var V = Math.floor(Math.log(Math.abs(v)) * Math.LOG10E),\n    o;\n  if (V >= -4 && V <= -1) o = v.toPrecision(10 + V);else if (Math.abs(V) <= 9) o = SSF_small_exp(v);else if (V === 10) o = v.toFixed(10).substr(0, 12);else o = SSF_large_exp(v);\n  return SSF_strip_decimal(SSF_normalize_exp(o.toUpperCase()));\n}\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction SSF_general(v /*:any*/, opts /*:any*/) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n    case 'boolean':\n      return v ? \"TRUE\" : \"FALSE\";\n    case 'number':\n      return (v | 0) === v ? v.toString(10) : SSF_general_num(v);\n    case 'undefined':\n      return \"\";\n    case 'object':\n      if (v == null) return \"\";\n      if (v instanceof Date) return SSF_format(14, datenum(v, opts && opts.date1904), opts);\n  }\n  throw new Error(\"unsupported value in General format: \" + v);\n}\nfunction SSF_fix_hijri(date /*:Date*/, o /*:[number, number, number]*/) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if (date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\n//var THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\nfunction SSF_write_date(type /*:number*/, fmt /*:string*/, val, ss0 /*:?number*/) /*:string*/{\n  var o = \"\",\n    ss = 0,\n    tt = 0,\n    y = val.y,\n    out,\n    outl = 0;\n  switch (type) {\n    case 98:\n      /* 'b' buddhist year */\n      y = val.y + 543;\n    /* falls through */\n    case 121:\n      /* 'y' year */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = y % 100;\n          outl = 2;\n          break;\n        default:\n          out = y % 10000;\n          outl = 4;\n          break;\n      }\n      break;\n    case 109:\n      /* 'm' month */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.m;\n          outl = fmt.length;\n          break;\n        case 3:\n          return months[val.m - 1][1];\n        case 5:\n          return months[val.m - 1][0];\n        default:\n          return months[val.m - 1][2];\n      }\n      break;\n    case 100:\n      /* 'd' day */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.d;\n          outl = fmt.length;\n          break;\n        case 3:\n          return days[val.q][0];\n        default:\n          return days[val.q][1];\n      }\n      break;\n    case 104:\n      /* 'h' 12-hour */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = 1 + (val.H + 11) % 12;\n          outl = fmt.length;\n          break;\n        default:\n          throw 'bad hour format: ' + fmt;\n      }\n      break;\n    case 72:\n      /* 'H' 24-hour */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.H;\n          outl = fmt.length;\n          break;\n        default:\n          throw 'bad hour format: ' + fmt;\n      }\n      break;\n    case 77:\n      /* 'M' minutes */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.M;\n          outl = fmt.length;\n          break;\n        default:\n          throw 'bad minute format: ' + fmt;\n      }\n      break;\n    case 115:\n      /* 's' seconds */\n      if (fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n      if (val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\n      /*::if(!ss0) ss0 = 0; */\n      if (ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;else tt = ss0 === 1 ? 10 : 1;\n      ss = Math.round(tt * (val.S + val.u));\n      if (ss >= 60 * tt) ss = 0;\n      if (fmt === 's') return ss === 0 ? \"0\" : \"\" + ss / tt;\n      o = pad0(ss, 2 + ss0);\n      if (fmt === 'ss') return o.substr(0, 2);\n      return \".\" + o.substr(2, fmt.length - 1);\n    case 90:\n      /* 'Z' absolute time */\n      switch (fmt) {\n        case '[h]':\n        case '[hh]':\n          out = val.D * 24 + val.H;\n          break;\n        case '[m]':\n        case '[mm]':\n          out = (val.D * 24 + val.H) * 60 + val.M;\n          break;\n        case '[s]':\n        case '[ss]':\n          out = ((val.D * 24 + val.H) * 60 + val.M) * 60 + (ss0 == 0 ? Math.round(val.S + val.u) : val.S);\n          break;\n        default:\n          throw 'bad abstime format: ' + fmt;\n      }\n      outl = fmt.length === 3 ? 1 : 2;\n      break;\n    case 101:\n      /* 'e' era */\n      out = y;\n      outl = 1;\n      break;\n  }\n  var outstr = outl > 0 ? pad0(out, outl) : \"\";\n  return outstr;\n}\n\n/*jshint -W086 */\n/*jshint +W086 */\nfunction commaify(s /*:string*/) /*:string*/{\n  var w = 3;\n  if (s.length <= w) return s;\n  var j = s.length % w,\n    o = s.substr(0, j);\n  for (; j != s.length; j += w) o += (o.length > 0 ? \",\" : \"\") + s.substr(j, w);\n  return o;\n}\nvar pct1 = /%/g;\nfunction write_num_pct(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var sfmt = fmt.replace(pct1, \"\"),\n    mul = fmt.length - sfmt.length;\n  return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill(\"%\", mul);\n}\nfunction write_num_cm(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var idx = fmt.length - 1;\n  while (fmt.charCodeAt(idx - 1) === 44) --idx;\n  return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n}\nfunction write_num_exp(fmt /*:string*/, val /*:number*/) /*:string*/{\n  var o /*:string*/;\n  var idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n  if (fmt.match(/^#+0.0E\\+0$/)) {\n    if (val == 0) return \"0.0E+0\";else if (val < 0) return \"-\" + write_num_exp(fmt, -val);\n    var period = fmt.indexOf(\".\");\n    if (period === -1) period = fmt.indexOf('E');\n    var ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n    if (ee < 0) ee += period;\n    o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n    if (o.indexOf(\"e\") === -1) {\n      var fakee = Math.floor(Math.log(val) * Math.LOG10E);\n      if (o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length + ee);else o += \"E+\" + (fakee - ee);\n      while (o.substr(0, 2) === \"0.\") {\n        o = o.charAt(0) + o.substr(2, period) + \".\" + o.substr(2 + period);\n        o = o.replace(/^0+([1-9])/, \"$1\").replace(/^0+\\./, \"0.\");\n      }\n      o = o.replace(/\\+-/, \"-\");\n    }\n    o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n      return $1 + $2 + $3.substr(0, (period + ee) % period) + \".\" + $3.substr(ee) + \"E\";\n    });\n  } else o = val.toExponential(idx);\n  if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0, o.length - 1) + \"0\" + o.charAt(o.length - 1);\n  if (fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/, \"e\");\n  return o.replace(\"e\", \"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r /*:Array<string>*/, aval /*:number*/, sign /*:string*/) /*:string*/{\n  var den = parseInt(r[4], 10),\n    rr = Math.round(aval * den),\n    base = Math.floor(rr / den);\n  var myn = rr - base * den,\n    myd = den;\n  return sign + (base === 0 ? \"\" : \"\" + base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn, r[1].length) + r[2] + \"/\" + r[3] + pad0(myd, r[4].length));\n}\nfunction write_num_f2(r /*:Array<string>*/, aval /*:number*/, sign /*:string*/) /*:string*/{\n  return sign + (aval === 0 ? \"\" : \"\" + aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\)[^)]*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str /*:string*/) /*:string*/{\n  var o = \"\",\n    cc;\n  for (var i = 0; i != str.length; ++i) switch (cc = str.charCodeAt(i)) {\n    case 35:\n      break;\n    case 63:\n      o += \" \";\n      break;\n    case 48:\n      o += \"0\";\n      break;\n    default:\n      o += String.fromCharCode(cc);\n  }\n  return o;\n}\nfunction rnd(val /*:number*/, d /*:number*/) /*:string*/{\n  var dd = Math.pow(10, d);\n  return \"\" + Math.round(val * dd) / dd;\n}\nfunction dec(val /*:number*/, d /*:number*/) /*:number*/{\n  var _frac = val - Math.floor(val),\n    dd = Math.pow(10, d);\n  if (d < ('' + Math.round(_frac * dd)).length) return 0;\n  return Math.round(_frac * dd);\n}\nfunction carry(val /*:number*/, d /*:number*/) /*:number*/{\n  if (d < ('' + Math.round((val - Math.floor(val)) * Math.pow(10, d))).length) {\n    return 1;\n  }\n  return 0;\n}\nfunction flr(val /*:number*/) /*:string*/{\n  if (val < 2147483647 && val > -2147483648) return \"\" + (val >= 0 ? val | 0 : val - 1 | 0);\n  return \"\" + Math.floor(val);\n}\nfunction write_num_flt(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n    var ffmt = fmt.replace(/\\( */, \"\").replace(/ \\)/, \"\").replace(/\\)/, \"\");\n    if (val >= 0) return write_num_flt('n', ffmt, val);\n    return '(' + write_num_flt('n', ffmt, -val) + ')';\n  }\n  if (fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n  if (fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n  if (fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n  if (fmt.charCodeAt(0) === 36) return \"$\" + write_num_flt(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n  var o;\n  var r /*:?Array<string>*/,\n    ri,\n    ff,\n    aval = Math.abs(val),\n    sign = val < 0 ? \"-\" : \"\";\n  if (fmt.match(/^00+$/)) return sign + pad0r(aval, fmt.length);\n  if (fmt.match(/^[#?]+$/)) {\n    o = pad0r(val, 0);\n    if (o === \"0\") o = \"\";\n    return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(frac1)) return write_num_f1(r, aval, sign);\n  if (fmt.match(/^#+0+$/)) return sign + pad0r(aval, fmt.length - fmt.indexOf(\"0\"));\n  if (r = fmt.match(dec1)) {\n    o = rnd(val, r[1].length).replace(/^([^\\.]+)$/, \"$1.\" + hashq(r[1])).replace(/\\.$/, \".\" + hashq(r[1])).replace(/\\.(\\d*)$/, function ($$, $1) {\n      return \".\" + $1 + fill(\"0\", hashq( /*::(*/r /*::||[\"\"])*/[1]).length - $1.length);\n    });\n    return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./, \".\");\n  }\n  fmt = fmt.replace(/^#+([0.])/, \"$1\");\n  if (r = fmt.match(/^(0*)\\.(#*)$/)) {\n    return sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/, \".$1\").replace(/^(-?\\d*)$/, \"$1.\").replace(/^0\\./, r[1].length ? \"0.\" : \".\");\n  }\n  if (r = fmt.match(/^#{1,3},##0(\\.?)$/)) return sign + commaify(pad0r(aval, 0));\n  if (r = fmt.match(/^#,##0\\.([#0]*0)$/)) {\n    return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\" + (Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length), r[1].length);\n  }\n  if (r = fmt.match(/^#,#*,#0/)) return write_num_flt(type, fmt.replace(/^#,#*,/, \"\"), val);\n  if (r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/)) {\n    o = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g, \"\"), val));\n    ri = 0;\n    return _strrev(_strrev(fmt.replace(/\\\\/g, \"\")).replace(/[0#]/g, function (x) {\n      return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : \"\";\n    }));\n  }\n  if (fmt.match(phone)) {\n    o = write_num_flt(type, \"##########\", val);\n    return \"(\" + o.substr(0, 3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n  }\n  var oa = \"\";\n  if (r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min( /*::String(*/r[4] /*::)*/.length, 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, false);\n    o = \"\" + sign;\n    oa = write_num(\"n\", /*::String(*/r[1] /*::)*/, ff[1]);\n    if (oa.charAt(oa.length - 1) == \" \") oa = oa.substr(0, oa.length - 1) + \"0\";\n    o += oa + /*::String(*/r[2] /*::)*/ + \"/\" + /*::String(*/r[3] /*::)*/;\n    oa = rpad_(ff[2], ri);\n    if (oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n    o += oa;\n    return o;\n  }\n  if (r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, true);\n    return sign + (ff[0] || (ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1], ri) + r[2] + \"/\" + r[3] + rpad_(ff[2], ri) : fill(\" \", 2 * ri + 1 + r[2].length + r[3].length));\n  }\n  if (r = fmt.match(/^[#0?]+$/)) {\n    o = pad0r(val, 0);\n    if (fmt.length <= o.length) return o;\n    return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(/^([#0?]+)\\.([#0]+)$/)) {\n    o = \"\" + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, \"$1\");\n    ri = o.indexOf(\".\");\n    var lres = fmt.indexOf(\".\") - ri,\n      rres = fmt.length - o.length - lres;\n    return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n  }\n  if (r = fmt.match(/^00,000\\.([#0]*0)$/)) {\n    ri = dec(val, r[1].length);\n    return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/, \"0$&\").replace(/^\\d*$/, function ($$) {\n      return \"00,\" + ($$.length < 3 ? pad0(0, 3 - $$.length) : \"\") + $$;\n    }) + \".\" + pad0(ri, r[1].length);\n  }\n  switch (fmt) {\n    case \"###,##0.00\":\n      return write_num_flt(type, \"#,##0.00\", val);\n    case \"###,###\":\n    case \"##,###\":\n    case \"#,###\":\n      var x = commaify(pad0r(aval, 0));\n      return x !== \"0\" ? sign + x : \"\";\n    case \"###,###.00\":\n      return write_num_flt(type, \"###,##0.00\", val).replace(/^0\\./, \".\");\n    case \"#,###.00\":\n      return write_num_flt(type, \"#,##0.00\", val).replace(/^0\\./, \".\");\n    default:\n  }\n  throw new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var idx = fmt.length - 1;\n  while (fmt.charCodeAt(idx - 1) === 44) --idx;\n  return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n}\nfunction write_num_pct2(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var sfmt = fmt.replace(pct1, \"\"),\n    mul = fmt.length - sfmt.length;\n  return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill(\"%\", mul);\n}\nfunction write_num_exp2(fmt /*:string*/, val /*:number*/) /*:string*/{\n  var o /*:string*/;\n  var idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n  if (fmt.match(/^#+0.0E\\+0$/)) {\n    if (val == 0) return \"0.0E+0\";else if (val < 0) return \"-\" + write_num_exp2(fmt, -val);\n    var period = fmt.indexOf(\".\");\n    if (period === -1) period = fmt.indexOf('E');\n    var ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n    if (ee < 0) ee += period;\n    o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n    if (!o.match(/[Ee]/)) {\n      var fakee = Math.floor(Math.log(val) * Math.LOG10E);\n      if (o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length + ee);else o += \"E+\" + (fakee - ee);\n      o = o.replace(/\\+-/, \"-\");\n    }\n    o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n      return $1 + $2 + $3.substr(0, (period + ee) % period) + \".\" + $3.substr(ee) + \"E\";\n    });\n  } else o = val.toExponential(idx);\n  if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0, o.length - 1) + \"0\" + o.charAt(o.length - 1);\n  if (fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/, \"e\");\n  return o.replace(\"e\", \"E\");\n}\nfunction write_num_int(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n    var ffmt = fmt.replace(/\\( */, \"\").replace(/ \\)/, \"\").replace(/\\)/, \"\");\n    if (val >= 0) return write_num_int('n', ffmt, val);\n    return '(' + write_num_int('n', ffmt, -val) + ')';\n  }\n  if (fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n  if (fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n  if (fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n  if (fmt.charCodeAt(0) === 36) return \"$\" + write_num_int(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n  var o;\n  var r /*:?Array<string>*/,\n    ri,\n    ff,\n    aval = Math.abs(val),\n    sign = val < 0 ? \"-\" : \"\";\n  if (fmt.match(/^00+$/)) return sign + pad0(aval, fmt.length);\n  if (fmt.match(/^[#?]+$/)) {\n    o = \"\" + val;\n    if (val === 0) o = \"\";\n    return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(frac1)) return write_num_f2(r, aval, sign);\n  if (fmt.match(/^#+0+$/)) return sign + pad0(aval, fmt.length - fmt.indexOf(\"0\"));\n  if (r = fmt.match(dec1)) {\n    /*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n    o = (\"\" + val).replace(/^([^\\.]+)$/, \"$1.\" + hashq(r[1])).replace(/\\.$/, \".\" + hashq(r[1]));\n    o = o.replace(/\\.(\\d*)$/, function ($$, $1) {\n      /*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n      return \".\" + $1 + fill(\"0\", hashq(r[1]).length - $1.length);\n    });\n    return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./, \".\");\n  }\n  fmt = fmt.replace(/^#+([0.])/, \"$1\");\n  if (r = fmt.match(/^(0*)\\.(#*)$/)) {\n    return sign + (\"\" + aval).replace(/\\.(\\d*[1-9])0*$/, \".$1\").replace(/^(-?\\d*)$/, \"$1.\").replace(/^0\\./, r[1].length ? \"0.\" : \".\");\n  }\n  if (r = fmt.match(/^#{1,3},##0(\\.?)$/)) return sign + commaify(\"\" + aval);\n  if (r = fmt.match(/^#,##0\\.([#0]*0)$/)) {\n    return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\" + val) + \".\" + fill('0', r[1].length);\n  }\n  if (r = fmt.match(/^#,#*,#0/)) return write_num_int(type, fmt.replace(/^#,#*,/, \"\"), val);\n  if (r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/)) {\n    o = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g, \"\"), val));\n    ri = 0;\n    return _strrev(_strrev(fmt.replace(/\\\\/g, \"\")).replace(/[0#]/g, function (x) {\n      return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : \"\";\n    }));\n  }\n  if (fmt.match(phone)) {\n    o = write_num_int(type, \"##########\", val);\n    return \"(\" + o.substr(0, 3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n  }\n  var oa = \"\";\n  if (r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min( /*::String(*/r[4] /*::)*/.length, 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, false);\n    o = \"\" + sign;\n    oa = write_num(\"n\", /*::String(*/r[1] /*::)*/, ff[1]);\n    if (oa.charAt(oa.length - 1) == \" \") oa = oa.substr(0, oa.length - 1) + \"0\";\n    o += oa + /*::String(*/r[2] /*::)*/ + \"/\" + /*::String(*/r[3] /*::)*/;\n    oa = rpad_(ff[2], ri);\n    if (oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n    o += oa;\n    return o;\n  }\n  if (r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, true);\n    return sign + (ff[0] || (ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1], ri) + r[2] + \"/\" + r[3] + rpad_(ff[2], ri) : fill(\" \", 2 * ri + 1 + r[2].length + r[3].length));\n  }\n  if (r = fmt.match(/^[#0?]+$/)) {\n    o = \"\" + val;\n    if (fmt.length <= o.length) return o;\n    return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(/^([#0]+)\\.([#0]+)$/)) {\n    o = \"\" + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, \"$1\");\n    ri = o.indexOf(\".\");\n    var lres = fmt.indexOf(\".\") - ri,\n      rres = fmt.length - o.length - lres;\n    return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n  }\n  if (r = fmt.match(/^00,000\\.([#0]*0)$/)) {\n    return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\" + val).replace(/^\\d,\\d{3}$/, \"0$&\").replace(/^\\d*$/, function ($$) {\n      return \"00,\" + ($$.length < 3 ? pad0(0, 3 - $$.length) : \"\") + $$;\n    }) + \".\" + pad0(0, r[1].length);\n  }\n  switch (fmt) {\n    case \"###,###\":\n    case \"##,###\":\n    case \"#,###\":\n      var x = commaify(\"\" + aval);\n      return x !== \"0\" ? sign + x : \"\";\n    default:\n      if (fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0, fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n  }\n  throw new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  return (val | 0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n}\nfunction SSF_split_fmt(fmt /*:string*/) /*:Array<string>*/{\n  var out /*:Array<string>*/ = [];\n  var in_str = false /*, cc*/;\n  for (var i = 0, j = 0; i < fmt.length; ++i) switch (( /*cc=*/fmt.charCodeAt(i))) {\n    case 34:\n      /* '\"' */\n      in_str = !in_str;\n      break;\n    case 95:\n    case 42:\n    case 92:\n      /* '_' '*' '\\\\' */\n      ++i;\n      break;\n    case 59:\n      /* ';' */\n      out[out.length] = fmt.substr(j, i - j);\n      j = i + 1;\n  }\n  out[out.length] = fmt.substr(j);\n  if (in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n  return out;\n}\nvar SSF_abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt /*:string*/) /*:boolean*/{\n  var i = 0,\n    /*cc = 0,*/c = \"\",\n    o = \"\";\n  while (i < fmt.length) {\n    switch (c = fmt.charAt(i)) {\n      case 'G':\n        if (SSF_isgeneral(fmt, i)) i += 6;\n        i++;\n        break;\n      case '\"':\n        for (; ( /*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) {/*empty*/}\n        ++i;\n        break;\n      case '\\\\':\n        i += 2;\n        break;\n      case '_':\n        i += 2;\n        break;\n      case '@':\n        ++i;\n        break;\n      case 'B':\n      case 'b':\n        if (fmt.charAt(i + 1) === \"1\" || fmt.charAt(i + 1) === \"2\") return true;\n      /* falls through */\n      case 'M':\n      case 'D':\n      case 'Y':\n      case 'H':\n      case 'S':\n      case 'E':\n      /* falls through */\n      case 'm':\n      case 'd':\n      case 'y':\n      case 'h':\n      case 's':\n      case 'e':\n      case 'g':\n        return true;\n      case 'A':\n      case 'a':\n      case '上':\n        if (fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n        if (fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n        if (fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n        ++i;\n        break;\n      case '[':\n        o = c;\n        while (fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n        if (o.match(SSF_abstime)) return true;\n        break;\n      case '.':\n      /* falls through */\n      case '0':\n      case '#':\n        while (i < fmt.length && (\"0#?.,E+-%\".indexOf(c = fmt.charAt(++i)) > -1 || c == '\\\\' && fmt.charAt(i + 1) == \"-\" && \"0#\".indexOf(fmt.charAt(i + 2)) > -1)) {/* empty */}\n        break;\n      case '?':\n        while (fmt.charAt(++i) === c) {/* empty */}\n        break;\n      case '*':\n        ++i;\n        if (fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i;\n        break;\n      case '(':\n      case ')':\n        ++i;\n        break;\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        while (i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) {/* empty */}\n        break;\n      case ' ':\n        ++i;\n        break;\n      default:\n        ++i;\n        break;\n    }\n  }\n  return false;\n}\nfunction eval_fmt(fmt /*:string*/, v /*:any*/, opts /*:any*/, flen /*:number*/) {\n  var out = [],\n    o = \"\",\n    i = 0,\n    c = \"\",\n    lst = 't',\n    dt,\n    j,\n    cc;\n  var hr = 'H';\n  /* Tokenize */\n  while (i < fmt.length) {\n    switch (c = fmt.charAt(i)) {\n      case 'G':\n        /* General */\n        if (!SSF_isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n        out[out.length] = {\n          t: 'G',\n          v: 'General'\n        };\n        i += 7;\n        break;\n      case '\"':\n        /* Literal text */\n        for (o = \"\"; (cc = fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n        out[out.length] = {\n          t: 't',\n          v: o\n        };\n        ++i;\n        break;\n      case '\\\\':\n        var w = fmt.charAt(++i),\n          t = w === \"(\" || w === \")\" ? w : 't';\n        out[out.length] = {\n          t: t,\n          v: w\n        };\n        ++i;\n        break;\n      case '_':\n        out[out.length] = {\n          t: 't',\n          v: \" \"\n        };\n        i += 2;\n        break;\n      case '@':\n        /* Text Placeholder */\n        out[out.length] = {\n          t: 'T',\n          v: v\n        };\n        ++i;\n        break;\n      case 'B':\n      case 'b':\n        if (fmt.charAt(i + 1) === \"1\" || fmt.charAt(i + 1) === \"2\") {\n          if (dt == null) {\n            dt = SSF_parse_date_code(v, opts, fmt.charAt(i + 1) === \"2\");\n            if (dt == null) return \"\";\n          }\n          out[out.length] = {\n            t: 'X',\n            v: fmt.substr(i, 2)\n          };\n          lst = c;\n          i += 2;\n          break;\n        }\n      /* falls through */\n      case 'M':\n      case 'D':\n      case 'Y':\n      case 'H':\n      case 'S':\n      case 'E':\n        c = c.toLowerCase();\n      /* falls through */\n      case 'm':\n      case 'd':\n      case 'y':\n      case 'h':\n      case 's':\n      case 'e':\n      case 'g':\n        if (v < 0) return \"\";\n        if (dt == null) {\n          dt = SSF_parse_date_code(v, opts);\n          if (dt == null) return \"\";\n        }\n        o = c;\n        while (++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o += c;\n        if (c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n        if (c === 'h') c = hr;\n        out[out.length] = {\n          t: c,\n          v: o\n        };\n        lst = c;\n        break;\n      case 'A':\n      case 'a':\n      case '上':\n        var q = {\n          t: c,\n          v: c\n        };\n        if (dt == null) dt = SSF_parse_date_code(v, opts);\n        if (fmt.substr(i, 3).toUpperCase() === \"A/P\") {\n          if (dt != null) q.v = dt.H >= 12 ? fmt.charAt(i + 2) : c;\n          q.t = 'T';\n          hr = 'h';\n          i += 3;\n        } else if (fmt.substr(i, 5).toUpperCase() === \"AM/PM\") {\n          if (dt != null) q.v = dt.H >= 12 ? \"PM\" : \"AM\";\n          q.t = 'T';\n          i += 5;\n          hr = 'h';\n        } else if (fmt.substr(i, 5).toUpperCase() === \"上午/下午\") {\n          if (dt != null) q.v = dt.H >= 12 ? \"下午\" : \"上午\";\n          q.t = 'T';\n          i += 5;\n          hr = 'h';\n        } else {\n          q.t = \"t\";\n          ++i;\n        }\n        if (dt == null && q.t === 'T') return \"\";\n        out[out.length] = q;\n        lst = c;\n        break;\n      case '[':\n        o = c;\n        while (fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n        if (o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n        if (o.match(SSF_abstime)) {\n          if (dt == null) {\n            dt = SSF_parse_date_code(v, opts);\n            if (dt == null) return \"\";\n          }\n          out[out.length] = {\n            t: 'Z',\n            v: o.toLowerCase()\n          };\n          lst = o.charAt(1);\n        } else if (o.indexOf(\"$\") > -1) {\n          o = (o.match(/\\$([^-\\[\\]]*)/) || [])[1] || \"$\";\n          if (!fmt_is_date(fmt)) out[out.length] = {\n            t: 't',\n            v: o\n          };\n        }\n        break;\n      /* Numbers */\n      case '.':\n        if (dt != null) {\n          o = c;\n          while (++i < fmt.length && (c = fmt.charAt(i)) === \"0\") o += c;\n          out[out.length] = {\n            t: 's',\n            v: o\n          };\n          break;\n        }\n      /* falls through */\n      case '0':\n      case '#':\n        o = c;\n        while (++i < fmt.length && \"0#?.,E+-%\".indexOf(c = fmt.charAt(i)) > -1) o += c;\n        out[out.length] = {\n          t: 'n',\n          v: o\n        };\n        break;\n      case '?':\n        o = c;\n        while (fmt.charAt(++i) === c) o += c;\n        out[out.length] = {\n          t: c,\n          v: o\n        };\n        lst = c;\n        break;\n      case '*':\n        ++i;\n        if (fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i;\n        break;\n      // **\n      case '(':\n      case ')':\n        out[out.length] = {\n          t: flen === 1 ? 't' : c,\n          v: c\n        };\n        ++i;\n        break;\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        o = c;\n        while (i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o += fmt.charAt(i);\n        out[out.length] = {\n          t: 'D',\n          v: o\n        };\n        break;\n      case ' ':\n        out[out.length] = {\n          t: c,\n          v: c\n        };\n        ++i;\n        break;\n      case '$':\n        out[out.length] = {\n          t: 't',\n          v: '$'\n        };\n        ++i;\n        break;\n      default:\n        if (\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n        out[out.length] = {\n          t: 't',\n          v: c\n        };\n        ++i;\n        break;\n    }\n  }\n\n  /* Scan for date/time parts */\n  var bt = 0,\n    ss0 = 0,\n    ssm;\n  for (i = out.length - 1, lst = 't'; i >= 0; --i) {\n    switch (out[i].t) {\n      case 'h':\n      case 'H':\n        out[i].t = hr;\n        lst = 'h';\n        if (bt < 1) bt = 1;\n        break;\n      case 's':\n        if (ssm = out[i].v.match(/\\.0+$/)) {\n          ss0 = Math.max(ss0, ssm[0].length - 1);\n          bt = 4;\n        }\n        if (bt < 3) bt = 3;\n      /* falls through */\n      case 'd':\n      case 'y':\n      case 'e':\n        lst = out[i].t;\n        break;\n      case 'M':\n        lst = out[i].t;\n        if (bt < 2) bt = 2;\n        break;\n      case 'm':\n        if (lst === 's') {\n          out[i].t = 'M';\n          if (bt < 2) bt = 2;\n        }\n        break;\n      case 'X':\n        /*if(out[i].v === \"B2\");*/\n        break;\n      case 'Z':\n        if (bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n        if (bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n        if (bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n    }\n  }\n\n  /* time rounding depends on presence of minute / second / usec fields */\n  var _dt;\n  switch (bt) {\n    case 0:\n      break;\n    case 1:\n    case 2:\n    case 3:\n      if (dt.u >= 0.5) {\n        dt.u = 0;\n        ++dt.S;\n      }\n      if (dt.S >= 60) {\n        dt.S = 0;\n        ++dt.M;\n      }\n      if (dt.M >= 60) {\n        dt.M = 0;\n        ++dt.H;\n      }\n      if (dt.H >= 24) {\n        dt.H = 0;\n        ++dt.D;\n        _dt = SSF_parse_date_code(dt.D);\n        _dt.u = dt.u;\n        _dt.S = dt.S;\n        _dt.M = dt.M;\n        _dt.H = dt.H;\n        dt = _dt;\n      }\n      break;\n    case 4:\n      switch (ss0) {\n        case 1:\n          dt.u = Math.round(dt.u * 10) / 10;\n          break;\n        case 2:\n          dt.u = Math.round(dt.u * 100) / 100;\n          break;\n        case 3:\n          dt.u = Math.round(dt.u * 1000) / 1000;\n          break;\n      }\n      if (dt.u >= 1) {\n        dt.u = 0;\n        ++dt.S;\n      }\n      if (dt.S >= 60) {\n        dt.S = 0;\n        ++dt.M;\n      }\n      if (dt.M >= 60) {\n        dt.M = 0;\n        ++dt.H;\n      }\n      if (dt.H >= 24) {\n        dt.H = 0;\n        ++dt.D;\n        _dt = SSF_parse_date_code(dt.D);\n        _dt.u = dt.u;\n        _dt.S = dt.S;\n        _dt.M = dt.M;\n        _dt.H = dt.H;\n        dt = _dt;\n      }\n      break;\n  }\n\n  /* replace fields */\n  var nstr = \"\",\n    jj;\n  for (i = 0; i < out.length; ++i) {\n    switch (out[i].t) {\n      case 't':\n      case 'T':\n      case ' ':\n      case 'D':\n        break;\n      case 'X':\n        out[i].v = \"\";\n        out[i].t = \";\";\n        break;\n      case 'd':\n      case 'm':\n      case 'y':\n      case 'h':\n      case 'H':\n      case 'M':\n      case 's':\n      case 'e':\n      case 'b':\n      case 'Z':\n        /*::if(!dt) throw \"unreachable\"; */\n        out[i].v = SSF_write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n        out[i].t = 't';\n        break;\n      case 'n':\n      case '?':\n        jj = i + 1;\n        while (out[jj] != null && ((c = out[jj].t) === \"?\" || c === \"D\" || (c === \" \" || c === \"t\") && out[jj + 1] != null && (out[jj + 1].t === '?' || out[jj + 1].t === \"t\" && out[jj + 1].v === '/') || out[i].t === '(' && (c === ' ' || c === 'n' || c === ')') || c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj + 1] != null && out[jj + 1].t == '?'))) {\n          out[i].v += out[jj].v;\n          out[jj] = {\n            v: \"\",\n            t: \";\"\n          };\n          ++jj;\n        }\n        nstr += out[i].v;\n        i = jj - 1;\n        break;\n      case 'G':\n        out[i].t = 't';\n        out[i].v = SSF_general(v, opts);\n        break;\n    }\n  }\n  var vv = \"\",\n    myv,\n    ostr;\n  if (nstr.length > 0) {\n    if (nstr.charCodeAt(0) == 40) /* '(' */{\n        myv = v < 0 && nstr.charCodeAt(0) === 45 ? -v : v;\n        ostr = write_num('n', nstr, myv);\n      } else {\n      myv = v < 0 && flen > 1 ? -v : v;\n      ostr = write_num('n', nstr, myv);\n      if (myv < 0 && out[0] && out[0].t == 't') {\n        ostr = ostr.substr(1);\n        out[0].v = \"-\" + out[0].v;\n      }\n    }\n    jj = ostr.length - 1;\n    var decpt = out.length;\n    for (i = 0; i < out.length; ++i) if (out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) {\n      decpt = i;\n      break;\n    }\n    var lasti = out.length;\n    if (decpt === out.length && ostr.indexOf(\"E\") === -1) {\n      for (i = out.length - 1; i >= 0; --i) {\n        if (out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n        if (jj >= out[i].v.length - 1) {\n          jj -= out[i].v.length;\n          out[i].v = ostr.substr(jj + 1, out[i].v.length);\n        } else if (jj < 0) out[i].v = \"\";else {\n          out[i].v = ostr.substr(0, jj + 1);\n          jj = -1;\n        }\n        out[i].t = 't';\n        lasti = i;\n      }\n      if (jj >= 0 && lasti < out.length) out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n    } else if (decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n      jj = ostr.indexOf(\".\") - 1;\n      for (i = decpt; i >= 0; --i) {\n        if (out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n        j = out[i].v.indexOf(\".\") > -1 && i === decpt ? out[i].v.indexOf(\".\") - 1 : out[i].v.length - 1;\n        vv = out[i].v.substr(j + 1);\n        for (; j >= 0; --j) {\n          if (jj >= 0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n        }\n        out[i].v = vv;\n        out[i].t = 't';\n        lasti = i;\n      }\n      if (jj >= 0 && lasti < out.length) out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n      jj = ostr.indexOf(\".\") + 1;\n      for (i = decpt; i < out.length; ++i) {\n        if (out[i] == null || 'n?('.indexOf(out[i].t) === -1 && i !== decpt) continue;\n        j = out[i].v.indexOf(\".\") > -1 && i === decpt ? out[i].v.indexOf(\".\") + 1 : 0;\n        vv = out[i].v.substr(0, j);\n        for (; j < out[i].v.length; ++j) {\n          if (jj < ostr.length) vv += ostr.charAt(jj++);\n        }\n        out[i].v = vv;\n        out[i].t = 't';\n        lasti = i;\n      }\n    }\n  }\n  for (i = 0; i < out.length; ++i) if (out[i] != null && 'n?'.indexOf(out[i].t) > -1) {\n    myv = flen > 1 && v < 0 && i > 0 && out[i - 1].v === \"-\" ? -v : v;\n    out[i].v = write_num(out[i].t, out[i].v, myv);\n    out[i].t = 't';\n  }\n  var retval = \"\";\n  for (i = 0; i !== out.length; ++i) if (out[i] != null) retval += out[i].v;\n  return retval;\n}\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n  if (rr == null) return false;\n  var thresh = parseFloat(rr[2]);\n  switch (rr[1]) {\n    case \"=\":\n      if (v == thresh) return true;\n      break;\n    case \">\":\n      if (v > thresh) return true;\n      break;\n    case \"<\":\n      if (v < thresh) return true;\n      break;\n    case \"<>\":\n      if (v != thresh) return true;\n      break;\n    case \">=\":\n      if (v >= thresh) return true;\n      break;\n    case \"<=\":\n      if (v <= thresh) return true;\n      break;\n  }\n  return false;\n}\nfunction choose_fmt(f /*:string*/, v /*:any*/) {\n  var fmt = SSF_split_fmt(f);\n  var l = fmt.length,\n    lat = fmt[l - 1].indexOf(\"@\");\n  if (l < 4 && lat > -1) --l;\n  if (fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n  if (typeof v !== \"number\") return [4, fmt.length === 4 || lat > -1 ? fmt[fmt.length - 1] : \"@\"];\n  switch (fmt.length) {\n    case 1:\n      fmt = lat > -1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"];\n      break;\n    case 2:\n      fmt = lat > -1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"];\n      break;\n    case 3:\n      fmt = lat > -1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"];\n      break;\n    case 4:\n      break;\n  }\n  var ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n  if (fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n  if (fmt[0].match(/\\[[=<>]/) != null || fmt[1].match(/\\[[=<>]/) != null) {\n    var m1 = fmt[0].match(cfregex2);\n    var m2 = fmt[1].match(cfregex2);\n    return chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n  }\n  return [l, ff];\n}\nfunction SSF_format(fmt /*:string|number*/, v /*:any*/, o /*:?any*/) {\n  if (o == null) o = {};\n  var sfmt = \"\";\n  switch (typeof fmt) {\n    case \"string\":\n      if (fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;else sfmt = fmt;\n      break;\n    case \"number\":\n      if (fmt == 14 && o.dateNF) sfmt = o.dateNF;else sfmt = (o.table != null ? o.table /*:any*/ : table_fmt)[fmt];\n      if (sfmt == null) sfmt = o.table && o.table[SSF_default_map[fmt]] || table_fmt[SSF_default_map[fmt]];\n      if (sfmt == null) sfmt = SSF_default_str[fmt] || \"General\";\n      break;\n  }\n  if (SSF_isgeneral(sfmt, 0)) return SSF_general(v, o);\n  if (v instanceof Date) v = datenum(v, o.date1904);\n  var f = choose_fmt(sfmt, v);\n  if (SSF_isgeneral(f[1])) return SSF_general(v, o);\n  if (v === true) v = \"TRUE\";else if (v === false) v = \"FALSE\";else if (v === \"\" || v == null) return \"\";\n  return eval_fmt(f[1], v, o, f[0]);\n}\nfunction SSF_load(fmt /*:string*/, idx /*:?number*/) /*:number*/{\n  if (typeof idx != 'number') {\n    idx = +idx || -1;\n    /*::if(typeof idx != 'number') return 0x188; */\n    for (var i = 0; i < 0x0188; ++i) {\n      /*::if(typeof idx != 'number') return 0x188; */\n      if (table_fmt[i] == undefined) {\n        if (idx < 0) idx = i;\n        continue;\n      }\n      if (table_fmt[i] == fmt) {\n        idx = i;\n        break;\n      }\n    }\n    /*::if(typeof idx != 'number') return 0x188; */\n    if (idx < 0) idx = 0x187;\n  }\n  /*::if(typeof idx != 'number') return 0x188; */\n  table_fmt[idx] = fmt;\n  return idx;\n}\nfunction SSF_load_table(tbl /*:SSFTable*/) /*:void*/{\n  for (var i = 0; i != 0x0188; ++i) if (tbl[i] !== undefined) SSF_load(tbl[i], i);\n}\nfunction make_ssf() {\n  table_fmt = SSF_init_table();\n}\nvar SSF = {\n  format: SSF_format,\n  load: SSF_load,\n  _table: table_fmt,\n  load_table: SSF_load_table,\n  parse_date_code: SSF_parse_date_code,\n  is_date: fmt_is_date,\n  get_table: function get_table() {\n    return SSF._table = table_fmt;\n  }\n};\nvar SSFImplicit /*{[number]:string}*/ = {\n  \"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  \"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  \"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  \"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  \"23\": 'General',\n  \"24\": 'General',\n  \"25\": 'General',\n  \"26\": 'General',\n  \"27\": 'm/d/yy',\n  \"28\": 'm/d/yy',\n  \"29\": 'm/d/yy',\n  \"30\": 'm/d/yy',\n  \"31\": 'm/d/yy',\n  \"32\": 'h:mm:ss',\n  \"33\": 'h:mm:ss',\n  \"34\": 'h:mm:ss',\n  \"35\": 'h:mm:ss',\n  \"36\": 'm/d/yy',\n  \"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n  \"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n  \"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n  \"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n  \"50\": 'm/d/yy',\n  \"51\": 'm/d/yy',\n  \"52\": 'm/d/yy',\n  \"53\": 'm/d/yy',\n  \"54\": 'm/d/yy',\n  \"55\": 'm/d/yy',\n  \"56\": 'm/d/yy',\n  \"57\": 'm/d/yy',\n  \"58\": 'm/d/yy',\n  \"59\": '0',\n  \"60\": '0.00',\n  \"61\": '#,##0',\n  \"62\": '#,##0.00',\n  \"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  \"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  \"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  \"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  \"67\": '0%',\n  \"68\": '0.00%',\n  \"69\": '# ?/?',\n  \"70\": '# ??/??',\n  \"71\": 'm/d/yy',\n  \"72\": 'm/d/yy',\n  \"73\": 'd-mmm-yy',\n  \"74\": 'd-mmm',\n  \"75\": 'mmm-yy',\n  \"76\": 'h:mm',\n  \"77\": 'h:mm:ss',\n  \"78\": 'm/d/yy h:mm',\n  \"79\": 'mm:ss',\n  \"80\": '[h]:mm:ss',\n  \"81\": 'mmss.0'\n} /*:any*/;\n\n/* dateNF parse TODO: move to SSF */\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\nfunction dateNF_regex(dateNF /*:string|number*/) /*:RegExp*/{\n  var fmt = typeof dateNF == \"number\" ? table_fmt[dateNF] : dateNF;\n  fmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n  dateNFregex.lastIndex = 0;\n  return new RegExp(\"^\" + fmt + \"$\");\n}\nfunction dateNF_fix(str /*:string*/, dateNF /*:string*/, match /*:Array<string>*/) /*:string*/{\n  var Y = -1,\n    m = -1,\n    d = -1,\n    H = -1,\n    M = -1,\n    S = -1;\n  (dateNF.match(dateNFregex) || []).forEach(function (n, i) {\n    var v = parseInt(match[i + 1], 10);\n    switch (n.toLowerCase().charAt(0)) {\n      case 'y':\n        Y = v;\n        break;\n      case 'd':\n        d = v;\n        break;\n      case 'h':\n        H = v;\n        break;\n      case 's':\n        S = v;\n        break;\n      case 'm':\n        if (H >= 0) M = v;else m = v;\n        break;\n    }\n  });\n  dateNFregex.lastIndex = 0;\n  if (S >= 0 && M == -1 && m >= 0) {\n    M = m;\n    m = -1;\n  }\n  var datestr = (\"\" + (Y >= 0 ? Y : new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m >= 1 ? m : 1)).slice(-2) + \"-\" + (\"00\" + (d >= 1 ? d : 1)).slice(-2);\n  if (datestr.length == 7) datestr = \"0\" + datestr;\n  if (datestr.length == 8) datestr = \"20\" + datestr;\n  var timestr = (\"00\" + (H >= 0 ? H : 0)).slice(-2) + \":\" + (\"00\" + (M >= 0 ? M : 0)).slice(-2) + \":\" + (\"00\" + (S >= 0 ? S : 0)).slice(-2);\n  if (H == -1 && M == -1 && S == -1) return datestr;\n  if (Y == -1 && m == -1 && d == -1) return timestr;\n  return datestr + \"T\" + timestr;\n}\n\n/* table of bad formats written by third-party tools */\nvar bad_formats = {\n  \"d.m\": \"d\\\\.m\" // Issue #2571 Google Sheets writes invalid format 'd.m', correct format is 'd\".\"m' or 'd\\\\.m'\n};\nfunction SSF__load(fmt, idx) {\n  return SSF_load(bad_formats[fmt] || fmt, idx);\n}\n\n/*::\ndeclare var ReadShift:any;\ndeclare var CheckField:any;\ndeclare var prep_blob:any;\ndeclare var __readUInt32LE:any;\ndeclare var __readInt32LE:any;\ndeclare var __toBuffer:any;\ndeclare var __utf16le:any;\ndeclare var bconcat:any;\ndeclare var s2a:any;\ndeclare var chr0:any;\ndeclare var chr1:any;\ndeclare var has_buf:boolean;\ndeclare var new_buf:any;\ndeclare var new_raw_buf:any;\ndeclare var new_unsafe_buf:any;\ndeclare var Buffer_from:any;\n*/\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global Uint8Array:false, Uint16Array:false */\n\n/*::\ntype SectorEntry = {\n\tname?:string;\n\tnodes?:Array<number>;\n\tdata:RawBytes;\n};\ntype SectorList = {\n\t[k:string|number]:SectorEntry;\n\tname:?string;\n\tfat_addrs:Array<number>;\n\tssz:number;\n}\ntype CFBFiles = {[n:string]:CFBEntry};\n*/\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32 = /*#__PURE__*/function () {\n  var CRC32 = {};\n  CRC32.version = '1.2.0';\n  /* see perf/crc32table.js */\n  /*global Int32Array */\n  function signed_crc_table() /*:any*/{\n    var c = 0,\n      table /*:Array<number>*/ = new Array(256);\n    for (var n = 0; n != 256; ++n) {\n      c = n;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      table[n] = c;\n    }\n    return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n  }\n  var T0 = signed_crc_table();\n  function slice_by_16_tables(T) {\n    var c = 0,\n      v = 0,\n      n = 0,\n      table /*:Array<number>*/ = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096);\n    for (n = 0; n != 256; ++n) table[n] = T[n];\n    for (n = 0; n != 256; ++n) {\n      v = T[n];\n      for (c = 256 + n; c < 4096; c += 256) v = table[c] = v >>> 8 ^ T[v & 0xFF];\n    }\n    var out = [];\n    for (n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' && typeof table.subarray == \"function\" ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n    return out;\n  }\n  var TT = slice_by_16_tables(T0);\n  var T1 = TT[0],\n    T2 = TT[1],\n    T3 = TT[2],\n    T4 = TT[3],\n    T5 = TT[4];\n  var T6 = TT[5],\n    T7 = TT[6],\n    T8 = TT[7],\n    T9 = TT[8],\n    Ta = TT[9];\n  var Tb = TT[10],\n    Tc = TT[11],\n    Td = TT[12],\n    Te = TT[13],\n    Tf = TT[14];\n  function crc32_bstr(bstr /*:string*/, seed /*:number*/) /*:number*/{\n    var C = seed /*:: ? 0 : 0 */ ^ -1;\n    for (var i = 0, L = bstr.length; i < L;) C = C >>> 8 ^ T0[(C ^ bstr.charCodeAt(i++)) & 0xFF];\n    return ~C;\n  }\n  function crc32_buf(B /*:Uint8Array|Array<number>*/, seed /*:number*/) /*:number*/{\n    var C = seed /*:: ? 0 : 0 */ ^ -1,\n      L = B.length - 15,\n      i = 0;\n    for (; i < L;) C = Tf[B[i++] ^ C & 255] ^ Te[B[i++] ^ C >> 8 & 255] ^ Td[B[i++] ^ C >> 16 & 255] ^ Tc[B[i++] ^ C >>> 24] ^ Tb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^ T7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^ T3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n    L += 15;\n    while (i < L) C = C >>> 8 ^ T0[(C ^ B[i++]) & 0xFF];\n    return ~C;\n  }\n  function crc32_str(str /*:string*/, seed /*:number*/) /*:number*/{\n    var C = seed ^ -1;\n    for (var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n      c = str.charCodeAt(i++);\n      if (c < 0x80) {\n        C = C >>> 8 ^ T0[(C ^ c) & 0xFF];\n      } else if (c < 0x800) {\n        C = C >>> 8 ^ T0[(C ^ (192 | c >> 6 & 31)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n      } else if (c >= 0xD800 && c < 0xE000) {\n        c = (c & 1023) + 64;\n        d = str.charCodeAt(i++) & 1023;\n        C = C >>> 8 ^ T0[(C ^ (240 | c >> 8 & 7)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c >> 2 & 63)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | d >> 6 & 15 | (c & 3) << 4)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | d & 63)) & 0xFF];\n      } else {\n        C = C >>> 8 ^ T0[(C ^ (224 | c >> 12 & 15)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c >> 6 & 63)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n      }\n    }\n    return ~C;\n  }\n  CRC32.table = T0;\n  CRC32.bstr = crc32_bstr;\n  CRC32.buf = crc32_buf;\n  CRC32.str = crc32_str;\n  return CRC32;\n}();\n/* [MS-CFB] v20171201 */\nvar CFB = /*#__PURE__*/function _CFB() {\n  var exports /*:CFBModule*/ = /*::(*/{} /*:: :any)*/;\n  exports.version = '1.2.2';\n  /* [MS-CFB] 2.6.4 */\n  function namecmp(l /*:string*/, r /*:string*/) /*:number*/{\n    var L = l.split(\"/\"),\n      R = r.split(\"/\");\n    for (var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n      if (c = L[i].length - R[i].length) return c;\n      if (L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n    }\n    return L.length - R.length;\n  }\n  function dirname(p /*:string*/) /*:string*/{\n    if (p.charAt(p.length - 1) == \"/\") return p.slice(0, -1).indexOf(\"/\") === -1 ? p : dirname(p.slice(0, -1));\n    var c = p.lastIndexOf(\"/\");\n    return c === -1 ? p : p.slice(0, c + 1);\n  }\n  function filename(p /*:string*/) /*:string*/{\n    if (p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n    var c = p.lastIndexOf(\"/\");\n    return c === -1 ? p : p.slice(c + 1);\n  }\n  /* -------------------------------------------------------------------------- */\n  /* DOS Date format:\n     high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n     add 1980 to stored year\n     stored second should be doubled\n  */\n\n  /* write JS date to buf as a DOS date */\n  function write_dos_date(buf /*:CFBlob*/, date /*:Date|string*/) {\n    if (typeof date === \"string\") date = new Date(date);\n    var hms /*:number*/ = date.getHours();\n    hms = hms << 6 | date.getMinutes();\n    hms = hms << 5 | date.getSeconds() >>> 1;\n    buf.write_shift(2, hms);\n    var ymd /*:number*/ = date.getFullYear() - 1980;\n    ymd = ymd << 4 | date.getMonth() + 1;\n    ymd = ymd << 5 | date.getDate();\n    buf.write_shift(2, ymd);\n  }\n\n  /* read four bytes from buf and interpret as a DOS date */\n  function parse_dos_date(buf /*:CFBlob*/) /*:Date*/{\n    var hms = buf.read_shift(2) & 0xFFFF;\n    var ymd = buf.read_shift(2) & 0xFFFF;\n    var val = new Date();\n    var d = ymd & 0x1F;\n    ymd >>>= 5;\n    var m = ymd & 0x0F;\n    ymd >>>= 4;\n    val.setMilliseconds(0);\n    val.setFullYear(ymd + 1980);\n    val.setMonth(m - 1);\n    val.setDate(d);\n    var S = hms & 0x1F;\n    hms >>>= 5;\n    var M = hms & 0x3F;\n    hms >>>= 6;\n    val.setHours(hms);\n    val.setMinutes(M);\n    val.setSeconds(S << 1);\n    return val;\n  }\n  function parse_extra_field(blob /*:CFBlob*/) /*:any*/{\n    prep_blob(blob, 0);\n    var o = /*::(*/{} /*:: :any)*/;\n    var flags = 0;\n    while (blob.l <= blob.length - 4) {\n      var type = blob.read_shift(2);\n      var sz = blob.read_shift(2),\n        tgt = blob.l + sz;\n      var p = {};\n      switch (type) {\n        /* UNIX-style Timestamps */\n        case 0x5455:\n          {\n            flags = blob.read_shift(1);\n            if (flags & 1) p.mtime = blob.read_shift(4);\n            /* for some reason, CD flag corresponds to LFH */\n            if (sz > 5) {\n              if (flags & 2) p.atime = blob.read_shift(4);\n              if (flags & 4) p.ctime = blob.read_shift(4);\n            }\n            if (p.mtime) p.mt = new Date(p.mtime * 1000);\n          }\n          break;\n        /* ZIP64 Extended Information Field */\n        case 0x0001:\n          {\n            var sz1 = blob.read_shift(4),\n              sz2 = blob.read_shift(4);\n            p.usz = sz2 * Math.pow(2, 32) + sz1;\n            sz1 = blob.read_shift(4);\n            sz2 = blob.read_shift(4);\n            p.csz = sz2 * Math.pow(2, 32) + sz1;\n            // NOTE: volume fields are skipped\n          }\n          break;\n      }\n      blob.l = tgt;\n      o[type] = p;\n    }\n    return o;\n  }\n  var fs /*:: = require('fs'); */;\n  function get_fs() {\n    return fs || (fs = _fs);\n  }\n  function parse(file /*:RawBytes*/, options /*:CFBReadOpts*/) /*:CFBContainer*/{\n    if (file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\n    if ((file[0] | 0x20) == 0x6d && (file[1] | 0x20) == 0x69) return parse_mad(file, options);\n    if (file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\n    var mver = 3;\n    var ssz = 512;\n    var nmfs = 0; // number of mini FAT sectors\n    var difat_sec_cnt = 0;\n    var dir_start = 0;\n    var minifat_start = 0;\n    var difat_start = 0;\n    var fat_addrs /*:Array<number>*/ = []; // locations of FAT sectors\n\n    /* [MS-CFB] 2.2 Compound File Header */\n    var blob /*:CFBlob*/ = /*::(*/file.slice(0, 512) /*:: :any)*/;\n    prep_blob(blob, 0);\n\n    /* major version */\n    var mv = check_get_mver(blob);\n    mver = mv[0];\n    switch (mver) {\n      case 3:\n        ssz = 512;\n        break;\n      case 4:\n        ssz = 4096;\n        break;\n      case 0:\n        if (mv[1] == 0) return parse_zip(file, options);\n      /* falls through */\n      default:\n        throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n    }\n\n    /* reprocess header */\n    if (ssz !== 512) {\n      blob = /*::(*/file.slice(0, ssz) /*:: :any)*/;\n      prep_blob(blob, 28 /* blob.l */);\n    }\n    /* Save header for final object */\n    var header /*:RawBytes*/ = file.slice(0, ssz);\n    check_shifts(blob, mver);\n\n    // Number of Directory Sectors\n    var dir_cnt /*:number*/ = blob.read_shift(4, 'i');\n    if (mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n    // Number of FAT Sectors\n    blob.l += 4;\n\n    // First Directory Sector Location\n    dir_start = blob.read_shift(4, 'i');\n\n    // Transaction Signature\n    blob.l += 4;\n\n    // Mini Stream Cutoff Size\n    blob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n    // First Mini FAT Sector Location\n    minifat_start = blob.read_shift(4, 'i');\n\n    // Number of Mini FAT Sectors\n    nmfs = blob.read_shift(4, 'i');\n\n    // First DIFAT sector location\n    difat_start = blob.read_shift(4, 'i');\n\n    // Number of DIFAT Sectors\n    difat_sec_cnt = blob.read_shift(4, 'i');\n\n    // Grab FAT Sector Locations\n    for (var q = -1, j = 0; j < 109; ++j) {\n      /* 109 = (512 - blob.l)>>>2; */\n      q = blob.read_shift(4, 'i');\n      if (q < 0) break;\n      fat_addrs[j] = q;\n    }\n\n    /** Break the file up into sectors */\n    var sectors /*:Array<RawBytes>*/ = sectorify(file, ssz);\n    sleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n    /** Chains */\n    var sector_list /*:SectorList*/ = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n    if (dir_start < sector_list.length) sector_list[dir_start].name = \"!Directory\";\n    if (nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\n    sector_list[fat_addrs[0]].name = \"!FAT\";\n    sector_list.fat_addrs = fat_addrs;\n    sector_list.ssz = ssz;\n\n    /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n    var files /*:CFBFiles*/ = {},\n      Paths /*:Array<string>*/ = [],\n      FileIndex /*:CFBFileIndex*/ = [],\n      FullPaths /*:Array<string>*/ = [];\n    read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n    build_full_paths(FileIndex, FullPaths, Paths);\n    Paths.shift();\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n\n    // $FlowIgnore\n    if (options && options.raw) o.raw = {\n      header: header,\n      sectors: sectors\n    };\n    return o;\n  } // parse\n\n  /* [MS-CFB] 2.2 Compound File Header -- read up to major version */\n  function check_get_mver(blob /*:CFBlob*/) /*:[number, number]*/{\n    if (blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n    // header signature 8\n    blob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n    // clsid 16\n    //blob.chk(HEADER_CLSID, 'CLSID: ');\n    blob.l += 16;\n\n    // minor version 2\n    var mver /*:number*/ = blob.read_shift(2, 'u');\n    return [blob.read_shift(2, 'u'), mver];\n  }\n  function check_shifts(blob /*:CFBlob*/, mver /*:number*/) /*:void*/{\n    var shift = 0x09;\n\n    // Byte Order\n    //blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n    blob.l += 2;\n\n    // Sector Shift\n    switch (shift = blob.read_shift(2)) {\n      case 0x09:\n        if (mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift);\n        break;\n      case 0x0c:\n        if (mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift);\n        break;\n      default:\n        throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n    }\n\n    // Mini Sector Shift\n    blob.chk('0600', 'Mini Sector Shift: ');\n\n    // Reserved\n    blob.chk('000000000000', 'Reserved: ');\n  }\n\n  /** Break the file up into sectors */\n  function sectorify(file /*:RawBytes*/, ssz /*:number*/) /*:Array<RawBytes>*/{\n    var nsectors = Math.ceil(file.length / ssz) - 1;\n    var sectors /*:Array<RawBytes>*/ = [];\n    for (var i = 1; i < nsectors; ++i) sectors[i - 1] = file.slice(i * ssz, (i + 1) * ssz);\n    sectors[nsectors - 1] = file.slice(nsectors * ssz);\n    return sectors;\n  }\n\n  /* [MS-CFB] 2.6.4 Red-Black Tree */\n  function build_full_paths(FI /*:CFBFileIndex*/, FP /*:Array<string>*/, Paths /*:Array<string>*/) /*:void*/{\n    var i = 0,\n      L = 0,\n      R = 0,\n      C = 0,\n      j = 0,\n      pl = Paths.length;\n    var dad /*:Array<number>*/ = [],\n      q /*:Array<number>*/ = [];\n    for (; i < pl; ++i) {\n      dad[i] = q[i] = i;\n      FP[i] = Paths[i];\n    }\n    for (; j < q.length; ++j) {\n      i = q[j];\n      L = FI[i].L;\n      R = FI[i].R;\n      C = FI[i].C;\n      if (dad[i] === i) {\n        if (L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n        if (R !== -1 && dad[R] !== R) dad[i] = dad[R];\n      }\n      if (C !== -1 /*NOSTREAM*/) dad[C] = i;\n      if (L !== -1 && i != dad[i]) {\n        dad[L] = dad[i];\n        if (q.lastIndexOf(L) < j) q.push(L);\n      }\n      if (R !== -1 && i != dad[i]) {\n        dad[R] = dad[i];\n        if (q.lastIndexOf(R) < j) q.push(R);\n      }\n    }\n    for (i = 1; i < pl; ++i) if (dad[i] === i) {\n      if (R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];else if (L !== -1 && dad[L] !== L) dad[i] = dad[L];\n    }\n    for (i = 1; i < pl; ++i) {\n      if (FI[i].type === 0 /* unknown */) continue;\n      j = i;\n      if (j != dad[j]) do {\n        j = dad[j];\n        FP[i] = FP[j] + \"/\" + FP[i];\n      } while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n      dad[i] = -1;\n    }\n    FP[0] += \"/\";\n    for (i = 1; i < pl; ++i) {\n      if (FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n    }\n  }\n  function get_mfat_entry(entry /*:CFBEntry*/, payload /*:RawBytes*/, mini /*:?RawBytes*/) /*:CFBlob*/{\n    var start = entry.start,\n      size = entry.size;\n    //return (payload.slice(start*MSSZ, start*MSSZ + size)/*:any*/);\n    var o = [];\n    var idx = start;\n    while (mini && size > 0 && idx >= 0) {\n      o.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n      size -= MSSZ;\n      idx = __readInt32LE(mini, idx * 4);\n    }\n    if (o.length === 0) return new_buf(0) /*:any*/;\n    return bconcat(o).slice(0, entry.size) /*:any*/;\n  }\n\n  /** Chase down the rest of the DIFAT chain to build a comprehensive list\n      DIFAT chains by storing the next sector number as the last 32 bits */\n  function sleuth_fat(idx /*:number*/, cnt /*:number*/, sectors /*:Array<RawBytes>*/, ssz /*:number*/, fat_addrs) /*:void*/{\n    var q /*:number*/ = ENDOFCHAIN;\n    if (idx === ENDOFCHAIN) {\n      if (cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n    } else if (idx !== -1 /*FREESECT*/) {\n      var sector = sectors[idx],\n        m = (ssz >>> 2) - 1;\n      if (!sector) return;\n      for (var i = 0; i < m; ++i) {\n        if ((q = __readInt32LE(sector, i * 4)) === ENDOFCHAIN) break;\n        fat_addrs.push(q);\n      }\n      if (cnt >= 1) sleuth_fat(__readInt32LE(sector, ssz - 4), cnt - 1, sectors, ssz, fat_addrs);\n    }\n  }\n\n  /** Follow the linked list of sectors for a given starting point */\n  function get_sector_list(sectors /*:Array<RawBytes>*/, start /*:number*/, fat_addrs /*:Array<number>*/, ssz /*:number*/, chkd /*:?Array<boolean>*/) /*:SectorEntry*/{\n    var buf /*:Array<number>*/ = [],\n      buf_chain /*:Array<any>*/ = [];\n    if (!chkd) chkd = [];\n    var modulus = ssz - 1,\n      j = 0,\n      jj = 0;\n    for (j = start; j >= 0;) {\n      chkd[j] = true;\n      buf[buf.length] = j;\n      buf_chain.push(sectors[j]);\n      var addr = fat_addrs[Math.floor(j * 4 / ssz)];\n      jj = j * 4 & modulus;\n      if (ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \" + ssz);\n      if (!sectors[addr]) break;\n      j = __readInt32LE(sectors[addr], jj);\n    }\n    return {\n      nodes: buf,\n      data: __toBuffer([buf_chain])\n    };\n  }\n\n  /** Chase down the sector linked lists */\n  function make_sector_list(sectors /*:Array<RawBytes>*/, dir_start /*:number*/, fat_addrs /*:Array<number>*/, ssz /*:number*/) /*:SectorList*/{\n    var sl = sectors.length,\n      sector_list /*:SectorList*/ = [] /*:any*/;\n    var chkd /*:Array<boolean>*/ = [],\n      buf /*:Array<number>*/ = [],\n      buf_chain /*:Array<RawBytes>*/ = [];\n    var modulus = ssz - 1,\n      i = 0,\n      j = 0,\n      k = 0,\n      jj = 0;\n    for (i = 0; i < sl; ++i) {\n      buf = [] /*:Array<number>*/;\n      k = i + dir_start;\n      if (k >= sl) k -= sl;\n      if (chkd[k]) continue;\n      buf_chain = [];\n      var seen = [];\n      for (j = k; j >= 0;) {\n        seen[j] = true;\n        chkd[j] = true;\n        buf[buf.length] = j;\n        buf_chain.push(sectors[j]);\n        var addr /*:number*/ = fat_addrs[Math.floor(j * 4 / ssz)];\n        jj = j * 4 & modulus;\n        if (ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \" + ssz);\n        if (!sectors[addr]) break;\n        j = __readInt32LE(sectors[addr], jj);\n        if (seen[j]) break;\n      }\n      sector_list[k] = {\n        nodes: buf,\n        data: __toBuffer([buf_chain])\n      } /*:SectorEntry*/;\n    }\n    return sector_list;\n  }\n\n  /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n  function read_directory(dir_start /*:number*/, sector_list /*:SectorList*/, sectors /*:Array<RawBytes>*/, Paths /*:Array<string>*/, nmfs, files, FileIndex, mini) {\n    var minifat_store = 0,\n      pl = Paths.length ? 2 : 0;\n    var sector = sector_list[dir_start].data;\n    var i = 0,\n      namelen = 0,\n      name;\n    for (; i < sector.length; i += 128) {\n      var blob /*:CFBlob*/ = /*::(*/sector.slice(i, i + 128) /*:: :any)*/;\n      prep_blob(blob, 64);\n      namelen = blob.read_shift(2);\n      name = __utf16le(blob, 0, namelen - pl);\n      Paths.push(name);\n      var o /*:CFBEntry*/ = {\n        name: name,\n        type: blob.read_shift(1),\n        color: blob.read_shift(1),\n        L: blob.read_shift(4, 'i'),\n        R: blob.read_shift(4, 'i'),\n        C: blob.read_shift(4, 'i'),\n        clsid: blob.read_shift(16),\n        state: blob.read_shift(4, 'i'),\n        start: 0,\n        size: 0\n      };\n      var ctime /*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n      if (ctime !== 0) o.ct = read_date(blob, blob.l - 8);\n      var mtime /*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n      if (mtime !== 0) o.mt = read_date(blob, blob.l - 8);\n      o.start = blob.read_shift(4, 'i');\n      o.size = blob.read_shift(4, 'i');\n      if (o.size < 0 && o.start < 0) {\n        o.size = o.type = 0;\n        o.start = ENDOFCHAIN;\n        o.name = \"\";\n      }\n      if (o.type === 5) {\n        /* root */\n        minifat_store = o.start;\n        if (nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n        /*minifat_size = o.size;*/\n      } else if (o.size >= 4096 /* MSCSZ */) {\n        o.storage = 'fat';\n        if (sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n        sector_list[o.start].name = o.name;\n        o.content = sector_list[o.start].data.slice(0, o.size) /*:any*/;\n      } else {\n        o.storage = 'minifat';\n        if (o.size < 0) o.size = 0;else if (minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n          o.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini] || {}).data);\n        }\n      }\n      if (o.content) prep_blob(o.content, 0);\n      files[name] = o;\n      FileIndex.push(o);\n    }\n  }\n  function read_date(blob /*:RawBytes|CFBlob*/, offset /*:number*/) /*:Date*/{\n    return new Date((__readUInt32LE(blob, offset + 4) / 1e7 * Math.pow(2, 32) + __readUInt32LE(blob, offset) / 1e7 - 11644473600) * 1000);\n  }\n  function read_file(filename /*:string*/, options /*:CFBReadOpts*/) {\n    get_fs();\n    return parse(fs.readFileSync(filename), options);\n  }\n  function read(blob /*:RawBytes|string*/, options /*:CFBReadOpts*/) {\n    var type = options && options.type;\n    if (!type) {\n      if (has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n    }\n    switch (type || \"base64\") {\n      case \"file\":\n        /*:: if(typeof blob !== 'string') throw \"Must pass a filename when type='file'\"; */return read_file(blob, options);\n      case \"base64\":\n        /*:: if(typeof blob !== 'string') throw \"Must pass a base64-encoded binary string when type='file'\"; */return parse(s2a(Base64_decode(blob)), options);\n      case \"binary\":\n        /*:: if(typeof blob !== 'string') throw \"Must pass a binary string when type='file'\"; */return parse(s2a(blob), options);\n    }\n    return parse( /*::typeof blob == 'string' ? new Buffer(blob, 'utf-8') : */blob, options);\n  }\n  function init_cfb(cfb /*:CFBContainer*/, opts /*:?any*/) /*:void*/{\n    var o = opts || {},\n      root = o.root || \"Root Entry\";\n    if (!cfb.FullPaths) cfb.FullPaths = [];\n    if (!cfb.FileIndex) cfb.FileIndex = [];\n    if (cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n    if (cfb.FullPaths.length === 0) {\n      cfb.FullPaths[0] = root + \"/\";\n      cfb.FileIndex[0] = {\n        name: root,\n        type: 5\n      } /*:any*/;\n    }\n    if (o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n    seed_cfb(cfb);\n  }\n  function seed_cfb(cfb /*:CFBContainer*/) /*:void*/{\n    var nm = \"\\u0001Sh33tJ5\";\n    if (CFB.find(cfb, \"/\" + nm)) return;\n    var p = new_buf(4);\n    p[0] = 55;\n    p[1] = p[3] = 50;\n    p[2] = 54;\n    cfb.FileIndex.push({\n      name: nm,\n      type: 2,\n      content: p,\n      size: 4,\n      L: 69,\n      R: 69,\n      C: 69\n    } /*:any*/);\n    cfb.FullPaths.push(cfb.FullPaths[0] + nm);\n    rebuild_cfb(cfb);\n  }\n  function rebuild_cfb(cfb /*:CFBContainer*/, f /*:?boolean*/) /*:void*/{\n    init_cfb(cfb);\n    var gc = false,\n      s = false;\n    for (var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n      var _file = cfb.FileIndex[i];\n      switch (_file.type) {\n        case 0:\n          if (s) gc = true;else {\n            cfb.FileIndex.pop();\n            cfb.FullPaths.pop();\n          }\n          break;\n        case 1:\n        case 2:\n        case 5:\n          s = true;\n          if (isNaN(_file.R * _file.L * _file.C)) gc = true;\n          if (_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n          break;\n        default:\n          gc = true;\n          break;\n      }\n    }\n    if (!gc && !f) return;\n    var now = new Date(1987, 1, 19),\n      j = 0;\n    // Track which names exist\n    var fullPaths = Object.create ? Object.create(null) : {};\n    var data /*:Array<[string, CFBEntry]>*/ = [];\n    for (i = 0; i < cfb.FullPaths.length; ++i) {\n      fullPaths[cfb.FullPaths[i]] = true;\n      if (cfb.FileIndex[i].type === 0) continue;\n      data.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n    }\n    for (i = 0; i < data.length; ++i) {\n      var dad = dirname(data[i][0]);\n      s = fullPaths[dad];\n      while (!s) {\n        while (dirname(dad) && !fullPaths[dirname(dad)]) dad = dirname(dad);\n        data.push([dad, {\n          name: filename(dad).replace(\"/\", \"\"),\n          type: 1,\n          clsid: HEADER_CLSID,\n          ct: now,\n          mt: now,\n          content: null\n        } /*:any*/]);\n\n        // Add name to set\n        fullPaths[dad] = true;\n        dad = dirname(data[i][0]);\n        s = fullPaths[dad];\n      }\n    }\n    data.sort(function (x, y) {\n      return namecmp(x[0], y[0]);\n    });\n    cfb.FullPaths = [];\n    cfb.FileIndex = [];\n    for (i = 0; i < data.length; ++i) {\n      cfb.FullPaths[i] = data[i][0];\n      cfb.FileIndex[i] = data[i][1];\n    }\n    for (i = 0; i < data.length; ++i) {\n      var elt = cfb.FileIndex[i];\n      var nm = cfb.FullPaths[i];\n      elt.name = filename(nm).replace(\"/\", \"\");\n      elt.L = elt.R = elt.C = -(elt.color = 1);\n      elt.size = elt.content ? elt.content.length : 0;\n      elt.start = 0;\n      elt.clsid = elt.clsid || HEADER_CLSID;\n      if (i === 0) {\n        elt.C = data.length > 1 ? 1 : -1;\n        elt.size = 0;\n        elt.type = 5;\n      } else if (nm.slice(-1) == \"/\") {\n        for (j = i + 1; j < data.length; ++j) if (dirname(cfb.FullPaths[j]) == nm) break;\n        elt.C = j >= data.length ? -1 : j;\n        for (j = i + 1; j < data.length; ++j) if (dirname(cfb.FullPaths[j]) == dirname(nm)) break;\n        elt.R = j >= data.length ? -1 : j;\n        elt.type = 1;\n      } else {\n        if (dirname(cfb.FullPaths[i + 1] || \"\") == dirname(nm)) elt.R = i + 1;\n        elt.type = 2;\n      }\n    }\n  }\n  function _write(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:RawBytes|string*/{\n    var _opts = options || {};\n    /* MAD is order-sensitive, skip rebuild and sort */\n    if (_opts.fileType == 'mad') return write_mad(cfb, _opts);\n    rebuild_cfb(cfb);\n    switch (_opts.fileType) {\n      case 'zip':\n        return write_zip(cfb, _opts);\n      //case 'mad': return write_mad(cfb, _opts);\n    }\n    var L = function (cfb /*:CFBContainer*/) /*:Array<number>*/{\n      var mini_size = 0,\n        fat_size = 0;\n      for (var i = 0; i < cfb.FileIndex.length; ++i) {\n        var file = cfb.FileIndex[i];\n        if (!file.content) continue;\n        var flen = file.content.length;\n        if (flen > 0) {\n          if (flen < 0x1000) mini_size += flen + 0x3F >> 6;else fat_size += flen + 0x01FF >> 9;\n        }\n      }\n      var dir_cnt = cfb.FullPaths.length + 3 >> 2;\n      var mini_cnt = mini_size + 7 >> 3;\n      var mfat_cnt = mini_size + 0x7F >> 7;\n      var fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n      var fat_cnt = fat_base + 0x7F >> 7;\n      var difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt - 109) / 0x7F);\n      while (fat_base + fat_cnt + difat_cnt + 0x7F >> 7 > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt - 109) / 0x7F);\n      var L = [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n      cfb.FileIndex[0].size = mini_size << 6;\n      L[7] = (cfb.FileIndex[0].start = L[0] + L[1] + L[2] + L[3] + L[4] + L[5]) + (L[6] + 7 >> 3);\n      return L;\n    }(cfb);\n    var o = new_buf(L[7] << 9);\n    var i = 0,\n      T = 0;\n    {\n      for (i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n      for (i = 0; i < 8; ++i) o.write_shift(2, 0);\n      o.write_shift(2, 0x003E);\n      o.write_shift(2, 0x0003);\n      o.write_shift(2, 0xFFFE);\n      o.write_shift(2, 0x0009);\n      o.write_shift(2, 0x0006);\n      for (i = 0; i < 3; ++i) o.write_shift(2, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, L[2]);\n      o.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n      o.write_shift(4, 0);\n      o.write_shift(4, 1 << 12);\n      o.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1 : ENDOFCHAIN);\n      o.write_shift(4, L[3]);\n      o.write_shift(-4, L[1] ? L[0] - 1 : ENDOFCHAIN);\n      o.write_shift(4, L[1]);\n      for (i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n    }\n    if (L[1]) {\n      for (T = 0; T < L[1]; ++T) {\n        for (; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n        o.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n      }\n    }\n    var chainit = function (w /*:number*/) /*:void*/{\n      for (T += w; i < T - 1; ++i) o.write_shift(-4, i + 1);\n      if (w) {\n        ++i;\n        o.write_shift(-4, ENDOFCHAIN);\n      }\n    };\n    T = i = 0;\n    for (T += L[1]; i < T; ++i) o.write_shift(-4, consts.DIFSECT);\n    for (T += L[2]; i < T; ++i) o.write_shift(-4, consts.FATSECT);\n    chainit(L[3]);\n    chainit(L[4]);\n    var j /*:number*/ = 0,\n      flen /*:number*/ = 0;\n    var file /*:CFBEntry*/ = cfb.FileIndex[0];\n    for (; j < cfb.FileIndex.length; ++j) {\n      file = cfb.FileIndex[j];\n      if (!file.content) continue;\n      /*:: if(file.content == null) throw new Error(\"unreachable\"); */\n      flen = file.content.length;\n      if (flen < 0x1000) continue;\n      file.start = T;\n      chainit(flen + 0x01FF >> 9);\n    }\n    chainit(L[6] + 7 >> 3);\n    while (o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n    T = i = 0;\n    for (j = 0; j < cfb.FileIndex.length; ++j) {\n      file = cfb.FileIndex[j];\n      if (!file.content) continue;\n      /*:: if(file.content == null) throw new Error(\"unreachable\"); */\n      flen = file.content.length;\n      if (!flen || flen >= 0x1000) continue;\n      file.start = T;\n      chainit(flen + 0x3F >> 6);\n    }\n    while (o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n    for (i = 0; i < L[4] << 2; ++i) {\n      var nm = cfb.FullPaths[i];\n      if (!nm || nm.length === 0) {\n        for (j = 0; j < 17; ++j) o.write_shift(4, 0);\n        for (j = 0; j < 3; ++j) o.write_shift(4, -1);\n        for (j = 0; j < 12; ++j) o.write_shift(4, 0);\n        continue;\n      }\n      file = cfb.FileIndex[i];\n      if (i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n      var _nm /*:string*/ = i === 0 && _opts.root || file.name;\n      if (_nm.length > 31) {\n        console.error(\"Name \" + _nm + \" will be truncated to \" + _nm.slice(0, 31));\n        _nm = _nm.slice(0, 31);\n      }\n      flen = 2 * (_nm.length + 1);\n      o.write_shift(64, _nm, \"utf16le\");\n      o.write_shift(2, flen);\n      o.write_shift(1, file.type);\n      o.write_shift(1, file.color);\n      o.write_shift(-4, file.L);\n      o.write_shift(-4, file.R);\n      o.write_shift(-4, file.C);\n      if (!file.clsid) for (j = 0; j < 4; ++j) o.write_shift(4, 0);else o.write_shift(16, file.clsid, \"hex\");\n      o.write_shift(4, file.state || 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, file.start);\n      o.write_shift(4, file.size);\n      o.write_shift(4, 0);\n    }\n    for (i = 1; i < cfb.FileIndex.length; ++i) {\n      file = cfb.FileIndex[i];\n      /*:: if(!file.content) throw new Error(\"unreachable\"); */\n      if (file.size >= 0x1000) {\n        o.l = file.start + 1 << 9;\n        if (has_buf && Buffer.isBuffer(file.content)) {\n          file.content.copy(o, o.l, 0, file.size);\n          // o is a 0-filled Buffer so just set next offset\n          o.l += file.size + 511 & -512;\n        } else {\n          for (j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n          for (; j & 0x1FF; ++j) o.write_shift(1, 0);\n        }\n      }\n    }\n    for (i = 1; i < cfb.FileIndex.length; ++i) {\n      file = cfb.FileIndex[i];\n      /*:: if(!file.content) throw new Error(\"unreachable\"); */\n      if (file.size > 0 && file.size < 0x1000) {\n        if (has_buf && Buffer.isBuffer(file.content)) {\n          file.content.copy(o, o.l, 0, file.size);\n          // o is a 0-filled Buffer so just set next offset\n          o.l += file.size + 63 & -64;\n        } else {\n          for (j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n          for (; j & 0x3F; ++j) o.write_shift(1, 0);\n        }\n      }\n    }\n    if (has_buf) {\n      o.l = o.length;\n    } else {\n      // When using Buffer, already 0-filled\n      while (o.l < o.length) o.write_shift(1, 0);\n    }\n    return o;\n  }\n  /* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\n  function find(cfb /*:CFBContainer*/, path /*:string*/) /*:?CFBEntry*/{\n    var UCFullPaths /*:Array<string>*/ = cfb.FullPaths.map(function (x) {\n      return x.toUpperCase();\n    });\n    var UCPaths /*:Array<string>*/ = UCFullPaths.map(function (x) {\n      var y = x.split(\"/\");\n      return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)];\n    });\n    var k /*:boolean*/ = false;\n    if (path.charCodeAt(0) === 47 /* \"/\" */) {\n      k = true;\n      path = UCFullPaths[0].slice(0, -1) + path;\n    } else k = path.indexOf(\"/\") !== -1;\n    var UCPath /*:string*/ = path.toUpperCase();\n    var w /*:number*/ = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n    if (w !== -1) return cfb.FileIndex[w];\n    var m = !UCPath.match(chr1);\n    UCPath = UCPath.replace(chr0, '');\n    if (m) UCPath = UCPath.replace(chr1, '!');\n    for (w = 0; w < UCFullPaths.length; ++w) {\n      if ((m ? UCFullPaths[w].replace(chr1, '!') : UCFullPaths[w]).replace(chr0, '') == UCPath) return cfb.FileIndex[w];\n      if ((m ? UCPaths[w].replace(chr1, '!') : UCPaths[w]).replace(chr0, '') == UCPath) return cfb.FileIndex[w];\n    }\n    return null;\n  }\n  /** CFB Constants */\n  var MSSZ = 64; /* Mini Sector Size = 1<<6 */\n  //var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n  /* 2.1 Compound File Sector Numbers and Types */\n  var ENDOFCHAIN = -2;\n  /* 2.2 Compound File Header */\n  var HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\n  var HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\n  var HEADER_CLSID = '00000000000000000000000000000000';\n  var consts = {\n    /* 2.1 Compund File Sector Numbers and Types */\n    MAXREGSECT: -6,\n    DIFSECT: -4,\n    FATSECT: -3,\n    ENDOFCHAIN: ENDOFCHAIN,\n    FREESECT: -1,\n    /* 2.2 Compound File Header */\n    HEADER_SIGNATURE: HEADER_SIGNATURE,\n    HEADER_MINOR_VERSION: '3e00',\n    MAXREGSID: -6,\n    NOSTREAM: -1,\n    HEADER_CLSID: HEADER_CLSID,\n    /* 2.6.1 Compound File Directory Entry */\n    EntryTypes: ['unknown', 'storage', 'stream', 'lockbytes', 'property', 'root']\n  };\n  function write_file(cfb /*:CFBContainer*/, filename /*:string*/, options /*:CFBWriteOpts*/) /*:void*/{\n    get_fs();\n    var o = _write(cfb, options);\n    /*:: if(typeof Buffer == 'undefined' || !Buffer.isBuffer(o) || !(o instanceof Buffer)) throw new Error(\"unreachable\"); */\n    fs.writeFileSync(filename, o);\n  }\n  function a2s(o /*:RawBytes*/) /*:string*/{\n    var out = new Array(o.length);\n    for (var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n    return out.join(\"\");\n  }\n  function write(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:RawBytes|string*/{\n    var o = _write(cfb, options);\n    switch (options && options.type || \"buffer\") {\n      case \"file\":\n        get_fs();\n        fs.writeFileSync(options.filename, o /*:any*/);\n        return o;\n      case \"binary\":\n        return typeof o == \"string\" ? o : a2s(o);\n      case \"base64\":\n        return Base64_encode(typeof o == \"string\" ? o : a2s(o));\n      case \"buffer\":\n        if (has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n      /* falls through */\n      case \"array\":\n        return typeof o == \"string\" ? s2a(o) : o;\n    }\n    return o;\n  }\n  /* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\n  var _zlib;\n  function use_zlib(zlib) {\n    try {\n      var InflateRaw = zlib.InflateRaw;\n      var InflRaw = new InflateRaw();\n      InflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n      if (InflRaw.bytesRead) _zlib = zlib;else throw new Error(\"zlib does not expose bytesRead\");\n    } catch (e) {\n      console.error(\"cannot use native zlib: \" + (e.message || e));\n    }\n  }\n  function _inflateRawSync(payload, usz) {\n    if (!_zlib) return _inflate(payload, usz);\n    var InflateRaw = _zlib.InflateRaw;\n    var InflRaw = new InflateRaw();\n    var out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n    payload.l += InflRaw.bytesRead;\n    return out;\n  }\n  function _deflateRawSync(payload) {\n    return _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n  }\n  var CLEN_ORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n  /*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\n  var LEN_LN = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];\n\n  /*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\n  var DST_LN = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];\n  function bit_swap_8(n) {\n    var t = (n << 1 | n << 11) & 0x22110 | (n << 5 | n << 15) & 0x88440;\n    return (t >> 16 | t >> 8 | t) & 0xFF;\n  }\n  var use_typed_arrays = typeof Uint8Array !== 'undefined';\n  var bitswap8 = use_typed_arrays ? new Uint8Array(1 << 8) : [];\n  for (var q = 0; q < 1 << 8; ++q) bitswap8[q] = bit_swap_8(q);\n  function bit_swap_n(n, b) {\n    var rev = bitswap8[n & 0xFF];\n    if (b <= 8) return rev >>> 8 - b;\n    rev = rev << 8 | bitswap8[n >> 8 & 0xFF];\n    if (b <= 16) return rev >>> 16 - b;\n    rev = rev << 8 | bitswap8[n >> 16 & 0xFF];\n    return rev >>> 24 - b;\n  }\n\n  /* helpers for unaligned bit reads */\n  function read_bits_2(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 6 ? 0 : buf[h + 1] << 8)) >>> w & 0x03;\n  }\n  function read_bits_3(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 5 ? 0 : buf[h + 1] << 8)) >>> w & 0x07;\n  }\n  function read_bits_4(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 4 ? 0 : buf[h + 1] << 8)) >>> w & 0x0F;\n  }\n  function read_bits_5(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 3 ? 0 : buf[h + 1] << 8)) >>> w & 0x1F;\n  }\n  function read_bits_7(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 1 ? 0 : buf[h + 1] << 8)) >>> w & 0x7F;\n  }\n\n  /* works up to n = 3 * 8 + 1 = 25 */\n  function read_bits_n(buf, bl, n) {\n    var w = bl & 7,\n      h = bl >>> 3,\n      f = (1 << n) - 1;\n    var v = buf[h] >>> w;\n    if (n < 8 - w) return v & f;\n    v |= buf[h + 1] << 8 - w;\n    if (n < 16 - w) return v & f;\n    v |= buf[h + 2] << 16 - w;\n    if (n < 24 - w) return v & f;\n    v |= buf[h + 3] << 24 - w;\n    return v & f;\n  }\n\n  /* helpers for unaligned bit writes */\n  function write_bits_3(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    if (w <= 5) buf[h] |= (v & 7) << w;else {\n      buf[h] |= v << w & 0xFF;\n      buf[h + 1] = (v & 7) >> 8 - w;\n    }\n    return bl + 3;\n  }\n  function write_bits_1(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    v = (v & 1) << w;\n    buf[h] |= v;\n    return bl + 1;\n  }\n  function write_bits_8(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    v <<= w;\n    buf[h] |= v & 0xFF;\n    v >>>= 8;\n    buf[h + 1] = v;\n    return bl + 8;\n  }\n  function write_bits_16(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    v <<= w;\n    buf[h] |= v & 0xFF;\n    v >>>= 8;\n    buf[h + 1] = v & 0xFF;\n    buf[h + 2] = v >>> 8;\n    return bl + 16;\n  }\n\n  /* until ArrayBuffer#realloc is a thing, fake a realloc */\n  function realloc(b, sz /*:number*/) {\n    var L = b.length,\n      M = 2 * L > sz ? 2 * L : sz + 5,\n      i = 0;\n    if (L >= sz) return b;\n    if (has_buf) {\n      var o = new_unsafe_buf(M);\n      // $FlowIgnore\n      if (b.copy) b.copy(o);else for (; i < b.length; ++i) o[i] = b[i];\n      return o;\n    } else if (use_typed_arrays) {\n      var a = new Uint8Array(M);\n      if (a.set) a.set(b);else for (; i < L; ++i) a[i] = b[i];\n      return a;\n    }\n    b.length = M;\n    return b;\n  }\n\n  /* zero-filled arrays for older browsers */\n  function zero_fill_array(n) {\n    var o = new Array(n);\n    for (var i = 0; i < n; ++i) o[i] = 0;\n    return o;\n  }\n\n  /* build tree (used for literals and lengths) */\n  function build_tree(clens, cmap, MAX /*:number*/) /*:number*/{\n    var maxlen = 1,\n      w = 0,\n      i = 0,\n      j = 0,\n      ccode = 0,\n      L = clens.length;\n    var bl_count = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n    for (i = 0; i < 32; ++i) bl_count[i] = 0;\n    for (i = L; i < MAX; ++i) clens[i] = 0;\n    L = clens.length;\n    var ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n    /* build code tree */\n    for (i = 0; i < L; ++i) {\n      bl_count[w = clens[i]]++;\n      if (maxlen < w) maxlen = w;\n      ctree[i] = 0;\n    }\n    bl_count[0] = 0;\n    for (i = 1; i <= maxlen; ++i) bl_count[i + 16] = ccode = ccode + bl_count[i - 1] << 1;\n    for (i = 0; i < L; ++i) {\n      ccode = clens[i];\n      if (ccode != 0) ctree[i] = bl_count[ccode + 16]++;\n    }\n\n    /* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n    var cleni = 0;\n    for (i = 0; i < L; ++i) {\n      cleni = clens[i];\n      if (cleni != 0) {\n        ccode = bit_swap_n(ctree[i], maxlen) >> maxlen - cleni;\n        for (j = (1 << maxlen + 4 - cleni) - 1; j >= 0; --j) cmap[ccode | j << cleni] = cleni & 15 | i << 4;\n      }\n    }\n    return maxlen;\n  }\n\n  /* Fixed Huffman */\n  var fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\n  var fix_dmap = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n  if (!use_typed_arrays) {\n    for (var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n    for (i = 0; i < 32; ++i) fix_dmap[i] = 0;\n  }\n  (function () {\n    var dlens /*:Array<number>*/ = [];\n    var i = 0;\n    for (; i < 32; i++) dlens.push(5);\n    build_tree(dlens, fix_dmap, 32);\n    var clens /*:Array<number>*/ = [];\n    i = 0;\n    for (; i <= 143; i++) clens.push(8);\n    for (; i <= 255; i++) clens.push(9);\n    for (; i <= 279; i++) clens.push(7);\n    for (; i <= 287; i++) clens.push(8);\n    build_tree(clens, fix_lmap, 288);\n  })();\n  var _deflateRaw = /*#__PURE__*/function _deflateRawIIFE() {\n    var DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n    var j = 0,\n      k = 0;\n    for (; j < DST_LN.length - 1; ++j) {\n      for (; k < DST_LN[j + 1]; ++k) DST_LN_RE[k] = j;\n    }\n    for (; k < 32768; ++k) DST_LN_RE[k] = 29;\n    var LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n    for (j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n      for (; k < LEN_LN[j + 1]; ++k) LEN_LN_RE[k] = j;\n    }\n    function write_stored(data, out) {\n      var boff = 0;\n      while (boff < data.length) {\n        var L = Math.min(0xFFFF, data.length - boff);\n        var h = boff + L == data.length;\n        out.write_shift(1, +h);\n        out.write_shift(2, L);\n        out.write_shift(2, ~L & 0xFFFF);\n        while (L-- > 0) out[out.l++] = data[boff++];\n      }\n      return out.l;\n    }\n\n    /* Fixed Huffman */\n    function write_huff_fixed(data, out) {\n      var bl = 0;\n      var boff = 0;\n      var addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n      while (boff < data.length) {\n        var L = /* data.length - boff; */Math.min(0xFFFF, data.length - boff);\n\n        /* write a stored block for short data */\n        if (L < 10) {\n          bl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n          if (bl & 7) bl += 8 - (bl & 7);\n          out.l = bl / 8 | 0;\n          out.write_shift(2, L);\n          out.write_shift(2, ~L & 0xFFFF);\n          while (L-- > 0) out[out.l++] = data[boff++];\n          bl = out.l * 8;\n          continue;\n        }\n        bl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n        var hash = 0;\n        while (L-- > 0) {\n          var d = data[boff];\n          hash = (hash << 5 ^ d) & 0x7FFF;\n          var match = -1,\n            mlen = 0;\n          if (match = addrs[hash]) {\n            match |= boff & ~0x7FFF;\n            if (match > boff) match -= 0x8000;\n            if (match < boff) while (data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n          }\n          if (mlen > 2) {\n            /* Copy Token  */\n            d = LEN_LN_RE[mlen];\n            if (d <= 22) bl = write_bits_8(out, bl, bitswap8[d + 1] >> 1) - 1;else {\n              write_bits_8(out, bl, 3);\n              bl += 5;\n              write_bits_8(out, bl, bitswap8[d - 23] >> 5);\n              bl += 3;\n            }\n            var len_eb = d < 8 ? 0 : d - 4 >> 2;\n            if (len_eb > 0) {\n              write_bits_16(out, bl, mlen - LEN_LN[d]);\n              bl += len_eb;\n            }\n            d = DST_LN_RE[boff - match];\n            bl = write_bits_8(out, bl, bitswap8[d] >> 3);\n            bl -= 3;\n            var dst_eb = d < 4 ? 0 : d - 2 >> 1;\n            if (dst_eb > 0) {\n              write_bits_16(out, bl, boff - match - DST_LN[d]);\n              bl += dst_eb;\n            }\n            for (var q = 0; q < mlen; ++q) {\n              addrs[hash] = boff & 0x7FFF;\n              hash = (hash << 5 ^ data[boff]) & 0x7FFF;\n              ++boff;\n            }\n            L -= mlen - 1;\n          } else {\n            /* Literal Token */\n            if (d <= 143) d = d + 48;else bl = write_bits_1(out, bl, 1);\n            bl = write_bits_8(out, bl, bitswap8[d]);\n            addrs[hash] = boff & 0x7FFF;\n            ++boff;\n          }\n        }\n        bl = write_bits_8(out, bl, 0) - 1;\n      }\n      out.l = (bl + 7) / 8 | 0;\n      return out.l;\n    }\n    return function _deflateRaw(data, out) {\n      if (data.length < 8) return write_stored(data, out);\n      return write_huff_fixed(data, out);\n    };\n  }();\n  function _deflate(data) {\n    var buf = new_buf(50 + Math.floor(data.length * 1.1));\n    var off = _deflateRaw(data, buf);\n    return buf.slice(0, off);\n  }\n  /* modified inflate function also moves original read head */\n\n  var dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n  var dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n  var dyn_cmap = use_typed_arrays ? new Uint16Array(128) : zero_fill_array(128);\n  var dyn_len_1 = 1,\n    dyn_len_2 = 1;\n\n  /* 5.5.3 Expanding Huffman Codes */\n  function dyn(data, boff /*:number*/) {\n    /* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n    var _HLIT = read_bits_5(data, boff) + 257;\n    boff += 5;\n    var _HDIST = read_bits_5(data, boff) + 1;\n    boff += 5;\n    var _HCLEN = read_bits_4(data, boff) + 4;\n    boff += 4;\n    var w = 0;\n\n    /* grab and store code lengths */\n    var clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n    var ctree = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    var maxlen = 1;\n    var bl_count = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n    var next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n    var L = clens.length; /* 19 */\n    for (var i = 0; i < _HCLEN; ++i) {\n      clens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n      if (maxlen < w) maxlen = w;\n      bl_count[w]++;\n      boff += 3;\n    }\n\n    /* build code tree */\n    var ccode = 0;\n    bl_count[0] = 0;\n    for (i = 1; i <= maxlen; ++i) next_code[i] = ccode = ccode + bl_count[i - 1] << 1;\n    for (i = 0; i < L; ++i) if ((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n    /* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n    var cleni = 0;\n    for (i = 0; i < L; ++i) {\n      cleni = clens[i];\n      if (cleni != 0) {\n        ccode = bitswap8[ctree[i]] >> 8 - cleni;\n        for (var j = (1 << 7 - cleni) - 1; j >= 0; --j) dyn_cmap[ccode | j << cleni] = cleni & 7 | i << 3;\n      }\n    }\n\n    /* read literal and dist codes at once */\n    var hcodes /*:Array<number>*/ = [];\n    maxlen = 1;\n    for (; hcodes.length < _HLIT + _HDIST;) {\n      ccode = dyn_cmap[read_bits_7(data, boff)];\n      boff += ccode & 7;\n      switch (ccode >>>= 3) {\n        case 16:\n          w = 3 + read_bits_2(data, boff);\n          boff += 2;\n          ccode = hcodes[hcodes.length - 1];\n          while (w-- > 0) hcodes.push(ccode);\n          break;\n        case 17:\n          w = 3 + read_bits_3(data, boff);\n          boff += 3;\n          while (w-- > 0) hcodes.push(0);\n          break;\n        case 18:\n          w = 11 + read_bits_7(data, boff);\n          boff += 7;\n          while (w-- > 0) hcodes.push(0);\n          break;\n        default:\n          hcodes.push(ccode);\n          if (maxlen < ccode) maxlen = ccode;\n          break;\n      }\n    }\n\n    /* build literal / length trees */\n    var h1 = hcodes.slice(0, _HLIT),\n      h2 = hcodes.slice(_HLIT);\n    for (i = _HLIT; i < 286; ++i) h1[i] = 0;\n    for (i = _HDIST; i < 30; ++i) h2[i] = 0;\n    dyn_len_1 = build_tree(h1, dyn_lmap, 286);\n    dyn_len_2 = build_tree(h2, dyn_dmap, 30);\n    return boff;\n  }\n\n  /* return [ data, bytesRead ] */\n  function inflate(data, usz /*:number*/) {\n    /* shortcircuit for empty buffer [0x03, 0x00] */\n    if (data[0] == 3 && !(data[1] & 0x3)) {\n      return [new_raw_buf(usz), 2];\n    }\n\n    /* bit offset */\n    var boff = 0;\n\n    /* header includes final bit and type bits */\n    var header = 0;\n    var outbuf = new_unsafe_buf(usz ? usz : 1 << 18);\n    var woff = 0;\n    var OL = outbuf.length >>> 0;\n    var max_len_1 = 0,\n      max_len_2 = 0;\n    while ((header & 1) == 0) {\n      header = read_bits_3(data, boff);\n      boff += 3;\n      if (header >>> 1 == 0) {\n        /* Stored block */\n        if (boff & 7) boff += 8 - (boff & 7);\n        /* 2 bytes sz, 2 bytes bit inverse */\n        var sz = data[boff >>> 3] | data[(boff >>> 3) + 1] << 8;\n        boff += 32;\n        /* push sz bytes */\n        if (sz > 0) {\n          if (!usz && OL < woff + sz) {\n            outbuf = realloc(outbuf, woff + sz);\n            OL = outbuf.length;\n          }\n          while (sz-- > 0) {\n            outbuf[woff++] = data[boff >>> 3];\n            boff += 8;\n          }\n        }\n        continue;\n      } else if (header >> 1 == 1) {\n        /* Fixed Huffman */\n        max_len_1 = 9;\n        max_len_2 = 5;\n      } else {\n        /* Dynamic Huffman */\n        boff = dyn(data, boff);\n        max_len_1 = dyn_len_1;\n        max_len_2 = dyn_len_2;\n      }\n      for (;;) {\n        // while(true) is apparently out of vogue in modern JS circles\n        if (!usz && OL < woff + 32767) {\n          outbuf = realloc(outbuf, woff + 32767);\n          OL = outbuf.length;\n        }\n        /* ingest code and move read head */\n        var bits = read_bits_n(data, boff, max_len_1);\n        var code = header >>> 1 == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n        boff += code & 15;\n        code >>>= 4;\n        /* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n        if ((code >>> 8 & 0xFF) === 0) outbuf[woff++] = code;else if (code == 256) break;else {\n          code -= 257;\n          var len_eb = code < 8 ? 0 : code - 4 >> 2;\n          if (len_eb > 5) len_eb = 0;\n          var tgt = woff + LEN_LN[code];\n          /* length extra bits */\n          if (len_eb > 0) {\n            tgt += read_bits_n(data, boff, len_eb);\n            boff += len_eb;\n          }\n\n          /* dist code */\n          bits = read_bits_n(data, boff, max_len_2);\n          code = header >>> 1 == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n          boff += code & 15;\n          code >>>= 4;\n          var dst_eb = code < 4 ? 0 : code - 2 >> 1;\n          var dst = DST_LN[code];\n          /* dist extra bits */\n          if (dst_eb > 0) {\n            dst += read_bits_n(data, boff, dst_eb);\n            boff += dst_eb;\n          }\n\n          /* in the common case, manual byte copy is faster than TA set / Buffer copy */\n          if (!usz && OL < tgt) {\n            outbuf = realloc(outbuf, tgt + 100);\n            OL = outbuf.length;\n          }\n          while (woff < tgt) {\n            outbuf[woff] = outbuf[woff - dst];\n            ++woff;\n          }\n        }\n      }\n    }\n    if (usz) return [outbuf, boff + 7 >>> 3];\n    return [outbuf.slice(0, woff), boff + 7 >>> 3];\n  }\n  function _inflate(payload, usz) {\n    var data = payload.slice(payload.l || 0);\n    var out = inflate(data, usz);\n    payload.l += out[1];\n    return out[0];\n  }\n  function warn_or_throw(wrn, msg) {\n    if (wrn) {\n      if (typeof console !== 'undefined') console.error(msg);\n    } else throw new Error(msg);\n  }\n  function parse_zip(file /*:RawBytes*/, options /*:CFBReadOpts*/) /*:CFBContainer*/{\n    var blob /*:CFBlob*/ = /*::(*/file /*:: :any)*/;\n    prep_blob(blob, 0);\n    var FileIndex /*:CFBFileIndex*/ = [],\n      FullPaths /*:Array<string>*/ = [];\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n    init_cfb(o, {\n      root: options.root\n    });\n\n    /* find end of central directory, start just after signature */\n    var i = blob.length - 4;\n    while ((blob[i] != 0x50 || blob[i + 1] != 0x4b || blob[i + 2] != 0x05 || blob[i + 3] != 0x06) && i >= 0) --i;\n    blob.l = i + 4;\n\n    /* parse end of central directory */\n    blob.l += 4;\n    var fcnt = blob.read_shift(2);\n    blob.l += 6;\n    var start_cd = blob.read_shift(4);\n\n    /* parse central directory */\n    blob.l = start_cd;\n    for (i = 0; i < fcnt; ++i) {\n      /* trust local file header instead of CD entry */\n      blob.l += 20;\n      var csz = blob.read_shift(4);\n      var usz = blob.read_shift(4);\n      var namelen = blob.read_shift(2);\n      var efsz = blob.read_shift(2);\n      var fcsz = blob.read_shift(2);\n      blob.l += 8;\n      var offset = blob.read_shift(4);\n      var EF = parse_extra_field( /*::(*/blob.slice(blob.l + namelen, blob.l + namelen + efsz) /*:: :any)*/);\n      blob.l += namelen + efsz + fcsz;\n      var L = blob.l;\n      blob.l = offset + 4;\n      /* ZIP64 lengths */\n      if (EF && EF[0x0001]) {\n        if ((EF[0x0001] || {}).usz) usz = EF[0x0001].usz;\n        if ((EF[0x0001] || {}).csz) csz = EF[0x0001].csz;\n      }\n      parse_local_file(blob, csz, usz, o, EF);\n      blob.l = L;\n    }\n    return o;\n  }\n\n  /* head starts just after local file header signature */\n  function parse_local_file(blob /*:CFBlob*/, csz /*:number*/, usz /*:number*/, o /*:CFBContainer*/, EF) {\n    /* [local file header] */\n    blob.l += 2;\n    var flags = blob.read_shift(2);\n    var meth = blob.read_shift(2);\n    var date = parse_dos_date(blob);\n    if (flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n    var crc32 = blob.read_shift(4);\n    var _csz = blob.read_shift(4);\n    var _usz = blob.read_shift(4);\n    var namelen = blob.read_shift(2);\n    var efsz = blob.read_shift(2);\n\n    // TODO: flags & (1<<11) // UTF8\n    var name = \"\";\n    for (var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n    if (efsz) {\n      var ef = parse_extra_field( /*::(*/blob.slice(blob.l, blob.l + efsz) /*:: :any)*/);\n      if ((ef[0x5455] || {}).mt) date = ef[0x5455].mt;\n      if ((ef[0x0001] || {}).usz) _usz = ef[0x0001].usz;\n      if ((ef[0x0001] || {}).csz) _csz = ef[0x0001].csz;\n      if (EF) {\n        if ((EF[0x5455] || {}).mt) date = EF[0x5455].mt;\n        if ((EF[0x0001] || {}).usz) _usz = ef[0x0001].usz;\n        if ((EF[0x0001] || {}).csz) _csz = ef[0x0001].csz;\n      }\n    }\n    blob.l += efsz;\n\n    /* [encryption header] */\n\n    /* [file data] */\n    var data = blob.slice(blob.l, blob.l + _csz);\n    switch (meth) {\n      case 8:\n        data = _inflateRawSync(blob, _usz);\n        break;\n      case 0:\n        break;\n      // TODO: scan for magic number\n      default:\n        throw new Error(\"Unsupported ZIP Compression method \" + meth);\n    }\n\n    /* [data descriptor] */\n    var wrn = false;\n    if (flags & 8) {\n      crc32 = blob.read_shift(4);\n      if (crc32 == 0x08074b50) {\n        crc32 = blob.read_shift(4);\n        wrn = true;\n      }\n      _csz = blob.read_shift(4);\n      _usz = blob.read_shift(4);\n    }\n    if (_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n    if (_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n    //var _crc32 = CRC32.buf(data, 0);\n    //if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n    cfb_add(o, name, data, {\n      unsafe: true,\n      mt: date\n    });\n  }\n  function write_zip(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:RawBytes*/{\n    var _opts = options || {};\n    var out = [],\n      cdirs = [];\n    var o /*:CFBlob*/ = new_buf(1);\n    var method = _opts.compression ? 8 : 0,\n      flags = 0;\n    var desc = false;\n    if (desc) flags |= 8;\n    var i = 0,\n      j = 0;\n    var start_cd = 0,\n      fcnt = 0;\n    var root = cfb.FullPaths[0],\n      fp = root,\n      fi = cfb.FileIndex[0];\n    var crcs = [];\n    var sz_cd = 0;\n    for (i = 1; i < cfb.FullPaths.length; ++i) {\n      fp = cfb.FullPaths[i].slice(root.length);\n      fi = cfb.FileIndex[i];\n      if (!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n      var start = start_cd;\n\n      /* TODO: CP437 filename */\n      var namebuf = new_buf(fp.length);\n      for (j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n      namebuf = namebuf.slice(0, namebuf.l);\n      crcs[fcnt] = typeof fi.content == \"string\" ? CRC32.bstr(fi.content, 0) : CRC32.buf( /*::((*/fi.content /*::||[]):any)*/, 0);\n      var outbuf = typeof fi.content == \"string\" ? s2a(fi.content) : fi.content /*::||[]*/;\n      if (method == 8) outbuf = _deflateRawSync(outbuf);\n\n      /* local file header */\n      o = new_buf(30);\n      o.write_shift(4, 0x04034b50);\n      o.write_shift(2, 20);\n      o.write_shift(2, flags);\n      o.write_shift(2, method);\n      /* TODO: last mod file time/date */\n      if (fi.mt) write_dos_date(o, fi.mt);else o.write_shift(4, 0);\n      o.write_shift(-4, flags & 8 ? 0 : crcs[fcnt]);\n      o.write_shift(4, flags & 8 ? 0 : outbuf.length);\n      o.write_shift(4, flags & 8 ? 0 : /*::(*/fi.content /*::||[])*/.length);\n      o.write_shift(2, namebuf.length);\n      o.write_shift(2, 0);\n      start_cd += o.length;\n      out.push(o);\n      start_cd += namebuf.length;\n      out.push(namebuf);\n\n      /* TODO: extra fields? */\n\n      /* TODO: encryption header ? */\n\n      start_cd += outbuf.length;\n      out.push(outbuf);\n\n      /* data descriptor */\n      if (flags & 8) {\n        o = new_buf(12);\n        o.write_shift(-4, crcs[fcnt]);\n        o.write_shift(4, outbuf.length);\n        o.write_shift(4, /*::(*/fi.content /*::||[])*/.length);\n        start_cd += o.l;\n        out.push(o);\n      }\n\n      /* central directory */\n      o = new_buf(46);\n      o.write_shift(4, 0x02014b50);\n      o.write_shift(2, 0);\n      o.write_shift(2, 20);\n      o.write_shift(2, flags);\n      o.write_shift(2, method);\n      o.write_shift(4, 0); /* TODO: last mod file time/date */\n      o.write_shift(-4, crcs[fcnt]);\n      o.write_shift(4, outbuf.length);\n      o.write_shift(4, /*::(*/fi.content /*::||[])*/.length);\n      o.write_shift(2, namebuf.length);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, start);\n      sz_cd += o.l;\n      cdirs.push(o);\n      sz_cd += namebuf.length;\n      cdirs.push(namebuf);\n      ++fcnt;\n    }\n\n    /* end of central directory */\n    o = new_buf(22);\n    o.write_shift(4, 0x06054b50);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, fcnt);\n    o.write_shift(2, fcnt);\n    o.write_shift(4, sz_cd);\n    o.write_shift(4, start_cd);\n    o.write_shift(2, 0);\n    return bconcat([bconcat(out /*:any*/), bconcat(cdirs), o] /*:any*/);\n  }\n  var ContentTypeMap = {\n    \"htm\": \"text/html\",\n    \"xml\": \"text/xml\",\n    \"gif\": \"image/gif\",\n    \"jpg\": \"image/jpeg\",\n    \"png\": \"image/png\",\n    \"mso\": \"application/x-mso\",\n    \"thmx\": \"application/vnd.ms-officetheme\",\n    \"sh33tj5\": \"application/octet-stream\"\n  } /*:any*/;\n  function get_content_type(fi /*:CFBEntry*/, fp /*:string*/) /*:string*/{\n    if (fi.ctype) return fi.ctype;\n    var ext = fi.name || \"\",\n      m = ext.match(/\\.([^\\.]+)$/);\n    if (m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n    if (fp) {\n      m = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n      if (m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n    }\n    return \"application/octet-stream\";\n  }\n\n  /* 76 character chunks TODO: intertwine encoding */\n  function write_base64_76(bstr /*:string*/) /*:string*/{\n    var data = Base64_encode(bstr);\n    var o = [];\n    for (var i = 0; i < data.length; i += 76) o.push(data.slice(i, i + 76));\n    return o.join(\"\\r\\n\") + \"\\r\\n\";\n  }\n\n  /*\n  Rules for QP:\n  \t- escape =## applies for all non-display characters and literal \"=\"\n  \t- space or tab at end of line must be encoded\n  \t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n  \t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n  \n  TODO: Some files from word appear to write line extensions with bare equals:\n  \n  ```\n  <table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n  =\"70%\"\n  ```\n  */\n  function write_quoted_printable(text /*:string*/) /*:string*/{\n    var encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function (c) {\n      var w = c.charCodeAt(0).toString(16).toUpperCase();\n      return \"=\" + (w.length == 1 ? \"0\" + w : w);\n    });\n    encoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n    if (encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n    encoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n    var o /*:Array<string>*/ = [],\n      split = encoded.split(\"\\r\\n\");\n    for (var si = 0; si < split.length; ++si) {\n      var str = split[si];\n      if (str.length == 0) {\n        o.push(\"\");\n        continue;\n      }\n      for (var i = 0; i < str.length;) {\n        var end = 76;\n        var tmp = str.slice(i, i + end);\n        if (tmp.charAt(end - 1) == \"=\") end--;else if (tmp.charAt(end - 2) == \"=\") end -= 2;else if (tmp.charAt(end - 3) == \"=\") end -= 3;\n        tmp = str.slice(i, i + end);\n        i += end;\n        if (i < str.length) tmp += \"=\";\n        o.push(tmp);\n      }\n    }\n    return o.join(\"\\r\\n\");\n  }\n  function parse_quoted_printable(data /*:Array<string>*/) /*:RawBytes*/{\n    var o = [];\n\n    /* unify long lines */\n    for (var di = 0; di < data.length; ++di) {\n      var line = data[di];\n      while (di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n      o.push(line);\n    }\n\n    /* decode */\n    for (var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function ($$) {\n      return String.fromCharCode(parseInt($$.slice(1), 16));\n    });\n    return s2a(o.join(\"\\r\\n\"));\n  }\n  function parse_mime(cfb /*:CFBContainer*/, data /*:Array<string>*/, root /*:string*/) /*:void*/{\n    var fname = \"\",\n      cte = \"\",\n      ctype = \"\",\n      fdata;\n    var di = 0;\n    for (; di < 10; ++di) {\n      var line = data[di];\n      if (!line || line.match(/^\\s*$/)) break;\n      var m = line.match(/^([^:]*?):\\s*([^\\s].*)$/);\n      if (m) switch (m[1].toLowerCase()) {\n        case \"content-location\":\n          fname = m[2].trim();\n          break;\n        case \"content-type\":\n          ctype = m[2].trim();\n          break;\n        case \"content-transfer-encoding\":\n          cte = m[2].trim();\n          break;\n      }\n    }\n    ++di;\n    switch (cte.toLowerCase()) {\n      case 'base64':\n        fdata = s2a(Base64_decode(data.slice(di).join(\"\")));\n        break;\n      case 'quoted-printable':\n        fdata = parse_quoted_printable(data.slice(di));\n        break;\n      default:\n        throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n    }\n    var file = cfb_add(cfb, fname.slice(root.length), fdata, {\n      unsafe: true\n    });\n    if (ctype) file.ctype = ctype;\n  }\n  function parse_mad(file /*:RawBytes*/, options /*:CFBReadOpts*/) /*:CFBContainer*/{\n    if (a2s(file.slice(0, 13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n    var root = options && options.root || \"\";\n    // $FlowIgnore\n    var data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n    var di = 0,\n      row = \"\";\n\n    /* if root is not specified, scan for the common prefix */\n    for (di = 0; di < data.length; ++di) {\n      row = data[di];\n      if (!/^Content-Location:/i.test(row)) continue;\n      row = row.slice(row.indexOf(\"file\"));\n      if (!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n      if (row.slice(0, root.length) == root) continue;\n      while (root.length > 0) {\n        root = root.slice(0, root.length - 1);\n        root = root.slice(0, root.lastIndexOf(\"/\") + 1);\n        if (row.slice(0, root.length) == root) break;\n      }\n    }\n    var mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n    if (!mboundary) throw new Error(\"MAD cannot find boundary\");\n    var boundary = \"--\" + (mboundary[1] || \"\");\n    var FileIndex /*:CFBFileIndex*/ = [],\n      FullPaths /*:Array<string>*/ = [];\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n    init_cfb(o);\n    var start_di,\n      fcnt = 0;\n    for (di = 0; di < data.length; ++di) {\n      var line = data[di];\n      if (line !== boundary && line !== boundary + \"--\") continue;\n      if (fcnt++) parse_mime(o, data.slice(start_di, di), root);\n      start_di = di;\n    }\n    return o;\n  }\n  function write_mad(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:string*/{\n    var opts = options || {};\n    var boundary = opts.boundary || \"SheetJS\";\n    boundary = '------=' + boundary;\n    var out = ['MIME-Version: 1.0', 'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"', '', '', ''];\n    var root = cfb.FullPaths[0],\n      fp = root,\n      fi = cfb.FileIndex[0];\n    for (var i = 1; i < cfb.FullPaths.length; ++i) {\n      fp = cfb.FullPaths[i].slice(root.length);\n      fi = cfb.FileIndex[i];\n      if (!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n      /* Normalize filename */\n      fp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function (c) {\n        return \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n      }).replace(/[\\u0080-\\uFFFF]/g, function (u) {\n        return \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n      });\n\n      /* Extract content as binary string */\n      var ca = fi.content;\n      // $FlowIgnore\n      var cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n      /* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n      var dispcnt = 0,\n        L = Math.min(1024, cstr.length),\n        cc = 0;\n      for (var csl = 0; csl <= L; ++csl) if ((cc = cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n      var qp = dispcnt >= L * 4 / 5;\n      out.push(boundary);\n      out.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n      out.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n      out.push('Content-Type: ' + get_content_type(fi, fp));\n      out.push('');\n      out.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n    }\n    out.push(boundary + '--\\r\\n');\n    return out.join(\"\\r\\n\");\n  }\n  function cfb_new(opts /*:?any*/) /*:CFBContainer*/{\n    var o /*:CFBContainer*/ = {} /*:any*/;\n    init_cfb(o, opts);\n    return o;\n  }\n  function cfb_add(cfb /*:CFBContainer*/, name /*:string*/, content /*:?RawBytes*/, opts /*:?any*/) /*:CFBEntry*/{\n    var unsafe = opts && opts.unsafe;\n    if (!unsafe) init_cfb(cfb);\n    var file = !unsafe && CFB.find(cfb, name);\n    if (!file) {\n      var fpath /*:string*/ = cfb.FullPaths[0];\n      if (name.slice(0, fpath.length) == fpath) fpath = name;else {\n        if (fpath.slice(-1) != \"/\") fpath += \"/\";\n        fpath = (fpath + name).replace(\"//\", \"/\");\n      }\n      file = {\n        name: filename(name),\n        type: 2\n      } /*:any*/;\n      cfb.FileIndex.push(file);\n      cfb.FullPaths.push(fpath);\n      if (!unsafe) CFB.utils.cfb_gc(cfb);\n    }\n    /*:: if(!file) throw new Error(\"unreachable\"); */\n    file.content = content /*:any*/;\n    file.size = content ? content.length : 0;\n    if (opts) {\n      if (opts.CLSID) file.clsid = opts.CLSID;\n      if (opts.mt) file.mt = opts.mt;\n      if (opts.ct) file.ct = opts.ct;\n    }\n    return file;\n  }\n  function cfb_del(cfb /*:CFBContainer*/, name /*:string*/) /*:boolean*/{\n    init_cfb(cfb);\n    var file = CFB.find(cfb, name);\n    if (file) for (var j = 0; j < cfb.FileIndex.length; ++j) if (cfb.FileIndex[j] == file) {\n      cfb.FileIndex.splice(j, 1);\n      cfb.FullPaths.splice(j, 1);\n      return true;\n    }\n    return false;\n  }\n  function cfb_mov(cfb /*:CFBContainer*/, old_name /*:string*/, new_name /*:string*/) /*:boolean*/{\n    init_cfb(cfb);\n    var file = CFB.find(cfb, old_name);\n    if (file) for (var j = 0; j < cfb.FileIndex.length; ++j) if (cfb.FileIndex[j] == file) {\n      cfb.FileIndex[j].name = filename(new_name);\n      cfb.FullPaths[j] = new_name;\n      return true;\n    }\n    return false;\n  }\n  function cfb_gc(cfb /*:CFBContainer*/) /*:void*/{\n    rebuild_cfb(cfb, true);\n  }\n  exports.find = find;\n  exports.read = read;\n  exports.parse = parse;\n  exports.write = write;\n  exports.writeFile = write_file;\n  exports.utils = {\n    cfb_new: cfb_new,\n    cfb_add: cfb_add,\n    cfb_del: cfb_del,\n    cfb_mov: cfb_mov,\n    cfb_gc: cfb_gc,\n    ReadShift: ReadShift,\n    CheckField: CheckField,\n    prep_blob: prep_blob,\n    bconcat: bconcat,\n    use_zlib: use_zlib,\n    _deflateRaw: _deflate,\n    _inflateRaw: _inflate,\n    consts: consts\n  };\n  return exports;\n}();\nvar _fs;\nfunction set_fs(fs) {\n  _fs = fs;\n}\n\n/* normalize data for blob ctor */\nfunction blobify(data) {\n  if (typeof data === \"string\") return s2ab(data);\n  if (Array.isArray(data)) return a2u(data);\n  return data;\n}\n/* write or download file */\nfunction write_dl(fname /*:string*/, payload /*:any*/, enc /*:?string*/) {\n  /*global IE_SaveFile, Blob, navigator, saveAs, document, File, chrome */\n  if (typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\n  if (typeof Deno !== 'undefined') {\n    /* in this spot, it's safe to assume typed arrays and TextEncoder/TextDecoder exist */\n    if (enc && typeof payload == \"string\") switch (enc) {\n      case \"utf8\":\n        payload = new TextEncoder(enc).encode(payload);\n        break;\n      case \"binary\":\n        payload = s2ab(payload);\n        break;\n      /* TODO: binary equivalent */\n      default:\n        throw new Error(\"Unsupported encoding \" + enc);\n    }\n    return Deno.writeFileSync(fname, payload);\n  }\n  var data = enc == \"utf8\" ? utf8write(payload) : payload;\n  /*:: declare var IE_SaveFile: any; */\n  if (typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n  if (typeof Blob !== 'undefined') {\n    var blob = new Blob([blobify(data)], {\n      type: \"application/octet-stream\"\n    });\n    /*:: declare var navigator: any; */\n    if (typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\n    /*:: declare var saveAs: any; */\n    if (typeof saveAs !== 'undefined') return saveAs(blob, fname);\n    if (typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n      var url = URL.createObjectURL(blob);\n      /*:: declare var chrome: any; */\n      if (typeof chrome === 'object' && typeof (chrome.downloads || {}).download == \"function\") {\n        if (URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function () {\n          URL.revokeObjectURL(url);\n        }, 60000);\n        return chrome.downloads.download({\n          url: url,\n          filename: fname,\n          saveAs: true\n        });\n      }\n      var a = document.createElement(\"a\");\n      if (a.download != null) {\n        /*:: if(document.body == null) throw new Error(\"unreachable\"); */\n        a.download = fname;\n        a.href = url;\n        document.body.appendChild(a);\n        a.click();\n        /*:: if(document.body == null) throw new Error(\"unreachable\"); */\n        document.body.removeChild(a);\n        if (URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function () {\n          URL.revokeObjectURL(url);\n        }, 60000);\n        return url;\n      }\n    } else if (typeof URL !== 'undefined' && !URL.createObjectURL && typeof chrome === 'object') {\n      /* manifest v3 extensions -- no URL.createObjectURL */\n      var b64 = \"data:application/octet-stream;base64,\" + Base64_encode_arr(new Uint8Array(blobify(data)));\n      return chrome.downloads.download({\n        url: b64,\n        filename: fname,\n        saveAs: true\n      });\n    }\n  }\n  // $FlowIgnore\n  if (typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try {\n    // extendscript\n    // $FlowIgnore\n    var out = File(fname);\n    out.open(\"w\");\n    out.encoding = \"binary\";\n    if (Array.isArray(payload)) payload = a2s(payload);\n    out.write(payload);\n    out.close();\n    return payload;\n  } catch (e) {\n    if (!e.message || e.message.indexOf(\"onstruct\") == -1) throw e;\n  }\n  throw new Error(\"cannot save file \" + fname);\n}\n\n/* read binary data from file */\nfunction read_binary(path /*:string*/) {\n  if (typeof _fs !== 'undefined') return _fs.readFileSync(path);\n  if (typeof Deno !== 'undefined') return Deno.readFileSync(path);\n  // $FlowIgnore\n  if (typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try {\n    // extendscript\n    // $FlowIgnore\n    var infile = File(path);\n    infile.open(\"r\");\n    infile.encoding = \"binary\";\n    var data = infile.read();\n    infile.close();\n    return data;\n  } catch (e) {\n    if (!e.message || e.message.indexOf(\"onstruct\") == -1) throw e;\n  }\n  throw new Error(\"Cannot access file \" + path);\n}\nfunction keys(o /*:any*/) /*:Array<any>*/{\n  var ks = Object.keys(o),\n    o2 = [];\n  for (var i = 0; i < ks.length; ++i) if (Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);\n  return o2;\n}\nfunction evert_key(obj /*:any*/, key /*:string*/) /*:EvertType*/{\n  var o = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) if (o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n  return o;\n}\nfunction evert(obj /*:any*/) /*:EvertType*/{\n  var o = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n  return o;\n}\nfunction evert_num(obj /*:any*/) /*:EvertNumType*/{\n  var o = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i], 10);\n  return o;\n}\nfunction evert_arr(obj /*:any*/) /*:EvertArrType*/{\n  var o /*:EvertArrType*/ = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) {\n    if (o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n    o[obj[K[i]]].push(K[i]);\n  }\n  return o;\n}\nvar dnthresh = /*#__PURE__*/Date.UTC(1899, 11, 30, 0, 0, 0); // -2209161600000\nvar dnthresh1 = /*#__PURE__*/Date.UTC(1899, 11, 31, 0, 0, 0); // -2209075200000\nvar dnthresh2 = /*#__PURE__*/Date.UTC(1904, 0, 1, 0, 0, 0); // -2209075200000\nfunction datenum(v /*:Date*/, date1904 /*:?boolean*/) /*:number*/{\n  var epoch = /*#__PURE__*/v.getTime();\n  var res = (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n  if (date1904) {\n    res -= 1462;\n    return res < -1402 ? res - 1 : res;\n  }\n  return res < 60 ? res - 1 : res;\n}\nfunction numdate(v /*:number*/) /*:Date|number*/{\n  if (v >= 60 && v < 61) return v;\n  var out = new Date();\n  out.setTime((v > 60 ? v : v + 1) * 24 * 60 * 60 * 1000 + dnthresh);\n  return out;\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n  var sec = 0,\n    mt = 0,\n    time = false;\n  var m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n  if (!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n  for (var i = 1; i != m.length; ++i) {\n    if (!m[i]) continue;\n    mt = 1;\n    if (i > 3) time = true;\n    switch (m[i].slice(m[i].length - 1)) {\n      case 'Y':\n        throw new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length - 1));\n      case 'D':\n        mt *= 24;\n      /* falls through */\n      case 'H':\n        mt *= 60;\n      /* falls through */\n      case 'M':\n        if (!time) throw new Error(\"Unsupported ISO Duration Field: M\");else mt *= 60;\n      /* falls through */\n      case 'S':\n        break;\n    }\n    sec += mt * parseInt(m[i], 10);\n  }\n  return sec;\n}\n\n/* Blame https://bugs.chromium.org/p/v8/issues/detail?id=7863 for the regexide */\nvar pdre1 = /^(\\d+):(\\d+)(:\\d+)?(\\.\\d+)?$/; // HH:MM[:SS[.UUU]]\nvar pdre2 = /^(\\d+)-(\\d+)-(\\d+)$/; // YYYY-mm-dd\nvar pdre3 = /^(\\d+)-(\\d+)-(\\d+)[T ](\\d+):(\\d+)(:\\d+)?(\\.\\d+)?$/; // YYYY-mm-dd(T or space)HH:MM[:SS[.UUU]], sans \"Z\"\n/* parses a date string as a UTC date */\nfunction parseDate(str /*:string*/, date1904 /*:boolean*/) /*:Date*/{\n  if (str instanceof Date) return str;\n  var m = str.match(pdre1);\n  if (m) return new Date((date1904 ? dnthresh2 : dnthresh1) + ((parseInt(m[1], 10) * 60 + parseInt(m[2], 10)) * 60 + (m[3] ? parseInt(m[3].slice(1), 10) : 0)) * 1000 + (m[4] ? parseInt((m[4] + \"000\").slice(1, 4), 10) : 0));\n  m = str.match(pdre2);\n  if (m) return new Date(Date.UTC(+m[1], +m[2] - 1, +m[3], 0, 0, 0, 0));\n  /* TODO: 1900-02-29T00:00:00.000 should return a flag to treat as a date code (affects xlml) */\n  m = str.match(pdre3);\n  if (m) return new Date(Date.UTC(+m[1], +m[2] - 1, +m[3], +m[4], +m[5], m[6] && parseInt(m[6].slice(1), 10) || 0, m[7] && parseInt((m[7] + \"0000\").slice(1, 4), 10) || 0));\n  var d = new Date(str);\n  return d;\n}\nfunction cc2str(arr /*:Array<number>*/, debomit) /*:string*/{\n  if (has_buf && Buffer.isBuffer(arr)) {\n    if (debomit && buf_utf16le) {\n      // TODO: temporary patch\n      if (arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(arr.slice(2).toString(\"utf16le\"));\n      if (arr[1] == 0xFE && arr[2] == 0xFF) return utf8write(utf16beread(arr.slice(2).toString(\"binary\")));\n    }\n    return arr.toString(\"binary\");\n  }\n  if (typeof TextDecoder !== \"undefined\") try {\n    if (debomit) {\n      if (arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(new TextDecoder(\"utf-16le\").decode(arr.slice(2)));\n      if (arr[0] == 0xFE && arr[1] == 0xFF) return utf8write(new TextDecoder(\"utf-16be\").decode(arr.slice(2)));\n    }\n    var rev = {\n      \"\\u20ac\": \"\\x80\",\n      \"\\u201a\": \"\\x82\",\n      \"\\u0192\": \"\\x83\",\n      \"\\u201e\": \"\\x84\",\n      \"\\u2026\": \"\\x85\",\n      \"\\u2020\": \"\\x86\",\n      \"\\u2021\": \"\\x87\",\n      \"\\u02c6\": \"\\x88\",\n      \"\\u2030\": \"\\x89\",\n      \"\\u0160\": \"\\x8a\",\n      \"\\u2039\": \"\\x8b\",\n      \"\\u0152\": \"\\x8c\",\n      \"\\u017d\": \"\\x8e\",\n      \"\\u2018\": \"\\x91\",\n      \"\\u2019\": \"\\x92\",\n      \"\\u201c\": \"\\x93\",\n      \"\\u201d\": \"\\x94\",\n      \"\\u2022\": \"\\x95\",\n      \"\\u2013\": \"\\x96\",\n      \"\\u2014\": \"\\x97\",\n      \"\\u02dc\": \"\\x98\",\n      \"\\u2122\": \"\\x99\",\n      \"\\u0161\": \"\\x9a\",\n      \"\\u203a\": \"\\x9b\",\n      \"\\u0153\": \"\\x9c\",\n      \"\\u017e\": \"\\x9e\",\n      \"\\u0178\": \"\\x9f\"\n    };\n    if (Array.isArray(arr)) arr = new Uint8Array(arr);\n    return new TextDecoder(\"latin1\").decode(arr).replace(/[€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ]/g, function (c) {\n      return rev[c] || c;\n    });\n  } catch (e) {}\n  var o = [],\n    i = 0;\n  // this cascade is for the browsers and runtimes of antiquity (and for modern runtimes that lack TextEncoder)\n  try {\n    for (i = 0; i < arr.length - 65536; i += 65536) o.push(String.fromCharCode.apply(0, arr.slice(i, i + 65536)));\n    o.push(String.fromCharCode.apply(0, arr.slice(i)));\n  } catch (e) {\n    try {\n      for (; i < arr.length - 16384; i += 16384) o.push(String.fromCharCode.apply(0, arr.slice(i, i + 16384)));\n      o.push(String.fromCharCode.apply(0, arr.slice(i)));\n    } catch (e) {\n      for (; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));\n    }\n  }\n  return o.join(\"\");\n}\nfunction dup(o /*:any*/) /*:any*/{\n  if (typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n  if (typeof o != 'object' || o == null) return o;\n  if (o instanceof Date) return new Date(o.getTime());\n  var out = {};\n  for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);\n  return out;\n}\nfunction fill(c /*:string*/, l /*:number*/) /*:string*/{\n  var o = \"\";\n  while (o.length < l) o += c;\n  return o;\n}\n\n/* TODO: stress test */\nfunction fuzzynum(s /*:string*/) /*:number*/{\n  var v /*:number*/ = Number(s);\n  if (!isNaN(v)) return isFinite(v) ? v : NaN;\n  if (!/\\d/.test(s)) return v;\n  var wt = 1;\n  var ss = s.replace(/([\\d]),([\\d])/g, \"$1$2\").replace(/[$]/g, \"\").replace(/[%]/g, function () {\n    wt *= 100;\n    return \"\";\n  });\n  if (!isNaN(v = Number(ss))) return v / wt;\n  ss = ss.replace(/[(]([^()]*)[)]/, function ($$, $1) {\n    wt = -wt;\n    return $1;\n  });\n  if (!isNaN(v = Number(ss))) return v / wt;\n  return v;\n}\n\n/* NOTE: Chrome rejects bare times like 1:23 PM */\nvar FDRE1 = /^(0?\\d|1[0-2])(?:|:([0-5]?\\d)(?:|(\\.\\d+)(?:|:([0-5]?\\d))|:([0-5]?\\d)(|\\.\\d+)))\\s+([ap])m?$/;\nvar FDRE2 = /^([01]?\\d|2[0-3])(?:|:([0-5]?\\d)(?:|(\\.\\d+)(?:|:([0-5]?\\d))|:([0-5]?\\d)(|\\.\\d+)))$/;\nvar FDISO = /^(\\d+)-(\\d+)-(\\d+)[T ](\\d+):(\\d+)(:\\d+)(\\.\\d+)?[Z]?$/; // YYYY-mm-dd(T or space)HH:MM:SS[.UUU][Z]\n\n/* TODO: 1904 adjustment */\nvar utc_append_works = new Date(\"6/9/69 00:00 UTC\").valueOf() == -17798400000;\nfunction fuzzytime1(M) /*:Date*/{\n  if (!M[2]) return new Date(Date.UTC(1899, 11, 31, +M[1] % 12 + (M[7] == \"p\" ? 12 : 0), 0, 0, 0));\n  if (M[3]) {\n    if (M[4]) return new Date(Date.UTC(1899, 11, 31, +M[1] % 12 + (M[7] == \"p\" ? 12 : 0), +M[2], +M[4], parseFloat(M[3]) * 1000));else return new Date(Date.UTC(1899, 11, 31, M[7] == \"p\" ? 12 : 0, +M[1], +M[2], parseFloat(M[3]) * 1000));\n  } else if (M[5]) return new Date(Date.UTC(1899, 11, 31, +M[1] % 12 + (M[7] == \"p\" ? 12 : 0), +M[2], +M[5], M[6] ? parseFloat(M[6]) * 1000 : 0));else return new Date(Date.UTC(1899, 11, 31, +M[1] % 12 + (M[7] == \"p\" ? 12 : 0), +M[2], 0, 0));\n}\nfunction fuzzytime2(M) /*:Date*/{\n  if (!M[2]) return new Date(Date.UTC(1899, 11, 31, +M[1], 0, 0, 0));\n  if (M[3]) {\n    if (M[4]) return new Date(Date.UTC(1899, 11, 31, +M[1], +M[2], +M[4], parseFloat(M[3]) * 1000));else return new Date(Date.UTC(1899, 11, 31, 0, +M[1], +M[2], parseFloat(M[3]) * 1000));\n  } else if (M[5]) return new Date(Date.UTC(1899, 11, 31, +M[1], +M[2], +M[5], M[6] ? parseFloat(M[6]) * 1000 : 0));else return new Date(Date.UTC(1899, 11, 31, +M[1], +M[2], 0, 0));\n}\nvar lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nfunction fuzzydate(s /*:string*/) /*:Date*/{\n  // See issue 2863 -- this is technically not supported in Excel but is otherwise useful\n  if (FDISO.test(s)) return s.indexOf(\"Z\") == -1 ? local_to_utc(new Date(s)) : new Date(s);\n  var lower = s.toLowerCase();\n  var lnos = lower.replace(/\\s+/g, \" \").trim();\n  var M = lnos.match(FDRE1);\n  if (M) return fuzzytime1(M);\n  M = lnos.match(FDRE2);\n  if (M) return fuzzytime2(M);\n  M = lnos.match(pdre3);\n  if (M) return new Date(Date.UTC(+M[1], +M[2] - 1, +M[3], +M[4], +M[5], M[6] && parseInt(M[6].slice(1), 10) || 0, M[7] && parseInt((M[7] + \"0000\").slice(1, 4), 10) || 0));\n  var o = new Date(utc_append_works && s.indexOf(\"UTC\") == -1 ? s + \" UTC\" : s),\n    n = new Date(NaN);\n  var y = o.getYear(),\n    m = o.getMonth(),\n    d = o.getDate();\n  if (isNaN(d)) return n;\n  if (lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {\n    lower = lower.replace(/[^a-z]/g, \"\").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/, \"\");\n    if (lower.length > 3 && lower_months.indexOf(lower) == -1) return n;\n  } else if (lower.replace(/[ap]m?/, \"\").match(/[a-z]/)) return n;\n  if (y < 0 || y > 8099 || s.match(/[^-0-9:,\\/\\\\\\ ]/)) return n;\n  return o;\n}\nvar split_regex = /*#__PURE__*/function () {\n  var safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\n  return function split_regex(str /*:string*/, re, def /*:string*/) /*:Array<string>*/{\n    if (safe_split_regex || typeof re == \"string\") return str.split(re);\n    var p = str.split(re),\n      o = [p[0]];\n    for (var i = 1; i < p.length; ++i) {\n      o.push(def);\n      o.push(p[i]);\n    }\n    return o;\n  };\n}();\nfunction utc_to_local(utc) {\n  return new Date(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate(), utc.getUTCHours(), utc.getUTCMinutes(), utc.getUTCSeconds(), utc.getUTCMilliseconds());\n}\nfunction local_to_utc(local) {\n  return new Date(Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds(), local.getMilliseconds()));\n}\nfunction remove_doctype(str) {\n  var preamble = str.slice(0, 1024);\n  var si = preamble.indexOf(\"<!DOCTYPE\");\n  if (si == -1) return str;\n  var m = str.match(/<[\\w]/);\n  if (!m) return str;\n  return str.slice(0, si) + str.slice(m.index);\n}\n\n/* str.match(/<!--[\\s\\S]*?-->/g) --> str_match_ng(str, \"<!--\", \"-->\") */\nfunction str_match_ng(str, s, e) {\n  var out = [];\n  var si = str.indexOf(s);\n  while (si > -1) {\n    var ei = str.indexOf(e, si + s.length);\n    if (ei == -1) break;\n    out.push(str.slice(si, ei + e.length));\n    si = str.indexOf(s, ei + e.length);\n  }\n  return out.length > 0 ? out : null;\n}\n\n/* str.replace(/<!--[\\s\\S]*?-->/g, \"\") --> str_remove_ng(str, \"<!--\", \"-->\") */\nfunction str_remove_ng(str, s, e) {\n  var out = [],\n    last = 0;\n  var si = str.indexOf(s);\n  if (si == -1) return str;\n  while (si > -1) {\n    out.push(str.slice(last, si));\n    var ei = str.indexOf(e, si + s.length);\n    if (ei == -1) break;\n    if ((si = str.indexOf(s, last = ei + e.length)) == -1) out.push(str.slice(last));\n  }\n  return out.join(\"\");\n}\n\n/* str.match(/<tag\\b[^>]*?>([\\s\\S]*?)</tag>/) --> str_match_xml(str, \"tag\") */\nvar xml_boundary = {\n  \" \": 1,\n  \"\\t\": 1,\n  \"\\r\": 1,\n  \"\\n\": 1,\n  \">\": 1\n};\nfunction str_match_xml(str, tag) {\n  var si = str.indexOf('<' + tag),\n    w = tag.length + 1,\n    L = str.length;\n  while (si >= 0 && si <= L - w && !xml_boundary[str.charAt(si + w)]) si = str.indexOf('<' + tag, si + 1);\n  if (si === -1) return null;\n  var sf = str.indexOf(\">\", si + tag.length);\n  if (sf === -1) return null;\n  var et = \"</\" + tag + \">\";\n  var ei = str.indexOf(et, sf);\n  if (ei == -1) return null;\n  return [str.slice(si, ei + et.length), str.slice(sf + 1, ei)];\n}\n\n/* str.match(/<(?:\\w+:)?tag\\b[^<>]*?>([\\s\\S]*?)<\\/(?:\\w+:)?tag>/) --> str_match_xml(str, \"tag\") */\nvar str_match_xml_ns = /*#__PURE__*/function () {\n  var str_match_xml_ns_cache = {};\n  return function str_match_xml_ns(str, tag) {\n    var res = str_match_xml_ns_cache[tag];\n    if (!res) str_match_xml_ns_cache[tag] = res = [new RegExp('<(?:\\\\w+:)?' + tag + '\\\\b[^<>]*>', \"g\"), new RegExp('</(?:\\\\w+:)?' + tag + '>', \"g\")];\n    res[0].lastIndex = res[1].lastIndex = 0;\n    var m = res[0].exec(str);\n    if (!m) return null;\n    var si = m.index;\n    var sf = res[0].lastIndex;\n    res[1].lastIndex = res[0].lastIndex;\n    m = res[1].exec(str);\n    if (!m) return null;\n    var ei = m.index;\n    var ef = res[1].lastIndex;\n    return [str.slice(si, ef), str.slice(sf, ei)];\n  };\n}();\n\n/* str.match(/<(?:\\w+:)?tag\\b[^<>]*?>([\\s\\S]*?)<\\/(?:\\w+:)?tag>/g) --> str_match_xml_ns_g(str, \"tag\") */\nvar str_match_xml_ns_g = /*#__PURE__*/function () {\n  var str_match_xml_ns_cache = {};\n  return function str_match_xml_ns(str, tag) {\n    var out = [];\n    var res = str_match_xml_ns_cache[tag];\n    if (!res) str_match_xml_ns_cache[tag] = res = [new RegExp('<(?:\\\\w+:)?' + tag + '\\\\b[^<>]*>', \"g\"), new RegExp('</(?:\\\\w+:)?' + tag + '>', \"g\")];\n    res[0].lastIndex = res[1].lastIndex = 0;\n    var m;\n    while (m = res[0].exec(str)) {\n      var si = m.index;\n      res[1].lastIndex = res[0].lastIndex;\n      m = res[1].exec(str);\n      if (!m) return null;\n      var ef = res[1].lastIndex;\n      out.push(str.slice(si, ef));\n      res[0].lastIndex = res[1].lastIndex;\n    }\n    return out.length == 0 ? null : out;\n  };\n}();\nvar str_remove_xml_ns_g = /*#__PURE__*/function () {\n  var str_remove_xml_ns_cache = {};\n  return function str_remove_xml_ns_g(str, tag) {\n    var out = [];\n    var res = str_remove_xml_ns_cache[tag];\n    if (!res) str_remove_xml_ns_cache[tag] = res = [new RegExp('<(?:\\\\w+:)?' + tag + '\\\\b[^<>]*>', \"g\"), new RegExp('</(?:\\\\w+:)?' + tag + '>', \"g\")];\n    res[0].lastIndex = res[1].lastIndex = 0;\n    var m;\n    var si = 0,\n      ef = 0;\n    while (m = res[0].exec(str)) {\n      si = m.index;\n      out.push(str.slice(ef, si));\n      ef = si;\n      res[1].lastIndex = res[0].lastIndex;\n      m = res[1].exec(str);\n      if (!m) return null;\n      ef = res[1].lastIndex;\n      res[0].lastIndex = res[1].lastIndex;\n    }\n    out.push(str.slice(ef));\n    return out.length == 0 ? \"\" : out.join(\"\");\n  };\n}();\n\n/* str.match(/<(?:\\w+:)?tag\\b[^>]*?>([\\s\\S]*?)<\\/(?:\\w+:)?tag>/gi) --> str_match_xml_ns_ig(str, \"tag\") */\nvar str_match_xml_ig = /*#__PURE__*/function () {\n  var str_match_xml_ns_cache = {};\n  return function str_match_xml_ns(str, tag) {\n    var out = [];\n    var res = str_match_xml_ns_cache[tag];\n    if (!res) str_match_xml_ns_cache[tag] = res = [new RegExp('<' + tag + '\\\\b[^<>]*>', \"ig\"), new RegExp('</' + tag + '>', \"ig\")];\n    res[0].lastIndex = res[1].lastIndex = 0;\n    var m;\n    while (m = res[0].exec(str)) {\n      var si = m.index;\n      res[1].lastIndex = res[0].lastIndex;\n      m = res[1].exec(str);\n      if (!m) return null;\n      var ef = res[1].lastIndex;\n      out.push(str.slice(si, ef));\n      res[0].lastIndex = res[1].lastIndex;\n    }\n    return out.length == 0 ? null : out;\n  };\n}();\nfunction getdatastr(data) /*:?string*/{\n  if (!data) return null;\n  if (data.content && data.type) return cc2str(data.content, true);\n  if (data.data) return debom(data.data);\n  if (data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n  if (data.asBinary) return debom(data.asBinary());\n  if (data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(), 0)));\n  return null;\n}\nfunction getdatabin(data) {\n  if (!data) return null;\n  if (data.data) return char_codes(data.data);\n  if (data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n  if (data._data && data._data.getContent) {\n    var o = data._data.getContent();\n    if (typeof o == \"string\") return char_codes(o);\n    return Array.prototype.slice.call(o);\n  }\n  if (data.content && data.type) return data.content;\n  return null;\n}\nfunction getdata(data) {\n  return data && data.name.slice(-4) === \".bin\" ? getdatabin(data) : getdatastr(data);\n}\n\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n/* OASIS does not comment on filename case sensitivity */\nfunction safegetzipfile(zip, file /*:string*/) {\n  var k = zip.FullPaths || keys(zip.files);\n  var f = file.toLowerCase().replace(/[\\/]/g, '\\\\'),\n    g = f.replace(/\\\\/g, '\\/');\n  for (var i = 0; i < k.length; ++i) {\n    var n = k[i].replace(/^Root Entry[\\/]/, \"\").toLowerCase();\n    if (f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];\n  }\n  return null;\n}\nfunction getzipfile(zip, file /*:string*/) {\n  var o = safegetzipfile(zip, file);\n  if (o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n  return o;\n}\nfunction getzipdata(zip, file /*:string*/, safe /*:?boolean*/) /*:any*/{\n  if (!safe) return getdata(getzipfile(zip, file));\n  if (!file) return null;\n  try {\n    return getzipdata(zip, file);\n  } catch (e) {\n    return null;\n  }\n}\nfunction getzipstr(zip, file /*:string*/, safe /*:?boolean*/) /*:?string*/{\n  if (!safe) return getdatastr(getzipfile(zip, file));\n  if (!file) return null;\n  try {\n    return getzipstr(zip, file);\n  } catch (e) {\n    return null;\n  }\n}\nfunction getzipbin(zip, file /*:string*/, safe /*:?boolean*/) /*:any*/{\n  if (!safe) return getdatabin(getzipfile(zip, file));\n  if (!file) return null;\n  try {\n    return getzipbin(zip, file);\n  } catch (e) {\n    return null;\n  }\n}\nfunction zipentries(zip) {\n  var k = zip.FullPaths || keys(zip.files),\n    o = [];\n  for (var i = 0; i < k.length; ++i) if (k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\\/]/, \"\"));\n  return o.sort();\n}\nfunction zip_add_file(zip, path, content) {\n  if (zip.FullPaths) {\n    if (typeof content == \"string\") {\n      var res;\n      if (has_buf) res = Buffer_from(content);\n      /* TODO: investigate performance in Edge 13 */\n      //else if(typeof TextEncoder !== \"undefined\") res = new TextEncoder().encode(content);\n      else res = utf8decode(content);\n      return CFB.utils.cfb_add(zip, path, res);\n    }\n    CFB.utils.cfb_add(zip, path, content);\n  } else zip.file(path, content);\n}\nfunction zip_new() {\n  return CFB.utils.cfb_new();\n}\nfunction zip_read(d, o) {\n  switch (o.type) {\n    case \"base64\":\n      return CFB.read(d, {\n        type: \"base64\"\n      });\n    case \"binary\":\n      return CFB.read(d, {\n        type: \"binary\"\n      });\n    case \"buffer\":\n    case \"array\":\n      return CFB.read(d, {\n        type: \"buffer\"\n      });\n  }\n  throw new Error(\"Unrecognized type \" + o.type);\n}\nfunction resolve_path(path /*:string*/, base /*:string*/) /*:string*/{\n  if (path.charAt(0) == \"/\") return path.slice(1);\n  var result = base.split('/');\n  if (base.slice(-1) != \"/\") result.pop(); // folder path\n  var target = path.split('/');\n  while (target.length !== 0) {\n    var step = target.shift();\n    if (step === '..') result.pop();else if (step !== '.') result.push(step);\n  }\n  return result.join('/');\n}\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\nvar attregexg = /\\s([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\nvar tagregex1 = /<[\\/\\?]?[a-zA-Z0-9:_-]+(?:\\s+[^\"\\s?<>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\"<>\\s=]+))*\\s*[\\/\\?]?>/mg,\n  tagregex2 = /<[^<>]*>/g;\nvar tagregex = /*#__PURE__*/XML_HEADER.match(tagregex1) ? tagregex1 : tagregex2;\nvar nsregex = /<\\w*:/,\n  nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag /*:string*/, skip_root /*:?boolean*/, skip_LC /*:?boolean*/) /*:any*/{\n  var z = {} /*:any*/;\n  var eq = 0,\n    c = 0;\n  for (; eq !== tag.length; ++eq) if ((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n  if (!skip_root) z[0] = tag.slice(0, eq);\n  if (eq === tag.length) return z;\n  var m = tag.match(attregexg),\n    j = 0,\n    v = \"\",\n    i = 0,\n    q = \"\",\n    cc = \"\",\n    quot = 1;\n  if (m) for (i = 0; i != m.length; ++i) {\n    cc = m[i].slice(1);\n    for (c = 0; c != cc.length; ++c) if (cc.charCodeAt(c) === 61) break;\n    q = cc.slice(0, c).trim();\n    while (cc.charCodeAt(c + 1) == 32) ++c;\n    quot = (eq = cc.charCodeAt(c + 1)) == 34 || eq == 39 ? 1 : 0;\n    v = cc.slice(c + 1 + quot, cc.length - quot);\n    for (j = 0; j != q.length; ++j) if (q.charCodeAt(j) === 58) break;\n    if (j === q.length) {\n      if (q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n      z[q] = v;\n      if (!skip_LC) z[q.toLowerCase()] = v;\n    } else {\n      var k = (j === 5 && q.slice(0, 5) === \"xmlns\" ? \"xmlns\" : \"\") + q.slice(j + 1);\n      if (z[k] && q.slice(j - 3, j) == \"ext\") continue; // from ods\n      z[k] = v;\n      if (!skip_LC) z[k.toLowerCase()] = v;\n    }\n  }\n  return z;\n}\nfunction strip_ns(x /*:string*/) /*:string*/{\n  return x.replace(nsregex2, \"<$1\");\n}\nvar encodings = {\n  '&quot;': '\"',\n  '&apos;': \"'\",\n  '&gt;': '>',\n  '&lt;': '<',\n  '&amp;': '&'\n};\nvar rencoding = /*#__PURE__*/evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar unescapexml /*:StringConv*/ = /*#__PURE__*/function () {\n  /* 22.4.2.4 bstr (Basic String) */\n  var encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/ig,\n    coderegex = /_x([\\da-fA-F]{4})_/ig;\n  function raw_unescapexml(text /*:string*/) /*:string*/{\n    var s = text + '',\n      i = s.indexOf(\"<![CDATA[\");\n    if (i == -1) return s.replace(encregex, function ($$, $1) {\n      return encodings[$$] || String.fromCharCode(parseInt($1, $$.indexOf(\"x\") > -1 ? 16 : 10)) || $$;\n    }).replace(coderegex, function (m, c) {\n      return String.fromCharCode(parseInt(c, 16));\n    });\n    var j = s.indexOf(\"]]>\");\n    return raw_unescapexml(s.slice(0, i)) + s.slice(i + 9, j) + raw_unescapexml(s.slice(j + 3));\n  }\n  return function unescapexml(text /*:string*/, xlsx /*:boolean*/) {\n    var out = raw_unescapexml(text);\n    return xlsx ? out.replace(/\\r\\n/g, \"\\n\") : out;\n  };\n}();\nvar decregex = /[&<>'\"]/g,\n  charegex = /[\\u0000-\\u0008\\u000b-\\u001f\\uFFFE-\\uFFFF]/g;\nfunction escapexml(text /*:string*/) /*:string*/{\n  var s = text + '';\n  return s.replace(decregex, function (y) {\n    return rencoding[y];\n  }).replace(charegex, function (s) {\n    return \"_x\" + (\"000\" + s.charCodeAt(0).toString(16)).slice(-4) + \"_\";\n  });\n}\nfunction escapexmltag(text /*:string*/) /*:string*/{\n  return escapexml(text).replace(/ /g, \"_x0020_\");\n}\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\nfunction escapehtml(text /*:string*/) /*:string*/{\n  var s = text + '';\n  return s.replace(decregex, function (y) {\n    return rencoding[y];\n  }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex, function (s) {\n    return \"&#x\" + (\"000\" + s.charCodeAt(0).toString(16)).slice(-4) + \";\";\n  });\n}\nfunction escapexlml(text /*:string*/) /*:string*/{\n  var s = text + '';\n  return s.replace(decregex, function (y) {\n    return rencoding[y];\n  }).replace(htmlcharegex, function (s) {\n    return \"&#x\" + s.charCodeAt(0).toString(16).toUpperCase() + \";\";\n  });\n}\n\n/* TODO: handle codepages */\nvar xlml_fixstr /*:StringConv*/ = /*#__PURE__*/function () {\n  var entregex = /&#(\\d+);/g;\n  function entrepl($$ /*:string*/, $1 /*:string*/) /*:string*/{\n    return String.fromCharCode(parseInt($1, 10));\n  }\n  return function xlml_fixstr(str /*:string*/) /*:string*/{\n    return str.replace(entregex, entrepl);\n  };\n}();\nfunction xlml_unfixstr(str /*:string*/) /*:string*/{\n  return str.replace(/(\\r\\n|[\\r\\n])/g, \"\\&#10;\");\n}\n\n/* note: xsd:boolean valid values: true / 1 / false / 0 */\nfunction parsexmlbool(value /*:any*/) /*:boolean*/{\n  switch (value) {\n    case 1:\n    case true:\n    case '1':\n    case 'true':\n      return true;\n    case 0:\n    case false:\n    case '0':\n    case 'false':\n      return false;\n    //default: throw new Error(\"Invalid xsd:boolean \" + value);\n  }\n  return false;\n}\nfunction utf8reada(orig /*:string*/) /*:string*/{\n  var out = \"\",\n    i = 0,\n    c = 0,\n    d = 0,\n    e = 0,\n    f = 0,\n    w = 0;\n  while (i < orig.length) {\n    c = orig.charCodeAt(i++);\n    if (c < 128) {\n      out += String.fromCharCode(c);\n      continue;\n    }\n    d = orig.charCodeAt(i++);\n    if (c > 191 && c < 224) {\n      f = (c & 31) << 6;\n      f |= d & 63;\n      out += String.fromCharCode(f);\n      continue;\n    }\n    e = orig.charCodeAt(i++);\n    if (c < 240) {\n      out += String.fromCharCode((c & 15) << 12 | (d & 63) << 6 | e & 63);\n      continue;\n    }\n    f = orig.charCodeAt(i++);\n    w = ((c & 7) << 18 | (d & 63) << 12 | (e & 63) << 6 | f & 63) - 65536;\n    out += String.fromCharCode(0xD800 + (w >>> 10 & 1023));\n    out += String.fromCharCode(0xDC00 + (w & 1023));\n  }\n  return out;\n}\nfunction utf8readb(data) {\n  var out = new_raw_buf(2 * data.length),\n    w,\n    i,\n    j = 1,\n    k = 0,\n    ww = 0,\n    c;\n  for (i = 0; i < data.length; i += j) {\n    j = 1;\n    if ((c = data.charCodeAt(i)) < 128) w = c;else if (c < 224) {\n      w = (c & 31) * 64 + (data.charCodeAt(i + 1) & 63);\n      j = 2;\n    } else if (c < 240) {\n      w = (c & 15) * 4096 + (data.charCodeAt(i + 1) & 63) * 64 + (data.charCodeAt(i + 2) & 63);\n      j = 3;\n    } else {\n      j = 4;\n      w = (c & 7) * 262144 + (data.charCodeAt(i + 1) & 63) * 4096 + (data.charCodeAt(i + 2) & 63) * 64 + (data.charCodeAt(i + 3) & 63);\n      w -= 65536;\n      ww = 0xD800 + (w >>> 10 & 1023);\n      w = 0xDC00 + (w & 1023);\n    }\n    if (ww !== 0) {\n      out[k++] = ww & 255;\n      out[k++] = ww >>> 8;\n      ww = 0;\n    }\n    out[k++] = w % 256;\n    out[k++] = w >>> 8;\n  }\n  return out.slice(0, k).toString('ucs2');\n}\nfunction utf8readc(data) {\n  return Buffer_from(data, 'binary').toString('utf8');\n}\nvar utf8corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\nvar utf8read = has_buf && ( /*#__PURE__*/utf8readc(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readc || /*#__PURE__*/utf8readb(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readb) || utf8reada;\nvar utf8write /*:StringConv*/ = has_buf ? function (data) {\n  return Buffer_from(data, 'utf8').toString(\"binary\");\n} : function (orig /*:string*/) /*:string*/{\n  var out /*:Array<string>*/ = [],\n    i = 0,\n    c = 0,\n    d = 0;\n  while (i < orig.length) {\n    c = orig.charCodeAt(i++);\n    switch (true) {\n      case c < 128:\n        out.push(String.fromCharCode(c));\n        break;\n      case c < 2048:\n        out.push(String.fromCharCode(192 + (c >> 6)));\n        out.push(String.fromCharCode(128 + (c & 63)));\n        break;\n      case c >= 55296 && c < 57344:\n        c -= 55296;\n        d = orig.charCodeAt(i++) - 56320 + (c << 10);\n        out.push(String.fromCharCode(240 + (d >> 18 & 7)));\n        out.push(String.fromCharCode(144 + (d >> 12 & 63)));\n        out.push(String.fromCharCode(128 + (d >> 6 & 63)));\n        out.push(String.fromCharCode(128 + (d & 63)));\n        break;\n      default:\n        out.push(String.fromCharCode(224 + (c >> 12)));\n        out.push(String.fromCharCode(128 + (c >> 6 & 63)));\n        out.push(String.fromCharCode(128 + (c & 63)));\n    }\n  }\n  return out.join(\"\");\n};\nvar htmldecode /*:{(s:string):string}*/ = /*#__PURE__*/function () {\n  var entities /*:Array<[RegExp, string]>*/ = [['nbsp', ' '], ['middot', '·'], ['quot', '\"'], ['apos', \"'\"], ['gt', '>'], ['lt', '<'], ['amp', '&']].map(function (x /*:[string, string]*/) {\n    return [new RegExp('&' + x[0] + ';', \"ig\"), x[1]];\n  });\n  return function htmldecode(str /*:string*/) /*:string*/{\n    var o = str\n    // Remove new lines and spaces from start of content\n    .replace(/^[\\t\\n\\r ]+/, \"\")\n    // Remove new lines and spaces from end of content\n    .replace(/(^|[^\\t\\n\\r ])[\\t\\n\\r ]+$/, \"$1\")\n    // Added line which removes any white space characters after and before html tags\n    .replace(/>\\s+/g, \">\").replace(/\\b\\s+</g, \"<\")\n    // Replace remaining new lines and spaces with space\n    .replace(/[\\t\\n\\r ]+/g, \" \")\n    // Replace <br> tags with new lines\n    .replace(/<\\s*[bB][rR]\\s*\\/?>/g, \"\\n\")\n    // Strip HTML elements\n    .replace(/<[^<>]*>/g, \"\");\n    for (var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n    return o;\n  };\n}();\nvar vtvregex = /<\\/?(?:vt:)?variant>/g,\n  vtmregex = /<(?:vt:)([^<\"'>]*)>([\\s\\S]*)</;\nfunction parseVector(data /*:string*/, opts) /*:Array<{v:string,t:string}>*/{\n  var h = parsexmltag(data);\n  var matches /*:Array<string>*/ = str_match_xml_ns_g(data, h.baseType) || [];\n  var res /*:Array<any>*/ = [];\n  if (matches.length != h.size) {\n    if (opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n    return res;\n  }\n  matches.forEach(function (x /*:string*/) {\n    var v = x.replace(vtvregex, \"\").match(vtmregex);\n    if (v) res.push({\n      v: utf8read(v[2]),\n      t: v[1]\n    });\n  });\n  return res;\n}\nvar wtregex = /(^\\s|\\s$|\\n)/;\nfunction writetag(f /*:string*/, g /*:string*/) /*:string*/{\n  return '<' + f + (g.match(wtregex) ? ' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>';\n}\nfunction wxt_helper(h) /*:string*/{\n  return keys(h).map(function (k) {\n    return \" \" + k + '=\"' + h[k] + '\"';\n  }).join(\"\");\n}\nfunction writextag(f /*:string*/, g /*:?string*/, h) {\n  return '<' + f + (h != null ? wxt_helper(h) : \"\") + (g != null ? (g.match(wtregex) ? ' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';\n}\nfunction write_w3cdtf(d /*:Date*/, t /*:?boolean*/) /*:string*/{\n  try {\n    return d.toISOString().replace(/\\.\\d*/, \"\");\n  } catch (e) {\n    if (t) throw e;\n  }\n  return \"\";\n}\nfunction write_vt(s, xlsx /*:?boolean*/) /*:string*/{\n  switch (typeof s) {\n    case 'string':\n      var o = writextag('vt:lpwstr', escapexml(s));\n      if (xlsx) o = o.replace(/&quot;/g, \"_x0022_\");\n      return o;\n    case 'number':\n      return writextag((s | 0) == s ? 'vt:i4' : 'vt:r8', escapexml(String(s)));\n    case 'boolean':\n      return writextag('vt:bool', s ? 'true' : 'false');\n  }\n  if (s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n  throw new Error(\"Unable to serialize \" + s);\n}\nfunction xlml_normalize(d) /*:string*/{\n  if (has_buf && /*::typeof Buffer !== \"undefined\" && d != null && d instanceof Buffer &&*/Buffer.isBuffer(d)) return d.toString('utf8');\n  if (typeof d === 'string') return d;\n  /* duktape */\n  if (typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n  throw new Error(\"Bad input format: expected Buffer or string\");\n}\n/* UOS uses CJK in tags, ODS uses invalid XML */\nvar xlmlregex = /<([\\/]?)([^\\s?><!\\/:\"]*:|)([^\\s?<>:\\/\"]+)(?:\\s+[^<>=?\"'\\s]+=\"[^\"]*?\")*\\s*[\\/]?>/mg;\nvar XMLNS = {\n  CORE_PROPS: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n  CUST_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\",\n  EXT_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\",\n  CT: 'http://schemas.openxmlformats.org/package/2006/content-types',\n  RELS: 'http://schemas.openxmlformats.org/package/2006/relationships',\n  TCMNT: 'http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments',\n  'dc': 'http://purl.org/dc/elements/1.1/',\n  'dcterms': 'http://purl.org/dc/terms/',\n  'dcmitype': 'http://purl.org/dc/dcmitype/',\n  'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n  'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n  'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n  'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n  'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n  'xsd': 'http://www.w3.org/2001/XMLSchema'\n} /*:any*/;\nvar XMLNS_main = ['http://schemas.openxmlformats.org/spreadsheetml/2006/main', 'http://purl.oclc.org/ooxml/spreadsheetml/main', 'http://schemas.microsoft.com/office/excel/2006/main', 'http://schemas.microsoft.com/office/excel/2006/2'];\nvar XLMLNS = {\n  'o': 'urn:schemas-microsoft-com:office:office',\n  'x': 'urn:schemas-microsoft-com:office:excel',\n  'ss': 'urn:schemas-microsoft-com:office:spreadsheet',\n  'dt': 'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n  'mv': 'http://macVmlSchemaUri',\n  'v': 'urn:schemas-microsoft-com:vml',\n  'html': 'http://www.w3.org/TR/REC-html40'\n} /*:any*/;\nfunction read_double_le(b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  var s = 1 - 2 * (b[idx + 7] >>> 7);\n  var e = ((b[idx + 7] & 0x7f) << 4) + (b[idx + 6] >>> 4 & 0x0f);\n  var m = b[idx + 6] & 0x0f;\n  for (var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n  if (e == 0x7ff) return m == 0 ? s * Infinity : NaN;\n  if (e == 0) e = -1022;else {\n    e -= 1023;\n    m += Math.pow(2, 52);\n  }\n  return s * Math.pow(2, e - 52) * m;\n}\nfunction write_double_le(b /*:RawBytes|CFBlob*/, v /*:number*/, idx /*:number*/) {\n  var bs = (v < 0 || 1 / v == -Infinity ? 1 : 0) << 7,\n    e = 0,\n    m = 0;\n  var av = bs ? -v : v;\n  if (!isFinite(av)) {\n    e = 0x7ff;\n    m = isNaN(v) ? 0x6969 : 0;\n  } else if (av == 0) e = m = 0;else {\n    e = Math.floor(Math.log(av) / Math.LN2);\n    m = av * Math.pow(2, 52 - e);\n    if (e <= -1023 && (!isFinite(m) || m < Math.pow(2, 52))) {\n      e = -1022;\n    } else {\n      m -= Math.pow(2, 52);\n      e += 1023;\n    }\n  }\n  for (var i = 0; i <= 5; ++i, m /= 256) b[idx + i] = m & 0xff;\n  b[idx + 6] = (e & 0x0f) << 4 | m & 0xf;\n  b[idx + 7] = e >> 4 | bs;\n}\nvar ___toBuffer = function (bufs /*:Array<Array<RawBytes> >*/) /*:RawBytes*/{\n  var x = [],\n    w = 10240;\n  for (var i = 0; i < bufs[0].length; ++i) if (bufs[0][i]) for (var j = 0, L = bufs[0][i].length; j < L; j += w) x.push.apply(x, bufs[0][i].slice(j, j + w));\n  return x;\n};\nvar __toBuffer = has_buf ? function (bufs) {\n  return bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0]) ? Buffer.concat(bufs[0].map(function (x) {\n    return Buffer.isBuffer(x) ? x : Buffer_from(x);\n  })) : ___toBuffer(bufs);\n} : ___toBuffer;\nvar ___utf16le = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) /*:string*/{\n  var ss /*:Array<string>*/ = [];\n  for (var i = s; i < e; i += 2) ss.push(String.fromCharCode(__readUInt16LE(b, i)));\n  return ss.join(\"\").replace(chr0, '');\n};\nvar __utf16le = has_buf ? function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) /*:string*/{\n  if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___utf16le(b, s, e);\n  return b.toString('utf16le', s, e).replace(chr0, '') /*.replace(chr1,'!')*/;\n} : ___utf16le;\nvar ___hexlify = function (b /*:RawBytes|CFBlob*/, s /*:number*/, l /*:number*/) /*:string*/{\n  var ss /*:Array<string>*/ = [];\n  for (var i = s; i < s + l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2));\n  return ss.join(\"\");\n};\nvar __hexlify = has_buf ? function (b /*:RawBytes|CFBlob*/, s /*:number*/, l /*:number*/) /*:string*/{\n  return Buffer.isBuffer(b) /*:: && b instanceof Buffer*/ ? b.toString('hex', s, s + l) : ___hexlify(b, s, l);\n} : ___hexlify;\nvar ___utf8 = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n  var ss = [];\n  for (var i = s; i < e; i++) ss.push(String.fromCharCode(__readUInt8(b, i)));\n  return ss.join(\"\");\n};\nvar __utf8 = has_buf ? function utf8_b(b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n  return Buffer.isBuffer(b) /*:: && (b instanceof Buffer)*/ ? b.toString('utf8', s, e) : ___utf8(b, s, e);\n} : ___utf8;\nvar ___lpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len - 1) : \"\";\n};\nvar __lpstr = ___lpstr;\nvar ___cpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len - 1) : \"\";\n};\nvar __cpstr = ___cpstr;\nvar ___lpwstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = 2 * __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len - 1) : \"\";\n};\nvar __lpwstr = ___lpwstr;\nvar ___lpp4 = function lpp4_(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf16le(b, i + 4, i + 4 + len) : \"\";\n};\nvar __lpp4 = ___lpp4;\nvar ___8lpp4 = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len) : \"\";\n};\nvar __8lpp4 = ___8lpp4;\nvar ___double = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) {\n  return read_double_le(b, idx);\n};\nvar __double = ___double;\nvar is_buf = function is_buf_a(a) {\n  return Array.isArray(a) || typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array;\n};\nif (has_buf /*:: && typeof Buffer !== 'undefined'*/) {\n  __lpstr = function lpstr_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___lpstr(b, i);\n    var len = b.readUInt32LE(i);\n    return len > 0 ? b.toString('utf8', i + 4, i + 4 + len - 1) : \"\";\n  };\n  __cpstr = function cpstr_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___cpstr(b, i);\n    var len = b.readUInt32LE(i);\n    return len > 0 ? b.toString('utf8', i + 4, i + 4 + len - 1) : \"\";\n  };\n  __lpwstr = function lpwstr_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___lpwstr(b, i);\n    var len = 2 * b.readUInt32LE(i);\n    return b.toString('utf16le', i + 4, i + 4 + len - 1);\n  };\n  __lpp4 = function lpp4_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___lpp4(b, i);\n    var len = b.readUInt32LE(i);\n    return b.toString('utf16le', i + 4, i + 4 + len);\n  };\n  __8lpp4 = function lpp4_8b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___8lpp4(b, i);\n    var len = b.readUInt32LE(i);\n    return b.toString('utf8', i + 4, i + 4 + len);\n  };\n  __double = function double_(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (Buffer.isBuffer(b) /*::&& b instanceof Buffer*/) return b.readDoubleLE(i);\n    return ___double(b, i);\n  };\n  is_buf = function is_buf_b(a) {\n    return Buffer.isBuffer(a) || Array.isArray(a) || typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array;\n  };\n}\n\n/* from js-xls */\nfunction cpdoit() {\n  __utf16le = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n    return $cptable.utils.decode(1200, b.slice(s, e)).replace(chr0, '');\n  };\n  __utf8 = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n    return $cptable.utils.decode(65001, b.slice(s, e));\n  };\n  __lpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(current_ansi, b.slice(i + 4, i + 4 + len - 1)) : \"\";\n  };\n  __cpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(current_codepage, b.slice(i + 4, i + 4 + len - 1)) : \"\";\n  };\n  __lpwstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = 2 * __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(1200, b.slice(i + 4, i + 4 + len - 1)) : \"\";\n  };\n  __lpp4 = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(1200, b.slice(i + 4, i + 4 + len)) : \"\";\n  };\n  __8lpp4 = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(65001, b.slice(i + 4, i + 4 + len)) : \"\";\n  };\n}\nif (typeof $cptable !== 'undefined') cpdoit();\nvar __readUInt8 = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx];\n};\nvar __readUInt16LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx + 1] * (1 << 8) + b[idx];\n};\nvar __readInt16LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  var u = b[idx + 1] * (1 << 8) + b[idx];\n  return u < 0x8000 ? u : (0xffff - u + 1) * -1;\n};\nvar __readUInt32LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx + 3] * (1 << 24) + (b[idx + 2] << 16) + (b[idx + 1] << 8) + b[idx];\n};\nvar __readInt32LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx + 3] << 24 | b[idx + 2] << 16 | b[idx + 1] << 8 | b[idx];\n};\nvar __readInt32BE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx] << 24 | b[idx + 1] << 16 | b[idx + 2] << 8 | b[idx + 3];\n};\nfunction ReadShift(size /*:number*/, t /*:?string*/) /*:number|string*/{\n  var o = \"\",\n    oI /*:: :number = 0*/,\n    oR,\n    oo = [],\n    w,\n    vv,\n    i,\n    loc;\n  switch (t) {\n    case 'dbcs':\n      loc = this.l;\n      if (has_buf && Buffer.isBuffer(this) && buf_utf16le) o = this.slice(this.l, this.l + 2 * size).toString(\"utf16le\");else for (i = 0; i < size; ++i) {\n        o += String.fromCharCode(__readUInt16LE(this, loc));\n        loc += 2;\n      }\n      size *= 2;\n      break;\n    case 'utf8':\n      o = __utf8(this, this.l, this.l + size);\n      break;\n    case 'utf16le':\n      size *= 2;\n      o = __utf16le(this, this.l, this.l + size);\n      break;\n    case 'wstr':\n      if (typeof $cptable !== 'undefined') o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l + 2 * size));else return ReadShift.call(this, size, 'dbcs');\n      size = 2 * size;\n      break;\n\n    /* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n    case 'lpstr-ansi':\n      o = __lpstr(this, this.l);\n      size = 4 + __readUInt32LE(this, this.l);\n      break;\n    case 'lpstr-cp':\n      o = __cpstr(this, this.l);\n      size = 4 + __readUInt32LE(this, this.l);\n      break;\n    /* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n    case 'lpwstr':\n      o = __lpwstr(this, this.l);\n      size = 4 + 2 * __readUInt32LE(this, this.l);\n      break;\n    /* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n    case 'lpp4':\n      size = 4 + __readUInt32LE(this, this.l);\n      o = __lpp4(this, this.l);\n      if (size & 0x02) size += 2;\n      break;\n    /* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n    case '8lpp4':\n      size = 4 + __readUInt32LE(this, this.l);\n      o = __8lpp4(this, this.l);\n      if (size & 0x03) size += 4 - (size & 0x03);\n      break;\n    case 'cstr':\n      size = 0;\n      o = \"\";\n      while ((w = __readUInt8(this, this.l + size++)) !== 0) oo.push(_getchar(w));\n      o = oo.join(\"\");\n      break;\n    case '_wstr':\n      size = 0;\n      o = \"\";\n      while ((w = __readUInt16LE(this, this.l + size)) !== 0) {\n        oo.push(_getchar(w));\n        size += 2;\n      }\n      size += 2;\n      o = oo.join(\"\");\n      break;\n\n    /* sbcs and dbcs support continue records in the SST way TODO codepages */\n    case 'dbcs-cont':\n      o = \"\";\n      loc = this.l;\n      for (i = 0; i < size; ++i) {\n        if (this.lens && this.lens.indexOf(loc) !== -1) {\n          w = __readUInt8(this, loc);\n          this.l = loc + 1;\n          vv = ReadShift.call(this, size - i, w ? 'dbcs-cont' : 'sbcs-cont');\n          return oo.join(\"\") + vv;\n        }\n        oo.push(_getchar(__readUInt16LE(this, loc)));\n        loc += 2;\n      }\n      o = oo.join(\"\");\n      size *= 2;\n      break;\n    case 'cpstr':\n      if (typeof $cptable !== 'undefined') {\n        o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\n        break;\n      }\n    /* falls through */\n    case 'sbcs-cont':\n      o = \"\";\n      loc = this.l;\n      for (i = 0; i != size; ++i) {\n        if (this.lens && this.lens.indexOf(loc) !== -1) {\n          w = __readUInt8(this, loc);\n          this.l = loc + 1;\n          vv = ReadShift.call(this, size - i, w ? 'dbcs-cont' : 'sbcs-cont');\n          return oo.join(\"\") + vv;\n        }\n        oo.push(_getchar(__readUInt8(this, loc)));\n        loc += 1;\n      }\n      o = oo.join(\"\");\n      break;\n    default:\n      switch (size) {\n        case 1:\n          oI = __readUInt8(this, this.l);\n          this.l++;\n          return oI;\n        case 2:\n          oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l);\n          this.l += 2;\n          return oI;\n        case 4:\n        case -4:\n          if (t === 'i' || (this[this.l + 3] & 0x80) === 0) {\n            oI = (size > 0 ? __readInt32LE : __readInt32BE)(this, this.l);\n            this.l += 4;\n            return oI;\n          } else {\n            oR = __readUInt32LE(this, this.l);\n            this.l += 4;\n          }\n          return oR;\n        case 8:\n        case -8:\n          if (t === 'f') {\n            if (size == 8) oR = __double(this, this.l);else oR = __double([this[this.l + 7], this[this.l + 6], this[this.l + 5], this[this.l + 4], this[this.l + 3], this[this.l + 2], this[this.l + 1], this[this.l + 0]], 0);\n            this.l += 8;\n            return oR;\n          } else size = 8;\n        /* falls through */\n        case 16:\n          o = __hexlify(this, this.l, size);\n          break;\n      }\n  }\n  this.l += size;\n  return o;\n}\nvar __writeUInt32LE = function (b /*:RawBytes|CFBlob*/, val /*:number*/, idx /*:number*/) /*:void*/{\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >>> 8 & 0xFF;\n  b[idx + 2] = val >>> 16 & 0xFF;\n  b[idx + 3] = val >>> 24 & 0xFF;\n};\nvar __writeInt32LE = function (b /*:RawBytes|CFBlob*/, val /*:number*/, idx /*:number*/) /*:void*/{\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >> 8 & 0xFF;\n  b[idx + 2] = val >> 16 & 0xFF;\n  b[idx + 3] = val >> 24 & 0xFF;\n};\nvar __writeUInt16LE = function (b /*:RawBytes|CFBlob*/, val /*:number*/, idx /*:number*/) /*:void*/{\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >>> 8 & 0xFF;\n};\nfunction WriteShift(t /*:number*/, val /*:string|number*/, f /*:?string*/) /*:any*/{\n  var size = 0,\n    i = 0;\n  if (f === 'dbcs') {\n    /*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n    for (i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n    size = 2 * val.length;\n  } else if (f === 'sbcs' || f == 'cpstr') {\n    if (typeof $cptable !== 'undefined' && current_ansi == 874) {\n      /* TODO: use tables directly, don't encode */\n      /*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n      for (i = 0; i != val.length; ++i) {\n        var cpp = $cptable.utils.encode(current_ansi, val.charAt(i));\n        this[this.l + i] = cpp[0];\n      }\n      size = val.length;\n    } else if (typeof $cptable !== 'undefined' && f == 'cpstr') {\n      cpp = $cptable.utils.encode(current_codepage, val);\n      /* replace null bytes with _ when relevant */\n      if (cpp.length == val.length) for (i = 0; i < val.length; ++i) if (cpp[i] == 0 && val.charCodeAt(i) != 0) cpp[i] = 0x5F;\n      if (cpp.length == 2 * val.length) for (i = 0; i < val.length; ++i) if (cpp[2 * i] == 0 && cpp[2 * i + 1] == 0 && val.charCodeAt(i) != 0) cpp[2 * i] = 0x5F;\n      for (i = 0; i < cpp.length; ++i) this[this.l + i] = cpp[i];\n      size = cpp.length;\n    } else {\n      /*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n      val = val.replace(/[^\\x00-\\x7F]/g, \"_\");\n      /*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n      for (i = 0; i != val.length; ++i) this[this.l + i] = val.charCodeAt(i) & 0xFF;\n      size = val.length;\n    }\n  } else if (f === 'hex') {\n    for (; i < t; ++i) {\n      /*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n      this[this.l++] = parseInt(val.slice(2 * i, 2 * i + 2), 16) || 0;\n    }\n    return this;\n  } else if (f === 'utf16le') {\n    /*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n    var end /*:number*/ = Math.min(this.l + t, this.length);\n    for (i = 0; i < Math.min(val.length, t); ++i) {\n      var cc = val.charCodeAt(i);\n      this[this.l++] = cc & 0xff;\n      this[this.l++] = cc >> 8;\n    }\n    while (this.l < end) this[this.l++] = 0;\n    return this;\n  } else /*:: if(typeof val === 'number') */switch (t) {\n      case 1:\n        size = 1;\n        this[this.l] = val & 0xFF;\n        break;\n      case 2:\n        size = 2;\n        this[this.l] = val & 0xFF;\n        val >>>= 8;\n        this[this.l + 1] = val & 0xFF;\n        break;\n      case 3:\n        size = 3;\n        this[this.l] = val & 0xFF;\n        val >>>= 8;\n        this[this.l + 1] = val & 0xFF;\n        val >>>= 8;\n        this[this.l + 2] = val & 0xFF;\n        break;\n      case 4:\n        size = 4;\n        __writeUInt32LE(this, val, this.l);\n        break;\n      case 8:\n        size = 8;\n        if (f === 'f') {\n          write_double_le(this, val, this.l);\n          break;\n        }\n      /* falls through */\n      case 16:\n        break;\n      case -4:\n        size = 4;\n        __writeInt32LE(this, val, this.l);\n        break;\n    }\n  this.l += size;\n  return this;\n}\nfunction CheckField(hexstr /*:string*/, fld /*:string*/) /*:void*/{\n  var m = __hexlify(this, this.l, hexstr.length >> 1);\n  if (m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n  this.l += hexstr.length >> 1;\n}\nfunction prep_blob(blob, pos /*:number*/) /*:void*/{\n  blob.l = pos;\n  blob.read_shift = /*::(*/ReadShift /*:: :any)*/;\n  blob.chk = CheckField;\n  blob.write_shift = WriteShift;\n}\nfunction parsenoop(blob, length /*:: :number, opts?:any */) {\n  blob.l += length;\n}\nfunction new_buf(sz /*:number*/) /*:Block*/{\n  var o = new_raw_buf(sz);\n  prep_blob(o, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.1.4 Record */\nfunction recordhopper(data, cb /*:RecordHopperCB*/, opts /*:?any*/) {\n  if (!data) return;\n  var tmpbyte, cntbyte, length;\n  prep_blob(data, data.l || 0);\n  var L = data.length,\n    RT = 0,\n    tgt = 0;\n  while (data.l < L) {\n    RT = data.read_shift(1);\n    if (RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F) << 7);\n    var R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n    tmpbyte = data.read_shift(1);\n    length = tmpbyte & 0x7F;\n    for (cntbyte = 1; cntbyte < 4 && tmpbyte & 0x80; ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F) << 7 * cntbyte;\n    tgt = data.l + length;\n    var d = R.f && R.f(data, length, opts);\n    data.l = tgt;\n    if (cb(d, R, RT)) return;\n  }\n}\n\n/* control buffer usage for fixed-length buffers */\nfunction buf_array() /*:BufArray*/{\n  var bufs /*:Array<Block>*/ = [],\n    blksz = has_buf ? 256 : 2048;\n  var newblk = function ba_newblk(sz /*:number*/) /*:Block*/{\n    var o /*:Block*/ = new_buf(sz) /*:any*/;\n    prep_blob(o, 0);\n    return o;\n  };\n  var curbuf /*:Block*/ = newblk(blksz);\n  var endbuf = function ba_endbuf() {\n    if (!curbuf) return;\n    // workaround for new Buffer(3).slice(0,0) bug in bun 0.1.3\n    if (curbuf.l) {\n      if (curbuf.length > curbuf.l) {\n        curbuf = curbuf.slice(0, curbuf.l);\n        curbuf.l = curbuf.length;\n      }\n      if (curbuf.length > 0) bufs.push(curbuf);\n    }\n    curbuf = null;\n  };\n  var next = function ba_next(sz /*:number*/) /*:Block*/{\n    if (curbuf && sz < curbuf.length - curbuf.l) return curbuf;\n    endbuf();\n    return curbuf = newblk(Math.max(sz + 1, blksz));\n  };\n  var end = function ba_end() {\n    endbuf();\n    return bconcat(bufs);\n  };\n  var push = function ba_push(buf) {\n    endbuf();\n    curbuf = buf;\n    if (curbuf.l == null) curbuf.l = curbuf.length;\n    next(blksz);\n  };\n  return {\n    next: next,\n    push: push,\n    end: end,\n    _bufs: bufs\n  } /*:any*/;\n}\nfunction write_record(ba /*:BufArray*/, type /*:number*/, payload, length /*:?number*/) {\n  var t /*:number*/ = +type,\n    l;\n  if (isNaN(t)) return; // TODO: throw something here?\n  if (!length) length = XLSBRecordEnum[t].p || (payload || []).length || 0;\n  l = 1 + (t >= 0x80 ? 1 : 0) + 1 /* + length*/;\n  if (length >= 0x80) ++l;\n  if (length >= 0x4000) ++l;\n  if (length >= 0x200000) ++l;\n  var o = ba.next(l);\n  if (t <= 0x7F) o.write_shift(1, t);else {\n    o.write_shift(1, (t & 0x7F) + 0x80);\n    o.write_shift(1, t >> 7);\n  }\n  for (var i = 0; i != 4; ++i) {\n    if (length >= 0x80) {\n      o.write_shift(1, (length & 0x7F) + 0x80);\n      length >>= 7;\n    } else {\n      o.write_shift(1, length);\n      break;\n    }\n  }\n  if ( /*:: length != null &&*/length > 0 && is_buf(payload)) ba.push(payload);\n}\n/* XLS ranges enforced */\nfunction shift_cell_xls(cell /*:CellAddress*/, tgt /*:any*/, opts /*:?any*/) /*:CellAddress*/{\n  var out = dup(cell);\n  if (tgt.s) {\n    if (out.cRel) out.c += tgt.s.c;\n    if (out.rRel) out.r += tgt.s.r;\n  } else {\n    if (out.cRel) out.c += tgt.c;\n    if (out.rRel) out.r += tgt.r;\n  }\n  if (!opts || opts.biff < 12) {\n    while (out.c >= 0x100) out.c -= 0x100;\n    while (out.r >= 0x10000) out.r -= 0x10000;\n  }\n  return out;\n}\nfunction shift_range_xls(cell, range, opts) {\n  var out = dup(cell);\n  out.s = shift_cell_xls(out.s, range.s, opts);\n  out.e = shift_cell_xls(out.e, range.s, opts);\n  return out;\n}\nfunction encode_cell_xls(c /*:CellAddress*/, biff /*:number*/) /*:string*/{\n  if (c.cRel && c.c < 0) {\n    c = dup(c);\n    while (c.c < 0) c.c += biff > 8 ? 0x4000 : 0x100;\n  }\n  if (c.rRel && c.r < 0) {\n    c = dup(c);\n    while (c.r < 0) c.r += biff > 8 ? 0x100000 : biff > 5 ? 0x10000 : 0x4000;\n  }\n  var s = encode_cell(c);\n  if (!c.cRel && c.cRel != null) s = fix_col(s);\n  if (!c.rRel && c.rRel != null) s = fix_row(s);\n  return s;\n}\nfunction encode_range_xls(r, opts) /*:string*/{\n  if (r.s.r == 0 && !r.s.rRel) {\n    if (r.e.r == (opts.biff >= 12 ? 0xFFFFF : opts.biff >= 8 ? 0x10000 : 0x4000) && !r.e.rRel) {\n      return (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n    }\n  }\n  if (r.s.c == 0 && !r.s.cRel) {\n    if (r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {\n      return (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n    }\n  }\n  return encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n}\nfunction decode_row(rowstr /*:string*/) /*:number*/{\n  return parseInt(unfix_row(rowstr), 10) - 1;\n}\nfunction encode_row(row /*:number*/) /*:string*/{\n  return \"\" + (row + 1);\n}\nfunction fix_row(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/([A-Z]|^)(\\d+)$/, \"$1$$$2\");\n}\nfunction unfix_row(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/\\$(\\d+)$/, \"$1\");\n}\nfunction decode_col(colstr /*:string*/) /*:number*/{\n  var c = unfix_col(colstr),\n    d = 0,\n    i = 0;\n  for (; i !== c.length; ++i) d = 26 * d + c.charCodeAt(i) - 64;\n  return d - 1;\n}\nfunction encode_col(col /*:number*/) /*:string*/{\n  if (col < 0) throw new Error(\"invalid column \" + col);\n  var s = \"\";\n  for (++col; col; col = Math.floor((col - 1) / 26)) s = String.fromCharCode((col - 1) % 26 + 65) + s;\n  return s;\n}\nfunction fix_col(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/^([A-Z])/, \"$$$1\");\n}\nfunction unfix_col(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/^\\$([A-Z])/, \"$1\");\n}\nfunction split_cell(cstr /*:string*/) /*:Array<string>*/{\n  return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/, \"$1,$2\").split(\",\");\n}\nfunction decode_cell(cstr /*:string*/) /*:CellAddress*/{\n  var R = 0,\n    C = 0;\n  for (var i = 0; i < cstr.length; ++i) {\n    var cc = cstr.charCodeAt(i);\n    if (cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);else if (cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);\n  }\n  return {\n    c: C - 1,\n    r: R - 1\n  };\n}\nfunction encode_cell(cell /*:CellAddress*/) /*:string*/{\n  var col = cell.c + 1;\n  var s = \"\";\n  for (; col; col = (col - 1) / 26 | 0) s = String.fromCharCode((col - 1) % 26 + 65) + s;\n  return s + (cell.r + 1);\n}\nfunction decode_range(range /*:string*/) /*:Range*/{\n  var idx = range.indexOf(\":\");\n  if (idx == -1) return {\n    s: decode_cell(range),\n    e: decode_cell(range)\n  };\n  return {\n    s: decode_cell(range.slice(0, idx)),\n    e: decode_cell(range.slice(idx + 1))\n  };\n}\n/*# if only one arg, it is assumed to be a Range.  If 2 args, both are cell addresses */\nfunction encode_range(cs /*:CellAddrSpec|Range*/, ce /*:?CellAddrSpec*/) /*:string*/{\n  if (typeof ce === 'undefined' || typeof ce === 'number') {\n    /*:: if(!(cs instanceof Range)) throw \"unreachable\"; */\n    return encode_range(cs.s, cs.e);\n  }\n  /*:: if((cs instanceof Range)) throw \"unreachable\"; */\n  if (typeof cs !== 'string') cs = encode_cell(cs /*:any*/);\n  if (typeof ce !== 'string') ce = encode_cell(ce /*:any*/);\n  /*:: if(typeof cs !== 'string') throw \"unreachable\"; */\n  /*:: if(typeof ce !== 'string') throw \"unreachable\"; */\n  return cs == ce ? cs : cs + \":\" + ce;\n}\nfunction fix_range(a1 /*:string*/) /*:string*/{\n  var s = decode_range(a1);\n  return \"$\" + encode_col(s.s.c) + \"$\" + encode_row(s.s.r) + \":$\" + encode_col(s.e.c) + \"$\" + encode_row(s.e.r);\n}\n\n// List of invalid characters needs to be tested further\nfunction formula_quote_sheet_name(sname /*:string*/, opts) /*:string*/{\n  if (!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n  if (/[^\\w\\u4E00-\\u9FFF\\u3040-\\u30FF]/.test(sname)) return \"'\" + sname.replace(/'/g, \"''\") + \"'\";\n  return sname;\n}\nfunction safe_decode_range(range /*:string*/) /*:Range*/{\n  var o = {\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  var idx = 0,\n    i = 0,\n    cc = 0;\n  var len = range.length;\n  for (idx = 0; i < len; ++i) {\n    if ((cc = range.charCodeAt(i) - 64) < 1 || cc > 26) break;\n    idx = 26 * idx + cc;\n  }\n  o.s.c = --idx;\n  for (idx = 0; i < len; ++i) {\n    if ((cc = range.charCodeAt(i) - 48) < 0 || cc > 9) break;\n    idx = 10 * idx + cc;\n  }\n  o.s.r = --idx;\n  if (i === len || cc != 10) {\n    o.e.c = o.s.c;\n    o.e.r = o.s.r;\n    return o;\n  }\n  ++i;\n  for (idx = 0; i != len; ++i) {\n    if ((cc = range.charCodeAt(i) - 64) < 1 || cc > 26) break;\n    idx = 26 * idx + cc;\n  }\n  o.e.c = --idx;\n  for (idx = 0; i != len; ++i) {\n    if ((cc = range.charCodeAt(i) - 48) < 0 || cc > 9) break;\n    idx = 10 * idx + cc;\n  }\n  o.e.r = --idx;\n  return o;\n}\nfunction safe_format_cell(cell /*:Cell*/, v /*:any*/) {\n  var q = cell.t == 'd' && v instanceof Date;\n  if (cell.z != null) try {\n    return cell.w = SSF_format(cell.z, q ? datenum(v) : v);\n  } catch (e) {}\n  try {\n    return cell.w = SSF_format((cell.XF || {}).numFmtId || (q ? 14 : 0), q ? datenum(v) : v);\n  } catch (e) {\n    return '' + v;\n  }\n}\nfunction format_cell(cell /*:Cell*/, v /*:any*/, o /*:any*/) {\n  if (cell == null || cell.t == null || cell.t == 'z') return \"\";\n  if (cell.w !== undefined) return cell.w;\n  if (cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n  if (cell.t == \"e\") return BErr[cell.v] || cell.v;\n  if (v == undefined) return safe_format_cell(cell, cell.v);\n  return safe_format_cell(cell, v);\n}\nfunction sheet_to_workbook(sheet /*:Worksheet*/, opts) /*:Workbook*/{\n  var n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n  var sheets = {};\n  sheets[n] = sheet;\n  return {\n    SheetNames: [n],\n    Sheets: sheets\n  };\n}\nfunction sheet_new(opts) {\n  var out = {};\n  var o = opts || {};\n  if (o.dense) out[\"!data\"] = [];\n  return out;\n}\nfunction sheet_add_aoa(_ws /*:?Worksheet*/, data /*:AOA*/, opts /*:?any*/) /*:Worksheet*/{\n  var o = opts || {};\n  var dense = _ws ? _ws[\"!data\"] != null : o.dense;\n  if (DENSE != null && dense == null) dense = DENSE;\n  var ws /*:Worksheet*/ = _ws || {} /*:any*/;\n  if (dense && !ws[\"!data\"]) ws[\"!data\"] = [];\n  var _R = 0,\n    _C = 0;\n  if (ws && o.origin != null) {\n    if (typeof o.origin == 'number') _R = o.origin;else {\n      var _origin /*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n      _R = _origin.r;\n      _C = _origin.c;\n    }\n  }\n  var range /*:Range*/ = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  } /*:any*/;\n  if (ws[\"!ref\"]) {\n    var _range = safe_decode_range(ws['!ref']);\n    range.s.c = _range.s.c;\n    range.s.r = _range.s.r;\n    range.e.c = Math.max(range.e.c, _range.e.c);\n    range.e.r = Math.max(range.e.r, _range.e.r);\n    if (_R == -1) range.e.r = _R = ws[\"!ref\"] ? _range.e.r + 1 : 0;\n  } else {\n    range.s.c = range.e.c = range.s.r = range.e.r = 0;\n  }\n  var row = [],\n    seen = false;\n  for (var R = 0; R != data.length; ++R) {\n    if (!data[R]) continue;\n    if (!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n    var __R = _R + R,\n      __Rstr = \"\" + (__R + 1);\n    //console.log(\"!!\", R, _R, __R);\n    if (dense) {\n      if (!ws[\"!data\"][__R]) ws[\"!data\"][__R] = [];\n      row = ws[\"!data\"][__R];\n    }\n    for (var C = 0; C != data[R].length; ++C) {\n      if (typeof data[R][C] === 'undefined') continue;\n      var cell /*:Cell*/ = {\n        v: data[R][C]\n      } /*:any*/;\n      var __C = _C + C;\n      if (range.s.r > __R) range.s.r = __R;\n      if (range.s.c > __C) range.s.c = __C;\n      if (range.e.r < __R) range.e.r = __R;\n      if (range.e.c < __C) range.e.c = __C;\n      seen = true;\n      if (data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];else {\n        if (Array.isArray(cell.v)) {\n          cell.f = data[R][C][1];\n          cell.v = cell.v[0];\n        }\n        if (cell.v === null) {\n          if (cell.f) cell.t = 'n';else if (o.nullError) {\n            cell.t = 'e';\n            cell.v = 0;\n          } else if (!o.sheetStubs) continue;else cell.t = 'z';\n        } else if (typeof cell.v === 'number') cell.t = 'n';else if (typeof cell.v === 'boolean') cell.t = 'b';else if (cell.v instanceof Date) {\n          cell.z = o.dateNF || table_fmt[14];\n          if (!o.UTC) cell.v = local_to_utc(cell.v);\n          if (o.cellDates) {\n            cell.t = 'd';\n            cell.w = SSF_format(cell.z, datenum(cell.v, o.date1904));\n          } else {\n            cell.t = 'n';\n            cell.v = datenum(cell.v, o.date1904);\n            cell.w = SSF_format(cell.z, cell.v);\n          }\n        } else cell.t = 's';\n      }\n      if (dense) {\n        if (row[__C] && row[__C].z) cell.z = row[__C].z;\n        row[__C] = cell;\n      } else {\n        var cell_ref = encode_col(__C) + __Rstr /*:any*/;\n        if (ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;\n        ws[cell_ref] = cell;\n      }\n    }\n  }\n  if (seen && range.s.c < 10400000) ws['!ref'] = encode_range(range);\n  return ws;\n}\nfunction aoa_to_sheet(data /*:AOA*/, opts /*:?any*/) /*:Worksheet*/{\n  return sheet_add_aoa(null, data, opts);\n}\nfunction parse_Int32LE(data) {\n  return data.read_shift(4, 'i');\n}\nfunction write_UInt32LE(x /*:number*/, o) {\n  if (!o) o = new_buf(4);\n  o.write_shift(4, x);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.168 */\nfunction parse_XLWideString(data /*::, length*/) /*:string*/{\n  var cchCharacters = data.read_shift(4);\n  return cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLWideString(data /*:string*/, o) {\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(4 + 2 * data.length);\n  }\n  o.write_shift(4, data.length);\n  if (data.length > 0) o.write_shift(0, data, 'dbcs');\n  return _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.91 */\n//function parse_LPWideString(data/*::, length*/)/*:string*/ {\n//\tvar cchCharacters = data.read_shift(2);\n//\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, \"utf16le\");\n//}\n\n/* [MS-XLSB] 2.5.143 */\nfunction parse_StrRun(data) {\n  return {\n    ich: data.read_shift(2),\n    ifnt: data.read_shift(2)\n  };\n}\nfunction write_StrRun(run, o) {\n  if (!o) o = new_buf(4);\n  o.write_shift(2, run.ich || 0);\n  o.write_shift(2, run.ifnt || 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.121 */\nfunction parse_RichStr(data, length /*:number*/) /*:XLString*/{\n  var start = data.l;\n  var flags = data.read_shift(1);\n  var str = parse_XLWideString(data);\n  var rgsStrRun = [];\n  var z = {\n    t: str,\n    h: str\n  } /*:any*/;\n  if ((flags & 1) !== 0) {\n    /* fRichStr */\n    /* TODO: formatted string */\n    var dwSizeStrRun = data.read_shift(4);\n    for (var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n    z.r = rgsStrRun;\n  } else z.r = [{\n    ich: 0,\n    ifnt: 0\n  }];\n  //if((flags & 2) !== 0) { /* fExtStr */\n  //\t/* TODO: phonetic string */\n  //}\n  data.l = start + length;\n  return z;\n}\nfunction write_RichStr(str /*:XLString*/, o /*:?Block*/) /*:Block*/{\n  /* TODO: formatted string */\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(15 + 4 * str.t.length);\n  }\n  o.write_shift(1, 0);\n  write_XLWideString(str.t, o);\n  return _null ? o.slice(0, o.l) : o;\n}\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\nvar parse_BrtCommentText = parse_RichStr;\nfunction write_BrtCommentText(str /*:XLString*/, o /*:?Block*/) /*:Block*/{\n  /* TODO: formatted string */\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(23 + 4 * str.t.length);\n  }\n  o.write_shift(1, 1);\n  write_XLWideString(str.t, o);\n  o.write_shift(4, 1);\n  write_StrRun({\n    ich: 0,\n    ifnt: 0\n  }, o);\n  return _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.9 */\nfunction parse_XLSBCell(data) /*:any*/{\n  var col = data.read_shift(4);\n  var iStyleRef = data.read_shift(2);\n  iStyleRef += data.read_shift(1) << 16;\n  data.l++; //var fPhShow = data.read_shift(1);\n  return {\n    c: col,\n    iStyleRef: iStyleRef\n  };\n}\nfunction write_XLSBCell(cell /*:any*/, o /*:?Block*/) {\n  if (o == null) o = new_buf(8);\n  o.write_shift(-4, cell.c);\n  o.write_shift(3, cell.iStyleRef || cell.s);\n  o.write_shift(1, 0); /* fPhShow */\n  return o;\n}\n\n/* Short XLSB Cell does not include column */\nfunction parse_XLSBShortCell(data) /*:any*/{\n  var iStyleRef = data.read_shift(2);\n  iStyleRef += data.read_shift(1) << 16;\n  data.l++; //var fPhShow = data.read_shift(1);\n  return {\n    c: -1,\n    iStyleRef: iStyleRef\n  };\n}\nfunction write_XLSBShortCell(cell /*:any*/, o /*:?Block*/) {\n  if (o == null) o = new_buf(4);\n  o.write_shift(3, cell.iStyleRef || cell.s);\n  o.write_shift(1, 0); /* fPhShow */\n  return o;\n}\n\n/* [MS-XLSB] 2.5.21 */\nvar parse_XLSBCodeName = parse_XLWideString;\nvar write_XLSBCodeName = write_XLWideString;\n\n/* [MS-XLSB] 2.5.166 */\nfunction parse_XLNullableWideString(data /*::, length*/) /*:string*/{\n  var cchCharacters = data.read_shift(4);\n  return cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLNullableWideString(data /*:string*/, o) {\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(127);\n  }\n  o.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n  if (data.length > 0) o.write_shift(0, data, 'dbcs');\n  return _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.165 */\nvar parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n/* [MS-XLSB] 2.5.114 */\nvar parse_RelID = parse_XLNullableWideString;\nvar write_RelID = write_XLNullableWideString;\n\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\nfunction parse_RkNumber(data) /*:number*/{\n  var b = data.slice(data.l, data.l + 4);\n  var fX100 = b[0] & 1,\n    fInt = b[0] & 2;\n  data.l += 4;\n  var RK = fInt === 0 ? __double([0, 0, 0, 0, b[0] & 0xFC, b[1], b[2], b[3]], 0) : __readInt32LE(b, 0) >> 2;\n  return fX100 ? RK / 100 : RK;\n}\nfunction write_RkNumber(data /*:number*/, o) {\n  if (o == null) o = new_buf(4);\n  var fX100 = 0,\n    fInt = 0,\n    d100 = data * 100;\n  if (data == (data | 0) && data >= -(1 << 29) && data < 1 << 29) {\n    fInt = 1;\n  } else if (d100 == (d100 | 0) && d100 >= -(1 << 29) && d100 < 1 << 29) {\n    fInt = 1;\n    fX100 = 1;\n  }\n  if (fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));else throw new Error(\"unsupported RkNumber \" + data); // TODO\n}\n\n/* [MS-XLSB] 2.5.117 RfX */\nfunction parse_RfX(data /*::, length*/) /*:Range*/{\n  var cell /*:Range*/ = {\n    s: {},\n    e: {}\n  } /*:any*/;\n  cell.s.r = data.read_shift(4);\n  cell.e.r = data.read_shift(4);\n  cell.s.c = data.read_shift(4);\n  cell.e.c = data.read_shift(4);\n  return cell;\n}\nfunction write_RfX(r /*:Range*/, o) {\n  if (!o) o = new_buf(16);\n  o.write_shift(4, r.s.r);\n  o.write_shift(4, r.e.r);\n  o.write_shift(4, r.s.c);\n  o.write_shift(4, r.e.c);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\nvar parse_UncheckedRfX = parse_RfX;\nvar write_UncheckedRfX = write_RfX;\n\n/* [MS-XLSB] 2.5.155 UncheckedSqRfX */\n//function parse_UncheckedSqRfX(data) {\n//\tvar cnt = data.read_shift(4);\n//\tvar out = [];\n//\tfor(var i = 0; i < cnt; ++i) {\n//\t\tvar rng = parse_UncheckedRfX(data);\n//\t\tout.push(encode_range(rng));\n//\t}\n//\treturn out.join(\",\");\n//}\n//function write_UncheckedSqRfX(sqrfx/*:string*/) {\n//\tvar parts = sqrfx.split(/\\s*,\\s*/);\n//\tvar o = new_buf(4); o.write_shift(4, parts.length);\n//\tvar out = [o];\n//\tparts.forEach(function(rng) {\n//\t\tout.push(write_UncheckedRfX(safe_decode_range(rng)));\n//\t});\n//\treturn bconcat(out);\n//}\n\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\nfunction parse_Xnum(data /*::, length*/) {\n  if (data.length - data.l < 8) throw \"XLS Xnum Buffer underflow\";\n  return data.read_shift(8, 'f');\n}\nfunction write_Xnum(data, o) {\n  return (o || new_buf(8)).write_shift(8, data, 'f');\n}\n\n/* [MS-XLSB] 2.4.324 BrtColor */\nfunction parse_BrtColor(data /*::, length*/) {\n  var out = {};\n  var d = data.read_shift(1);\n\n  //var fValidRGB = d & 1;\n  var xColorType = d >>> 1;\n  var index = data.read_shift(1);\n  var nTS = data.read_shift(2, 'i');\n  var bR = data.read_shift(1);\n  var bG = data.read_shift(1);\n  var bB = data.read_shift(1);\n  data.l++; //var bAlpha = data.read_shift(1);\n\n  switch (xColorType) {\n    case 0:\n      out.auto = 1;\n      break;\n    case 1:\n      out.index = index;\n      var icv = XLSIcv[index];\n      /* automatic pseudo index 81 */\n      if (icv) out.rgb = rgb2Hex(icv);\n      break;\n    case 2:\n      /* if(!fValidRGB) throw new Error(\"invalid\"); */\n      out.rgb = rgb2Hex([bR, bG, bB]);\n      break;\n    case 3:\n      out.theme = index;\n      break;\n  }\n  if (nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n  return out;\n}\nfunction write_BrtColor(color, o) {\n  if (!o) o = new_buf(8);\n  if (!color || color.auto) {\n    o.write_shift(4, 0);\n    o.write_shift(4, 0);\n    return o;\n  }\n  if (color.index != null) {\n    o.write_shift(1, 0x02);\n    o.write_shift(1, color.index);\n  } else if (color.theme != null) {\n    o.write_shift(1, 0x06);\n    o.write_shift(1, color.theme);\n  } else {\n    o.write_shift(1, 0x05);\n    o.write_shift(1, 0);\n  }\n  var nTS = color.tint || 0;\n  if (nTS > 0) nTS *= 32767;else if (nTS < 0) nTS *= 32768;\n  o.write_shift(2, nTS);\n  if (!color.rgb || color.theme != null) {\n    o.write_shift(2, 0);\n    o.write_shift(1, 0);\n    o.write_shift(1, 0);\n  } else {\n    var rgb = color.rgb || 'FFFFFF';\n    if (typeof rgb == 'number') rgb = (\"000000\" + rgb.toString(16)).slice(-6);\n    o.write_shift(1, parseInt(rgb.slice(0, 2), 16));\n    o.write_shift(1, parseInt(rgb.slice(2, 4), 16));\n    o.write_shift(1, parseInt(rgb.slice(4, 6), 16));\n    o.write_shift(1, 0xFF);\n  }\n  return o;\n}\n\n/* [MS-XLSB] 2.5.52 */\nfunction parse_FontFlags(data /*::, length, opts*/) {\n  var d = data.read_shift(1);\n  data.l++;\n  var out = {\n    fBold: d & 0x01,\n    fItalic: d & 0x02,\n    fUnderline: d & 0x04,\n    fStrikeout: d & 0x08,\n    fOutline: d & 0x10,\n    fShadow: d & 0x20,\n    fCondense: d & 0x40,\n    fExtend: d & 0x80\n  };\n  return out;\n}\nfunction write_FontFlags(font, o) {\n  if (!o) o = new_buf(2);\n  var grbit = (font.italic ? 0x02 : 0) | (font.strike ? 0x08 : 0) | (font.outline ? 0x10 : 0) | (font.shadow ? 0x20 : 0) | (font.condense ? 0x40 : 0) | (font.extend ? 0x80 : 0);\n  o.write_shift(1, grbit);\n  o.write_shift(1, 0);\n  return o;\n}\n\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\nfunction parse_ClipboardFormatOrString(o, w /*:number*/) /*:string*/{\n  // $FlowIgnore\n  var ClipFmt = {\n    2: \"BITMAP\",\n    3: \"METAFILEPICT\",\n    8: \"DIB\",\n    14: \"ENHMETAFILE\"\n  };\n  var m /*:number*/ = o.read_shift(4);\n  switch (m) {\n    case 0x00000000:\n      return \"\";\n    case 0xffffffff:\n    case 0xfffffffe:\n      return ClipFmt[o.read_shift(4)] || \"\";\n  }\n  if (m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n  o.l -= 4;\n  return o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n}\nfunction parse_ClipboardFormatOrAnsiString(o) {\n  return parse_ClipboardFormatOrString(o, 1);\n}\nfunction parse_ClipboardFormatOrUnicodeString(o) {\n  return parse_ClipboardFormatOrString(o, 2);\n}\n\n/* [MS-OLEPS] 2.2 PropertyType */\n// Note: some tree shakers cannot handle VT_VECTOR | $CONST, hence extra vars\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\nvar VT_I2 = 0x0002;\nvar VT_I4 = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\nvar VT_BOOL = 0x000B;\nvar VT_VARIANT = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\nvar VT_UI4 = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\n//var VT_LPSTR    = 0x001E;\n//var VT_LPWSTR   = 0x001F;\nvar VT_FILETIME = 0x0040;\nvar VT_BLOB = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\nvar VT_CF = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\n//var VT_VECTOR   = 0x1000;\nvar VT_VECTOR_VARIANT = 0x100C;\nvar VT_VECTOR_LPSTR = 0x101E;\n//var VT_ARRAY    = 0x2000;\n\nvar VT_STRING = 0x0050; // 2.3.3.1.11 VtString\nvar VT_USTR = 0x0051; // 2.3.3.1.12 VtUnalignedString\nvar VT_CUSTOM = [VT_STRING, VT_USTR];\n\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\nvar DocSummaryPIDDSI = {\n  0x01: {\n    n: 'CodePage',\n    t: VT_I2\n  },\n  0x02: {\n    n: 'Category',\n    t: VT_STRING\n  },\n  0x03: {\n    n: 'PresentationFormat',\n    t: VT_STRING\n  },\n  0x04: {\n    n: 'ByteCount',\n    t: VT_I4\n  },\n  0x05: {\n    n: 'LineCount',\n    t: VT_I4\n  },\n  0x06: {\n    n: 'ParagraphCount',\n    t: VT_I4\n  },\n  0x07: {\n    n: 'SlideCount',\n    t: VT_I4\n  },\n  0x08: {\n    n: 'NoteCount',\n    t: VT_I4\n  },\n  0x09: {\n    n: 'HiddenCount',\n    t: VT_I4\n  },\n  0x0a: {\n    n: 'MultimediaClipCount',\n    t: VT_I4\n  },\n  0x0b: {\n    n: 'ScaleCrop',\n    t: VT_BOOL\n  },\n  0x0c: {\n    n: 'HeadingPairs',\n    t: VT_VECTOR_VARIANT /* VT_VECTOR | VT_VARIANT */\n  },\n  0x0d: {\n    n: 'TitlesOfParts',\n    t: VT_VECTOR_LPSTR /* VT_VECTOR | VT_LPSTR */\n  },\n  0x0e: {\n    n: 'Manager',\n    t: VT_STRING\n  },\n  0x0f: {\n    n: 'Company',\n    t: VT_STRING\n  },\n  0x10: {\n    n: 'LinksUpToDate',\n    t: VT_BOOL\n  },\n  0x11: {\n    n: 'CharacterCount',\n    t: VT_I4\n  },\n  0x13: {\n    n: 'SharedDoc',\n    t: VT_BOOL\n  },\n  0x16: {\n    n: 'HyperlinksChanged',\n    t: VT_BOOL\n  },\n  0x17: {\n    n: 'AppVersion',\n    t: VT_I4,\n    p: 'version'\n  },\n  0x18: {\n    n: 'DigSig',\n    t: VT_BLOB\n  },\n  0x1A: {\n    n: 'ContentType',\n    t: VT_STRING\n  },\n  0x1B: {\n    n: 'ContentStatus',\n    t: VT_STRING\n  },\n  0x1C: {\n    n: 'Language',\n    t: VT_STRING\n  },\n  0x1D: {\n    n: 'Version',\n    t: VT_STRING\n  },\n  0xFF: {},\n  /* [MS-OLEPS] 2.18 */\n  0x80000000: {\n    n: 'Locale',\n    t: VT_UI4\n  },\n  0x80000003: {\n    n: 'Behavior',\n    t: VT_UI4\n  },\n  0x72627262: {}\n};\n\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\nvar SummaryPIDSI = {\n  0x01: {\n    n: 'CodePage',\n    t: VT_I2\n  },\n  0x02: {\n    n: 'Title',\n    t: VT_STRING\n  },\n  0x03: {\n    n: 'Subject',\n    t: VT_STRING\n  },\n  0x04: {\n    n: 'Author',\n    t: VT_STRING\n  },\n  0x05: {\n    n: 'Keywords',\n    t: VT_STRING\n  },\n  0x06: {\n    n: 'Comments',\n    t: VT_STRING\n  },\n  0x07: {\n    n: 'Template',\n    t: VT_STRING\n  },\n  0x08: {\n    n: 'LastAuthor',\n    t: VT_STRING\n  },\n  0x09: {\n    n: 'RevNumber',\n    t: VT_STRING\n  },\n  0x0A: {\n    n: 'EditTime',\n    t: VT_FILETIME\n  },\n  0x0B: {\n    n: 'LastPrinted',\n    t: VT_FILETIME\n  },\n  0x0C: {\n    n: 'CreatedDate',\n    t: VT_FILETIME\n  },\n  0x0D: {\n    n: 'ModifiedDate',\n    t: VT_FILETIME\n  },\n  0x0E: {\n    n: 'PageCount',\n    t: VT_I4\n  },\n  0x0F: {\n    n: 'WordCount',\n    t: VT_I4\n  },\n  0x10: {\n    n: 'CharCount',\n    t: VT_I4\n  },\n  0x11: {\n    n: 'Thumbnail',\n    t: VT_CF\n  },\n  0x12: {\n    n: 'Application',\n    t: VT_STRING\n  },\n  0x13: {\n    n: 'DocSecurity',\n    t: VT_I4\n  },\n  0xFF: {},\n  /* [MS-OLEPS] 2.18 */\n  0x80000000: {\n    n: 'Locale',\n    t: VT_UI4\n  },\n  0x80000003: {\n    n: 'Behavior',\n    t: VT_UI4\n  },\n  0x72627262: {}\n};\n\n/* [MS-XLS] 2.4.63 Country/Region codes */\nvar CountryEnum = {\n  0x0001: \"US\",\n  // United States\n  0x0002: \"CA\",\n  // Canada\n  0x0003: \"\",\n  // Latin America (except Brazil)\n  0x0007: \"RU\",\n  // Russia\n  0x0014: \"EG\",\n  // Egypt\n  0x001E: \"GR\",\n  // Greece\n  0x001F: \"NL\",\n  // Netherlands\n  0x0020: \"BE\",\n  // Belgium\n  0x0021: \"FR\",\n  // France\n  0x0022: \"ES\",\n  // Spain\n  0x0024: \"HU\",\n  // Hungary\n  0x0027: \"IT\",\n  // Italy\n  0x0029: \"CH\",\n  // Switzerland\n  0x002B: \"AT\",\n  // Austria\n  0x002C: \"GB\",\n  // United Kingdom\n  0x002D: \"DK\",\n  // Denmark\n  0x002E: \"SE\",\n  // Sweden\n  0x002F: \"NO\",\n  // Norway\n  0x0030: \"PL\",\n  // Poland\n  0x0031: \"DE\",\n  // Germany\n  0x0034: \"MX\",\n  // Mexico\n  0x0037: \"BR\",\n  // Brazil\n  0x003d: \"AU\",\n  // Australia\n  0x0040: \"NZ\",\n  // New Zealand\n  0x0042: \"TH\",\n  // Thailand\n  0x0051: \"JP\",\n  // Japan\n  0x0052: \"KR\",\n  // Korea\n  0x0054: \"VN\",\n  // Viet Nam\n  0x0056: \"CN\",\n  // China\n  0x005A: \"TR\",\n  // Turkey\n  0x0069: \"JS\",\n  // Ramastan\n  0x00D5: \"DZ\",\n  // Algeria\n  0x00D8: \"MA\",\n  // Morocco\n  0x00DA: \"LY\",\n  // Libya\n  0x015F: \"PT\",\n  // Portugal\n  0x0162: \"IS\",\n  // Iceland\n  0x0166: \"FI\",\n  // Finland\n  0x01A4: \"CZ\",\n  // Czech Republic\n  0x0376: \"TW\",\n  // Taiwan\n  0x03C1: \"LB\",\n  // Lebanon\n  0x03C2: \"JO\",\n  // Jordan\n  0x03C3: \"SY\",\n  // Syria\n  0x03C4: \"IQ\",\n  // Iraq\n  0x03C5: \"KW\",\n  // Kuwait\n  0x03C6: \"SA\",\n  // Saudi Arabia\n  0x03CB: \"AE\",\n  // United Arab Emirates\n  0x03CC: \"IL\",\n  // Israel\n  0x03CE: \"QA\",\n  // Qatar\n  0x03D5: \"IR\",\n  // Iran\n  0xFFFF: \"US\" // United States\n};\n\n/* [MS-XLS] 2.5.127 */\nvar XLSFillPattern = [null, 'solid', 'mediumGray', 'darkGray', 'lightGray', 'darkHorizontal', 'darkVertical', 'darkDown', 'darkUp', 'darkGrid', 'darkTrellis', 'lightHorizontal', 'lightVertical', 'lightDown', 'lightUp', 'lightGrid', 'lightTrellis', 'gray125', 'gray0625'];\nfunction rgbify(arr /*:Array<number>*/) /*:Array<[number, number, number]>*/{\n  return arr.map(function (x) {\n    return [x >> 16 & 255, x >> 8 & 255, x & 255];\n  });\n}\n\n/* [MS-XLS] 2.5.161 */\n/* [MS-XLSB] 2.5.75 Icv */\nvar _XLSIcv = /*#__PURE__*/rgbify([/* Color Constants */\n0x000000, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF, /* Overridable Defaults */\n0x000000, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF, 0x800000, 0x008000, 0x000080, 0x808000, 0x800080, 0x008080, 0xC0C0C0, 0x808080, 0x9999FF, 0x993366, 0xFFFFCC, 0xCCFFFF, 0x660066, 0xFF8080, 0x0066CC, 0xCCCCFF, 0x000080, 0xFF00FF, 0xFFFF00, 0x00FFFF, 0x800080, 0x800000, 0x008080, 0x0000FF, 0x00CCFF, 0xCCFFFF, 0xCCFFCC, 0xFFFF99, 0x99CCFF, 0xFF99CC, 0xCC99FF, 0xFFCC99, 0x3366FF, 0x33CCCC, 0x99CC00, 0xFFCC00, 0xFF9900, 0xFF6600, 0x666699, 0x969696, 0x003366, 0x339966, 0x003300, 0x333300, 0x993300, 0x993366, 0x333399, 0x333333, /* Other entries to appease BIFF8/12 */\n0x000000, /* 0x40 icvForeground ?? */\n0xFFFFFF, /* 0x41 icvBackground ?? */\n0x000000, /* 0x42 icvFrame ?? */\n0x000000, /* 0x43 icv3D ?? */\n0x000000, /* 0x44 icv3DText ?? */\n0x000000, /* 0x45 icv3DHilite ?? */\n0x000000, /* 0x46 icv3DShadow ?? */\n0x000000, /* 0x47 icvHilite ?? */\n0x000000, /* 0x48 icvCtlText ?? */\n0x000000, /* 0x49 icvCtlScrl ?? */\n0x000000, /* 0x4A icvCtlInv ?? */\n0x000000, /* 0x4B icvCtlBody ?? */\n0x000000, /* 0x4C icvCtlFrame ?? */\n0x000000, /* 0x4D icvCtlFore ?? */\n0x000000, /* 0x4E icvCtlBack ?? */\n0x000000, /* 0x4F icvCtlNeutral */\n0x000000, /* 0x50 icvInfoBk ?? */\n0x000000 /* 0x51 icvInfoText ?? */]);\nvar XLSIcv = /*#__PURE__*/dup(_XLSIcv);\n\n/* [MS-XLSB] 2.5.97.2 */\nvar BErr = {\n  0x00: \"#NULL!\",\n  0x07: \"#DIV/0!\",\n  0x0F: \"#VALUE!\",\n  0x17: \"#REF!\",\n  0x1D: \"#NAME?\",\n  0x24: \"#NUM!\",\n  0x2A: \"#N/A\",\n  0x2B: \"#GETTING_DATA\",\n  0xFF: \"#WTF?\"\n};\n//var RBErr = evert_num(BErr);\nvar RBErr = {\n  \"#NULL!\": 0x00,\n  \"#DIV/0!\": 0x07,\n  \"#VALUE!\": 0x0F,\n  \"#REF!\": 0x17,\n  \"#NAME?\": 0x1D,\n  \"#NUM!\": 0x24,\n  \"#N/A\": 0x2A,\n  \"#GETTING_DATA\": 0x2B,\n  \"#WTF?\": 0xFF\n};\nvar XLSLblBuiltIn = [\"_xlnm.Consolidate_Area\", \"_xlnm.Auto_Open\", \"_xlnm.Auto_Close\", \"_xlnm.Extract\", \"_xlnm.Database\", \"_xlnm.Criteria\", \"_xlnm.Print_Area\", \"_xlnm.Print_Titles\", \"_xlnm.Recorder\", \"_xlnm.Data_Form\", \"_xlnm.Auto_Activate\", \"_xlnm.Auto_Deactivate\", \"_xlnm.Sheet_Title\", \"_xlnm._FilterDatabase\"];\n\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n/* 12.3 Part Summary <SpreadsheetML> */\n/* 14.2 Part Summary <DrawingML> */\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\nvar ct2type /*{[string]:string}*/ = {\n  /* Workbook */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n  \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\": \"workbooks\",\n  \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\": \"workbooks\",\n  \"application/vnd.ms-excel.addin.macroEnabled.main+xml\": \"workbooks\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": \"workbooks\",\n  /* Worksheet */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": \"sheets\",\n  \"application/vnd.ms-excel.worksheet\": \"sheets\",\n  \"application/vnd.ms-excel.binIndexWs\": \"TODO\",\n  /* Binary Index */\n\n  /* Chartsheet */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": \"charts\",\n  \"application/vnd.ms-excel.chartsheet\": \"charts\",\n  /* Macrosheet */\n  \"application/vnd.ms-excel.macrosheet+xml\": \"macros\",\n  \"application/vnd.ms-excel.macrosheet\": \"macros\",\n  \"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n  \"application/vnd.ms-excel.binIndexMs\": \"TODO\",\n  /* Binary Index */\n\n  /* Dialogsheet */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": \"dialogs\",\n  \"application/vnd.ms-excel.dialogsheet\": \"dialogs\",\n  /* Shared Strings */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\": \"strs\",\n  \"application/vnd.ms-excel.sharedStrings\": \"strs\",\n  /* Styles */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": \"styles\",\n  \"application/vnd.ms-excel.styles\": \"styles\",\n  /* File Properties */\n  \"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n  \"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n  \"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n  /* Custom Data Properties */\n  \"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n  /* Comments */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": \"comments\",\n  \"application/vnd.ms-excel.comments\": \"comments\",\n  \"application/vnd.ms-excel.threadedcomments+xml\": \"threadedcomments\",\n  \"application/vnd.ms-excel.person+xml\": \"people\",\n  /* Metadata (Stock/Geography and Dynamic Array) */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"metadata\",\n  \"application/vnd.ms-excel.sheetMetadata\": \"metadata\",\n  /* PivotTable */\n  \"application/vnd.ms-excel.pivotTable\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n  /* Chart Objects */\n  \"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n  /* Chart Colors */\n  \"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n  /* Chart Style */\n  \"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n  /* Chart Advanced */\n  \"application/vnd.ms-office.chartex+xml\": \"TODO\",\n  /* Calculation Chain */\n  \"application/vnd.ms-excel.calcChain\": \"calcchains\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n  /* Printer Settings */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n  /* ActiveX */\n  \"application/vnd.ms-office.activeX\": \"TODO\",\n  \"application/vnd.ms-office.activeX+xml\": \"TODO\",\n  /* Custom Toolbars */\n  \"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n  /* External Data Connections */\n  \"application/vnd.ms-excel.connections\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n  /* External Links */\n  \"application/vnd.ms-excel.externalLink\": \"links\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n  /* PivotCache */\n  \"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n  \"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n  /* Query Table */\n  \"application/vnd.ms-excel.queryTable\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n  /* Shared Workbook */\n  \"application/vnd.ms-excel.userNames\": \"TODO\",\n  \"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n  \"application/vnd.ms-excel.revisionLog\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n  /* Single Cell Table */\n  \"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n  /* Slicer */\n  \"application/vnd.ms-excel.slicer\": \"TODO\",\n  \"application/vnd.ms-excel.slicerCache\": \"TODO\",\n  \"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n  \"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n  /* Sort Map */\n  \"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n  /* Table */\n  \"application/vnd.ms-excel.table\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n  /* Themes */\n  \"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n  /* Theme Override */\n  \"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n  /* Timeline */\n  \"application/vnd.ms-excel.Timeline+xml\": \"TODO\",\n  /* verify */\n  \"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\",\n  /* verify */\n\n  /* VBA */\n  \"application/vnd.ms-office.vbaProject\": \"vba\",\n  \"application/vnd.ms-office.vbaProjectSignature\": \"TODO\",\n  /* Volatile Dependencies */\n  \"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n  /* Control Properties */\n  \"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n  /* Data Model */\n  \"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n  /* Survey */\n  \"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n  /* Drawing */\n  \"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n  /* VML */\n  \"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n  \"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n  \"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n  /* Image */\n  \"image/png\": \"TODO\",\n  \"sheet\": \"js\"\n} /*:any*/;\nvar CT_LIST = {\n  workbooks: {\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n    xlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n    xlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n    xlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n    xltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n  },\n  strs: {\n    /* Shared Strings */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n    xlsb: \"application/vnd.ms-excel.sharedStrings\"\n  },\n  comments: {\n    /* Comments */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n    xlsb: \"application/vnd.ms-excel.comments\"\n  },\n  sheets: {\n    /* Worksheet */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n    xlsb: \"application/vnd.ms-excel.worksheet\"\n  },\n  charts: {\n    /* Chartsheet */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n    xlsb: \"application/vnd.ms-excel.chartsheet\"\n  },\n  dialogs: {\n    /* Dialogsheet */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n    xlsb: \"application/vnd.ms-excel.dialogsheet\"\n  },\n  macros: {\n    /* Macrosheet (Excel 4.0 Macros) */\n    xlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n    xlsb: \"application/vnd.ms-excel.macrosheet\"\n  },\n  metadata: {\n    /* Metadata (Stock/Geography and Dynamic Array) */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\",\n    xlsb: \"application/vnd.ms-excel.sheetMetadata\"\n  },\n  styles: {\n    /* Styles */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n    xlsb: \"application/vnd.ms-excel.styles\"\n  }\n};\nfunction new_ct() /*:any*/{\n  return {\n    workbooks: [],\n    sheets: [],\n    charts: [],\n    dialogs: [],\n    macros: [],\n    rels: [],\n    strs: [],\n    comments: [],\n    threadedcomments: [],\n    links: [],\n    coreprops: [],\n    extprops: [],\n    custprops: [],\n    themes: [],\n    styles: [],\n    calcchains: [],\n    vba: [],\n    drawings: [],\n    metadata: [],\n    people: [],\n    TODO: [],\n    xmlns: \"\"\n  } /*:any*/;\n}\nfunction parse_ct(data /*:?string*/) {\n  var ct = new_ct();\n  if (!data || !data.match) return ct;\n  var ctext = {};\n  (data.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (y[0].replace(nsregex, \"<\")) {\n      case '<?xml':\n        break;\n      case '<Types':\n        ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/) || [\"\", \"\"])[1]];\n        break;\n      case '<Default':\n        ctext[y.Extension.toLowerCase()] = y.ContentType;\n        break;\n      case '<Override':\n        if (ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n        break;\n    }\n  });\n  if (ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n  ct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n  ct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n  ct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n  ct.defaults = ctext;\n  delete ct.calcchains;\n  return ct;\n}\nfunction write_ct(ct, opts, raw) /*:string*/{\n  var type2ct /*{[string]:Array<string>}*/ = evert_arr(ct2type);\n  var o /*:Array<string>*/ = [],\n    v;\n  if (!raw) {\n    o[o.length] = XML_HEADER;\n    o[o.length] = writextag('Types', null, {\n      'xmlns': XMLNS.CT,\n      'xmlns:xsd': XMLNS.xsd,\n      'xmlns:xsi': XMLNS.xsi\n    });\n    o = o.concat([['xml', 'application/xml'], ['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'], ['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'], ['data', 'application/vnd.openxmlformats-officedocument.model+data'], /* from test files */\n    ['bmp', 'image/bmp'], ['png', 'image/png'], ['gif', 'image/gif'], ['emf', 'image/x-emf'], ['wmf', 'image/x-wmf'], ['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'], ['tif', 'image/tiff'], ['tiff', 'image/tiff'], ['pdf', 'application/pdf'], ['rels', 'application/vnd.openxmlformats-package.relationships+xml']].map(function (x) {\n      return writextag('Default', null, {\n        'Extension': x[0],\n        'ContentType': x[1]\n      });\n    }));\n  }\n\n  /* only write first instance */\n  var f1 = function (w) {\n    if (ct[w] && ct[w].length > 0) {\n      v = ct[w][0];\n      o[o.length] = writextag('Override', null, {\n        'PartName': (v[0] == '/' ? \"\" : \"/\") + v,\n        'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n      });\n    }\n  };\n\n  /* book type-specific */\n  var f2 = function (w) {\n    (ct[w] || []).forEach(function (v) {\n      o[o.length] = writextag('Override', null, {\n        'PartName': (v[0] == '/' ? \"\" : \"/\") + v,\n        'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n      });\n    });\n  };\n\n  /* standard type */\n  var f3 = function (t) {\n    (ct[t] || []).forEach(function (v) {\n      o[o.length] = writextag('Override', null, {\n        'PartName': (v[0] == '/' ? \"\" : \"/\") + v,\n        'ContentType': type2ct[t][0]\n      });\n    });\n  };\n  f1('workbooks');\n  f2('sheets');\n  f2('charts');\n  f3('themes');\n  ['strs', 'styles'].forEach(f1);\n  ['coreprops', 'extprops', 'custprops'].forEach(f3);\n  f3('vba');\n  f3('comments');\n  f3('threadedcomments');\n  f3('drawings');\n  f2('metadata');\n  f3('people');\n  if (!raw && o.length > 2) {\n    o[o.length] = '</Types>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* 9.3 Relationships */\nvar RELS = {\n  WB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n  SHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n  HLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n  VML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n  XPATH: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath\",\n  XMISS: \"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing\",\n  XLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink\",\n  CXML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml\",\n  CXMLP: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps\",\n  CMNT: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\",\n  CORE_PROPS: \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n  EXT_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',\n  CUST_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties',\n  SST: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\",\n  STY: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n  THEME: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n  CHART: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart\",\n  CHARTEX: \"http://schemas.microsoft.com/office/2014/relationships/chartEx\",\n  CS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\",\n  WS: [\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\", \"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"],\n  DS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\",\n  MS: \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\",\n  IMG: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n  DRAW: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\",\n  XLMETA: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata\",\n  TCMNT: \"http://schemas.microsoft.com/office/2017/10/relationships/threadedComment\",\n  PEOPLE: \"http://schemas.microsoft.com/office/2017/10/relationships/person\",\n  CONN: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/connections\",\n  VBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n} /*:any*/;\n\n/* 9.3.3 Representing Relationships */\nfunction get_rels_path(file /*:string*/) /*:string*/{\n  var n = file.lastIndexOf(\"/\");\n  return file.slice(0, n + 1) + '_rels/' + file.slice(n + 1) + \".rels\";\n}\nfunction parse_rels(data /*:?string*/, currentFilePath /*:string*/) {\n  var rels = {\n    \"!id\": {}\n  };\n  if (!data) return rels;\n  if (currentFilePath.charAt(0) !== '/') {\n    currentFilePath = '/' + currentFilePath;\n  }\n  var hash = {};\n  (data.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    /* 9.3.2.2 OPC_Relationships */\n    if (y[0] === '<Relationship') {\n      var rel = {};\n      rel.Type = y.Type;\n      rel.Target = unescapexml(y.Target);\n      rel.Id = y.Id;\n      if (y.TargetMode) rel.TargetMode = y.TargetMode;\n      var canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n      rels[canonictarget] = rel;\n      hash[y.Id] = rel;\n    }\n  });\n  rels[\"!id\"] = hash;\n  return rels;\n}\n\n/* TODO */\nfunction write_rels(rels) /*:string*/{\n  var o = [XML_HEADER, writextag('Relationships', null, {\n    //'xmlns:ns0': XMLNS.RELS,\n    'xmlns': XMLNS.RELS\n  })];\n  keys(rels['!id']).forEach(function (rid) {\n    o[o.length] = writextag('Relationship', null, rels['!id'][rid]);\n  });\n  if (o.length > 2) {\n    o[o.length] = '</Relationships>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\nfunction add_rels(rels, rId /*:number*/, f, type, relobj, targetmode /*:?string*/) /*:number*/{\n  if (!relobj) relobj = {};\n  if (!rels['!id']) rels['!id'] = {};\n  if (!rels['!idx']) rels['!idx'] = 1;\n  if (rId < 0) for (rId = rels['!idx']; rels['!id']['rId' + rId]; ++rId) {/* empty */}\n  rels['!idx'] = rId + 1;\n  relobj.Id = 'rId' + rId;\n  relobj.Type = type;\n  relobj.Target = f;\n  if (targetmode) relobj.TargetMode = targetmode;else if ([RELS.HLINK, RELS.XPATH, RELS.XMISS].indexOf(relobj.Type) > -1) relobj.TargetMode = \"External\";\n  if (rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n  rels['!id'][relobj.Id] = relobj;\n  rels[('/' + relobj.Target).replace(\"//\", \"/\")] = relobj;\n  return rId;\n}\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nfunction parse_manifest(d, opts) {\n  var str = xlml_normalize(d);\n  var Rn;\n  var FEtag;\n  while (Rn = xlmlregex.exec(str)) switch (Rn[3]) {\n    case \"manifest\":\n      break;\n    case \"file-entry\":\n      FEtag = parsexmltag(Rn[0], false);\n      if (FEtag.path == \"/\" && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n      break;\n    case \"encryption-data\":\n    case \"algorithm\":\n    case \"start-key-generation\":\n    case \"key-derivation\":\n      throw new Error(\"Unsupported ODS Encryption\");\n    default:\n      if (opts && opts.WTF) throw Rn;\n  }\n}\nfunction write_manifest(manifest) {\n  var o = [XML_HEADER];\n  o.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n  o.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n  for (var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n  o.push(\"</manifest:manifest>\");\n  return o.join(\"\");\n}\nfunction write_rdf_type(file, res, tag) {\n  return ['  <rdf:Description rdf:about=\"' + file + '\">\\n', '    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + \"#\" + res + '\"/>\\n', \"  </rdf:Description>\\n\"].join(\"\");\n}\nfunction write_rdf_has(base, file) {\n  return ['  <rdf:Description rdf:about=\"' + base + '\">\\n', '    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n', \"  </rdf:Description>\\n\"].join(\"\");\n}\nfunction write_rdf(rdf) {\n  var o = [XML_HEADER];\n  o.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n  for (var i = 0; i != rdf.length; ++i) {\n    o.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n    o.push(write_rdf_has(\"\", rdf[i][0]));\n  }\n  o.push(write_rdf_type(\"\", \"Document\", \"pkg\"));\n  o.push(\"</rdf:RDF>\");\n  return o.join(\"\");\n}\nfunction write_meta_ods(wb, opts) {\n  return '<office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>SheetJS ' + XLSX.version + \"</meta:generator></office:meta></office:document-meta>\";\n}\n/* ECMA-376 Part II 11.1 Core Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar CORE_PROPS /*:Array<Array<string> >*/ = [[\"cp:category\", \"Category\"], [\"cp:contentStatus\", \"ContentStatus\"], [\"cp:keywords\", \"Keywords\"], [\"cp:lastModifiedBy\", \"LastAuthor\"], [\"cp:lastPrinted\", \"LastPrinted\"], [\"cp:revision\", \"RevNumber\"], [\"cp:version\", \"Version\"], [\"dc:creator\", \"Author\"], [\"dc:description\", \"Comments\"], [\"dc:identifier\", \"Identifier\"], [\"dc:language\", \"Language\"], [\"dc:subject\", \"Subject\"], [\"dc:title\", \"Title\"], [\"dcterms:created\", \"CreatedDate\", 'date'], [\"dcterms:modified\", \"ModifiedDate\", 'date']];\nfunction parse_core_props(data) {\n  var p = {};\n  data = utf8read(data);\n  for (var i = 0; i < CORE_PROPS.length; ++i) {\n    var f = CORE_PROPS[i],\n      cur = str_match_xml(data, f[0]);\n    if (cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);\n    if (f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\n  }\n  return p;\n}\nfunction cp_doit(f, g, h, o, p) {\n  if (p[f] != null || g == null || g === \"\") return;\n  p[f] = g;\n  g = escapexml(g);\n  o[o.length] = h ? writextag(f, g, h) : writetag(f, g);\n}\nfunction write_core_props(cp, _opts) {\n  var opts = _opts || {};\n  var o = [XML_HEADER, writextag('cp:coreProperties', null, {\n      //'xmlns': XMLNS.CORE_PROPS,\n      'xmlns:cp': XMLNS.CORE_PROPS,\n      'xmlns:dc': XMLNS.dc,\n      'xmlns:dcterms': XMLNS.dcterms,\n      'xmlns:dcmitype': XMLNS.dcmitype,\n      'xmlns:xsi': XMLNS.xsi\n    })],\n    p = {};\n  if (!cp && !opts.Props) return o.join(\"\");\n  if (cp) {\n    if (cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\n      \"xsi:type\": \"dcterms:W3CDTF\"\n    }, o, p);\n    if (cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\n      \"xsi:type\": \"dcterms:W3CDTF\"\n    }, o, p);\n  }\n  for (var i = 0; i != CORE_PROPS.length; ++i) {\n    var f = CORE_PROPS[i];\n    var v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n    if (v === true) v = \"1\";else if (v === false) v = \"0\";else if (typeof v == \"number\") v = String(v);\n    if (v != null) cp_doit(f[0], v, null, o, p);\n  }\n  if (o.length > 2) {\n    o[o.length] = '</cp:coreProperties>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* 15.2.12.3 Extended File Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar EXT_PROPS /*:Array<Array<string> >*/ = [[\"Application\", \"Application\", \"string\"], [\"AppVersion\", \"AppVersion\", \"string\"], [\"Company\", \"Company\", \"string\"], [\"DocSecurity\", \"DocSecurity\", \"string\"], [\"Manager\", \"Manager\", \"string\"], [\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"], [\"SharedDoc\", \"SharedDoc\", \"bool\"], [\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"], [\"ScaleCrop\", \"ScaleCrop\", \"bool\"], [\"HeadingPairs\", \"HeadingPairs\", \"raw\"], [\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]];\nvar PseudoPropsPairs = [\"Worksheets\", \"SheetNames\", \"NamedRanges\", \"DefinedNames\", \"Chartsheets\", \"ChartNames\"];\nfunction load_props_pairs(HP /*:string|Array<Array<any>>*/, TOP, props, opts) {\n  var v = [];\n  if (typeof HP == \"string\") v = parseVector(HP, opts);else for (var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function (hp) {\n    return {\n      v: hp\n    };\n  }));\n  var parts = typeof TOP == \"string\" ? parseVector(TOP, opts).map(function (x) {\n    return x.v;\n  }) : TOP;\n  var idx = 0,\n    len = 0;\n  if (parts.length > 0) for (var i = 0; i !== v.length; i += 2) {\n    len = +v[i + 1].v;\n    switch (v[i].v) {\n      case \"Worksheets\":\n      case \"工作表\":\n      case \"Листы\":\n      case \"أوراق العمل\":\n      case \"ワークシート\":\n      case \"גליונות עבודה\":\n      case \"Arbeitsblätter\":\n      case \"Çalışma Sayfaları\":\n      case \"Feuilles de calcul\":\n      case \"Fogli di lavoro\":\n      case \"Folhas de cálculo\":\n      case \"Planilhas\":\n      case \"Regneark\":\n      case \"Hojas de cálculo\":\n      case \"Werkbladen\":\n        props.Worksheets = len;\n        props.SheetNames = parts.slice(idx, idx + len);\n        break;\n      case \"Named Ranges\":\n      case \"Rangos con nombre\":\n      case \"名前付き一覧\":\n      case \"Benannte Bereiche\":\n      case \"Navngivne områder\":\n        props.NamedRanges = len;\n        props.DefinedNames = parts.slice(idx, idx + len);\n        break;\n      case \"Charts\":\n      case \"Diagramme\":\n        props.Chartsheets = len;\n        props.ChartNames = parts.slice(idx, idx + len);\n        break;\n    }\n    idx += len;\n  }\n}\nfunction parse_ext_props(data, p, opts) {\n  var q = {};\n  if (!p) p = {};\n  data = utf8read(data);\n  EXT_PROPS.forEach(function (f) {\n    var xml = (str_match_xml_ns(data, f[0]) || [])[1];\n    switch (f[2]) {\n      case \"string\":\n        if (xml) p[f[1]] = unescapexml(xml);\n        break;\n      case \"bool\":\n        p[f[1]] = xml === \"true\";\n        break;\n      case \"raw\":\n        var cur = str_match_xml(data, f[0]);\n        if (cur && cur.length > 0) q[f[1]] = cur[1];\n        break;\n    }\n  });\n  if (q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n  return p;\n}\nfunction write_ext_props(cp /*::, opts*/) /*:string*/{\n  var o /*:Array<string>*/ = [],\n    W = writextag;\n  if (!cp) cp = {};\n  cp.Application = \"SheetJS\";\n  o[o.length] = XML_HEADER;\n  o[o.length] = writextag('Properties', null, {\n    'xmlns': XMLNS.EXT_PROPS,\n    'xmlns:vt': XMLNS.vt\n  });\n  EXT_PROPS.forEach(function (f) {\n    if (cp[f[1]] === undefined) return;\n    var v;\n    switch (f[2]) {\n      case 'string':\n        v = escapexml(String(cp[f[1]]));\n        break;\n      case 'bool':\n        v = cp[f[1]] ? 'true' : 'false';\n        break;\n    }\n    if (v !== undefined) o[o.length] = W(f[0], v);\n  });\n\n  /* TODO: HeadingPairs, TitlesOfParts */\n  o[o.length] = W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>') + W('vt:variant', W('vt:i4', String(cp.Worksheets))), {\n    size: 2,\n    baseType: \"variant\"\n  }));\n  o[o.length] = W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function (s) {\n    return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\";\n  }).join(\"\"), {\n    size: cp.Worksheets,\n    baseType: \"lpstr\"\n  }));\n  if (o.length > 2) {\n    o[o.length] = '</Properties>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* 15.2.12.2 Custom File Properties Part */\nvar custregex = /<[^<>]+>[^<]*/g;\nfunction parse_cust_props(data /*:string*/, opts) {\n  var p = {},\n    name = \"\";\n  var m = data.match(custregex);\n  if (m) for (var i = 0; i != m.length; ++i) {\n    var x = m[i],\n      y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n      case '<Properties':\n        break;\n      case '<property':\n        name = unescapexml(y.name);\n        break;\n      case '</property>':\n        name = null;\n        break;\n      default:\n        if (x.indexOf('<vt:') === 0) {\n          var toks = x.split('>');\n          var type = toks[0].slice(4),\n            text = toks[1];\n          /* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n          switch (type) {\n            case 'lpstr':\n            case 'bstr':\n            case 'lpwstr':\n              p[name] = unescapexml(text);\n              break;\n            case 'bool':\n              p[name] = parsexmlbool(text);\n              break;\n            case 'i1':\n            case 'i2':\n            case 'i4':\n            case 'i8':\n            case 'int':\n            case 'uint':\n              p[name] = parseInt(text, 10);\n              break;\n            case 'r4':\n            case 'r8':\n            case 'decimal':\n              p[name] = parseFloat(text);\n              break;\n            case 'filetime':\n            case 'date':\n              p[name] = parseDate(text);\n              break;\n            case 'cy':\n            case 'error':\n              p[name] = unescapexml(text);\n              break;\n            default:\n              if (type.slice(-1) == '/') break;\n              if (opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n          }\n        } else if (x.slice(0, 2) === \"</\") {/* empty */\n        } else if (opts.WTF) throw new Error(x);\n    }\n  }\n  return p;\n}\nfunction write_cust_props(cp /*::, opts*/) /*:string*/{\n  var o = [XML_HEADER, writextag('Properties', null, {\n    'xmlns': XMLNS.CUST_PROPS,\n    'xmlns:vt': XMLNS.vt\n  })];\n  if (!cp) return o.join(\"\");\n  var pid = 1;\n  keys(cp).forEach(function custprop(k) {\n    ++pid;\n    o[o.length] = writextag('property', write_vt(cp[k], true), {\n      'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n      'pid': pid,\n      'name': escapexml(k)\n    });\n  });\n  if (o.length > 2) {\n    o[o.length] = '</Properties>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* Common Name -> XLML Name */\nvar XLMLDocPropsMap = {\n  Title: 'Title',\n  Subject: 'Subject',\n  Author: 'Author',\n  Keywords: 'Keywords',\n  Comments: 'Description',\n  LastAuthor: 'LastAuthor',\n  RevNumber: 'Revision',\n  Application: 'AppName',\n  /* TotalTime: 'TotalTime', */\n  LastPrinted: 'LastPrinted',\n  CreatedDate: 'Created',\n  ModifiedDate: 'LastSaved',\n  /* Pages */\n  /* Words */\n  /* Characters */\n  Category: 'Category',\n  /* PresentationFormat */\n  Manager: 'Manager',\n  Company: 'Company',\n  /* Guid */\n  /* HyperlinkBase */\n  /* Bytes */\n  /* Lines */\n  /* Paragraphs */\n  /* CharactersWithSpaces */\n  AppVersion: 'Version',\n  ContentStatus: 'ContentStatus',\n  /* NOTE: missing from schema */\n  Identifier: 'Identifier',\n  /* NOTE: missing from schema */\n  Language: 'Language' /* NOTE: missing from schema */\n};\nvar evert_XLMLDPM;\nfunction xlml_set_prop(Props, tag /*:string*/, val) {\n  if (!evert_XLMLDPM) evert_XLMLDPM = evert(XLMLDocPropsMap);\n  tag = evert_XLMLDPM[tag] || tag;\n  Props[tag] = val;\n}\nfunction xlml_write_docprops(Props, opts) {\n  var o /*:Array<string>*/ = [];\n  keys(XLMLDocPropsMap).map(function (m) {\n    for (var i = 0; i < CORE_PROPS.length; ++i) if (CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n    for (i = 0; i < EXT_PROPS.length; ++i) if (EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n    throw m;\n  }).forEach(function (p) {\n    if (Props[p[1]] == null) return;\n    var m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n    switch (p[2]) {\n      case 'date':\n        m = new Date(m).toISOString().replace(/\\.\\d*Z/, \"Z\");\n        break;\n    }\n    if (typeof m == 'number') m = String(m);else if (m === true || m === false) {\n      m = m ? \"1\" : \"0\";\n    } else if (m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/, \"\");\n    o.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n  });\n  return writextag('DocumentProperties', o.join(\"\"), {\n    xmlns: XLMLNS.o\n  });\n}\nfunction xlml_write_custprops(Props, Custprops /*::, opts*/) {\n  var BLACKLIST = [\"Worksheets\", \"SheetNames\"];\n  var T = 'CustomDocumentProperties';\n  var o /*:Array<string>*/ = [];\n  if (Props) keys(Props).forEach(function (k) {\n    /*:: if(!Props) return; */\n    if (!Object.prototype.hasOwnProperty.call(Props, k)) return;\n    for (var i = 0; i < CORE_PROPS.length; ++i) if (k == CORE_PROPS[i][1]) return;\n    for (i = 0; i < EXT_PROPS.length; ++i) if (k == EXT_PROPS[i][1]) return;\n    for (i = 0; i < BLACKLIST.length; ++i) if (k == BLACKLIST[i]) return;\n    var m = Props[k];\n    var t = \"string\";\n    if (typeof m == 'number') {\n      t = \"float\";\n      m = String(m);\n    } else if (m === true || m === false) {\n      t = \"boolean\";\n      m = m ? \"1\" : \"0\";\n    } else m = String(m);\n    o.push(writextag(escapexmltag(k), m, {\n      \"dt:dt\": t\n    }));\n  });\n  if (Custprops) keys(Custprops).forEach(function (k) {\n    /*:: if(!Custprops) return; */\n    if (!Object.prototype.hasOwnProperty.call(Custprops, k)) return;\n    if (Props && Object.prototype.hasOwnProperty.call(Props, k)) return;\n    var m = Custprops[k];\n    var t = \"string\";\n    if (typeof m == 'number') {\n      t = \"float\";\n      m = String(m);\n    } else if (m === true || m === false) {\n      t = \"boolean\";\n      m = m ? \"1\" : \"0\";\n    } else if (m instanceof Date) {\n      t = \"dateTime.tz\";\n      m = m.toISOString();\n    } else m = String(m);\n    o.push(writextag(escapexmltag(k), m, {\n      \"dt:dt\": t\n    }));\n  });\n  return '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n}\n/* [MS-DTYP] 2.3.3 FILETIME */\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\nfunction parse_FILETIME(blob) {\n  var dwLowDateTime = blob.read_shift(4),\n    dwHighDateTime = blob.read_shift(4);\n  return new Date((dwHighDateTime / 1e7 * Math.pow(2, 32) + dwLowDateTime / 1e7 - 11644473600) * 1000).toISOString().replace(/\\.000/, \"\");\n}\nfunction write_FILETIME(time /*:string|Date*/) {\n  var date = typeof time == \"string\" ? new Date(Date.parse(time)) : time;\n  var t = date.getTime() / 1000 + 11644473600;\n  var l = t % Math.pow(2, 32),\n    h = (t - l) / Math.pow(2, 32);\n  l *= 1e7;\n  h *= 1e7;\n  var w = l / Math.pow(2, 32) | 0;\n  if (w > 0) {\n    l = l % Math.pow(2, 32);\n    h += w;\n  }\n  var o = new_buf(8);\n  o.write_shift(4, l);\n  o.write_shift(4, h);\n  return o;\n}\n\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\nfunction parse_lpstr(blob, type, pad /*:?number*/) {\n  var start = blob.l;\n  var str = blob.read_shift(0, 'lpstr-cp');\n  if (pad) while (blob.l - start & 3) ++blob.l;\n  return str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\nfunction parse_lpwstr(blob, type, pad) {\n  var str = blob.read_shift(0, 'lpwstr');\n  if (pad) blob.l += 4 - (str.length + 1 & 3) & 3;\n  return str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\nfunction parse_VtStringBase(blob, stringType, pad) {\n  if (stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n  return parse_lpstr(blob, stringType, pad);\n}\nfunction parse_VtString(blob, t /*:number*/, pad /*:?boolean*/) {\n  return parse_VtStringBase(blob, t, pad === false ? 0 : 4);\n}\nfunction parse_VtUnalignedString(blob, t /*:number*/) {\n  if (!t) throw new Error(\"VtUnalignedString must have positive length\");\n  return parse_VtStringBase(blob, t, 0);\n}\n\n/* [MS-OSHARED] 2.3.3.1.7 VtVecLpwstrValue */\nfunction parse_VtVecLpwstrValue(blob) /*:Array<string>*/{\n  var length = blob.read_shift(4);\n  var ret /*:Array<string>*/ = [];\n  for (var i = 0; i != length; ++i) {\n    var start = blob.l;\n    ret[i] = blob.read_shift(0, 'lpwstr').replace(chr0, '');\n    if (blob.l - start & 0x02) blob.l += 2;\n  }\n  return ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\nfunction parse_VtVecUnalignedLpstrValue(blob) /*:Array<string>*/{\n  var length = blob.read_shift(4);\n  var ret /*:Array<string>*/ = [];\n  for (var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0, '');\n  return ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\nfunction parse_VtHeadingPair(blob) {\n  var start = blob.l;\n  var headingString = parse_TypedPropertyValue(blob, VT_USTR);\n  if (blob[blob.l] == 0x00 && blob[blob.l + 1] == 0x00 && blob.l - start & 0x02) blob.l += 2;\n  var headerParts = parse_TypedPropertyValue(blob, VT_I4);\n  return [headingString, headerParts];\n}\n\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\nfunction parse_VtVecHeadingPairValue(blob) {\n  var cElements = blob.read_shift(4);\n  var out = [];\n  for (var i = 0; i < cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n  return out;\n}\n\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\nfunction parse_dictionary(blob, CodePage) {\n  var cnt = blob.read_shift(4);\n  var dict /*:{[number]:string}*/ = {} /*:any*/;\n  for (var j = 0; j != cnt; ++j) {\n    var pid = blob.read_shift(4);\n    var len = blob.read_shift(4);\n    dict[pid] = blob.read_shift(len, CodePage === 0x4B0 ? 'utf16le' : 'utf8').replace(chr0, '').replace(chr1, '!');\n    if (CodePage === 0x4B0 && len % 2) blob.l += 2;\n  }\n  if (blob.l & 3) blob.l = blob.l >> 2 + 1 << 2;\n  return dict;\n}\n\n/* [MS-OLEPS] 2.9 BLOB */\nfunction parse_BLOB(blob) {\n  var size = blob.read_shift(4);\n  var bytes = blob.slice(blob.l, blob.l + size);\n  blob.l += size;\n  if ((size & 3) > 0) blob.l += 4 - (size & 3) & 3;\n  return bytes;\n}\n\n/* [MS-OLEPS] 2.11 ClipboardData */\nfunction parse_ClipboardData(blob) {\n  // TODO\n  var o = {};\n  o.Size = blob.read_shift(4);\n  //o.Format = blob.read_shift(4);\n  blob.l += o.Size + 3 - (o.Size - 1) % 4;\n  return o;\n}\n\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\nfunction parse_TypedPropertyValue(blob, type /*:number*/, _opts) /*:any*/{\n  var t = blob.read_shift(2),\n    ret,\n    opts = _opts || {};\n  blob.l += 2;\n  if (type !== VT_VARIANT) if (t !== type && VT_CUSTOM.indexOf(type) === -1 && !((type & 0xFFFE) == 0x101E && (t & 0xFFFE) == 0x101E)) throw new Error('Expected type ' + type + ' saw ' + t);\n  switch (type === VT_VARIANT ? t : type) {\n    case 0x02 /*VT_I2*/:\n      ret = blob.read_shift(2, 'i');\n      if (!opts.raw) blob.l += 2;\n      return ret;\n    case 0x03 /*VT_I4*/:\n      ret = blob.read_shift(4, 'i');\n      return ret;\n    case 0x0B /*VT_BOOL*/:\n      return blob.read_shift(4) !== 0x0;\n    case 0x13 /*VT_UI4*/:\n      ret = blob.read_shift(4);\n      return ret;\n    case 0x1E /*VT_LPSTR*/:\n      return parse_lpstr(blob, t, 4).replace(chr0, '');\n    case 0x1F /*VT_LPWSTR*/:\n      return parse_lpwstr(blob);\n    case 0x40 /*VT_FILETIME*/:\n      return parse_FILETIME(blob);\n    case 0x41 /*VT_BLOB*/:\n      return parse_BLOB(blob);\n    case 0x47 /*VT_CF*/:\n      return parse_ClipboardData(blob);\n    case 0x50 /*VT_STRING*/:\n      return parse_VtString(blob, t, !opts.raw).replace(chr0, '');\n    case 0x51 /*VT_USTR*/:\n      return parse_VtUnalignedString(blob, t /*, 4*/).replace(chr0, '');\n    case 0x100C /*VT_VECTOR|VT_VARIANT*/:\n      return parse_VtVecHeadingPairValue(blob);\n    case 0x101E /*VT_VECTOR|VT_LPSTR*/:\n    case 0x101F /*VT_VECTOR|VT_LPWSTR*/:\n      return t == 0x101F ? parse_VtVecLpwstrValue(blob) : parse_VtVecUnalignedLpstrValue(blob);\n    default:\n      throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n  }\n}\nfunction write_TypedPropertyValue(type /*:number*/, value) {\n  var o = new_buf(4),\n    p = new_buf(4);\n  o.write_shift(4, type == 0x50 ? 0x1F : type);\n  switch (type) {\n    case 0x03 /*VT_I4*/:\n      p.write_shift(-4, value);\n      break;\n    case 0x05 /*VT_I4*/:\n      p = new_buf(8);\n      p.write_shift(8, value, 'f');\n      break;\n    case 0x0B /*VT_BOOL*/:\n      p.write_shift(4, value ? 0x01 : 0x00);\n      break;\n    case 0x40 /*VT_FILETIME*/:\n      /*:: if(typeof value !== \"string\" && !(value instanceof Date)) throw \"unreachable\"; */p = write_FILETIME(value);\n      break;\n    case 0x1F /*VT_LPWSTR*/:\n    case 0x50 /*VT_STRING*/:\n      /*:: if(typeof value !== \"string\") throw \"unreachable\"; */\n      p = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n      p.write_shift(4, value.length + 1);\n      p.write_shift(0, value, \"dbcs\");\n      while (p.l != p.length) p.write_shift(1, 0);\n      break;\n    default:\n      throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n  }\n  return bconcat([o, p]);\n}\n\n/* [MS-OLEPS] 2.20 PropertySet */\nfunction parse_PropertySet(blob, PIDSI) {\n  var start_addr = blob.l;\n  var size = blob.read_shift(4);\n  var NumProps = blob.read_shift(4);\n  var Props = [],\n    i = 0;\n  var CodePage = 0;\n  var Dictionary = -1,\n    DictObj /*:{[number]:string}*/ = {} /*:any*/;\n  for (i = 0; i != NumProps; ++i) {\n    var PropID = blob.read_shift(4);\n    var Offset = blob.read_shift(4);\n    Props[i] = [PropID, Offset + start_addr];\n  }\n  Props.sort(function (x, y) {\n    return x[1] - y[1];\n  });\n  var PropH = {};\n  for (i = 0; i != NumProps; ++i) {\n    if (blob.l !== Props[i][1]) {\n      var fail = true;\n      if (i > 0 && PIDSI) switch (PIDSI[Props[i - 1][0]].t) {\n        case 0x02 /*VT_I2*/:\n          if (blob.l + 2 === Props[i][1]) {\n            blob.l += 2;\n            fail = false;\n          }\n          break;\n        case 0x50 /*VT_STRING*/:\n          if (blob.l <= Props[i][1]) {\n            blob.l = Props[i][1];\n            fail = false;\n          }\n          break;\n        case 0x100C /*VT_VECTOR|VT_VARIANT*/:\n          if (blob.l <= Props[i][1]) {\n            blob.l = Props[i][1];\n            fail = false;\n          }\n          break;\n      }\n      if ((!PIDSI || i == 0) && blob.l <= Props[i][1]) {\n        fail = false;\n        blob.l = Props[i][1];\n      }\n      if (fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n    }\n    if (PIDSI) {\n      if (Props[i][0] == 0 && Props.length > i + 1 && Props[i][1] == Props[i + 1][1]) continue; // R9\n      var piddsi = PIDSI[Props[i][0]];\n      PropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {\n        raw: true\n      });\n      if (piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n      if (piddsi.n == \"CodePage\") switch (PropH[piddsi.n]) {\n        case 0:\n          PropH[piddsi.n] = 1252;\n        /* falls through */\n        case 874:\n        case 932:\n        case 936:\n        case 949:\n        case 950:\n        case 1250:\n        case 1251:\n        case 1253:\n        case 1254:\n        case 1255:\n        case 1256:\n        case 1257:\n        case 1258:\n        case 10000:\n        case 1200:\n        case 1201:\n        case 1252:\n        case 65000:\n        case -536:\n        case 65001:\n        case -535:\n          set_cp(CodePage = PropH[piddsi.n] >>> 0 & 0xFFFF);\n          break;\n        default:\n          throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n      }\n    } else {\n      if (Props[i][0] === 0x1) {\n        CodePage = PropH.CodePage = parse_TypedPropertyValue(blob, VT_I2) /*:number*/;\n        set_cp(CodePage);\n        if (Dictionary !== -1) {\n          var oldpos = blob.l;\n          blob.l = Props[Dictionary][1];\n          DictObj = parse_dictionary(blob, CodePage);\n          blob.l = oldpos;\n        }\n      } else if (Props[i][0] === 0) {\n        if (CodePage === 0) {\n          Dictionary = i;\n          blob.l = Props[i + 1][1];\n          continue;\n        }\n        DictObj = parse_dictionary(blob, CodePage);\n      } else {\n        var name = DictObj[Props[i][0]];\n        var val;\n        /* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n        switch (blob[blob.l]) {\n          case 0x41 /*VT_BLOB*/:\n            blob.l += 4;\n            val = parse_BLOB(blob);\n            break;\n          case 0x1E /*VT_LPSTR*/:\n            blob.l += 4;\n            val = parse_VtString(blob, blob[blob.l - 4]).replace(/(^|[^\\u0000])\\u0000+$/, \"$1\");\n            break;\n          case 0x1F /*VT_LPWSTR*/:\n            blob.l += 4;\n            val = parse_VtString(blob, blob[blob.l - 4]).replace(/(^|[^\\u0000])\\u0000+$/, \"$1\");\n            break;\n          case 0x03 /*VT_I4*/:\n            blob.l += 4;\n            val = blob.read_shift(4, 'i');\n            break;\n          case 0x13 /*VT_UI4*/:\n            blob.l += 4;\n            val = blob.read_shift(4);\n            break;\n          case 0x05 /*VT_R8*/:\n            blob.l += 4;\n            val = blob.read_shift(8, 'f');\n            break;\n          case 0x0B /*VT_BOOL*/:\n            blob.l += 4;\n            val = parsebool(blob, 4);\n            break;\n          case 0x40 /*VT_FILETIME*/:\n            blob.l += 4;\n            val = parseDate(parse_FILETIME(blob));\n            break;\n          default:\n            throw new Error(\"unparsed value: \" + blob[blob.l]);\n        }\n        PropH[name] = val;\n      }\n    }\n  }\n  blob.l = start_addr + size; /* step ahead to skip padding */\n  return PropH;\n}\nvar XLSPSSkip = [\"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\"];\nfunction guess_property_type(val /*:any*/) /*:number*/{\n  switch (typeof val) {\n    case \"boolean\":\n      return 0x0B;\n    case \"number\":\n      return (val | 0) == val ? 0x03 : 0x05;\n    case \"string\":\n      return 0x1F;\n    case \"object\":\n      if (val instanceof Date) return 0x40;\n      break;\n  }\n  return -1;\n}\nfunction write_PropertySet(entries, RE, PIDSI) {\n  var hdr = new_buf(8),\n    piao = [],\n    prop = [];\n  var sz = 8,\n    i = 0;\n  var pr = new_buf(8),\n    pio = new_buf(8);\n  pr.write_shift(4, 0x0002);\n  pr.write_shift(4, 0x04B0);\n  pio.write_shift(4, 0x0001);\n  prop.push(pr);\n  piao.push(pio);\n  sz += 8 + pr.length;\n  if (!RE) {\n    pio = new_buf(8);\n    pio.write_shift(4, 0);\n    piao.unshift(pio);\n    var bufs = [new_buf(4)];\n    bufs[0].write_shift(4, entries.length);\n    for (i = 0; i < entries.length; ++i) {\n      var value = entries[i][0];\n      pr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n      pr.write_shift(4, i + 2);\n      pr.write_shift(4, value.length + 1);\n      pr.write_shift(0, value, \"dbcs\");\n      while (pr.l != pr.length) pr.write_shift(1, 0);\n      bufs.push(pr);\n    }\n    pr = bconcat(bufs);\n    prop.unshift(pr);\n    sz += 8 + pr.length;\n  }\n  for (i = 0; i < entries.length; ++i) {\n    if (RE && !RE[entries[i][0]]) continue;\n    if (XLSPSSkip.indexOf(entries[i][0]) > -1 || PseudoPropsPairs.indexOf(entries[i][0]) > -1) continue;\n    if (entries[i][1] == null) continue;\n    var val = entries[i][1],\n      idx = 0;\n    if (RE) {\n      idx = +RE[entries[i][0]];\n      var pinfo = PIDSI /*:: || {}*/[idx] /*:: || {} */;\n      if (pinfo.p == \"version\" && typeof val == \"string\") {\n        /*:: if(typeof val !== \"string\") throw \"unreachable\"; */\n        var arr = val.split(\".\");\n        val = (+arr[0] << 16) + (+arr[1] || 0);\n      }\n      pr = write_TypedPropertyValue(pinfo.t, val);\n    } else {\n      var T = guess_property_type(val);\n      if (T == -1) {\n        T = 0x1F;\n        val = String(val);\n      }\n      pr = write_TypedPropertyValue(T, val);\n    }\n    prop.push(pr);\n    pio = new_buf(8);\n    pio.write_shift(4, !RE ? 2 + i : idx);\n    piao.push(pio);\n    sz += 8 + pr.length;\n  }\n  var w = 8 * (prop.length + 1);\n  for (i = 0; i < prop.length; ++i) {\n    piao[i].write_shift(4, w);\n    w += prop[i].length;\n  }\n  hdr.write_shift(4, sz);\n  hdr.write_shift(4, prop.length);\n  return bconcat([hdr].concat(piao).concat(prop));\n}\n\n/* [MS-OLEPS] 2.21 PropertySetStream */\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\n  var blob = file.content;\n  if (!blob) return {} /*:any*/;\n  prep_blob(blob, 0);\n  var NumSets,\n    FMTID0,\n    FMTID1,\n    Offset0,\n    Offset1 = 0;\n  blob.chk('feff', 'Byte Order: ');\n\n  /*var vers = */\n  blob.read_shift(2); // TODO: check version\n  var SystemIdentifier = blob.read_shift(4);\n  var CLSID = blob.read_shift(16);\n  if (CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n  NumSets = blob.read_shift(4);\n  if (NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n  FMTID0 = blob.read_shift(16);\n  Offset0 = blob.read_shift(4);\n  if (NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);else if (NumSets === 2) {\n    FMTID1 = blob.read_shift(16);\n    Offset1 = blob.read_shift(4);\n  }\n  var PSet0 = parse_PropertySet(blob, PIDSI);\n  var rval = {\n    SystemIdentifier: SystemIdentifier\n  } /*:any*/;\n  for (var y in PSet0) rval[y] = PSet0[y];\n  //rval.blob = blob;\n  rval.FMTID = FMTID0;\n  //rval.PSet0 = PSet0;\n  if (NumSets === 1) return rval;\n  if (Offset1 - blob.l == 2) blob.l += 2;\n  if (blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n  var PSet1;\n  try {\n    PSet1 = parse_PropertySet(blob, null);\n  } catch (e) {/* empty */}\n  for (y in PSet1) rval[y] = PSet1[y];\n  rval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n  return rval;\n}\nfunction write_PropertySetStream(entries, clsid, RE, PIDSI /*:{[key:string|number]:any}*/, entries2 /*:?any*/, clsid2 /*:?any*/) {\n  var hdr = new_buf(entries2 ? 68 : 48);\n  var bufs = [hdr];\n  hdr.write_shift(2, 0xFFFE);\n  hdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n  hdr.write_shift(4, 0x32363237);\n  hdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n  hdr.write_shift(4, entries2 ? 2 : 1);\n  hdr.write_shift(16, clsid, \"hex\");\n  hdr.write_shift(4, entries2 ? 68 : 48);\n  var ps0 = write_PropertySet(entries, RE, PIDSI);\n  bufs.push(ps0);\n  if (entries2) {\n    var ps1 = write_PropertySet(entries2, null, null);\n    hdr.write_shift(16, clsid2, \"hex\");\n    hdr.write_shift(4, 68 + ps0.length);\n    bufs.push(ps1);\n  }\n  return bconcat(bufs);\n}\nfunction parsenoop2(blob, length) {\n  blob.read_shift(length);\n  return null;\n}\nfunction writezeroes(n, o) {\n  if (!o) o = new_buf(n);\n  for (var j = 0; j < n; ++j) o.write_shift(1, 0);\n  return o;\n}\nfunction parslurp(blob, length, cb) {\n  var arr = [],\n    target = blob.l + length;\n  while (blob.l < target) arr.push(cb(blob, target - blob.l));\n  if (target !== blob.l) throw new Error(\"Slurp error\");\n  return arr;\n}\nfunction parsebool(blob, length /*:number*/) {\n  return blob.read_shift(length) === 0x1;\n}\nfunction writebool(v /*:any*/, o) {\n  if (!o) o = new_buf(2);\n  o.write_shift(2, +!!v);\n  return o;\n}\nfunction parseuint16(blob /*::, length:?number, opts:?any*/) {\n  return blob.read_shift(2, 'u');\n}\nfunction writeuint16(v /*:number*/, o) {\n  if (!o) o = new_buf(2);\n  o.write_shift(2, v);\n  return o;\n}\nfunction parseuint16a(blob, length /*:: :?number, opts:?any*/) {\n  return parslurp(blob, length, parseuint16);\n}\n\n/* --- 2.5 Structures --- */\n\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\nfunction parse_Bes(blob /*::, length*/) {\n  var v = blob.read_shift(1),\n    t = blob.read_shift(1);\n  return t === 0x01 ? v : v === 0x01;\n}\nfunction write_Bes(v, t /*:string*/, o) {\n  if (!o) o = new_buf(2);\n  o.write_shift(1, t == 'e' ? +v : +!!v);\n  o.write_shift(1, t == 'e' ? 1 : 0);\n  return o;\n}\n\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\n  var cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n  var encoding = 'sbcs-cont';\n  var cp = current_codepage;\n  if (opts && opts.biff >= 8) current_codepage = 1200;\n  if (!opts || opts.biff == 8) {\n    var fHighByte = blob.read_shift(1);\n    if (fHighByte) {\n      encoding = 'dbcs-cont';\n    }\n  } else if (opts.biff == 12) {\n    encoding = 'wstr';\n  }\n  if (opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n  var o = cch ? blob.read_shift(cch, encoding) : \"\";\n  current_codepage = cp;\n  return o;\n}\n\n/* 2.5.293 XLUnicodeRichExtendedString */\nfunction parse_XLUnicodeRichExtendedString(blob) {\n  var cp = current_codepage;\n  current_codepage = 1200;\n  var cch = blob.read_shift(2),\n    flags = blob.read_shift(1);\n  var /*fHighByte = flags & 0x1,*/fExtSt = flags & 0x4,\n    fRichSt = flags & 0x8;\n  var width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n  var cRun = 0,\n    cbExtRst;\n  var z = {};\n  if (fRichSt) cRun = blob.read_shift(2);\n  if (fExtSt) cbExtRst = blob.read_shift(4);\n  var encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n  var msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n  if (fRichSt) blob.l += 4 * cRun; //TODO: parse this\n  if (fExtSt) blob.l += cbExtRst; //TODO: parse this\n  z.t = msg;\n  if (!fRichSt) {\n    z.raw = \"<t>\" + z.t + \"</t>\";\n    z.r = z.t;\n  }\n  current_codepage = cp;\n  return z;\n}\nfunction write_XLUnicodeRichExtendedString(xlstr /*:: :XLString, opts*/) {\n  var str = xlstr.t || \"\",\n    nfmts = 1;\n  var hdr = new_buf(3 + (nfmts > 1 ? 2 : 0));\n  hdr.write_shift(2, str.length);\n  hdr.write_shift(1, (nfmts > 1 ? 0x08 : 0x00) | 0x01);\n  if (nfmts > 1) hdr.write_shift(2, nfmts);\n  var otext = new_buf(2 * str.length);\n  otext.write_shift(2 * str.length, str, 'utf16le');\n  var out = [hdr, otext];\n  return bconcat(out);\n}\n\n/* 2.5.296 XLUnicodeStringNoCch */\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\n  var retval;\n  if (opts) {\n    if (opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n    if (opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n  }\n  var fHighByte = blob.read_shift(1);\n  if (fHighByte === 0) {\n    retval = blob.read_shift(cch, 'sbcs-cont');\n  } else {\n    retval = blob.read_shift(cch, 'dbcs-cont');\n  }\n  return retval;\n}\n\n/* 2.5.294 XLUnicodeString */\nfunction parse_XLUnicodeString(blob, length, opts) {\n  var cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  if (cch === 0) {\n    blob.l++;\n    return \"\";\n  }\n  return parse_XLUnicodeStringNoCch(blob, cch, opts);\n}\n/* BIFF5 override */\nfunction parse_XLUnicodeString2(blob, length, opts) {\n  if (opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n  var cch = blob.read_shift(1);\n  if (cch === 0) {\n    blob.l++;\n    return \"\";\n  }\n  return blob.read_shift(cch, opts.biff <= 4 || !blob.lens ? 'cpstr' : 'sbcs-cont');\n}\n/* TODO: BIFF5 and lower, codepage awareness */\nfunction write_XLUnicodeString(str, opts, o) {\n  if (!o) o = new_buf(3 + 2 * str.length);\n  o.write_shift(2, str.length);\n  o.write_shift(1, 1);\n  o.write_shift(31, str, 'utf16le');\n  return o;\n}\n\n/* [MS-XLS] 2.5.61 ControlInfo */\nfunction parse_ControlInfo(blob /*::, length, opts*/) {\n  var flags = blob.read_shift(1);\n  blob.l++;\n  var accel = blob.read_shift(2);\n  blob.l += 2;\n  return [flags, accel];\n}\n\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\nfunction parse_URLMoniker(blob /*::, length, opts*/) {\n  var len = blob.read_shift(4),\n    start = blob.l;\n  var extra = false;\n  if (len > 24) {\n    /* look ahead */\n    blob.l += len - 24;\n    if (blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n    blob.l = start;\n  }\n  var url = blob.read_shift((extra ? len - 24 : len) >> 1, 'utf16le').replace(chr0, \"\");\n  if (extra) blob.l += 24;\n  return url;\n}\n\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\nfunction parse_FileMoniker(blob /*::, length*/) {\n  var cAnti = blob.read_shift(2);\n  var preamble = \"\";\n  while (cAnti-- > 0) preamble += \"../\";\n  var ansiPath = blob.read_shift(0, 'lpstr-ansi');\n  blob.l += 2; //var endServer = blob.read_shift(2);\n  if (blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n  var sz = blob.read_shift(4);\n  if (sz === 0) return preamble + ansiPath.replace(/\\\\/g, \"/\");\n  var bytes = blob.read_shift(4);\n  if (blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n  var unicodePath = blob.read_shift(bytes >> 1, 'utf16le').replace(chr0, \"\");\n  return preamble + unicodePath;\n}\n\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\nfunction parse_HyperlinkMoniker(blob, length) {\n  var clsid = blob.read_shift(16);\n  length -= 16;\n  switch (clsid) {\n    case \"e0c9ea79f9bace118c8200aa004ba90b\":\n      return parse_URLMoniker(blob, length);\n    case \"0303000000000000c000000000000046\":\n      return parse_FileMoniker(blob, length);\n    default:\n      throw new Error(\"Unsupported Moniker \" + clsid);\n  }\n}\n\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\nfunction parse_HyperlinkString(blob /*::, length*/) {\n  var len = blob.read_shift(4);\n  var o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n  return o;\n}\nfunction write_HyperlinkString(str /*:string*/, o) {\n  if (!o) o = new_buf(6 + str.length * 2);\n  o.write_shift(4, 1 + str.length);\n  for (var i = 0; i < str.length; ++i) o.write_shift(2, str.charCodeAt(i));\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\nfunction parse_Hyperlink(blob, length) /*:Hyperlink*/{\n  var end = blob.l + length;\n  var sVer = blob.read_shift(4);\n  if (sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n  var flags = blob.read_shift(2);\n  blob.l += 2;\n  var displayName,\n    targetFrameName,\n    moniker,\n    oleMoniker,\n    Loc = \"\",\n    guid,\n    fileTime;\n  if (flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n  if (flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n  if ((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n  if ((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n  if (flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n  if (flags & 0x0020) guid = blob.read_shift(16);\n  if (flags & 0x0040) fileTime = parse_FILETIME(blob /*, 8*/);\n  blob.l = end;\n  var target = targetFrameName || moniker || oleMoniker || \"\";\n  if (target && Loc) target += \"#\" + Loc;\n  if (!target) target = \"#\" + Loc;\n  if (flags & 0x0002 && target.charAt(0) == \"/\" && target.charAt(1) != \"/\") target = \"file://\" + target;\n  var out = {\n    Target: target\n  } /*:any*/;\n  if (guid) out.guid = guid;\n  if (fileTime) out.time = fileTime;\n  if (displayName) out.Tooltip = displayName;\n  return out;\n}\nfunction write_Hyperlink(hl) {\n  var out = new_buf(512),\n    i = 0;\n  var Target = hl.Target;\n  if (Target.slice(0, 7) == \"file://\") Target = Target.slice(7);\n  var hashidx = Target.indexOf(\"#\");\n  var F = hashidx > -1 ? 0x1f : 0x17;\n  switch (Target.charAt(0)) {\n    case \"#\":\n      F = 0x1c;\n      break;\n    case \".\":\n      F &= ~2;\n      break;\n  }\n  out.write_shift(4, 2);\n  out.write_shift(4, F);\n  var data = [8, 6815827, 6619237, 4849780, 83];\n  for (i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n  if (F == 0x1C) {\n    Target = Target.slice(1);\n    write_HyperlinkString(Target, out);\n  } else if (F & 0x02) {\n    data = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n    for (i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n    var Pretarget = hashidx > -1 ? Target.slice(0, hashidx) : Target;\n    out.write_shift(4, 2 * (Pretarget.length + 1));\n    for (i = 0; i < Pretarget.length; ++i) out.write_shift(2, Pretarget.charCodeAt(i));\n    out.write_shift(2, 0);\n    if (F & 0x08) write_HyperlinkString(hashidx > -1 ? Target.slice(hashidx + 1) : \"\", out);\n  } else {\n    data = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n    for (i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n    var P = 0;\n    while (Target.slice(P * 3, P * 3 + 3) == \"../\" || Target.slice(P * 3, P * 3 + 3) == \"..\\\\\") ++P;\n    out.write_shift(2, P);\n    out.write_shift(4, Target.length - 3 * P + 1);\n    for (i = 0; i < Target.length - 3 * P; ++i) out.write_shift(1, Target.charCodeAt(i + 3 * P) & 0xFF);\n    out.write_shift(1, 0);\n    out.write_shift(2, 0xFFFF);\n    out.write_shift(2, 0xDEAD);\n    for (i = 0; i < 6; ++i) out.write_shift(4, 0);\n  }\n  return out.slice(0, out.l);\n}\n\n/* 2.5.178 LongRGBA */\nfunction parse_LongRGBA(blob /*::, length*/) {\n  var r = blob.read_shift(1),\n    g = blob.read_shift(1),\n    b = blob.read_shift(1),\n    a = blob.read_shift(1);\n  return [r, g, b, a];\n}\n\n/* 2.5.177 LongRGB */\nfunction parse_LongRGB(blob, length) {\n  var x = parse_LongRGBA(blob, length);\n  x[3] = 0;\n  return x;\n}\n\n/* [MS-XLS] 2.5.19 */\nfunction parse_XLSCell(blob, length, opts) /*:Cell*/{\n  var rw = blob.read_shift(2); // 0-indexed\n  var col = blob.read_shift(2);\n  var ret = {\n    r: rw,\n    c: col,\n    ixfe: 0\n  } /*:any*/;\n  if (opts && opts.biff == 2 || length == 7) {\n    /* TODO: pass back flags */\n    var flags = blob.read_shift(1);\n    ret.ixfe = flags & 0x3F;\n    blob.l += 2;\n    /*\n    var ifntifmt = blob.read_shift(1);\n    var ifmt = ifntifmt & 0x3f, ifnt = ifntifmt >> 6;\n    var flags3 = blob.read_shift(1);\n    */\n  } else ret.ixfe = blob.read_shift(2);\n  return ret;\n}\nfunction write_XLSCell(R /*:number*/, C /*:number*/, ixfe /*:?number*/, o) {\n  if (!o) o = new_buf(6);\n  o.write_shift(2, R);\n  o.write_shift(2, C);\n  o.write_shift(2, ixfe || 0);\n  return o;\n}\n\n/* [MS-XLS] 2.5.134 */\nfunction parse_frtHeader(blob) {\n  var rt = blob.read_shift(2);\n  var flags = blob.read_shift(2); // TODO: parse these flags\n  blob.l += 8;\n  return {\n    type: rt,\n    flags: flags\n  };\n}\nfunction parse_OptXLUnicodeString(blob, length, opts) {\n  return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts);\n}\n\n/* [MS-XLS] 2.5.344 */\nfunction parse_XTI(blob, length, opts) {\n  var w = opts.biff > 8 ? 4 : 2;\n  var iSupBook = blob.read_shift(w),\n    itabFirst = blob.read_shift(w, 'i'),\n    itabLast = blob.read_shift(w, 'i');\n  return [iSupBook, itabFirst, itabLast];\n}\n\n/* [MS-XLS] 2.5.218 */\nfunction parse_RkRec(blob) {\n  var ixfe = blob.read_shift(2);\n  var RK = parse_RkNumber(blob);\n  return [ixfe, RK];\n}\n\n/* [MS-XLS] 2.5.1 */\nfunction parse_AddinUdf(blob, length, opts) {\n  blob.l += 4;\n  length -= 4;\n  var l = blob.l + length;\n  var udfName = parse_ShortXLUnicodeString(blob, length, opts);\n  var cb = blob.read_shift(2);\n  l -= blob.l;\n  if (cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n  blob.l += cb;\n  return udfName;\n}\n\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\nfunction parse_Ref8U(blob /*::, length*/) {\n  var rwFirst = blob.read_shift(2);\n  var rwLast = blob.read_shift(2);\n  var colFirst = blob.read_shift(2);\n  var colLast = blob.read_shift(2);\n  return {\n    s: {\n      c: colFirst,\n      r: rwFirst\n    },\n    e: {\n      c: colLast,\n      r: rwLast\n    }\n  };\n}\nfunction write_Ref8U(r /*:Range*/, o) {\n  if (!o) o = new_buf(8);\n  o.write_shift(2, r.s.r);\n  o.write_shift(2, r.e.r);\n  o.write_shift(2, r.s.c);\n  o.write_shift(2, r.e.c);\n  return o;\n}\n\n/* [MS-XLS] 2.5.211 */\nfunction parse_RefU(blob /*::, length*/) {\n  var rwFirst = blob.read_shift(2);\n  var rwLast = blob.read_shift(2);\n  var colFirst = blob.read_shift(1);\n  var colLast = blob.read_shift(1);\n  return {\n    s: {\n      c: colFirst,\n      r: rwFirst\n    },\n    e: {\n      c: colLast,\n      r: rwLast\n    }\n  };\n}\n\n/* [MS-XLS] 2.5.207 */\nvar parse_Ref = parse_RefU;\n\n/* [MS-XLS] 2.5.143 */\nfunction parse_FtCmo(blob /*::, length*/) {\n  blob.l += 4;\n  var ot = blob.read_shift(2);\n  var id = blob.read_shift(2);\n  var flags = blob.read_shift(2);\n  blob.l += 12;\n  return [id, ot, flags];\n}\n\n/* [MS-XLS] 2.5.149 */\nfunction parse_FtNts(blob) {\n  var out = {};\n  blob.l += 4;\n  blob.l += 16; // GUID TODO\n  out.fSharedNote = blob.read_shift(2);\n  blob.l += 4;\n  return out;\n}\n\n/* [MS-XLS] 2.5.142 */\nfunction parse_FtCf(blob) {\n  var out = {};\n  blob.l += 4;\n  blob.cf = blob.read_shift(2);\n  return out;\n}\n\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\nfunction parse_FtSkip(blob) {\n  blob.l += 2;\n  blob.l += blob.read_shift(2);\n}\nvar FtTab = {\n  0x00: parse_FtSkip,\n  /* FtEnd */\n  0x04: parse_FtSkip,\n  /* FtMacro */\n  0x05: parse_FtSkip,\n  /* FtButton */\n  0x06: parse_FtSkip,\n  /* FtGmo */\n  0x07: parse_FtCf,\n  /* FtCf */\n  0x08: parse_FtSkip,\n  /* FtPioGrbit */\n  0x09: parse_FtSkip,\n  /* FtPictFmla */\n  0x0A: parse_FtSkip,\n  /* FtCbls */\n  0x0B: parse_FtSkip,\n  /* FtRbo */\n  0x0C: parse_FtSkip,\n  /* FtSbs */\n  0x0D: parse_FtNts,\n  /* FtNts */\n  0x0E: parse_FtSkip,\n  /* FtSbsFmla */\n  0x0F: parse_FtSkip,\n  /* FtGboData */\n  0x10: parse_FtSkip,\n  /* FtEdoData */\n  0x11: parse_FtSkip,\n  /* FtRboData */\n  0x12: parse_FtSkip,\n  /* FtCblsData */\n  0x13: parse_FtSkip,\n  /* FtLbsData */\n  0x14: parse_FtSkip,\n  /* FtCblsFmla */\n  0x15: parse_FtCmo\n};\nfunction parse_FtArray(blob, length /*::, ot*/) {\n  var tgt = blob.l + length;\n  var fts = [];\n  while (blob.l < tgt) {\n    var ft = blob.read_shift(2);\n    blob.l -= 2;\n    try {\n      fts[ft] = FtTab[ft](blob, tgt - blob.l);\n    } catch (e) {\n      blob.l = tgt;\n      return fts;\n    }\n  }\n  if (blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n  return fts;\n}\n\n/* --- 2.4 Records --- */\n\n/* [MS-XLS] 2.4.21 */\nfunction parse_BOF(blob, length) {\n  var o = {\n    BIFFVer: 0,\n    dt: 0\n  };\n  o.BIFFVer = blob.read_shift(2);\n  length -= 2;\n  if (length >= 2) {\n    o.dt = blob.read_shift(2);\n    blob.l -= 2;\n  }\n  switch (o.BIFFVer) {\n    case 0x0600: /* BIFF8 */\n    case 0x0500: /* BIFF5 */\n    case 0x0400: /* BIFF4 */\n    case 0x0300: /* BIFF3 */\n    case 0x0200: /* BIFF2 */\n    case 0x0002:\n    case 0x0007:\n      /* BIFF2 */\n      break;\n    default:\n      if (length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n  }\n  blob.read_shift(length);\n  return o;\n}\nfunction write_BOF(wb /*:Workbook*/, t /*:number*/, o) {\n  var h = 0x0600,\n    w = 16;\n  switch (o.bookType) {\n    case 'biff8':\n      break;\n    case 'biff5':\n      h = 0x0500;\n      w = 8;\n      break;\n    case 'biff4':\n      h = 0x0004;\n      w = 6;\n      break;\n    case 'biff3':\n      h = 0x0003;\n      w = 6;\n      break;\n    case 'biff2':\n      h = 0x0002;\n      w = 4;\n      break;\n    case 'xla':\n      break;\n    default:\n      throw new Error(\"unsupported BIFF version\");\n  }\n  var out = new_buf(w);\n  out.write_shift(2, h);\n  out.write_shift(2, t);\n  if (w > 4) out.write_shift(2, 0x7262);\n  if (w > 6) out.write_shift(2, 0x07CD);\n  if (w > 8) {\n    out.write_shift(2, 0xC009);\n    out.write_shift(2, 0x0001);\n    out.write_shift(2, 0x0706);\n    out.write_shift(2, 0x0000);\n  }\n  return out;\n}\n\n/* [MS-XLS] 2.4.146 */\nfunction parse_InterfaceHdr(blob, length) {\n  if (length === 0) return 0x04b0;\n  if (blob.read_shift(2) !== 0x04b0) {/* empty */}\n  return 0x04b0;\n}\n\n/* [MS-XLS] 2.4.349 */\nfunction parse_WriteAccess(blob, length, opts) {\n  if (opts.enc) {\n    blob.l += length;\n    return \"\";\n  }\n  var l = blob.l;\n  // TODO: make sure XLUnicodeString doesnt overrun\n  var UserName = parse_XLUnicodeString2(blob, 0, opts);\n  blob.read_shift(length + l - blob.l);\n  return UserName;\n}\nfunction write_WriteAccess(s /*:string*/, opts) {\n  var b8 = !opts || opts.biff == 8;\n  var o = new_buf(b8 ? 112 : 54);\n  o.write_shift(opts.biff == 8 ? 2 : 1, 7);\n  if (b8) o.write_shift(1, 0);\n  o.write_shift(4, 0x33336853);\n  o.write_shift(4, 0x00534A74 | (b8 ? 0 : 0x20000000));\n  while (o.l < o.length) o.write_shift(1, b8 ? 0 : 32);\n  return o;\n}\n\n/* [MS-XLS] 2.4.351 */\nfunction parse_WsBool(blob, length, opts) {\n  var flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n  return {\n    fDialog: flags & 0x10,\n    fBelow: flags & 0x40,\n    fRight: flags & 0x80\n  };\n}\n\n/* [MS-XLS] 2.4.28 */\nfunction parse_BoundSheet8(blob, length, opts) {\n  var name = \"\";\n  if (opts.biff == 4) {\n    name = parse_ShortXLUnicodeString(blob, 0, opts);\n    if (name.length === 0) name = \"Sheet1\";\n    return {\n      name: name\n    };\n  }\n  var pos = blob.read_shift(4);\n  var hidden = blob.read_shift(1) & 0x03;\n  var dt = blob.read_shift(1);\n  switch (dt) {\n    case 0:\n      dt = 'Worksheet';\n      break;\n    case 1:\n      dt = 'Macrosheet';\n      break;\n    case 2:\n      dt = 'Chartsheet';\n      break;\n    case 6:\n      dt = 'VBAModule';\n      break;\n  }\n  name = parse_ShortXLUnicodeString(blob, 0, opts);\n  if (name.length === 0) name = \"Sheet1\";\n  return {\n    pos: pos,\n    hs: hidden,\n    dt: dt,\n    name: name\n  };\n}\nfunction write_BoundSheet8(data, opts) {\n  var w = !opts || opts.biff >= 8 ? 2 : 1;\n  var o = new_buf(8 + w * data.name.length);\n  o.write_shift(4, data.pos);\n  o.write_shift(1, data.hs || 0);\n  o.write_shift(1, data.dt);\n  o.write_shift(1, data.name.length);\n  if (opts.biff >= 8) o.write_shift(1, 1);\n  o.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n  var out = o.slice(0, o.l);\n  out.l = o.l;\n  return out;\n}\n\n/* [MS-XLS] 2.4.265 TODO */\nfunction parse_SST(blob, length) /*:SST*/{\n  var end = blob.l + length;\n  var cnt = blob.read_shift(4);\n  var ucnt = blob.read_shift(4);\n  var strs /*:SST*/ = [] /*:any*/;\n  for (var i = 0; i != ucnt && blob.l < end; ++i) {\n    strs.push(parse_XLUnicodeRichExtendedString(blob));\n  }\n  strs.Count = cnt;\n  strs.Unique = ucnt;\n  return strs;\n}\nfunction write_SST(sst, opts) {\n  var header = new_buf(8);\n  header.write_shift(4, sst.Count);\n  header.write_shift(4, sst.Unique);\n  var strs = [];\n  for (var j = 0; j < sst.length; ++j) strs[j] = write_XLUnicodeRichExtendedString(sst[j], opts);\n  var o = bconcat([header].concat(strs));\n  /*::(*/\n  o /*:: :any)*/.parts = [header.length].concat(strs.map(function (str) {\n    return str.length;\n  }));\n  return o;\n}\n\n/* [MS-XLS] 2.4.107 */\nfunction parse_ExtSST(blob, length) {\n  var extsst = {};\n  extsst.dsst = blob.read_shift(2);\n  blob.l += length - 2;\n  return extsst;\n}\n\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\nfunction parse_Row(blob) {\n  var z = {} /*:any*/;\n  z.r = blob.read_shift(2);\n  z.c = blob.read_shift(2);\n  z.cnt = blob.read_shift(2) - z.c;\n  var miyRw = blob.read_shift(2);\n  blob.l += 4; // reserved(2), unused(2)\n  var flags = blob.read_shift(1); // various flags\n  blob.l += 3; // reserved(8), ixfe(12), flags(4)\n  if (flags & 0x07) z.level = flags & 0x07;\n  // collapsed: flags & 0x10\n  if (flags & 0x20) z.hidden = true;\n  if (flags & 0x40) z.hpt = miyRw / 20;\n  return z;\n}\n\n/* [MS-XLS] 2.4.125 */\nfunction parse_ForceFullCalculation(blob) {\n  var header = parse_frtHeader(blob);\n  if (header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n  var fullcalc = blob.read_shift(4);\n  return fullcalc !== 0x0;\n}\n\n/* [MS-XLS] 2.4.215 rt */\nfunction parse_RecalcId(blob) {\n  blob.read_shift(2);\n  return blob.read_shift(4);\n}\n\n/* [MS-XLS] 2.4.87 */\nfunction parse_DefaultRowHeight(blob, length, opts) {\n  var f = 0;\n  if (!(opts && opts.biff == 2)) {\n    f = blob.read_shift(2);\n  }\n  var miyRw = blob.read_shift(2);\n  if (opts && opts.biff == 2) {\n    f = 1 - (miyRw >> 15);\n    miyRw &= 0x7fff;\n  }\n  var fl = {\n    Unsynced: f & 1,\n    DyZero: (f & 2) >> 1,\n    ExAsc: (f & 4) >> 2,\n    ExDsc: (f & 8) >> 3\n  };\n  return [fl, miyRw];\n}\n\n/* [MS-XLS] 2.4.345 TODO */\nfunction parse_Window1(blob) {\n  var xWn = blob.read_shift(2),\n    yWn = blob.read_shift(2),\n    dxWn = blob.read_shift(2),\n    dyWn = blob.read_shift(2);\n  var flags = blob.read_shift(2),\n    iTabCur = blob.read_shift(2),\n    iTabFirst = blob.read_shift(2);\n  var ctabSel = blob.read_shift(2),\n    wTabRatio = blob.read_shift(2);\n  return {\n    Pos: [xWn, yWn],\n    Dim: [dxWn, dyWn],\n    Flags: flags,\n    CurTab: iTabCur,\n    FirstTab: iTabFirst,\n    Selected: ctabSel,\n    TabRatio: wTabRatio\n  };\n}\nfunction write_Window1( /*::opts*/\n) {\n  var o = new_buf(18);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0x7260);\n  o.write_shift(2, 0x44c0);\n  o.write_shift(2, 0x38);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 1);\n  o.write_shift(2, 0x01f4);\n  return o;\n}\n/* [MS-XLS] 2.4.346 TODO */\nfunction parse_Window2(blob, length, opts) {\n  if (opts && opts.biff >= 2 && opts.biff < 5) return {};\n  var f = blob.read_shift(2);\n  return {\n    RTL: f & 0x40\n  };\n}\nfunction write_Window2(view) {\n  var o = new_buf(18),\n    f = 0x6b6;\n  if (view && view.RTL) f |= 0x40;\n  o.write_shift(2, f);\n  o.write_shift(4, 0);\n  o.write_shift(4, 64);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.189 TODO */\nfunction parse_Pane( /*blob, length, opts*/\n) {}\n\n/* [MS-XLS] 2.4.122 TODO */\nfunction parse_Font(blob, length, opts) {\n  var o /*:any*/ = {\n    dyHeight: blob.read_shift(2),\n    fl: blob.read_shift(2)\n  };\n  switch (opts && opts.biff || 8) {\n    case 2:\n      break;\n    case 3:\n    case 4:\n      blob.l += 2;\n      break;\n    default:\n      blob.l += 10;\n      break;\n  }\n  o.name = parse_ShortXLUnicodeString(blob, 0, opts);\n  return o;\n}\nfunction write_Font(data, opts) {\n  var name = data.name || \"Arial\";\n  var b5 = opts && opts.biff == 5,\n    w = b5 ? 15 + name.length : 16 + 2 * name.length;\n  var o = new_buf(w);\n  o.write_shift(2, (data.sz || 12) * 20);\n  o.write_shift(4, 0);\n  o.write_shift(2, 400);\n  o.write_shift(4, 0);\n  o.write_shift(2, 0);\n  o.write_shift(1, name.length);\n  if (!b5) o.write_shift(1, 1);\n  o.write_shift((b5 ? 1 : 2) * name.length, name, b5 ? \"sbcs\" : \"utf16le\");\n  return o;\n}\n\n/* [MS-XLS] 2.4.149 */\nfunction parse_LabelSst(blob, length, opts) {\n  var cell = parse_XLSCell(blob, length, opts);\n  cell.isst = blob.read_shift(4);\n  return cell;\n}\nfunction write_LabelSst(R /*:number*/, C /*:number*/, v /*:number*/, os /*:number*/ /*::, opts*/) {\n  var o = new_buf(10);\n  write_XLSCell(R, C, os, o);\n  o.write_shift(4, v);\n  return o;\n}\n\n/* [MS-XLS] 2.4.148 */\nfunction parse_Label(blob, length, opts) {\n  if (opts.biffguess && opts.biff == 2) opts.biff = 5;\n  var target = blob.l + length;\n  var cell = parse_XLSCell(blob, length, opts);\n  var str = parse_XLUnicodeString(blob, target - blob.l, opts);\n  cell.val = str;\n  return cell;\n}\nfunction write_Label(R /*:number*/, C /*:number*/, v /*:string*/, os /*:number*/, opts) {\n  var b8 = !opts || opts.biff == 8;\n  var o = new_buf(6 + 2 + +b8 + (1 + b8) * v.length);\n  write_XLSCell(R, C, os, o);\n  o.write_shift(2, v.length);\n  if (b8) o.write_shift(1, 1);\n  o.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n  return o;\n}\n\n/* [MS-XLS] 2.4.126 Number Formats */\nfunction parse_Format(blob, length, opts) {\n  var numFmtId = blob.read_shift(2);\n  var fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n  return [numFmtId, fmtstr];\n}\nfunction write_Format(i /*:number*/, f /*:string*/, opts, o) {\n  var b5 = opts && opts.biff == 5;\n  if (!o) o = new_buf(b5 ? 3 + f.length : 5 + 2 * f.length);\n  o.write_shift(2, i);\n  o.write_shift(b5 ? 1 : 2, f.length);\n  if (!b5) o.write_shift(1, 1);\n  o.write_shift((b5 ? 1 : 2) * f.length, f, b5 ? 'sbcs' : 'utf16le');\n  var out = o.length > o.l ? o.slice(0, o.l) : o;\n  if (out.l == null) out.l = out.length;\n  return out;\n}\nvar parse_BIFF2Format = parse_XLUnicodeString2;\nfunction write_BIFF2Format(f /*:string*/) {\n  var o = new_buf(1 + f.length);\n  o.write_shift(1, f.length);\n  o.write_shift(f.length, f, \"sbcs\");\n  return o;\n}\nfunction write_BIFF4Format(f /*:string*/) {\n  var o = new_buf(3 + f.length);\n  o.l += 2;\n  o.write_shift(1, f.length);\n  o.write_shift(f.length, f, \"sbcs\");\n  return o;\n}\n\n/* [MS-XLS] 2.4.90 */\nfunction parse_Dimensions(blob, length, opts) {\n  var end = blob.l + length;\n  var w = opts.biff == 8 || !opts.biff ? 4 : 2;\n  var r = blob.read_shift(w),\n    R = blob.read_shift(w);\n  var c = blob.read_shift(2),\n    C = blob.read_shift(2);\n  blob.l = end;\n  return {\n    s: {\n      r: r,\n      c: c\n    },\n    e: {\n      r: R,\n      c: C\n    }\n  };\n}\nfunction write_Dimensions(range, opts) {\n  var w = opts.biff == 8 || !opts.biff ? 4 : 2;\n  var o = new_buf(2 * w + 6);\n  o.write_shift(w, range.s.r);\n  o.write_shift(w, range.e.r + 1);\n  o.write_shift(2, range.s.c);\n  o.write_shift(2, range.e.c + 1);\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.220 */\nfunction parse_RK(blob) {\n  var rw = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var rkrec = parse_RkRec(blob);\n  return {\n    r: rw,\n    c: col,\n    ixfe: rkrec[0],\n    rknum: rkrec[1]\n  };\n}\n\n/* [MS-XLS] 2.4.175 */\nfunction parse_MulRk(blob, length) {\n  var target = blob.l + length - 2;\n  var rw = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var rkrecs = [];\n  while (blob.l < target) rkrecs.push(parse_RkRec(blob));\n  if (blob.l !== target) throw new Error(\"MulRK read error\");\n  var lastcol = blob.read_shift(2);\n  if (rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n  return {\n    r: rw,\n    c: col,\n    C: lastcol,\n    rkrec: rkrecs\n  };\n}\n/* [MS-XLS] 2.4.174 */\nfunction parse_MulBlank(blob, length) {\n  var target = blob.l + length - 2;\n  var rw = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var ixfes = [];\n  while (blob.l < target) ixfes.push(blob.read_shift(2));\n  if (blob.l !== target) throw new Error(\"MulBlank read error\");\n  var lastcol = blob.read_shift(2);\n  if (ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n  return {\n    r: rw,\n    c: col,\n    C: lastcol,\n    ixfe: ixfes\n  };\n}\n\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\nfunction parse_CellStyleXF(blob, length, style, opts) {\n  var o = {};\n  var a = blob.read_shift(4),\n    b = blob.read_shift(4);\n  var c = blob.read_shift(4),\n    d = blob.read_shift(2);\n  o.patternType = XLSFillPattern[c >> 26];\n  if (!opts.cellStyles) return o;\n  o.alc = a & 0x07;\n  o.fWrap = a >> 3 & 0x01;\n  o.alcV = a >> 4 & 0x07;\n  o.fJustLast = a >> 7 & 0x01;\n  o.trot = a >> 8 & 0xFF;\n  o.cIndent = a >> 16 & 0x0F;\n  o.fShrinkToFit = a >> 20 & 0x01;\n  o.iReadOrder = a >> 22 & 0x02;\n  o.fAtrNum = a >> 26 & 0x01;\n  o.fAtrFnt = a >> 27 & 0x01;\n  o.fAtrAlc = a >> 28 & 0x01;\n  o.fAtrBdr = a >> 29 & 0x01;\n  o.fAtrPat = a >> 30 & 0x01;\n  o.fAtrProt = a >> 31 & 0x01;\n  o.dgLeft = b & 0x0F;\n  o.dgRight = b >> 4 & 0x0F;\n  o.dgTop = b >> 8 & 0x0F;\n  o.dgBottom = b >> 12 & 0x0F;\n  o.icvLeft = b >> 16 & 0x7F;\n  o.icvRight = b >> 23 & 0x7F;\n  o.grbitDiag = b >> 30 & 0x03;\n  o.icvTop = c & 0x7F;\n  o.icvBottom = c >> 7 & 0x7F;\n  o.icvDiag = c >> 14 & 0x7F;\n  o.dgDiag = c >> 21 & 0x0F;\n  o.icvFore = d & 0x7F;\n  o.icvBack = d >> 7 & 0x7F;\n  o.fsxButton = d >> 14 & 0x01;\n  return o;\n}\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\nfunction parse_XF(blob, length, opts) {\n  var o = {};\n  o.ifnt = blob.read_shift(2);\n  o.numFmtId = blob.read_shift(2);\n  o.flags = blob.read_shift(2);\n  o.fStyle = o.flags >> 2 & 0x01;\n  length -= 6;\n  o.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n  return o;\n}\nfunction write_XF(data, ixfeP, opts, o) {\n  var b5 = opts && opts.biff == 5;\n  if (!o) o = new_buf(b5 ? 16 : 20);\n  o.write_shift(2, 0);\n  if (data.style) {\n    o.write_shift(2, data.numFmtId || 0);\n    o.write_shift(2, 0xFFF4);\n  } else {\n    o.write_shift(2, data.numFmtId || 0);\n    o.write_shift(2, ixfeP << 4);\n  }\n  var f = 0;\n  if (data.numFmtId > 0 && b5) f |= 0x0400;\n  o.write_shift(4, f);\n  o.write_shift(4, 0);\n  if (!b5) o.write_shift(4, 0);\n  o.write_shift(2, 0);\n  return o;\n}\nfunction parse_BIFF2XF(blob /*::, length, opts*/) {\n  var o = {};\n  o.ifnt = blob.read_shift(1);\n  blob.l++;\n  o.flags = blob.read_shift(1);\n  o.numFmtId = o.flags & 0x3F;\n  o.flags >>= 6;\n  o.fStyle = 0;\n  o.data = {}; // TODO\n  return o;\n}\nfunction write_BIFF2XF(xf) {\n  var o = new_buf(4);\n  o.l += 2;\n  o.write_shift(1, xf.numFmtId);\n  o.l++;\n  return o;\n}\nfunction write_BIFF3XF(xf) {\n  var o = new_buf(12);\n  o.l++;\n  o.write_shift(1, xf.numFmtId);\n  o.l += 10;\n  return o;\n}\n/* TODO: check other fields */\nvar write_BIFF4XF = write_BIFF3XF;\nfunction parse_BIFF3XF(blob /*::, length, opts*/) {\n  var o = {};\n  o.ifnt = blob.read_shift(1);\n  o.numFmtId = blob.read_shift(1);\n  o.flags = blob.read_shift(2);\n  o.fStyle = o.flags >> 2 & 0x01;\n  o.data = {}; // TODO\n  return o;\n}\nfunction parse_BIFF4XF(blob /*::, length, opts*/) {\n  var o = {};\n  o.ifnt = blob.read_shift(1);\n  o.numFmtId = blob.read_shift(1);\n  o.flags = blob.read_shift(2);\n  o.fStyle = o.flags >> 2 & 0x01;\n  o.data = {}; // TODO\n  return o;\n}\n\n/* [MS-XLS] 2.4.134 */\nfunction parse_Guts(blob) {\n  blob.l += 4;\n  var out = [blob.read_shift(2), blob.read_shift(2)];\n  if (out[0] !== 0) out[0]--;\n  if (out[1] !== 0) out[1]--;\n  if (out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n  return out;\n}\nfunction write_Guts(guts /*:Array<number>*/) {\n  var o = new_buf(8);\n  o.write_shift(4, 0);\n  o.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n  o.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.24 */\nfunction parse_BoolErr(blob, length, opts) {\n  var cell = parse_XLSCell(blob, 6, opts);\n  var val = parse_Bes(blob, 2);\n  cell.val = val;\n  cell.t = val === true || val === false ? 'b' : 'e';\n  return cell;\n}\nfunction write_BoolErr(R /*:number*/, C /*:number*/, v, os /*:number*/, opts, t /*:string*/) {\n  var o = new_buf(8);\n  write_XLSCell(R, C, os, o);\n  write_Bes(v, t, o);\n  return o;\n}\n\n/* [MS-XLS] 2.4.180 Number */\nfunction parse_Number(blob, length, opts) {\n  if (opts.biffguess && opts.biff == 2) opts.biff = 5;\n  var cell = parse_XLSCell(blob, 6, opts);\n  var xnum = parse_Xnum(blob, 8);\n  cell.val = xnum;\n  return cell;\n}\nfunction write_Number(R /*:number*/, C /*:number*/, v, os /*:: :number, opts*/) {\n  var o = new_buf(14);\n  write_XLSCell(R, C, os, o);\n  write_Xnum(v, o);\n  return o;\n}\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n/* [MS-XLS] 2.4.271 */\nfunction parse_SupBook(blob, length, opts) {\n  var end = blob.l + length;\n  var ctab = blob.read_shift(2);\n  var cch = blob.read_shift(2);\n  opts.sbcch = cch;\n  if (cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n  if (cch < 0x01 || cch > 0xff) throw new Error(\"Unexpected SupBook type: \" + cch);\n  var virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n  /* TODO: 2.5.277 Virtual Path */\n  var rgst = [];\n  while (end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n  return [cch, ctab, virtPath, rgst];\n}\n\n/* [MS-XLS] 2.4.105 TODO */\nfunction parse_ExternName(blob, length, opts) {\n  var flags = blob.read_shift(2);\n  var body;\n  var o = {\n    fBuiltIn: flags & 0x01,\n    fWantAdvise: flags >>> 1 & 0x01,\n    fWantPict: flags >>> 2 & 0x01,\n    fOle: flags >>> 3 & 0x01,\n    fOleLink: flags >>> 4 & 0x01,\n    cf: flags >>> 5 & 0x3FF,\n    fIcon: flags >>> 15 & 0x01\n  } /*:any*/;\n  if (opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length - 2, opts);\n  //else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n  o.body = body || blob.read_shift(length - 2);\n  if (typeof body === \"string\") o.Name = body;\n  return o;\n}\n\n/* [MS-XLS] 2.4.150 TODO */\nfunction parse_Lbl(blob, length, opts) {\n  var target = blob.l + length;\n  var flags = blob.read_shift(2);\n  var chKey = blob.read_shift(1);\n  var cch = blob.read_shift(1);\n  var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  var itab = 0;\n  if (!opts || opts.biff >= 5) {\n    if (opts.biff != 5) blob.l += 2;\n    itab = blob.read_shift(2);\n    if (opts.biff == 5) blob.l += 2;\n    blob.l += 4;\n  }\n  var name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n  if (flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n  var npflen = target - blob.l;\n  if (opts && opts.biff == 2) --npflen;\n  /*jshint -W018 */\n  var rgce = target == blob.l || cce === 0 || !(npflen > 0) ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n  /*jshint +W018 */\n  return {\n    chKey: chKey,\n    Name: name,\n    itab: itab,\n    rgce: rgce\n  };\n}\n\n/* [MS-XLS] 2.4.106 TODO: legacy record filename encoding */\nfunction parse_ExternSheet(blob, length, opts) {\n  if (opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n  /* see issue 2907 */\n  if (!(opts.biff > 8) && length == blob[blob.l] + (blob[blob.l + 1] == 0x03 ? 1 : 0) + 1) return parse_BIFF5ExternSheet(blob, length, opts);\n  var o = [],\n    target = blob.l + length,\n    len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n  while (len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n  // [iSupBook, itabFirst, itabLast];\n  if (blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n  return o;\n}\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\n  if (blob[blob.l + 1] == 0x03) blob[blob.l]++;\n  var o = parse_ShortXLUnicodeString(blob, length, opts);\n  return o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n}\n\n/* [MS-XLS] 2.4.176 TODO: check older biff */\nfunction parse_NameCmt(blob, length, opts) {\n  if (opts.biff < 8) {\n    blob.l += length;\n    return;\n  }\n  var cchName = blob.read_shift(2);\n  var cchComment = blob.read_shift(2);\n  var name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n  var comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n  return [name, comment];\n}\n\n/* [MS-XLS] 2.4.260 */\nfunction parse_ShrFmla(blob, length, opts) {\n  var ref = parse_RefU(blob, 6);\n  blob.l++;\n  var cUse = blob.read_shift(1);\n  length -= 8;\n  return [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n}\n\n/* [MS-XLS] 2.4.4 TODO */\nfunction parse_Array(blob, length, opts) {\n  var ref = parse_Ref(blob, 6);\n  /* TODO: fAlwaysCalc */\n  switch (opts.biff) {\n    case 2:\n      blob.l++;\n      length -= 7;\n      break;\n    case 3:\n    case 4:\n      blob.l += 2;\n      length -= 8;\n      break;\n    default:\n      blob.l += 6;\n      length -= 12;\n  }\n  return [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\n}\n\n/* [MS-XLS] 2.4.173 */\nfunction parse_MTRSettings(blob) {\n  var fMTREnabled = blob.read_shift(4) !== 0x00;\n  var fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n  var cUserThreadCount = blob.read_shift(4);\n  return [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n}\n\n/* [MS-XLS] 2.5.186 */\nfunction parse_NoteSh(blob, length, opts) {\n  var row = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var flags = blob.read_shift(2),\n    idObj = blob.read_shift(2);\n  var stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n  return [{\n    r: row,\n    c: col\n  }, stAuthor, idObj, flags];\n}\n\n/* [MS-XLS] 2.4.179 */\nfunction parse_Note(blob, length, opts) {\n  if (opts && opts.biff < 8) {\n    var row = blob.read_shift(2),\n      col = blob.read_shift(2);\n    if (row == 0xFFFF || row == -1) return; // TODO: test continuation\n    var cch = blob.read_shift(2);\n    var cmnt = blob.read_shift(Math.min(cch, 2048), 'cpstr');\n    return [{\n      r: row,\n      c: col\n    }, cmnt];\n  }\n  /* TODO: Support revisions */\n  return parse_NoteSh(blob, length, opts);\n}\nfunction write_NOTE_BIFF2(text /*:string*/, R /*:number*/, C /*:number*/, len /*?:number*/) {\n  var o = new_buf(6 + (len || text.length));\n  o.write_shift(2, R);\n  o.write_shift(2, C);\n  o.write_shift(2, len || text.length);\n  o.write_shift(text.length, text, \"sbcs\");\n  return o;\n}\n\n/* [MS-XLS] 2.4.168 */\nfunction parse_MergeCells(blob, length) /*:Array<Range>*/{\n  var merges /*:Array<Range>*/ = [];\n  var cmcs = blob.read_shift(2);\n  while (cmcs--) merges.push(parse_Ref8U(blob, length));\n  return merges;\n}\nfunction write_MergeCells(merges /*:Array<Range>*/) {\n  var o = new_buf(2 + merges.length * 8);\n  o.write_shift(2, merges.length);\n  for (var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n  return o;\n}\n\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\nfunction parse_Obj(blob, length, opts) {\n  if (opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n  var cmo = parse_FtCmo(blob, 22); // id, ot, flags\n  var fts = parse_FtArray(blob, length - 22, cmo[1]);\n  return {\n    cmo: cmo,\n    ft: fts\n  };\n}\n/* from older spec */\nvar parse_BIFF5OT = {\n  0x08: function (blob, length) {\n    var tgt = blob.l + length;\n    blob.l += 10; // todo\n    var cf = blob.read_shift(2);\n    blob.l += 4;\n    blob.l += 2; //var cbPictFmla = blob.read_shift(2);\n    blob.l += 2;\n    blob.l += 2; //var grbit = blob.read_shift(2);\n    blob.l += 4;\n    var cchName = blob.read_shift(1);\n    blob.l += cchName; // TODO: stName\n    blob.l = tgt; // TODO: fmla\n    return {\n      fmt: cf\n    };\n  }\n};\nfunction parse_BIFF5Obj(blob, length, opts) {\n  blob.l += 4; //var cnt = blob.read_shift(4);\n  var ot = blob.read_shift(2);\n  var id = blob.read_shift(2);\n  var grbit = blob.read_shift(2);\n  blob.l += 2; //var colL = blob.read_shift(2);\n  blob.l += 2; //var dxL = blob.read_shift(2);\n  blob.l += 2; //var rwT = blob.read_shift(2);\n  blob.l += 2; //var dyT = blob.read_shift(2);\n  blob.l += 2; //var colR = blob.read_shift(2);\n  blob.l += 2; //var dxR = blob.read_shift(2);\n  blob.l += 2; //var rwB = blob.read_shift(2);\n  blob.l += 2; //var dyB = blob.read_shift(2);\n  blob.l += 2; //var cbMacro = blob.read_shift(2);\n  blob.l += 6;\n  length -= 36;\n  var fts = [];\n  fts.push((parse_BIFF5OT[ot] || parsenoop)(blob, length, opts));\n  return {\n    cmo: [id, ot, grbit],\n    ft: fts\n  };\n}\n\n/* [MS-XLS] 2.4.329 TODO: parse properly */\nfunction parse_TxO(blob, length, opts) {\n  var s = blob.l;\n  var texts = \"\";\n  try {\n    blob.l += 4;\n    var ot = (opts.lastobj || {\n      cmo: [0, 0]\n    }).cmo[1];\n    var controlInfo; // eslint-disable-line no-unused-vars\n    if ([0, 5, 7, 11, 12, 14].indexOf(ot) == -1) blob.l += 6;else controlInfo = parse_ControlInfo(blob, 6, opts); // eslint-disable-line no-unused-vars\n    var cchText = blob.read_shift(2);\n    /*var cbRuns = */\n    blob.read_shift(2);\n    /*var ifntEmpty = */\n    parseuint16(blob, 2);\n    var len = blob.read_shift(2);\n    blob.l += len;\n    //var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n    for (var i = 1; i < blob.lens.length - 1; ++i) {\n      if (blob.l - s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n      var hdr = blob[blob.l];\n      var t = parse_XLUnicodeStringNoCch(blob, blob.lens[i + 1] - blob.lens[i] - 1);\n      texts += t;\n      if (texts.length >= (hdr ? cchText : 2 * cchText)) break;\n    }\n    if (texts.length !== cchText && texts.length !== cchText * 2) {\n      throw new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n    }\n    blob.l = s + length;\n    /* [MS-XLS] 2.5.272 TxORuns */\n    //\tvar rgTxoRuns = [];\n    //\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n    //\tvar cchText2 = blob.read_shift(2);\n    //\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n    //\tblob.l += 6;\n    //\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n    return {\n      t: texts\n    };\n  } catch (e) {\n    blob.l = s + length;\n    return {\n      t: texts\n    };\n  }\n}\n\n/* [MS-XLS] 2.4.140 */\nfunction parse_HLink(blob, length) {\n  var ref = parse_Ref8U(blob, 8);\n  blob.l += 16; /* CLSID */\n  var hlink = parse_Hyperlink(blob, length - 24);\n  return [ref, hlink];\n}\nfunction write_HLink(hl) {\n  var O = new_buf(24);\n  var ref = decode_cell(hl[0]);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.c);\n  O.write_shift(2, ref.c);\n  var clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n  for (var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n  return bconcat([O, write_Hyperlink(hl[1])]);\n}\n\n/* [MS-XLS] 2.4.141 */\nfunction parse_HLinkTooltip(blob, length) {\n  blob.read_shift(2);\n  var ref = parse_Ref8U(blob, 8);\n  var wzTooltip = blob.read_shift((length - 10) / 2, 'dbcs-cont');\n  wzTooltip = wzTooltip.replace(chr0, \"\");\n  return [ref, wzTooltip];\n}\nfunction write_HLinkTooltip(hl) {\n  var TT = hl[1].Tooltip;\n  var O = new_buf(10 + 2 * (TT.length + 1));\n  O.write_shift(2, 0x0800);\n  var ref = decode_cell(hl[0]);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.c);\n  O.write_shift(2, ref.c);\n  for (var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n  O.write_shift(2, 0);\n  return O;\n}\n\n/* [MS-XLS] 2.4.63 */\nfunction parse_Country(blob) /*:[string|number, string|number]*/{\n  var o = [0, 0],\n    d;\n  d = blob.read_shift(2);\n  o[0] = CountryEnum[d] || d;\n  d = blob.read_shift(2);\n  o[1] = CountryEnum[d] || d;\n  return o;\n}\nfunction write_Country(o) {\n  if (!o) o = new_buf(4);\n  o.write_shift(2, 0x01);\n  o.write_shift(2, 0x01);\n  return o;\n}\n\n/* [MS-XLS] 2.4.50 ClrtClient */\nfunction parse_ClrtClient(blob) {\n  var ccv = blob.read_shift(2);\n  var o = [];\n  while (ccv-- > 0) o.push(parse_LongRGB(blob, 8));\n  return o;\n}\n\n/* [MS-XLS] 2.4.188 */\nfunction parse_Palette(blob) {\n  var ccv = blob.read_shift(2);\n  var o = [];\n  while (ccv-- > 0) o.push(parse_LongRGB(blob, 8));\n  return o;\n}\n\n/* [MS-XLS] 2.4.354 */\nfunction parse_XFCRC(blob) {\n  blob.l += 2;\n  var o = {\n    cxfs: 0,\n    crc: 0\n  };\n  o.cxfs = blob.read_shift(2);\n  o.crc = blob.read_shift(4);\n  return o;\n}\n\n/* [MS-XLS] 2.4.53 TODO: parse flags */\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\nfunction parse_ColInfo(blob, length, opts) {\n  if (!opts.cellStyles) return parsenoop(blob, length);\n  var w = opts && opts.biff >= 12 ? 4 : 2;\n  var colFirst = blob.read_shift(w);\n  var colLast = blob.read_shift(w);\n  var coldx = blob.read_shift(w);\n  var ixfe = blob.read_shift(w);\n  var flags = blob.read_shift(2);\n  if (w == 2) blob.l += 2;\n  var o = {\n    s: colFirst,\n    e: colLast,\n    w: coldx,\n    ixfe: ixfe,\n    flags: flags\n  } /*:any*/;\n  if (opts.biff >= 5 || !opts.biff) o.level = flags >> 8 & 0x7;\n  return o;\n}\nfunction write_ColInfo(col, idx) {\n  var o = new_buf(12);\n  o.write_shift(2, idx);\n  o.write_shift(2, idx);\n  o.write_shift(2, col.width * 256);\n  o.write_shift(2, 0);\n  var f = 0;\n  if (col.hidden) f |= 1;\n  o.write_shift(1, f);\n  f = col.level || 0;\n  o.write_shift(1, f);\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.257 */\nfunction parse_Setup(blob, length) {\n  var o = {};\n  if (length < 32) return o;\n  blob.l += 16;\n  o.header = parse_Xnum(blob, 8);\n  o.footer = parse_Xnum(blob, 8);\n  blob.l += 2;\n  return o;\n}\n\n/* [MS-XLS] 2.4.261 */\nfunction parse_ShtProps(blob, length, opts) {\n  var def = {\n    area: false\n  };\n  if (opts.biff != 5) {\n    blob.l += length;\n    return def;\n  }\n  var d = blob.read_shift(1);\n  blob.l += 3;\n  if (d & 0x10) def.area = true;\n  return def;\n}\n\n/* [MS-XLS] 2.4.241 */\nfunction write_RRTabId(n /*:number*/) {\n  var out = new_buf(2 * n);\n  for (var i = 0; i < n; ++i) out.write_shift(2, i + 1);\n  return out;\n}\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n/* --- Specific to versions before BIFF8 --- */\nfunction parse_ImData(blob) {\n  var cf = blob.read_shift(2);\n  var env = blob.read_shift(2);\n  var lcb = blob.read_shift(4);\n  var o = {\n    fmt: cf,\n    env: env,\n    len: lcb,\n    data: blob.slice(blob.l, blob.l + lcb)\n  };\n  blob.l += lcb;\n  return o;\n}\nfunction write_BIFF2Cell(out, r /*:number*/, c /*:number*/, ixfe /*:number*/, ifmt /*:number*/) {\n  if (!out) out = new_buf(7);\n  out.write_shift(2, r);\n  out.write_shift(2, c);\n  out.write_shift(1, ixfe || 0 /* & 0x3F */);\n  out.write_shift(1, ifmt || 0 /* & 0x3F */);\n  out.write_shift(1, 0);\n  return out;\n}\n\n/* BIFF2_??? where ??? is the name from [XLS] */\nfunction parse_BIFF2STR(blob, length, opts) {\n  if (opts.biffguess && opts.biff == 5) opts.biff = 2;\n  var cell = parse_XLSCell(blob, 7, opts);\n  var str = parse_XLUnicodeString2(blob, length - 7, opts);\n  cell.t = 'str';\n  cell.val = str;\n  return cell;\n}\nfunction parse_BIFF2NUM(blob, length, opts) {\n  var cell = parse_XLSCell(blob, 7, opts);\n  var num = parse_Xnum(blob, 8);\n  cell.t = 'n';\n  cell.val = num;\n  return cell;\n}\nfunction write_BIFF2NUM(r /*:number*/, c /*:number*/, val /*:number*/, ixfe, ifmt) {\n  var out = new_buf(15);\n  write_BIFF2Cell(out, r, c, ixfe || 0, ifmt || 0);\n  out.write_shift(8, val, 'f');\n  return out;\n}\nfunction parse_BIFF2INT(blob, length, opts) {\n  var cell = parse_XLSCell(blob, 7, opts);\n  var num = blob.read_shift(2);\n  cell.t = 'n';\n  cell.val = num;\n  return cell;\n}\nfunction write_BIFF2INT(r /*:number*/, c /*:number*/, val /*:number*/, ixfe /*:number*/, ifmt /*:number*/) {\n  var out = new_buf(9);\n  write_BIFF2Cell(out, r, c, ixfe || 0, ifmt || 0);\n  out.write_shift(2, val);\n  return out;\n}\nfunction parse_BIFF2STRING(blob) {\n  var cch = blob.read_shift(1);\n  if (cch === 0) {\n    blob.l++;\n    return \"\";\n  }\n  return blob.read_shift(cch, 'sbcs-cont');\n}\nfunction parse_BIFF2BOOLERR(blob, length, opts) {\n  var bestart = blob.l + 7;\n  var cell = parse_XLSCell(blob, 6, opts);\n  blob.l = bestart;\n  var val = parse_Bes(blob, 2);\n  cell.val = val;\n  cell.t = val === true || val === false ? 'b' : 'e';\n  return cell;\n}\n\n/* TODO: convert to BIFF8 font struct */\nfunction parse_BIFF2FONTXTRA(blob, length) {\n  blob.l += 6; // unknown\n  blob.l += 2; // font weight \"bls\"\n  blob.l += 1; // charset\n  blob.l += 3; // unknown\n  blob.l += 1; // font family\n  blob.l += length - 13;\n}\n\n/* TODO: parse rich text runs */\nfunction parse_RString(blob, length, opts) {\n  var end = blob.l + length;\n  var cell = parse_XLSCell(blob, 6, opts);\n  var cch = blob.read_shift(2);\n  var str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n  blob.l = end;\n  cell.t = 'str';\n  cell.val = str;\n  return cell;\n}\nfunction parse_BIFF4SheetInfo(blob /*::, length, opts*/) {\n  var flags = blob.read_shift(4);\n  var cch = blob.read_shift(1),\n    name = blob.read_shift(cch, \"sbcs\");\n  if (name.length === 0) name = \"Sheet1\";\n  return {\n    flags: flags,\n    name: name\n  };\n}\nvar DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];\nvar DBF = /*#__PURE__*/function () {\n  var dbf_codepage_map = {\n    /* Code Pages Supported by Visual FoxPro */\n    0x01: 437,\n    0x02: 850,\n    0x03: 1252,\n    0x04: 10000,\n    0x64: 852,\n    0x65: 866,\n    0x66: 865,\n    0x67: 861,\n    0x68: 895,\n    0x69: 620,\n    0x6A: 737,\n    0x6B: 857,\n    0x78: 950,\n    0x79: 949,\n    0x7A: 936,\n    0x7B: 932,\n    0x7C: 874,\n    0x7D: 1255,\n    0x7E: 1256,\n    0x96: 10007,\n    0x97: 10029,\n    0x98: 10006,\n    0xC8: 1250,\n    0xC9: 1251,\n    0xCA: 1254,\n    0xCB: 1253,\n    /* shapefile DBF extension */\n    0x00: 20127,\n    0x08: 865,\n    0x09: 437,\n    0x0A: 850,\n    0x0B: 437,\n    0x0D: 437,\n    0x0E: 850,\n    0x0F: 437,\n    0x10: 850,\n    0x11: 437,\n    0x12: 850,\n    0x13: 932,\n    0x14: 850,\n    0x15: 437,\n    0x16: 850,\n    0x17: 865,\n    0x18: 437,\n    0x19: 437,\n    0x1A: 850,\n    0x1B: 437,\n    0x1C: 863,\n    0x1D: 850,\n    0x1F: 852,\n    0x22: 852,\n    0x23: 852,\n    0x24: 860,\n    0x25: 850,\n    0x26: 866,\n    0x37: 850,\n    0x40: 852,\n    0x4D: 936,\n    0x4E: 949,\n    0x4F: 950,\n    0x50: 874,\n    0x57: 1252,\n    0x58: 1252,\n    0x59: 1252,\n    0x6C: 863,\n    0x86: 737,\n    0x87: 852,\n    0x88: 857,\n    0xCC: 1257,\n    0xFF: 16969\n  };\n  var dbf_reverse_map = evert({\n    0x01: 437,\n    0x02: 850,\n    0x03: 1252,\n    0x04: 10000,\n    0x64: 852,\n    0x65: 866,\n    0x66: 865,\n    0x67: 861,\n    0x68: 895,\n    0x69: 620,\n    0x6A: 737,\n    0x6B: 857,\n    0x78: 950,\n    0x79: 949,\n    0x7A: 936,\n    0x7B: 932,\n    0x7C: 874,\n    0x7D: 1255,\n    0x7E: 1256,\n    0x96: 10007,\n    0x97: 10029,\n    0x98: 10006,\n    0xC8: 1250,\n    0xC9: 1251,\n    0xCA: 1254,\n    0xCB: 1253,\n    0x00: 20127\n  });\n  /* TODO: find an actual specification */\n  function dbf_to_aoa(buf, opts) /*:AOA*/{\n    var out /*:AOA*/ = [];\n    var d /*:Block*/ = new_raw_buf(1) /*:any*/;\n    switch (opts.type) {\n      case 'base64':\n        d = s2a(Base64_decode(buf));\n        break;\n      case 'binary':\n        d = s2a(buf);\n        break;\n      case 'buffer':\n      case 'array':\n        d = buf;\n        break;\n    }\n    prep_blob(d, 0);\n\n    /* header */\n    var ft = d.read_shift(1);\n    var memo = !!(ft & 0x88);\n    var vfp = false,\n      l7 = false;\n    switch (ft) {\n      case 0x02:\n        break;\n      // dBASE II\n      case 0x03:\n        break;\n      // dBASE III\n      case 0x30:\n        vfp = true;\n        memo = true;\n        break;\n      // VFP\n      case 0x31:\n        vfp = true;\n        memo = true;\n        break;\n      // VFP with autoincrement\n      // 0x43 dBASE IV SQL table files\n      // 0x63 dBASE IV SQL system files\n      case 0x83:\n        break;\n      // dBASE III with memo\n      case 0x8B:\n        break;\n      // dBASE IV with memo\n      case 0x8C:\n        l7 = true;\n        break;\n      // dBASE Level 7 with memo\n      // case 0xCB dBASE IV SQL table files with memo\n      case 0xF5:\n        break;\n      // FoxPro 2.x with memo\n      // case 0xFB FoxBASE\n      default:\n        throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n    }\n    var nrow = 0,\n      fpos = 0x0209;\n    if (ft == 0x02) nrow = d.read_shift(2);\n    d.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD\n    if (ft != 0x02) nrow = d.read_shift(4);\n    if (nrow > 1048576) nrow = 1e6;\n    if (ft != 0x02) fpos = d.read_shift(2); // header length\n    var rlen = d.read_shift(2); // record length\n\n    var /*flags = 0,*/current_cp = opts.codepage || 1252;\n    if (ft != 0x02) {\n      // 20 reserved bytes\n      d.l += 16;\n      /*flags = */\n      d.read_shift(1);\n      //if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n      /* codepage present in FoxPro and dBASE Level 7 */\n      if (d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\n      d.l += 1;\n      d.l += 2;\n    }\n    if (l7) d.l += 36; // Level 7: 32 byte \"Language driver name\", 4 byte reserved\n\n    /*:: type DBFField = { name:string; len:number; type:string; } */\n    var fields /*:Array<DBFField>*/ = [],\n      field /*:DBFField*/ = {} /*:any*/;\n    var hend = Math.min(d.length, ft == 0x02 ? 0x209 : fpos - 10 - (vfp ? 264 : 0));\n    var ww = l7 ? 32 : 11;\n    while (d.l < hend && d[d.l] != 0x0d) {\n      field = {} /*:any*/;\n      field.name = (typeof $cptable !== \"undefined\" ? $cptable.utils.decode(current_cp, d.slice(d.l, d.l + ww)) : a2s(d.slice(d.l, d.l + ww))).replace(/[\\u0000\\r\\n][\\S\\s]*$/g, \"\");\n      d.l += ww;\n      field.type = String.fromCharCode(d.read_shift(1));\n      if (ft != 0x02 && !l7) field.offset = d.read_shift(4);\n      field.len = d.read_shift(1);\n      if (ft == 0x02) field.offset = d.read_shift(2);\n      field.dec = d.read_shift(1);\n      if (field.name.length) fields.push(field);\n      if (ft != 0x02) d.l += l7 ? 13 : 14;\n      switch (field.type) {\n        case 'B':\n          // Double (VFP) / Binary (dBASE L7)\n          if ((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n          break;\n        case 'G': // General (FoxPro and dBASE L7)\n        case 'P':\n          // Picture (FoxPro and dBASE L7)\n          if (opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n          break;\n        case '+': // Autoincrement (dBASE L7 only)\n        case '0': // _NullFlags (VFP only)\n        case '@': // Timestamp (dBASE L7 only)\n        case 'C': // Character (dBASE II)\n        case 'D': // Date (dBASE III)\n        case 'F': // Float (dBASE IV)\n        case 'I': // Long (VFP and dBASE L7)\n        case 'L': // Logical (dBASE II)\n        case 'M': // Memo (dBASE III)\n        case 'N': // Number (dBASE II)\n        case 'O': // Double (dBASE L7 only)\n        case 'T': // Datetime (VFP only)\n        case 'Y':\n          // Currency (VFP only)\n          break;\n        default:\n          throw new Error('Unknown Field Type: ' + field.type);\n      }\n    }\n    if (d[d.l] !== 0x0D) d.l = fpos - 1;\n    if (d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n    d.l = fpos;\n\n    /* data */\n    var R = 0,\n      C = 0;\n    out[0] = [];\n    for (C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n    while (nrow-- > 0) {\n      if (d[d.l] === 0x2A) {\n        // TODO: record marked as deleted -- create a hidden row?\n        d.l += rlen;\n        continue;\n      }\n      ++d.l;\n      out[++R] = [];\n      C = 0;\n      for (C = 0; C != fields.length; ++C) {\n        var dd = d.slice(d.l, d.l + fields[C].len);\n        d.l += fields[C].len;\n        prep_blob(dd, 0);\n        var s = typeof $cptable !== \"undefined\" ? $cptable.utils.decode(current_cp, dd) : a2s(dd);\n        switch (fields[C].type) {\n          case 'C':\n            // NOTE: it is conventional to write '  /  /  ' for empty dates\n            if (s.trim().length) out[R][C] = s.replace(/([^\\s])\\s+$/, \"$1\");\n            break;\n          case 'D':\n            if (s.length === 8) {\n              out[R][C] = new Date(Date.UTC(+s.slice(0, 4), +s.slice(4, 6) - 1, +s.slice(6, 8), 0, 0, 0, 0));\n              if (!(opts && opts.UTC)) {\n                out[R][C] = utc_to_local(out[R][C]);\n              }\n            } else out[R][C] = s;\n            break;\n          case 'F':\n            out[R][C] = parseFloat(s.trim());\n            break;\n          case '+':\n          case 'I':\n            out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i');\n            break;\n          case 'L':\n            switch (s.trim().toUpperCase()) {\n              case 'Y':\n              case 'T':\n                out[R][C] = true;\n                break;\n              case 'N':\n              case 'F':\n                out[R][C] = false;\n                break;\n              case '':\n              case '\\x00':\n              case '?':\n                break;\n              default:\n                throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n            }\n            break;\n          case 'M':\n            /* TODO: handle memo files */\n            if (!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n            out[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10) : dd.read_shift(4));\n            break;\n          case 'N':\n            s = s.replace(/\\u0000/g, \"\").trim();\n            // NOTE: dBASE II interprets \"  .  \" as 0\n            if (s && s != \".\") out[R][C] = +s || 0;\n            break;\n          case '@':\n            // NOTE: dBASE specs appear to be incorrect\n            out[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);\n            break;\n          case 'T':\n            {\n              var hi = dd.read_shift(4),\n                lo = dd.read_shift(4);\n              if (hi == 0 && lo == 0) break;\n              out[R][C] = new Date((hi - 0x253D8C) * 0x5265C00 + lo);\n              if (!(opts && opts.UTC)) out[R][C] = utc_to_local(out[R][C]);\n            }\n            break;\n          case 'Y':\n            out[R][C] = dd.read_shift(4, 'i') / 1e4 + dd.read_shift(4, 'i') / 1e4 * Math.pow(2, 32);\n            break;\n          case 'O':\n            out[R][C] = -dd.read_shift(-8, 'f');\n            break;\n          case 'B':\n            if (vfp && fields[C].len == 8) {\n              out[R][C] = dd.read_shift(8, 'f');\n              break;\n            }\n          /* falls through */\n          case 'G':\n          case 'P':\n            dd.l += fields[C].len;\n            break;\n          case '0':\n            if (fields[C].name === '_NullFlags') break;\n          /* falls through */\n          default:\n            throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n        }\n      }\n    }\n    if (ft != 0x02) if (d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l - 1) + \" of \" + d.length + \" \" + d[d.l - 1].toString(16));\n    if (opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n    opts.DBF = fields;\n    return out;\n  }\n  function dbf_to_sheet(buf, opts) /*:Worksheet*/{\n    var o = opts || {};\n    if (!o.dateNF) o.dateNF = \"yyyymmdd\";\n    var ws = aoa_to_sheet(dbf_to_aoa(buf, o), o);\n    ws[\"!cols\"] = o.DBF.map(function (field) {\n      return {\n        wch: field.len,\n        DBF: field\n      };\n    });\n    delete o.DBF;\n    return ws;\n  }\n  function dbf_to_workbook(buf, opts) /*:Workbook*/{\n    try {\n      var o = sheet_to_workbook(dbf_to_sheet(buf, opts), opts);\n      o.bookType = \"dbf\";\n      return o;\n    } catch (e) {\n      if (opts && opts.WTF) throw e;\n    }\n    return {\n      SheetNames: [],\n      Sheets: {}\n    };\n  }\n  var _RLEN = {\n    'B': 8,\n    'C': 250,\n    'L': 1,\n    'D': 8,\n    '?': 0,\n    '': 0\n  };\n  function sheet_to_dbf(ws /*:Worksheet*/, opts /*:WriteOpts*/) {\n    if (!ws[\"!ref\"]) throw new Error(\"Cannot export empty sheet to DBF\");\n    var o = opts || {};\n    var old_cp = current_codepage;\n    if (+o.codepage >= 0) set_cp(+o.codepage);\n    if (o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n    var ba = buf_array();\n    var aoa /*:AOA*/ = sheet_to_json(ws, {\n      header: 1,\n      raw: true,\n      cellDates: true\n    });\n    var headers = aoa[0],\n      data = aoa.slice(1),\n      cols = ws[\"!cols\"] || [];\n    var i = 0,\n      j = 0,\n      hcnt = 0,\n      rlen = 1;\n    for (i = 0; i < headers.length; ++i) {\n      if (((cols[i] || {}).DBF || {}).name) {\n        headers[i] = cols[i].DBF.name;\n        ++hcnt;\n        continue;\n      }\n      if (headers[i] == null) continue;\n      ++hcnt;\n      if (typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n      if (typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + typeof headers[i] + \"|\");\n      if (headers.indexOf(headers[i]) !== i) for (j = 0; j < 1024; ++j) if (headers.indexOf(headers[i] + \"_\" + j) == -1) {\n        headers[i] += \"_\" + j;\n        break;\n      }\n    }\n    var range = safe_decode_range(ws['!ref']);\n    var coltypes /*:Array<string>*/ = [];\n    var colwidths /*:Array<number>*/ = [];\n    var coldecimals /*:Array<number>*/ = [];\n    for (i = 0; i <= range.e.c - range.s.c; ++i) {\n      var guess = '',\n        _guess = '',\n        maxlen = 0;\n      var col /*:Array<any>*/ = [];\n      for (j = 0; j < data.length; ++j) {\n        if (data[j][i] != null) col.push(data[j][i]);\n      }\n      if (col.length == 0 || headers[i] == null) {\n        coltypes[i] = '?';\n        continue;\n      }\n      for (j = 0; j < col.length; ++j) {\n        switch (typeof col[j]) {\n          /* TODO: check if L2 compat is desired */\n          case 'number':\n            _guess = 'B';\n            break;\n          case 'string':\n            _guess = 'C';\n            break;\n          case 'boolean':\n            _guess = 'L';\n            break;\n          case 'object':\n            _guess = col[j] instanceof Date ? 'D' : 'C';\n            break;\n          default:\n            _guess = 'C';\n        }\n        /* TODO: cache the values instead of encoding twice */\n        maxlen = Math.max(maxlen, (typeof $cptable !== \"undefined\" && typeof col[j] == \"string\" ? $cptable.utils.encode(current_ansi, col[j]) : String(col[j])).length);\n        guess = guess && guess != _guess ? 'C' : _guess;\n        //if(guess == 'C') break;\n      }\n      if (maxlen > 250) maxlen = 250;\n      _guess = ((cols[i] || {}).DBF || {}).type;\n      /* TODO: more fine grained control over DBF type resolution */\n      if (_guess == 'C') {\n        if (cols[i].DBF.len > maxlen) maxlen = cols[i].DBF.len;\n      }\n      if (guess == 'B' && _guess == 'N') {\n        guess = 'N';\n        coldecimals[i] = cols[i].DBF.dec;\n        maxlen = cols[i].DBF.len;\n      }\n      colwidths[i] = guess == 'C' || _guess == 'N' ? maxlen : _RLEN[guess] || 0;\n      rlen += colwidths[i];\n      coltypes[i] = guess;\n    }\n    var h = ba.next(32);\n    h.write_shift(4, 0x13021130);\n    h.write_shift(4, data.length);\n    h.write_shift(2, 296 + 32 * hcnt);\n    h.write_shift(2, rlen);\n    for (i = 0; i < 4; ++i) h.write_shift(4, 0);\n    var cp = +dbf_reverse_map[/*::String(*/current_codepage /*::)*/] || 0x03;\n    h.write_shift(4, 0x00000000 | cp << 8);\n    if (dbf_codepage_map[cp] != +o.codepage) {\n      if (o.codepage) console.error(\"DBF Unsupported codepage \" + current_codepage + \", using 1252\");\n      current_codepage = 1252;\n    }\n    for (i = 0, j = 0; i < headers.length; ++i) {\n      if (headers[i] == null) continue;\n      var hf = ba.next(32);\n      /* TODO: test how applications handle non-ASCII field names */\n      var _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n      hf.write_shift(1, _f, \"sbcs\");\n      hf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n      hf.write_shift(4, j);\n      hf.write_shift(1, colwidths[i] || _RLEN[coltypes[i]] || 0);\n      hf.write_shift(1, coldecimals[i] || 0);\n      hf.write_shift(1, 0x02);\n      hf.write_shift(4, 0);\n      hf.write_shift(1, 0);\n      hf.write_shift(4, 0);\n      hf.write_shift(4, 0);\n      j += colwidths[i] || _RLEN[coltypes[i]] || 0;\n    }\n    var hb = ba.next(264);\n    hb.write_shift(4, 0x0000000D);\n    for (i = 0; i < 65; ++i) hb.write_shift(4, 0x00000000);\n    for (i = 0; i < data.length; ++i) {\n      var rout = ba.next(rlen);\n      rout.write_shift(1, 0);\n      for (j = 0; j < headers.length; ++j) {\n        if (headers[j] == null) continue;\n        switch (coltypes[j]) {\n          case 'L':\n            rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46);\n            break;\n          case 'B':\n            rout.write_shift(8, data[i][j] || 0, 'f');\n            break;\n          case 'N':\n            var _n = \"0\";\n            if (typeof data[i][j] == \"number\") _n = data[i][j].toFixed(coldecimals[j] || 0);\n            if (_n.length > colwidths[j]) _n = _n.slice(0, colwidths[j]); // addresses decimal > width\n            for (hcnt = 0; hcnt < colwidths[j] - _n.length; ++hcnt) rout.write_shift(1, 0x20);\n            rout.write_shift(1, _n, \"sbcs\");\n            break;\n          case 'D':\n            if (!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");else {\n              rout.write_shift(4, (\"0000\" + data[i][j].getFullYear()).slice(-4), \"sbcs\");\n              rout.write_shift(2, (\"00\" + (data[i][j].getMonth() + 1)).slice(-2), \"sbcs\");\n              rout.write_shift(2, (\"00\" + data[i][j].getDate()).slice(-2), \"sbcs\");\n            }\n            break;\n          case 'C':\n            var _l = rout.l;\n            var _s = String(data[i][j] != null ? data[i][j] : \"\").slice(0, colwidths[j]);\n            rout.write_shift(1, _s, \"cpstr\");\n            _l += colwidths[j] - rout.l;\n            for (hcnt = 0; hcnt < _l; ++hcnt) rout.write_shift(1, 0x20);\n            break;\n        }\n      }\n      // data\n    }\n    current_codepage = old_cp;\n    ba.next(1).write_shift(1, 0x1A);\n    return ba.end();\n  }\n  return {\n    to_workbook: dbf_to_workbook,\n    to_sheet: dbf_to_sheet,\n    from_sheet: sheet_to_dbf\n  };\n}();\nvar SYLK = /*#__PURE__*/function () {\n  /* TODO: stress test sequences */\n  var sylk_escapes = {\n    AA: 'À',\n    BA: 'Á',\n    CA: 'Â',\n    DA: 195,\n    HA: 'Ä',\n    JA: 197,\n    AE: 'È',\n    BE: 'É',\n    CE: 'Ê',\n    HE: 'Ë',\n    AI: 'Ì',\n    BI: 'Í',\n    CI: 'Î',\n    HI: 'Ï',\n    AO: 'Ò',\n    BO: 'Ó',\n    CO: 'Ô',\n    DO: 213,\n    HO: 'Ö',\n    AU: 'Ù',\n    BU: 'Ú',\n    CU: 'Û',\n    HU: 'Ü',\n    Aa: 'à',\n    Ba: 'á',\n    Ca: 'â',\n    Da: 227,\n    Ha: 'ä',\n    Ja: 229,\n    Ae: 'è',\n    Be: 'é',\n    Ce: 'ê',\n    He: 'ë',\n    Ai: 'ì',\n    Bi: 'í',\n    Ci: 'î',\n    Hi: 'ï',\n    Ao: 'ò',\n    Bo: 'ó',\n    Co: 'ô',\n    Do: 245,\n    Ho: 'ö',\n    Au: 'ù',\n    Bu: 'ú',\n    Cu: 'û',\n    Hu: 'ü',\n    KC: 'Ç',\n    Kc: 'ç',\n    q: 'æ',\n    z: 'œ',\n    a: 'Æ',\n    j: 'Œ',\n    DN: 209,\n    Dn: 241,\n    Hy: 255,\n    S: 169,\n    c: 170,\n    R: 174,\n    \"B \": 180,\n    0: 176,\n    1: 177,\n    2: 178,\n    3: 179,\n    5: 181,\n    6: 182,\n    7: 183,\n    Q: 185,\n    k: 186,\n    b: 208,\n    i: 216,\n    l: 222,\n    s: 240,\n    y: 248,\n    \"!\": 161,\n    '\"': 162,\n    \"#\": 163,\n    \"(\": 164,\n    \"%\": 165,\n    \"'\": 167,\n    \"H \": 168,\n    \"+\": 171,\n    \";\": 187,\n    \"<\": 188,\n    \"=\": 189,\n    \">\": 190,\n    \"?\": 191,\n    \"{\": 223\n  } /*:any*/;\n  var sylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g, \"\\\\$1\").replace(\"{\", \"\\\\{\") + \"|\\\\|)\", \"gm\");\n  try {\n    sylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g, \"\\\\$1\") + \"|\\\\|)\", \"gm\");\n  } catch (e) {}\n  var sylk_char_fn = function (_, $1) {\n    var o = sylk_escapes[$1];\n    return typeof o == \"number\" ? _getansi(o) : o;\n  };\n  var decode_sylk_char = function ($$, $1, $2) {\n    var newcc = $1.charCodeAt(0) - 0x20 << 4 | $2.charCodeAt(0) - 0x30;\n    return newcc == 59 ? $$ : _getansi(newcc);\n  };\n  sylk_escapes[\"|\"] = 254;\n  /* TODO: evert the escape map */\n  var encode_sylk_str = function ($$) {\n    return $$.replace(/\\n/g, \"\\x1b :\").replace(/\\r/g, \"\\x1b =\");\n  };\n  /* https://oss.sheetjs.com/notes/sylk/ for more details */\n  function sylk_to_aoa(d /*:RawData*/, opts) /*:[AOA, Worksheet]*/{\n    switch (opts.type) {\n      case 'base64':\n        return sylk_to_aoa_str(Base64_decode(d), opts);\n      case 'binary':\n        return sylk_to_aoa_str(d, opts);\n      case 'buffer':\n        return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n      case 'array':\n        return sylk_to_aoa_str(cc2str(d), opts);\n    }\n    throw new Error(\"Unrecognized type \" + opts.type);\n  }\n  function sylk_to_aoa_str(str /*:string*/, opts) /*:[AOA, Worksheet]*/{\n    var records = str.split(/[\\n\\r]+/),\n      R = -1,\n      C = -1,\n      ri = 0,\n      rj = 0,\n      arr /*:AOA*/ = [];\n    var formats /*:Array<string>*/ = [];\n    var next_cell_format /*:string|null*/ = null;\n    var sht = {},\n      rowinfo /*:Array<RowInfo>*/ = [],\n      colinfo /*:Array<ColInfo>*/ = [],\n      cw /*:Array<string>*/ = [];\n    var Mval = 0,\n      j;\n    var wb = {\n      Workbook: {\n        WBProps: {},\n        Names: []\n      }\n    };\n    if (+opts.codepage >= 0) set_cp(+opts.codepage);\n    for (; ri !== records.length; ++ri) {\n      Mval = 0;\n      var rstr = records[ri].trim().replace(/\\x1B([\\x20-\\x2F])([\\x30-\\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);\n      var record = rstr.replace(/;;/g, \"\\u0000\").split(\";\").map(function (x) {\n        return x.replace(/\\u0000/g, \";\");\n      });\n      var RT = record[0],\n        val;\n      if (rstr.length > 0) switch (RT) {\n        case 'ID':\n          break;\n        /* header */\n        case 'E':\n          break;\n        /* EOF */\n        case 'B':\n          break;\n        /* dimensions */\n        case 'O':\n          /* workbook options */\n          for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n            case 'V':\n              {\n                var d1904 = parseInt(record[rj].slice(1), 10);\n                // NOTE: it is technically an error if d1904 >= 5 or < 0\n                if (d1904 >= 1 && d1904 <= 4) wb.Workbook.WBProps.date1904 = true;\n              }\n              break;\n          }\n          break;\n        case 'W':\n          break;\n        /* window */\n        case 'P':\n          switch (record[1].charAt(0)) {\n            case 'P':\n              formats.push(rstr.slice(3).replace(/;;/g, \";\"));\n              break;\n          }\n          break;\n        case 'NN':\n          {\n            /* defined name */\n            var nn = {\n              Sheet: 0\n            };\n            for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n              case 'N':\n                nn.Name = record[rj].slice(1);\n                break;\n              case 'E':\n                nn.Ref = (opts && opts.sheet || \"Sheet1\") + \"!\" + rc_to_a1(record[rj].slice(1));\n                break;\n            }\n            wb.Workbook.Names.push(nn);\n          }\n          break;\n        // case 'NE': // ??\n        // case 'NU': // ??\n        case 'C':\n          /* cell */\n          var C_seen_K = false,\n            C_seen_X = false,\n            C_seen_S = false,\n            C_seen_E = false,\n            _R = -1,\n            _C = -1,\n            formula = \"\",\n            cell_t = \"z\";\n          var cmnt = \"\";\n          for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n            case 'A':\n              cmnt = record[rj].slice(1);\n              break;\n            // TODO: comment\n            case 'X':\n              C = parseInt(record[rj].slice(1), 10) - 1;\n              C_seen_X = true;\n              break;\n            case 'Y':\n              R = parseInt(record[rj].slice(1), 10) - 1;\n              if (!C_seen_X) C = 0;\n              for (j = arr.length; j <= R; ++j) arr[j] = [];\n              break;\n            case 'K':\n              val = record[rj].slice(1);\n              if (val.charAt(0) === '\"') {\n                val = val.slice(1, val.length - 1);\n                cell_t = \"s\";\n              } else if (val === 'TRUE' || val === 'FALSE') {\n                val = val === 'TRUE';\n                cell_t = \"b\";\n              } else if (val.charAt(0) == \"#\" && RBErr[val] != null) {\n                cell_t = \"e\";\n                val = RBErr[val];\n              } else if (!isNaN(fuzzynum(val))) {\n                val = fuzzynum(val);\n                cell_t = \"n\";\n                if (next_cell_format !== null && fmt_is_date(next_cell_format) && opts.cellDates) {\n                  val = numdate(wb.Workbook.WBProps.date1904 ? val + 1462 : val);\n                  cell_t = typeof val == \"number\" ? \"n\" : \"d\";\n                }\n              }\n              if (typeof $cptable !== 'undefined' && typeof val == \"string\" && (opts || {}).type != \"string\" && (opts || {}).codepage) val = $cptable.utils.decode(opts.codepage, val);\n              C_seen_K = true;\n              break;\n            case 'E':\n              C_seen_E = true;\n              formula = rc_to_a1(record[rj].slice(1), {\n                r: R,\n                c: C\n              });\n              break;\n            case 'S':\n              C_seen_S = true;\n              break;\n            case 'G':\n              break;\n            // unknown\n            case 'R':\n              _R = parseInt(record[rj].slice(1), 10) - 1;\n              break;\n            case 'C':\n              _C = parseInt(record[rj].slice(1), 10) - 1;\n              break;\n            // case 'P': // ??\n            // case 'D': // ??\n            default:\n              if (opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n          }\n          if (C_seen_K) {\n            if (!arr[R][C]) arr[R][C] = {\n              t: cell_t,\n              v: val\n            };else {\n              arr[R][C].t = cell_t;\n              arr[R][C].v = val;\n            }\n            if (next_cell_format) arr[R][C].z = next_cell_format;\n            if (opts.cellText !== false && next_cell_format) arr[R][C].w = SSF_format(arr[R][C].z, arr[R][C].v, {\n              date1904: wb.Workbook.WBProps.date1904\n            });\n            next_cell_format = null;\n          }\n          if (C_seen_S) {\n            if (C_seen_E) throw new Error(\"SYLK shared formula cannot have own formula\");\n            var shrbase = _R > -1 && arr[_R][_C];\n            if (!shrbase || !shrbase[1]) throw new Error(\"SYLK shared formula cannot find base\");\n            formula = shift_formula_str(shrbase[1], {\n              r: R - _R,\n              c: C - _C\n            });\n          }\n          if (formula) {\n            if (!arr[R][C]) arr[R][C] = {\n              t: 'n',\n              f: formula\n            };else arr[R][C].f = formula;\n          }\n          if (cmnt) {\n            if (!arr[R][C]) arr[R][C] = {\n              t: 'z'\n            };\n            arr[R][C].c = [{\n              a: \"SheetJSYLK\",\n              t: cmnt\n            }];\n          }\n          break;\n        case 'F':\n          /* Format */\n          var F_seen = 0;\n          for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n            case 'X':\n              C = parseInt(record[rj].slice(1), 10) - 1;\n              ++F_seen;\n              break;\n            case 'Y':\n              R = parseInt(record[rj].slice(1), 10) - 1; /*C = 0;*/\n              for (j = arr.length; j <= R; ++j) arr[j] = [];\n              break;\n            case 'M':\n              Mval = parseInt(record[rj].slice(1), 10) / 20;\n              break;\n            case 'F':\n              break;\n            /* ??? */\n            case 'G':\n              break;\n            /* hide grid */\n            case 'P':\n              next_cell_format = formats[parseInt(record[rj].slice(1), 10)];\n              break;\n            case 'S':\n              break;\n            /* cell style */\n            case 'D':\n              break;\n            /* column */\n            case 'N':\n              break;\n            /* font */\n            case 'W':\n              cw = record[rj].slice(1).split(\" \");\n              for (j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n                Mval = parseInt(cw[2], 10);\n                colinfo[j - 1] = Mval === 0 ? {\n                  hidden: true\n                } : {\n                  wch: Mval\n                };\n              }\n              break;\n            case 'C':\n              /* default column format */\n              C = parseInt(record[rj].slice(1), 10) - 1;\n              if (!colinfo[C]) colinfo[C] = {};\n              break;\n            case 'R':\n              /* row properties */\n              R = parseInt(record[rj].slice(1), 10) - 1;\n              if (!rowinfo[R]) rowinfo[R] = {};\n              if (Mval > 0) {\n                rowinfo[R].hpt = Mval;\n                rowinfo[R].hpx = pt2px(Mval);\n              } else if (Mval === 0) rowinfo[R].hidden = true;\n              break;\n            // case 'K': // ??\n            // case 'E': // ??\n            default:\n              if (opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n          }\n          if (F_seen < 1) next_cell_format = null;\n          break;\n        default:\n          if (opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n      }\n    }\n    if (rowinfo.length > 0) sht['!rows'] = rowinfo;\n    if (colinfo.length > 0) sht['!cols'] = colinfo;\n    colinfo.forEach(function (col) {\n      process_col(col);\n    });\n    if (opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n    return [arr, sht, wb];\n  }\n  function sylk_to_workbook(d /*:RawData*/, opts) /*:Workbook*/{\n    var aoasht = sylk_to_aoa(d, opts);\n    var aoa = aoasht[0],\n      ws = aoasht[1],\n      wb = aoasht[2];\n    var _opts = dup(opts);\n    _opts.date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n    var o = aoa_to_sheet(aoa, _opts);\n    keys(ws).forEach(function (k) {\n      o[k] = ws[k];\n    });\n    var outwb = sheet_to_workbook(o, opts);\n    keys(wb).forEach(function (k) {\n      outwb[k] = wb[k];\n    });\n    outwb.bookType = \"sylk\";\n    return outwb;\n  }\n  function write_ws_cell_sylk(cell /*:Cell*/, ws /*:Worksheet*/, R /*:number*/, C /*:number*/, opts, date1904 /*:boolean*/) /*:string*/{\n    var o = \"C;Y\" + (R + 1) + \";X\" + (C + 1) + \";K\";\n    switch (cell.t) {\n      case 'n':\n        o += cell.v || 0;\n        if (cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {\n          r: R,\n          c: C\n        });\n        break;\n      case 'b':\n        o += cell.v ? \"TRUE\" : \"FALSE\";\n        break;\n      case 'e':\n        o += cell.w || BErr[cell.v] || cell.v;\n        break;\n      case 'd':\n        o += datenum(parseDate(cell.v, date1904), date1904);\n        break;\n      case 's':\n        o += '\"' + (cell.v == null ? \"\" : String(cell.v)).replace(/\"/g, \"\").replace(/;/g, \";;\") + '\"';\n        break;\n    }\n    return o;\n  }\n  function write_ws_cmnt_sylk(cmnt /*:Comment*/, R /*:number*/, C /*:number*/) /*:string*/{\n    var o = \"C;Y\" + (R + 1) + \";X\" + (C + 1) + \";A\";\n    /* TODO: max length? */\n    o += encode_sylk_str(cmnt.map(function (c) {\n      return c.t;\n    }).join(\"\"));\n    return o;\n  }\n  function write_ws_cols_sylk(out, cols) {\n    cols.forEach(function (col, i) {\n      var rec = \"F;W\" + (i + 1) + \" \" + (i + 1) + \" \";\n      if (col.hidden) rec += \"0\";else {\n        if (typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);\n        if (typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);\n        if (typeof col.wch == 'number') rec += Math.round(col.wch);\n      }\n      if (rec.charAt(rec.length - 1) != \" \") out.push(rec);\n    });\n  }\n  function write_ws_rows_sylk(out /*:Array<string>*/, rows /*:Array<RowInfo>*/) {\n    rows.forEach(function (row, i) {\n      var rec = \"F;\";\n      if (row.hidden) rec += \"M0;\";else if (row.hpt) rec += \"M\" + 20 * row.hpt + \";\";else if (row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n      if (rec.length > 2) out.push(rec + \"R\" + (i + 1));\n    });\n  }\n  function sheet_to_sylk(ws /*:Worksheet*/, opts /*:?any*/, wb /*:?WorkBook*/) /*:string*/{\n    if (!opts) opts = {};\n    opts._formats = [\"General\"];\n    /* TODO: codepage */\n    var preamble /*:Array<string>*/ = [\"ID;PSheetJS;N;E\"],\n      o /*:Array<string>*/ = [];\n    var r = safe_decode_range(ws['!ref'] || \"A1\"),\n      cell /*:Cell*/;\n    var dense = ws[\"!data\"] != null;\n    var RS = \"\\r\\n\";\n    var d1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n    var _lastfmt = \"General\";\n    preamble.push(\"P;PGeneral\");\n    /* Excel has been inconsistent in comment placement */\n    var R = r.s.r,\n      C = r.s.c,\n      p = [];\n    if (ws[\"!ref\"]) for (R = r.s.r; R <= r.e.r; ++R) {\n      if (dense && !ws[\"!data\"][R]) continue;\n      p = [];\n      for (C = r.s.c; C <= r.e.c; ++C) {\n        cell = dense ? ws[\"!data\"][R][C] : ws[encode_col(C) + encode_row(R)];\n        if (!cell || !cell.c) continue;\n        p.push(write_ws_cmnt_sylk(cell.c, R, C));\n      }\n      if (p.length) o.push(p.join(RS));\n    }\n    if (ws[\"!ref\"]) for (R = r.s.r; R <= r.e.r; ++R) {\n      if (dense && !ws[\"!data\"][R]) continue;\n      p = [];\n      for (C = r.s.c; C <= r.e.c; ++C) {\n        cell = dense ? ws[\"!data\"][R][C] : ws[encode_col(C) + encode_row(R)];\n        if (!cell || cell.v == null && (!cell.f || cell.F)) continue;\n        if ((cell.z || (cell.t == \"d\" ? table_fmt[14] : \"General\")) != _lastfmt) {\n          var ifmt = opts._formats.indexOf(cell.z);\n          if (ifmt == -1) {\n            opts._formats.push(cell.z);\n            ifmt = opts._formats.length - 1;\n            preamble.push(\"P;P\" + cell.z.replace(/;/g, \";;\"));\n          }\n          p.push(\"F;P\" + ifmt + \";Y\" + (R + 1) + \";X\" + (C + 1));\n        }\n        p.push(write_ws_cell_sylk(cell, ws, R, C, opts, d1904));\n      }\n      o.push(p.join(RS));\n    }\n    preamble.push(\"F;P0;DG0G8;M255\");\n    if (ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n    if (ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n    if (ws[\"!ref\"]) preamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c, r.s.r, r.e.c, r.e.r].join(\" \"));\n    preamble.push(\"O;L;D;B\" + (d1904 ? \";V4\" : \"\") + \";K47;G100 0.001\");\n    delete opts._formats;\n    return preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n  }\n  return {\n    to_workbook: sylk_to_workbook,\n    from_sheet: sheet_to_sylk\n  };\n}();\nvar DIF = /*#__PURE__*/function () {\n  function dif_to_aoa(d /*:RawData*/, opts) /*:AOA*/{\n    switch (opts.type) {\n      case 'base64':\n        return dif_to_aoa_str(Base64_decode(d), opts);\n      case 'binary':\n        return dif_to_aoa_str(d, opts);\n      case 'buffer':\n        return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n      case 'array':\n        return dif_to_aoa_str(cc2str(d), opts);\n    }\n    throw new Error(\"Unrecognized type \" + opts.type);\n  }\n  function dif_to_aoa_str(str /*:string*/, opts) /*:AOA*/{\n    var records = str.split('\\n'),\n      R = -1,\n      C = -1,\n      ri = 0,\n      arr /*:AOA*/ = [];\n    for (; ri !== records.length; ++ri) {\n      if (records[ri].trim() === 'BOT') {\n        arr[++R] = [];\n        C = 0;\n        continue;\n      }\n      if (R < 0) continue;\n      var metadata = records[ri].trim().split(\",\");\n      var type = metadata[0],\n        value = metadata[1];\n      ++ri;\n      var data = records[ri] || \"\";\n      while ((data.match(/[\"]/g) || []).length & 1 && ri < records.length - 1) data += \"\\n\" + records[++ri];\n      data = data.trim();\n      switch (+type) {\n        case -1:\n          if (data === 'BOT') {\n            arr[++R] = [];\n            C = 0;\n            continue;\n          } else if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n          break;\n        case 0:\n          if (data === 'TRUE') arr[R][C] = true;else if (data === 'FALSE') arr[R][C] = false;else if (!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);else if (!isNaN(fuzzydate(value).getDate())) {\n            arr[R][C] = parseDate(value);\n            if (!(opts && opts.UTC)) {\n              arr[R][C] = utc_to_local(arr[R][C]);\n            }\n          } else arr[R][C] = value;\n          ++C;\n          break;\n        case 1:\n          data = data.slice(1, data.length - 1);\n          data = data.replace(/\"\"/g, '\"');\n          if (DIF_XL && data && data.match(/^=\".*\"$/)) data = data.slice(2, -1);\n          arr[R][C++] = data !== '' ? data : null;\n          break;\n      }\n      if (data === 'EOD') break;\n    }\n    if (opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n    return arr;\n  }\n  function dif_to_sheet(str /*:string*/, opts) /*:Worksheet*/{\n    return aoa_to_sheet(dif_to_aoa(str, opts), opts);\n  }\n  function dif_to_workbook(str /*:string*/, opts) /*:Workbook*/{\n    var o = sheet_to_workbook(dif_to_sheet(str, opts), opts);\n    o.bookType = \"dif\";\n    return o;\n  }\n  function make_value(v /*:number*/, s /*:string*/) /*:string*/{\n    return \"0,\" + String(v) + \"\\r\\n\" + s;\n  }\n  function make_value_str(s /*:string*/) /*:string*/{\n    return \"1,0\\r\\n\\\"\" + s.replace(/\"/g, '\"\"') + '\"';\n  }\n  function sheet_to_dif(ws /*:Worksheet*/ /*::, opts:?any*/) /*:string*/{\n    var _DIF_XL = DIF_XL;\n    if (!ws[\"!ref\"]) throw new Error(\"Cannot export empty sheet to DIF\");\n    var r = safe_decode_range(ws['!ref']);\n    var dense = ws[\"!data\"] != null;\n    var o /*:Array<string>*/ = [\"TABLE\\r\\n0,1\\r\\n\\\"sheetjs\\\"\\r\\n\", \"VECTORS\\r\\n0,\" + (r.e.r - r.s.r + 1) + \"\\r\\n\\\"\\\"\\r\\n\", \"TUPLES\\r\\n0,\" + (r.e.c - r.s.c + 1) + \"\\r\\n\\\"\\\"\\r\\n\", \"DATA\\r\\n0,0\\r\\n\\\"\\\"\\r\\n\"];\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      var row = dense ? ws[\"!data\"][R] : [];\n      var p = \"-1,0\\r\\nBOT\\r\\n\";\n      for (var C = r.s.c; C <= r.e.c; ++C) {\n        var cell /*:Cell*/ = dense ? row && row[C] : ws[encode_cell({\n          r: R,\n          c: C\n        })];\n        if (cell == null) {\n          p += \"1,0\\r\\n\\\"\\\"\\r\\n\";\n          continue;\n        }\n        switch (cell.t) {\n          case 'n':\n            if (_DIF_XL) {\n              if (cell.w != null) p += \"0,\" + cell.w + \"\\r\\nV\";else if (cell.v != null) p += make_value(cell.v, \"V\"); // TODO: should this call SSF_format?\n              else if (cell.f != null && !cell.F) p += make_value_str(\"=\" + cell.f);else p += \"1,0\\r\\n\\\"\\\"\";\n            } else {\n              if (cell.v == null) p += \"1,0\\r\\n\\\"\\\"\";else p += make_value(cell.v, \"V\");\n            }\n            break;\n          case 'b':\n            p += cell.v ? make_value(1, \"TRUE\") : make_value(0, \"FALSE\");\n            break;\n          case 's':\n            p += make_value_str(!_DIF_XL || isNaN(+cell.v) ? cell.v : '=\"' + cell.v + '\"');\n            break;\n          case 'd':\n            if (!cell.w) cell.w = SSF_format(cell.z || table_fmt[14], datenum(parseDate(cell.v)));\n            if (_DIF_XL) p += make_value(cell.w, \"V\");else p += make_value_str(cell.w);\n            break;\n          default:\n            p += \"1,0\\r\\n\\\"\\\"\";\n        }\n        p += \"\\r\\n\";\n      }\n      o.push(p);\n    }\n    return o.join(\"\") + \"-1,0\\r\\nEOD\";\n  }\n  return {\n    to_workbook: dif_to_workbook,\n    to_sheet: dif_to_sheet,\n    from_sheet: sheet_to_dif\n  };\n}();\nvar ETH = /*#__PURE__*/function () {\n  function decode(s /*:string*/) /*:string*/{\n    return s.replace(/\\\\b/g, \"\\\\\").replace(/\\\\c/g, \":\").replace(/\\\\n/g, \"\\n\");\n  }\n  function encode(s /*:string*/) /*:string*/{\n    return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g, \"\\\\n\");\n  }\n  function eth_to_aoa(str /*:string*/, opts) /*:AOA*/{\n    var records = str.split('\\n'),\n      R = -1,\n      C = -1,\n      ri = 0,\n      arr /*:AOA*/ = [];\n    for (; ri !== records.length; ++ri) {\n      var record = records[ri].trim().split(\":\");\n      if (record[0] !== 'cell') continue;\n      var addr = decode_cell(record[1]);\n      if (arr.length <= addr.r) for (R = arr.length; R <= addr.r; ++R) if (!arr[R]) arr[R] = [];\n      R = addr.r;\n      C = addr.c;\n      switch (record[2]) {\n        case 't':\n          arr[R][C] = decode(record[3]);\n          break;\n        case 'v':\n          arr[R][C] = +record[3];\n          break;\n        case 'vtf':\n          var _f = record[record.length - 1];\n        /* falls through */\n        case 'vtc':\n          switch (record[3]) {\n            case 'nl':\n              arr[R][C] = +record[4] ? true : false;\n              break;\n            default:\n              arr[R][C] = +record[4];\n              break;\n          }\n          if (record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n      }\n    }\n    if (opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n    return arr;\n  }\n  function eth_to_sheet(d /*:string*/, opts) /*:Worksheet*/{\n    return aoa_to_sheet(eth_to_aoa(d, opts), opts);\n  }\n  function eth_to_workbook(d /*:string*/, opts) /*:Workbook*/{\n    return sheet_to_workbook(eth_to_sheet(d, opts), opts);\n  }\n  var header = [\"socialcalc:version:1.5\", \"MIME-Version: 1.0\", \"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"].join(\"\\n\");\n  var sep = [\"--SocialCalcSpreadsheetControlSave\", \"Content-type: text/plain; charset=UTF-8\"].join(\"\\n\") + \"\\n\";\n\n  /* TODO: the other parts */\n  var meta = [\"# SocialCalc Spreadsheet Control Save\", \"part:sheet\"].join(\"\\n\");\n  var end = \"--SocialCalcSpreadsheetControlSave--\";\n  function sheet_to_eth_data(ws /*:Worksheet*/) /*:string*/{\n    if (!ws || !ws['!ref']) return \"\";\n    var o /*:Array<string>*/ = [],\n      oo /*:Array<string>*/ = [],\n      cell,\n      coord = \"\";\n    var r = decode_range(ws['!ref']);\n    var dense = ws[\"!data\"] != null;\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      for (var C = r.s.c; C <= r.e.c; ++C) {\n        coord = encode_cell({\n          r: R,\n          c: C\n        });\n        cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[coord];\n        if (!cell || cell.v == null || cell.t === 'z') continue;\n        oo = [\"cell\", coord, 't'];\n        switch (cell.t) {\n          case 's':\n          case 'str':\n            oo.push(encode(cell.v));\n            break;\n          case 'n':\n            if (!cell.f) {\n              oo[2] = 'v';\n              oo[3] = cell.v;\n            } else {\n              oo[2] = 'vtf';\n              oo[3] = 'n';\n              oo[4] = cell.v;\n              oo[5] = encode(cell.f);\n            }\n            break;\n          case 'b':\n            oo[2] = 'vt' + (cell.f ? 'f' : 'c');\n            oo[3] = 'nl';\n            oo[4] = cell.v ? \"1\" : \"0\";\n            oo[5] = encode(cell.f || (cell.v ? 'TRUE' : 'FALSE'));\n            break;\n          case 'd':\n            var t = datenum(parseDate(cell.v));\n            oo[2] = 'vtc';\n            oo[3] = 'nd';\n            oo[4] = \"\" + t;\n            oo[5] = cell.w || SSF_format(cell.z || table_fmt[14], t);\n            break;\n          case 'e':\n            continue;\n        }\n        o.push(oo.join(\":\"));\n      }\n    }\n    o.push(\"sheet:c:\" + (r.e.c - r.s.c + 1) + \":r:\" + (r.e.r - r.s.r + 1) + \":tvf:1\");\n    o.push(\"valueformat:1:text-wiki\");\n    //o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n    return o.join(\"\\n\");\n  }\n  function sheet_to_eth(ws /*:Worksheet*/ /*::, opts:?any*/) /*:string*/{\n    return [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n    // return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n  }\n  return {\n    to_workbook: eth_to_workbook,\n    to_sheet: eth_to_sheet,\n    from_sheet: sheet_to_eth\n  };\n}();\nvar PRN = /*#__PURE__*/function () {\n  function set_text_arr(data /*:string*/, arr /*:AOA*/, R /*:number*/, C /*:number*/, o /*:any*/) {\n    if (o.raw) arr[R][C] = data;else if (data === \"\") {/* empty */} else if (data === 'TRUE') arr[R][C] = true;else if (data === 'FALSE') arr[R][C] = false;else if (!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);else if (!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);else arr[R][C] = data;\n  }\n  function prn_to_aoa_str(f /*:string*/, opts) /*:AOA*/{\n    var o = opts || {};\n    var arr /*:AOA*/ = [] /*:any*/;\n    if (!f || f.length === 0) return arr;\n    var lines = f.split(/[\\r\\n]/);\n    var L = lines.length - 1;\n    while (L >= 0 && lines[L].length === 0) --L;\n    var start = 10,\n      idx = 0;\n    var R = 0;\n    for (; R <= L; ++R) {\n      idx = lines[R].indexOf(\" \");\n      if (idx == -1) idx = lines[R].length;else idx++;\n      start = Math.max(start, idx);\n    }\n    for (R = 0; R <= L; ++R) {\n      arr[R] = [];\n      /* TODO: confirm that widths are always 10 */\n      var C = 0;\n      set_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n      for (C = 1; C <= (lines[R].length - start) / 10 + 1; ++C) set_text_arr(lines[R].slice(start + (C - 1) * 10, start + C * 10).trim(), arr, R, C, o);\n    }\n    if (o.sheetRows) arr = arr.slice(0, o.sheetRows);\n    return arr;\n  }\n\n  // List of accepted CSV separators\n  var guess_seps = {\n    0x2C: ',',\n    0x09: \"\\t\",\n    0x3B: ';',\n    0x7C: '|'\n  };\n\n  // CSV separator weights to be used in case of equal numbers\n  var guess_sep_weights = {\n    0x2C: 3,\n    0x09: 2,\n    0x3B: 1,\n    0x7C: 0\n  };\n  function guess_sep(str) {\n    var cnt = {},\n      instr = false,\n      end = 0,\n      cc = 0;\n    for (; end < str.length; ++end) {\n      if ((cc = str.charCodeAt(end)) == 0x22) instr = !instr;else if (!instr && cc in guess_seps) cnt[cc] = (cnt[cc] || 0) + 1;\n    }\n    cc = [];\n    for (end in cnt) if (Object.prototype.hasOwnProperty.call(cnt, end)) {\n      cc.push([cnt[end], end]);\n    }\n    if (!cc.length) {\n      cnt = guess_sep_weights;\n      for (end in cnt) if (Object.prototype.hasOwnProperty.call(cnt, end)) {\n        cc.push([cnt[end], end]);\n      }\n    }\n    cc.sort(function (a, b) {\n      return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]];\n    });\n    return guess_seps[cc.pop()[1]] || 0x2C;\n  }\n  function dsv_to_sheet_str(str /*:string*/, opts) /*:Worksheet*/{\n    var o = opts || {};\n    var sep = \"\";\n    if (DENSE != null && o.dense == null) o.dense = DENSE;\n    var ws /*:Worksheet*/ = {} /*:any*/;\n    if (o.dense) ws[\"!data\"] = [];\n    var range /*:Range*/ = {\n      s: {\n        c: 0,\n        r: 0\n      },\n      e: {\n        c: 0,\n        r: 0\n      }\n    } /*:any*/;\n    if (str.slice(0, 4) == \"sep=\") {\n      // If the line ends in \\r\\n\n      if (str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10) {\n        sep = str.charAt(4);\n        str = str.slice(7);\n      }\n      // If line ends in \\r OR \\n\n      else if (str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10) {\n        sep = str.charAt(4);\n        str = str.slice(6);\n      } else sep = guess_sep(str.slice(0, 1024));\n    } else if (o && o.FS) sep = o.FS;else sep = guess_sep(str.slice(0, 1024));\n    var R = 0,\n      C = 0,\n      v = 0;\n    var start = 0,\n      end = 0,\n      sepcc = sep.charCodeAt(0),\n      instr = false,\n      cc = 0,\n      startcc = str.charCodeAt(0);\n    var _re /*:?RegExp*/ = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n    function finish_cell() {\n      /* TODO: fuzzy parsers should pass back assumed number format */\n      var s = str.slice(start, end);\n      if (s.slice(-1) == \"\\r\") s = s.slice(0, -1);\n      var cell = {} /*:any*/;\n      if (s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1, -1).replace(/\"\"/g, '\"');\n      if (o.cellText !== false) cell.w = s;\n      if (s.length === 0) cell.t = 'z';else if (o.raw) {\n        cell.t = 's';\n        cell.v = s;\n      } else if (s.trim().length === 0) {\n        cell.t = 's';\n        cell.v = s;\n      } else if (s.charCodeAt(0) == 0x3D) {\n        if (s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) {\n          cell.t = 's';\n          cell.v = s.slice(2, -1).replace(/\"\"/g, '\"');\n        } else if (fuzzyfmla(s)) {\n          cell.t = 's';\n          cell.f = s.slice(1);\n          cell.v = s;\n        } else {\n          cell.t = 's';\n          cell.v = s;\n        }\n      } else if (s == \"TRUE\") {\n        cell.t = 'b';\n        cell.v = true;\n      } else if (s == \"FALSE\") {\n        cell.t = 'b';\n        cell.v = false;\n      } else if (!isNaN(v = fuzzynum(s))) {\n        cell.t = 'n';\n        cell.v = v;\n      } else if (!isNaN((v = fuzzydate(s)).getDate()) || _re && s.match(_re)) {\n        cell.z = o.dateNF || table_fmt[14];\n        if (_re && s.match(_re)) {\n          var news = dateNF_fix(s, o.dateNF, s.match(_re) || []);\n          v = parseDate(news);\n          if (o && o.UTC === false) v = utc_to_local(v);\n        } else if (o && o.UTC === false) v = utc_to_local(v);else if (o.cellText !== false && o.dateNF) cell.w = SSF_format(cell.z, v);\n        if (o.cellDates) {\n          cell.t = 'd';\n          cell.v = v;\n        } else {\n          cell.t = 'n';\n          cell.v = datenum(v);\n        }\n        if (!o.cellNF) delete cell.z;\n      } else {\n        cell.t = 's';\n        cell.v = s;\n      }\n      if (cell.t == 'z') {} else if (o.dense) {\n        if (!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n        ws[\"!data\"][R][C] = cell;\n      } else ws[encode_cell({\n        c: C,\n        r: R\n      })] = cell;\n      start = end + 1;\n      startcc = str.charCodeAt(start);\n      if (range.e.c < C) range.e.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (cc == sepcc) ++C;else {\n        C = 0;\n        ++R;\n        if (o.sheetRows && o.sheetRows <= R) return true;\n      }\n    }\n    outer: for (; end < str.length; ++end) switch (cc = str.charCodeAt(end)) {\n      case 0x22:\n        if (startcc === 0x22) instr = !instr;\n        break;\n      case 0x0d:\n        if (instr) break;\n        if (str.charCodeAt(end + 1) == 0x0a) ++end;\n      /* falls through */\n      case sepcc:\n      case 0x0a:\n        if (!instr && finish_cell()) break outer;\n        break;\n      default:\n        break;\n    }\n    if (end - start > 0) finish_cell();\n    ws['!ref'] = encode_range(range);\n    return ws;\n  }\n  function prn_to_sheet_str(str /*:string*/, opts) /*:Worksheet*/{\n    if (!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);\n    if (opts.FS) return dsv_to_sheet_str(str, opts);\n    if (str.slice(0, 4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n    if (str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n    return aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n  }\n  function prn_to_sheet(d /*:RawData*/, opts) /*:Worksheet*/{\n    var str = \"\",\n      bytes = opts.type == 'string' ? [0, 0, 0, 0] : firstbyte(d, opts);\n    switch (opts.type) {\n      case 'base64':\n        str = Base64_decode(d);\n        break;\n      case 'binary':\n        str = d;\n        break;\n      case 'buffer':\n        if (opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf\n        else if (opts.codepage && typeof $cptable !== 'undefined') str = $cptable.utils.decode(opts.codepage, d);else str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);\n        break;\n      case 'array':\n        str = cc2str(d);\n        break;\n      case 'string':\n        str = d;\n        break;\n      default:\n        throw new Error(\"Unrecognized type \" + opts.type);\n    }\n    if (bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));else if (opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);else if (opts.type == 'binary' && typeof $cptable !== 'undefined' && opts.codepage) str = $cptable.utils.decode(opts.codepage, $cptable.utils.encode(28591, str));\n    if (str.slice(0, 19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n    return prn_to_sheet_str(str, opts);\n  }\n  function prn_to_workbook(d /*:RawData*/, opts) /*:Workbook*/{\n    return sheet_to_workbook(prn_to_sheet(d, opts), opts);\n  }\n  function sheet_to_prn(ws /*:Worksheet*/ /*::, opts:?any*/) /*:string*/{\n    var o /*:Array<string>*/ = [];\n    if (!ws[\"!ref\"]) return \"\";\n    var r = safe_decode_range(ws['!ref']),\n      cell /*:Cell*/;\n    var dense = ws[\"!data\"] != null;\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      var oo /*:Array<string>*/ = [];\n      for (var C = r.s.c; C <= r.e.c; ++C) {\n        var coord = encode_cell({\n          r: R,\n          c: C\n        });\n        cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[coord];\n        if (!cell || cell.v == null) {\n          oo.push(\"          \");\n          continue;\n        }\n        var w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0, 10);\n        while (w.length < 10) w += \" \";\n        oo.push(w + (C === 0 ? \" \" : \"\"));\n      }\n      o.push(oo.join(\"\"));\n    }\n    return o.join(\"\\n\");\n  }\n  return {\n    to_workbook: prn_to_workbook,\n    to_sheet: prn_to_sheet,\n    from_sheet: sheet_to_prn\n  };\n}();\n\n/* Excel defaults to SYLK but warns if data is not valid */\nfunction read_wb_ID(d, opts) {\n  var o = opts || {},\n    OLD_WTF = !!o.WTF;\n  o.WTF = true;\n  try {\n    var out = SYLK.to_workbook(d, o);\n    o.WTF = OLD_WTF;\n    return out;\n  } catch (e) {\n    o.WTF = OLD_WTF;\n    if (e.message.indexOf(\"SYLK bad record ID\") == -1 && OLD_WTF) throw e;\n    return PRN.to_workbook(d, opts);\n  }\n}\nvar WK_ = /*#__PURE__*/function () {\n  function lotushopper(data, cb /*:RecordHopperCB*/, opts /*:any*/) {\n    if (!data) return;\n    prep_blob(data, data.l || 0);\n    var Enum = opts.Enum || WK1Enum;\n    while (data.l < data.length) {\n      var RT = data.read_shift(2);\n      var R = Enum[RT] || Enum[0xFFFF];\n      var length = data.read_shift(2);\n      var tgt = data.l + length;\n      var d = R.f && R.f(data, length, opts);\n      data.l = tgt;\n      if (cb(d, R, RT)) return;\n    }\n  }\n  function lotus_to_workbook(d /*:RawData*/, opts) {\n    switch (opts.type) {\n      case 'base64':\n        return lotus_to_workbook_buf(s2a(Base64_decode(d)), opts);\n      case 'binary':\n        return lotus_to_workbook_buf(s2a(d), opts);\n      case 'buffer':\n      case 'array':\n        return lotus_to_workbook_buf(d, opts);\n    }\n    throw \"Unsupported type \" + opts.type;\n  }\n\n  /* NOTE: this list intentionally starts at 1 */\n  var LOTUS_DATE_FMTS = [\"mmmm\", \"dd-mmm-yyyy\", \"dd-mmm\", \"mmm-yyyy\", \"@\",\n  // \"text\"?\n  \"mm/dd\", \"hh:mm:ss AM/PM\",\n  // 7\n  \"hh:mm AM/PM\", \"mm/dd/yyyy\", \"mm/dd\", \"hh:mm:ss\", \"hh:mm\" // 12\n  ];\n  function lotus_to_workbook_buf(d, opts) /*:Workbook*/{\n    if (!d) return d;\n    var o = opts || {};\n    if (DENSE != null && o.dense == null) o.dense = DENSE;\n    var s /*:Worksheet*/ = {} /*:any*/,\n      n = \"Sheet1\",\n      next_n = \"\",\n      sidx = 0;\n    var sheets = {},\n      snames = [],\n      realnames = [],\n      sdata = [];\n    if (o.dense) sdata = s[\"!data\"] = [];\n    var refguess = {\n      s: {\n        r: 0,\n        c: 0\n      },\n      e: {\n        r: 0,\n        c: 0\n      }\n    };\n    var sheetRows = o.sheetRows || 0;\n    var lastcell = {};\n    if (d[4] == 0x51 && d[5] == 0x50 && d[6] == 0x57) return qpw_to_workbook_buf(d, opts);\n    if (d[2] == 0x00) {\n      if (d[3] == 0x08 || d[3] == 0x09) {\n        if (d.length >= 16 && d[14] == 0x05 && d[15] === 0x6c) throw new Error(\"Unsupported Works 3 for Mac file\");\n      }\n    }\n    if (d[2] == 0x02) {\n      o.Enum = WK1Enum;\n      lotushopper(d, function (val, R, RT) {\n        switch (RT) {\n          case 0x00:\n            /* BOF */\n            o.vers = val;\n            if (val >= 0x1000) o.qpro = true;\n            break;\n          case 0xFF:\n            /* BOF (works 3+) */\n            o.vers = val;\n            o.works = true;\n            break;\n          case 0x06:\n            refguess = val;\n            break;\n          /* RANGE */\n          case 0xCC:\n            if (val) next_n = val;\n            break;\n          /* SHEETNAMECS */\n          case 0xDE:\n            next_n = val;\n            break;\n          /* SHEETNAMELP */\n          case 0x0F: /* LABEL */\n          case 0x33:\n            /* STRING */\n            if ((!o.qpro && !o.works || RT == 0x33) && val[1].v.charCodeAt(0) < 0x30) val[1].v = val[1].v.slice(1);\n            if (o.works || o.works2) val[1].v = val[1].v.replace(/\\r\\n/g, \"\\n\");\n          /* falls through */\n          case 0x0D: /* INTEGER */\n          case 0x0E: /* NUMBER */\n          case 0x10:\n            /* FORMULA */\n            /* TODO: actual translation of the format code */\n            if ((val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n              val[1].z = o.dateNF || LOTUS_DATE_FMTS[(val[2] & 0x0F) - 1] || table_fmt[14];\n              if (o.cellDates) {\n                val[1].v = numdate(val[1].v);\n                val[1].t = typeof val[1].v == \"number\" ? 'n' : 'd';\n              }\n            }\n            if (o.qpro) {\n              if (val[3] > sidx) {\n                s[\"!ref\"] = encode_range(refguess);\n                sheets[n] = s;\n                snames.push(n);\n                s = {} /*:any*/;\n                if (o.dense) sdata = s[\"!data\"] = [];\n                refguess = {\n                  s: {\n                    r: 0,\n                    c: 0\n                  },\n                  e: {\n                    r: 0,\n                    c: 0\n                  }\n                };\n                sidx = val[3];\n                n = next_n || \"Sheet\" + (sidx + 1);\n                next_n = \"\";\n              }\n            }\n            var tmpcell = o.dense ? (sdata[val[0].r] || [])[val[0].c] : s[encode_cell(val[0])];\n            if (tmpcell) {\n              tmpcell.t = val[1].t;\n              tmpcell.v = val[1].v;\n              if (val[1].z != null) tmpcell.z = val[1].z;\n              if (val[1].f != null) tmpcell.f = val[1].f;\n              lastcell = tmpcell;\n              break;\n            }\n            if (o.dense) {\n              if (!sdata[val[0].r]) sdata[val[0].r] = [];\n              sdata[val[0].r][val[0].c] = val[1];\n            } else s[encode_cell(val[0])] = val[1];\n            lastcell = val[1];\n            break;\n          case 0x5405:\n            o.works2 = true;\n            break;\n          case 0x5402:\n            {\n              /* TODO: enumerate all extended number formats */\n              if (val == 0x14a1) {\n                lastcell.z = \"hh:mm:ss\";\n                if (o.cellDates && lastcell.t == \"n\") {\n                  lastcell.v = numdate(lastcell.v);\n                  lastcell.t = typeof lastcell.v == \"number\" ? 'n' : 'd';\n                }\n              }\n            }\n            break;\n        }\n      }, o);\n    } else if (d[2] == 0x1A || d[2] == 0x0E) {\n      o.Enum = WK3Enum;\n      if (d[2] == 0x0E) {\n        o.qpro = true;\n        d.l = 0;\n      }\n      lotushopper(d, function (val, R, RT) {\n        switch (RT) {\n          case 0xCC:\n            n = val;\n            break;\n          /* SHEETNAMECS */\n          case 0x16:\n            /* LABEL16 */\n            if (val[1].v.charCodeAt(0) < 0x30) val[1].v = val[1].v.slice(1);\n            // TODO: R9 appears to encode control codes this way -- verify against other versions\n            val[1].v = val[1].v.replace(/\\x0F./g, function ($$) {\n              return String.fromCharCode($$.charCodeAt(1) - 0x20);\n            }).replace(/\\r\\n/g, \"\\n\");\n          /* falls through */\n          case 0x17: /* NUMBER17 */\n          case 0x18: /* NUMBER18 */\n          case 0x19: /* FORMULA19 */\n          case 0x25: /* NUMBER25 */\n          case 0x27: /* NUMBER27 */\n          case 0x28:\n            /* FORMULA28 */\n            if (val[3] > sidx) {\n              s[\"!ref\"] = encode_range(refguess);\n              sheets[n] = s;\n              snames.push(n);\n              s = {} /*:any*/;\n              if (o.dense) sdata = s[\"!data\"] = [];\n              refguess = {\n                s: {\n                  r: 0,\n                  c: 0\n                },\n                e: {\n                  r: 0,\n                  c: 0\n                }\n              };\n              sidx = val[3];\n              n = \"Sheet\" + (sidx + 1);\n            }\n            if (sheetRows > 0 && val[0].r >= sheetRows) break;\n            if (o.dense) {\n              if (!sdata[val[0].r]) sdata[val[0].r] = [];\n              sdata[val[0].r][val[0].c] = val[1];\n            } else s[encode_cell(val[0])] = val[1];\n            if (refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n            if (refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n            break;\n          case 0x1B:\n            /* XFORMAT */\n            if (val[0x36b0]) realnames[val[0x36b0][0]] = val[0x36b0][1];\n            break;\n          case 0x0601:\n            /* SHEETINFOQP */\n            realnames[val[0]] = val[1];\n            if (val[0] == sidx) n = val[1];\n            break;\n          default:\n            break;\n        }\n      }, o);\n    } else throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n    s[\"!ref\"] = encode_range(refguess);\n    sheets[next_n || n] = s;\n    snames.push(next_n || n);\n    if (!realnames.length) return {\n      SheetNames: snames,\n      Sheets: sheets\n    };\n    var osheets = {},\n      rnames = [];\n    /* TODO: verify no collisions */\n    for (var i = 0; i < realnames.length; ++i) if (sheets[snames[i]]) {\n      rnames.push(realnames[i] || snames[i]);\n      osheets[realnames[i]] = sheets[realnames[i]] || sheets[snames[i]];\n    } else {\n      rnames.push(realnames[i]);\n      osheets[realnames[i]] = {\n        \"!ref\": \"A1\"\n      };\n    }\n    return {\n      SheetNames: rnames,\n      Sheets: osheets\n    };\n  }\n  function sheet_to_wk1(ws /*:Worksheet*/, opts /*:WriteOpts*/) {\n    var o = opts || {};\n    if (+o.codepage >= 0) set_cp(+o.codepage);\n    if (o.type == \"string\") throw new Error(\"Cannot write WK1 to JS string\");\n    var ba = buf_array();\n    if (!ws[\"!ref\"]) throw new Error(\"Cannot export empty sheet to WK1\");\n    var range = safe_decode_range(ws[\"!ref\"]);\n    var dense = ws[\"!data\"] != null;\n    var cols = [];\n    write_biff_rec(ba, 0x00, write_BOF_WK1(0x0406));\n    write_biff_rec(ba, 0x06, write_RANGE(range));\n    var max_R = Math.min(range.e.r, 8191);\n    for (var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n    for (var R = range.s.r; R <= max_R; ++R) {\n      var rr = encode_row(R);\n      for (C = range.s.c; C <= range.e.c; ++C) {\n        var cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[cols[C] + rr];\n        if (!cell || cell.t == \"z\") continue;\n        /* TODO: formula records */\n        switch (cell.t) {\n          case \"n\":\n            if ((cell.v | 0) == cell.v && cell.v >= -32768 && cell.v <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, cell));else write_biff_rec(ba, 0x0e, write_NUMBER(R, C, cell));\n            break;\n          case \"d\":\n            var dc = datenum(cell.v);\n            if ((dc | 0) == dc && dc >= -32768 && dc <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, {\n              t: \"n\",\n              v: dc,\n              z: cell.z || table_fmt[14]\n            }));else write_biff_rec(ba, 0x0e, write_NUMBER(R, C, {\n              t: \"n\",\n              v: dc,\n              z: cell.z || table_fmt[14]\n            }));\n            break;\n          default:\n            var str = format_cell(cell);\n            write_biff_rec(ba, 0x0F, write_LABEL(R, C, str.slice(0, 239)));\n        }\n      }\n    }\n    write_biff_rec(ba, 0x01);\n    return ba.end();\n  }\n  function book_to_wk3(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n    var o = opts || {};\n    if (+o.codepage >= 0) set_cp(+o.codepage);\n    if (o.type == \"string\") throw new Error(\"Cannot write WK3 to JS string\");\n    var ba = buf_array();\n    write_biff_rec(ba, 0x00, write_BOF_WK3(wb));\n    for (var i = 0, cnt = 0; i < wb.SheetNames.length; ++i) if ((wb.Sheets[wb.SheetNames[i]] || {})[\"!ref\"]) write_biff_rec(ba, 0x1b, write_XFORMAT_SHEETNAME(wb.SheetNames[i], cnt++));\n    var wsidx = 0;\n    for (i = 0; i < wb.SheetNames.length; ++i) {\n      var ws = wb.Sheets[wb.SheetNames[i]];\n      if (!ws || !ws[\"!ref\"]) continue;\n      var range = safe_decode_range(ws[\"!ref\"]);\n      var dense = ws[\"!data\"] != null;\n      var cols = [];\n      var max_R = Math.min(range.e.r, 8191);\n      for (var R = range.s.r; R <= max_R; ++R) {\n        var rr = encode_row(R);\n        for (var C = range.s.c; C <= range.e.c; ++C) {\n          if (R === range.s.r) cols[C] = encode_col(C);\n          var ref = cols[C] + rr;\n          var cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n          if (!cell || cell.t == \"z\") continue;\n          /* TODO: FORMULA19 NUMBER18 records */\n          if (cell.t == \"n\") {\n            write_biff_rec(ba, 0x17, write_NUMBER_17(R, C, wsidx, cell.v));\n          } else {\n            var str = format_cell(cell);\n            /* TODO: max len? */\n            write_biff_rec(ba, 0x16, write_LABEL_16(R, C, wsidx, str.slice(0, 239)));\n          }\n        }\n      }\n      ++wsidx;\n    }\n    write_biff_rec(ba, 0x01);\n    return ba.end();\n  }\n  function write_BOF_WK1(v /*:number*/) {\n    var out = new_buf(2);\n    out.write_shift(2, v);\n    return out;\n  }\n  function write_BOF_WK3(wb /*:Workbook*/) {\n    var out = new_buf(26);\n    out.write_shift(2, 0x1000);\n    out.write_shift(2, 0x0004);\n    out.write_shift(4, 0x0000);\n    var rows = 0,\n      cols = 0,\n      wscnt = 0;\n    for (var i = 0; i < wb.SheetNames.length; ++i) {\n      var name = wb.SheetNames[i];\n      var ws = wb.Sheets[name];\n      if (!ws || !ws[\"!ref\"]) continue;\n      ++wscnt;\n      var range = decode_range(ws[\"!ref\"]);\n      if (rows < range.e.r) rows = range.e.r;\n      if (cols < range.e.c) cols = range.e.c;\n    }\n    if (rows > 8191) rows = 8191;\n    out.write_shift(2, rows);\n    out.write_shift(1, wscnt);\n    out.write_shift(1, cols);\n    out.write_shift(2, 0x00);\n    out.write_shift(2, 0x00);\n    out.write_shift(1, 0x01);\n    out.write_shift(1, 0x02);\n    out.write_shift(4, 0);\n    out.write_shift(4, 0);\n    return out;\n  }\n  function parse_RANGE(blob, length, opts) {\n    var o = {\n      s: {\n        c: 0,\n        r: 0\n      },\n      e: {\n        c: 0,\n        r: 0\n      }\n    };\n    if (length == 8 && opts.qpro) {\n      o.s.c = blob.read_shift(1);\n      blob.l++;\n      o.s.r = blob.read_shift(2);\n      o.e.c = blob.read_shift(1);\n      blob.l++;\n      o.e.r = blob.read_shift(2);\n      return o;\n    }\n    o.s.c = blob.read_shift(2);\n    o.s.r = blob.read_shift(2);\n    if (length == 12 && opts.qpro) blob.l += 2;\n    o.e.c = blob.read_shift(2);\n    o.e.r = blob.read_shift(2);\n    if (length == 12 && opts.qpro) blob.l += 2;\n    if (o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n    return o;\n  }\n  function write_RANGE(range) {\n    var out = new_buf(8);\n    out.write_shift(2, range.s.c);\n    out.write_shift(2, range.s.r);\n    out.write_shift(2, range.e.c);\n    out.write_shift(2, range.e.r);\n    return out;\n  }\n  function parse_cell(blob, length, opts) {\n    var o = [{\n      c: 0,\n      r: 0\n    }, {\n      t: 'n',\n      v: 0\n    }, 0, 0];\n    if (opts.qpro && opts.vers != 0x5120) {\n      o[0].c = blob.read_shift(1);\n      o[3] = blob.read_shift(1);\n      o[0].r = blob.read_shift(2);\n      blob.l += 2;\n    } else if (opts.works) {\n      // TODO: verify with more complex works3-4 examples\n      o[0].c = blob.read_shift(2);\n      o[0].r = blob.read_shift(2);\n      o[2] = blob.read_shift(2);\n    } else {\n      o[2] = blob.read_shift(1);\n      o[0].c = blob.read_shift(2);\n      o[0].r = blob.read_shift(2);\n    }\n    return o;\n  }\n  function get_wk1_fmt(cell) /*:number*/{\n    /* TODO: some fuzzy matching on the number format */\n    if (cell.z && fmt_is_date(cell.z)) {\n      return 0xf0 | (LOTUS_DATE_FMTS.indexOf(cell.z) + 1 || 2);\n    }\n    return 0xFF;\n  }\n  function parse_LABEL(blob, length, opts) {\n    var tgt = blob.l + length;\n    var o = parse_cell(blob, length, opts);\n    o[1].t = 's';\n    if ((opts.vers & 0xFFFE) == 0x5120) {\n      // WQ1 / WQ2\n      blob.l++;\n      var len = blob.read_shift(1);\n      o[1].v = blob.read_shift(len, 'utf8');\n      return o;\n    }\n    if (opts.qpro) blob.l++;\n    o[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n    return o;\n  }\n  function write_LABEL(R, C, s) {\n    /* TODO: encoding */\n    var o = new_buf(7 + s.length);\n    o.write_shift(1, 0xFF);\n    o.write_shift(2, C);\n    o.write_shift(2, R);\n    o.write_shift(1, 0x27); // ??\n    for (var i = 0; i < o.length; ++i) {\n      var cc = s.charCodeAt(i);\n      o.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n    }\n    o.write_shift(1, 0);\n    return o;\n  }\n  function parse_STRING(blob, length, opts) {\n    var tgt = blob.l + length;\n    var o = parse_cell(blob, length, opts);\n    o[1].t = 's';\n    if (opts.vers == 0x5120) {\n      var len = blob.read_shift(1);\n      o[1].v = blob.read_shift(len, 'utf8');\n      return o;\n    }\n    o[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n    return o;\n  }\n  function parse_INTEGER(blob, length, opts) {\n    var o = parse_cell(blob, length, opts);\n    o[1].v = blob.read_shift(2, 'i');\n    return o;\n  }\n  function write_INTEGER(R, C, cell) {\n    var o = new_buf(7);\n    o.write_shift(1, get_wk1_fmt(cell));\n    o.write_shift(2, C);\n    o.write_shift(2, R);\n    o.write_shift(2, cell.v, 'i');\n    return o;\n  }\n  function parse_NUMBER(blob, length, opts) {\n    var o = parse_cell(blob, length, opts);\n    o[1].v = blob.read_shift(8, 'f');\n    return o;\n  }\n  function write_NUMBER(R, C, cell) {\n    var o = new_buf(13);\n    o.write_shift(1, get_wk1_fmt(cell));\n    o.write_shift(2, C);\n    o.write_shift(2, R);\n    o.write_shift(8, cell.v, 'f');\n    return o;\n  }\n  function parse_FORMULA(blob, length, opts) {\n    var tgt = blob.l + length;\n    var o = parse_cell(blob, length, opts);\n    /* TODO: formula */\n    o[1].v = blob.read_shift(8, 'f');\n    if (opts.qpro) blob.l = tgt;else {\n      var flen = blob.read_shift(2);\n      wk1_fmla_to_csf(blob.slice(blob.l, blob.l + flen), o);\n      blob.l += flen;\n    }\n    return o;\n  }\n  function wk1_parse_rc(B, V, col) {\n    var rel = V & 0x8000;\n    V &= ~0x8000;\n    V = (rel ? B : 0) + (V >= 0x2000 ? V - 0x4000 : V);\n    return (rel ? \"\" : \"$\") + (col ? encode_col(V) : encode_row(V));\n  }\n  /* var oprec = [\n  \t8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3,\n  \t3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8\n  ]; */\n  /* TODO: flesh out */\n  var FuncTab = {\n    0x1F: [\"NA\", 0],\n    // 0x20: [\"ERR\", 0],\n    0x21: [\"ABS\", 1],\n    0x22: [\"TRUNC\", 1],\n    0x23: [\"SQRT\", 1],\n    0x24: [\"LOG\", 1],\n    0x25: [\"LN\", 1],\n    0x26: [\"PI\", 0],\n    0x27: [\"SIN\", 1],\n    0x28: [\"COS\", 1],\n    0x29: [\"TAN\", 1],\n    0x2A: [\"ATAN2\", 2],\n    0x2B: [\"ATAN\", 1],\n    0x2C: [\"ASIN\", 1],\n    0x2D: [\"ACOS\", 1],\n    0x2E: [\"EXP\", 1],\n    0x2F: [\"MOD\", 2],\n    // 0x30\n    0x31: [\"ISNA\", 1],\n    0x32: [\"ISERR\", 1],\n    0x33: [\"FALSE\", 0],\n    0x34: [\"TRUE\", 0],\n    0x35: [\"RAND\", 0],\n    0x36: [\"DATE\", 3],\n    // 0x37 NOW\n    // 0x38 PMT\n    // 0x39 PV\n    // 0x3A FV\n    // 0x3B IF\n    // 0x3C DAY\n    // 0x3D MONTH\n    // 0x3E YEAR\n    0x3F: [\"ROUND\", 2],\n    0x40: [\"TIME\", 3],\n    // 0x41 HOUR\n    // 0x42 MINUTE\n    // 0x43 SECOND\n    0x44: [\"ISNUMBER\", 1],\n    0x45: [\"ISTEXT\", 1],\n    0x46: [\"LEN\", 1],\n    0x47: [\"VALUE\", 1],\n    // 0x48: [\"FIXED\", ?? 1],\n    0x49: [\"MID\", 3],\n    0x4A: [\"CHAR\", 1],\n    // 0x4B\n    // 0x4C FIND\n    // 0x4D DATEVALUE\n    // 0x4E TIMEVALUE\n    // 0x4F CELL\n    0x50: [\"SUM\", 69],\n    0x51: [\"AVERAGEA\", 69],\n    0x52: [\"COUNTA\", 69],\n    0x53: [\"MINA\", 69],\n    0x54: [\"MAXA\", 69],\n    // 0x55 VLOOKUP\n    // 0x56 NPV\n    // 0x57 VAR\n    // 0x58 STD\n    // 0x59 IRR\n    // 0x5A HLOOKUP\n    // 0x5B DSUM\n    // 0x5C DAVERAGE\n    // 0x5D DCOUNTA\n    // 0x5E DMIN\n    // 0x5F DMAX\n    // 0x60 DVARP\n    // 0x61 DSTDEVP\n    // 0x62 INDEX\n    // 0x63 COLS\n    // 0x64 ROWS\n    // 0x65 REPEAT\n    0x66: [\"UPPER\", 1],\n    0x67: [\"LOWER\", 1],\n    // 0x68 LEFT\n    // 0x69 RIGHT\n    // 0x6A REPLACE\n    0x6B: [\"PROPER\", 1],\n    // 0x6C CELL\n    0x6D: [\"TRIM\", 1],\n    // 0x6E CLEAN\n    0x6F: [\"T\", 1]\n    // 0x70 V\n  };\n  var BinOpTab = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\n  // eslint-disable-line no-mixed-spaces-and-tabs\n  \"\", \"+\", \"-\", \"*\", \"/\", \"^\", \"=\", \"<>\",\n  // eslint-disable-line no-mixed-spaces-and-tabs\n  \"<=\", \">=\", \"<\", \">\", \"\", \"\", \"\", \"\",\n  // eslint-disable-line no-mixed-spaces-and-tabs\n  \"&\", \"\", \"\", \"\", \"\", \"\", \"\", \"\" // eslint-disable-line no-mixed-spaces-and-tabs\n  ];\n  function wk1_fmla_to_csf(blob, o) {\n    prep_blob(blob, 0);\n    var out = [],\n      argc = 0,\n      R = \"\",\n      C = \"\",\n      argL = \"\",\n      argR = \"\";\n    while (blob.l < blob.length) {\n      var cc = blob[blob.l++];\n      switch (cc) {\n        case 0x00:\n          out.push(blob.read_shift(8, 'f'));\n          break;\n        case 0x01:\n          {\n            C = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n            R = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n            out.push(C + R);\n          }\n          break;\n        case 0x02:\n          {\n            var c = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n            var r = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n            C = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n            R = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n            out.push(c + r + \":\" + C + R);\n          }\n          break;\n        case 0x03:\n          if (blob.l < blob.length) {\n            console.error(\"WK1 premature formula end\");\n            return;\n          }\n          break;\n        case 0x04:\n          out.push(\"(\" + out.pop() + \")\");\n          break;\n        case 0x05:\n          out.push(blob.read_shift(2));\n          break;\n        case 0x06:\n          {\n            /* TODO: text encoding */\n            var Z = \"\";\n            while (cc = blob[blob.l++]) Z += String.fromCharCode(cc);\n            out.push('\"' + Z.replace(/\"/g, '\"\"') + '\"');\n          }\n          break;\n        case 0x08:\n          out.push(\"-\" + out.pop());\n          break;\n        case 0x17:\n          out.push(\"+\" + out.pop());\n          break;\n        case 0x16:\n          out.push(\"NOT(\" + out.pop() + \")\");\n          break;\n        case 0x14:\n        case 0x15:\n          {\n            argR = out.pop();\n            argL = out.pop();\n            out.push([\"AND\", \"OR\"][cc - 0x14] + \"(\" + argL + \",\" + argR + \")\");\n          }\n          break;\n        default:\n          if (cc < 0x20 && BinOpTab[cc]) {\n            argR = out.pop();\n            argL = out.pop();\n            out.push(argL + BinOpTab[cc] + argR);\n          } else if (FuncTab[cc]) {\n            argc = FuncTab[cc][1];\n            if (argc == 69) argc = blob[blob.l++];\n            if (argc > out.length) {\n              console.error(\"WK1 bad formula parse 0x\" + cc.toString(16) + \":|\" + out.join(\"|\") + \"|\");\n              return;\n            }\n            var args = out.slice(-argc);\n            out.length -= argc;\n            out.push(FuncTab[cc][0] + \"(\" + args.join(\",\") + \")\");\n          } else if (cc <= 0x07) return console.error(\"WK1 invalid opcode \" + cc.toString(16));else if (cc <= 0x18) return console.error(\"WK1 unsupported op \" + cc.toString(16));else if (cc <= 0x1E) return console.error(\"WK1 invalid opcode \" + cc.toString(16));else if (cc <= 0x73) return console.error(\"WK1 unsupported function opcode \" + cc.toString(16));\n          // possible future functions ??\n          else return console.error(\"WK1 unrecognized opcode \" + cc.toString(16));\n      }\n    }\n    if (out.length == 1) o[1].f = \"\" + out[0];else console.error(\"WK1 bad formula parse |\" + out.join(\"|\") + \"|\");\n  }\n  function parse_cell_3(blob /*::, length*/) {\n    var o = [{\n      c: 0,\n      r: 0\n    }, {\n      t: 'n',\n      v: 0\n    }, 0];\n    o[0].r = blob.read_shift(2);\n    o[3] = blob[blob.l++];\n    o[0].c = blob[blob.l++];\n    return o;\n  }\n  function parse_LABEL_16(blob, length) {\n    var o = parse_cell_3(blob, length);\n    o[1].t = 's';\n    o[1].v = blob.read_shift(length - 4, 'cstr');\n    return o;\n  }\n  function write_LABEL_16(R, C, wsidx, s) {\n    /* TODO: encoding */\n    var o = new_buf(6 + s.length);\n    o.write_shift(2, R);\n    o.write_shift(1, wsidx);\n    o.write_shift(1, C);\n    o.write_shift(1, 0x27);\n    for (var i = 0; i < s.length; ++i) {\n      var cc = s.charCodeAt(i);\n      o.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n    }\n    o.write_shift(1, 0);\n    return o;\n  }\n  function parse_NUMBER_18(blob, length) {\n    var o = parse_cell_3(blob, length);\n    o[1].v = blob.read_shift(2);\n    var v = o[1].v >> 1;\n    if (o[1].v & 0x1) {\n      switch (v & 0x07) {\n        case 0:\n          v = (v >> 3) * 5000;\n          break;\n        case 1:\n          v = (v >> 3) * 500;\n          break;\n        case 2:\n          v = (v >> 3) / 20;\n          break;\n        case 3:\n          v = (v >> 3) / 200;\n          break;\n        case 4:\n          v = (v >> 3) / 2000;\n          break;\n        case 5:\n          v = (v >> 3) / 20000;\n          break;\n        case 6:\n          v = (v >> 3) / 16;\n          break;\n        case 7:\n          v = (v >> 3) / 64;\n          break;\n      }\n    }\n    o[1].v = v;\n    return o;\n  }\n  function parse_NUMBER_17(blob, length) {\n    var o = parse_cell_3(blob, length);\n    var v1 = blob.read_shift(4);\n    var v2 = blob.read_shift(4);\n    var e = blob.read_shift(2);\n    if (e == 0xFFFF) {\n      if (v1 === 0 && v2 === 0xC0000000) {\n        o[1].t = \"e\";\n        o[1].v = 0x0F;\n      } // ERR -> #VALUE!\n      else if (v1 === 0 && v2 === 0xD0000000) {\n        o[1].t = \"e\";\n        o[1].v = 0x2A;\n      } // NA -> #N/A\n      else o[1].v = 0;\n      return o;\n    }\n    var s = e & 0x8000;\n    e = (e & 0x7FFF) - 16446;\n    o[1].v = (1 - s * 2) * (v2 * Math.pow(2, e + 32) + v1 * Math.pow(2, e));\n    return o;\n  }\n  function write_NUMBER_17(R, C, wsidx, v) {\n    var o = new_buf(14);\n    o.write_shift(2, R);\n    o.write_shift(1, wsidx);\n    o.write_shift(1, C);\n    if (v == 0) {\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(2, 0xFFFF);\n      return o;\n    }\n    var s = 0,\n      e = 0,\n      v1 = 0,\n      v2 = 0;\n    if (v < 0) {\n      s = 1;\n      v = -v;\n    }\n    e = Math.log2(v) | 0;\n    v /= Math.pow(2, e - 31);\n    v2 = v >>> 0;\n    if ((v2 & 0x80000000) == 0) {\n      v /= 2;\n      ++e;\n      v2 = v >>> 0;\n    }\n    v -= v2;\n    v2 |= 0x80000000;\n    v2 >>>= 0;\n    v *= Math.pow(2, 32);\n    v1 = v >>> 0;\n    o.write_shift(4, v1);\n    o.write_shift(4, v2);\n    e += 0x3FFF + (s ? 0x8000 : 0);\n    o.write_shift(2, e);\n    return o;\n  }\n  function parse_FORMULA_19(blob, length) {\n    var o = parse_NUMBER_17(blob, 14);\n    blob.l += length - 14; /* TODO: WK3 formula */\n    return o;\n  }\n  function parse_NUMBER_25(blob, length) {\n    var o = parse_cell_3(blob, length);\n    var v1 = blob.read_shift(4);\n    o[1].v = v1 >> 6;\n    return o;\n  }\n  function parse_NUMBER_27(blob, length) {\n    var o = parse_cell_3(blob, length);\n    var v1 = blob.read_shift(8, 'f');\n    o[1].v = v1;\n    return o;\n  }\n  function parse_FORMULA_28(blob, length) {\n    var o = parse_NUMBER_27(blob, 12);\n    blob.l += length - 12; /* TODO: formula */\n    return o;\n  }\n  function parse_SHEETNAMECS(blob, length) {\n    return blob[blob.l + length - 1] == 0 ? blob.read_shift(length, 'cstr') : \"\";\n  }\n  function parse_SHEETNAMELP(blob, length) {\n    var len = blob[blob.l++];\n    if (len > length - 1) len = length - 1;\n    var o = \"\";\n    while (o.length < len) o += String.fromCharCode(blob[blob.l++]);\n    return o;\n  }\n  function parse_SHEETINFOQP(blob, length, opts) {\n    if (!opts.qpro || length < 21) return;\n    var id = blob.read_shift(1);\n    blob.l += 17;\n    blob.l += 1; //var len = blob.read_shift(1);\n    blob.l += 2;\n    var nm = blob.read_shift(length - 21, 'cstr');\n    return [id, nm];\n  }\n  function parse_XFORMAT(blob, length) {\n    var o = {},\n      tgt = blob.l + length;\n    while (blob.l < tgt) {\n      var dt = blob.read_shift(2);\n      if (dt == 0x36b0) {\n        o[dt] = [0, \"\"];\n        o[dt][0] = blob.read_shift(2);\n        while (blob[blob.l]) {\n          o[dt][1] += String.fromCharCode(blob[blob.l]);\n          blob.l++;\n        }\n        blob.l++;\n      }\n      // TODO: 0x3a99 ??\n    }\n    return o;\n  }\n  function write_XFORMAT_SHEETNAME(name, wsidx) {\n    var out = new_buf(5 + name.length);\n    out.write_shift(2, 0x36b0);\n    out.write_shift(2, wsidx);\n    for (var i = 0; i < name.length; ++i) {\n      var cc = name.charCodeAt(i);\n      out[out.l++] = cc > 0x7F ? 0x5F : cc;\n    }\n    out[out.l++] = 0;\n    return out;\n  }\n  var WK1Enum = {\n    0x0000: {\n      n: \"BOF\",\n      f: parseuint16\n    },\n    0x0001: {\n      n: \"EOF\"\n    },\n    0x0002: {\n      n: \"CALCMODE\"\n    },\n    0x0003: {\n      n: \"CALCORDER\"\n    },\n    0x0004: {\n      n: \"SPLIT\"\n    },\n    0x0005: {\n      n: \"SYNC\"\n    },\n    0x0006: {\n      n: \"RANGE\",\n      f: parse_RANGE\n    },\n    0x0007: {\n      n: \"WINDOW1\"\n    },\n    0x0008: {\n      n: \"COLW1\"\n    },\n    0x0009: {\n      n: \"WINTWO\"\n    },\n    0x000A: {\n      n: \"COLW2\"\n    },\n    0x000B: {\n      n: \"NAME\"\n    },\n    0x000C: {\n      n: \"BLANK\"\n    },\n    0x000D: {\n      n: \"INTEGER\",\n      f: parse_INTEGER\n    },\n    0x000E: {\n      n: \"NUMBER\",\n      f: parse_NUMBER\n    },\n    0x000F: {\n      n: \"LABEL\",\n      f: parse_LABEL\n    },\n    0x0010: {\n      n: \"FORMULA\",\n      f: parse_FORMULA\n    },\n    0x0018: {\n      n: \"TABLE\"\n    },\n    0x0019: {\n      n: \"ORANGE\"\n    },\n    0x001A: {\n      n: \"PRANGE\"\n    },\n    0x001B: {\n      n: \"SRANGE\"\n    },\n    0x001C: {\n      n: \"FRANGE\"\n    },\n    0x001D: {\n      n: \"KRANGE1\"\n    },\n    0x0020: {\n      n: \"HRANGE\"\n    },\n    0x0023: {\n      n: \"KRANGE2\"\n    },\n    0x0024: {\n      n: \"PROTEC\"\n    },\n    0x0025: {\n      n: \"FOOTER\"\n    },\n    0x0026: {\n      n: \"HEADER\"\n    },\n    0x0027: {\n      n: \"SETUP\"\n    },\n    0x0028: {\n      n: \"MARGINS\"\n    },\n    0x0029: {\n      n: \"LABELFMT\"\n    },\n    0x002A: {\n      n: \"TITLES\"\n    },\n    0x002B: {\n      n: \"SHEETJS\"\n    },\n    0x002D: {\n      n: \"GRAPH\"\n    },\n    0x002E: {\n      n: \"NGRAPH\"\n    },\n    0x002F: {\n      n: \"CALCCOUNT\"\n    },\n    0x0030: {\n      n: \"UNFORMATTED\"\n    },\n    0x0031: {\n      n: \"CURSORW12\"\n    },\n    0x0032: {\n      n: \"WINDOW\"\n    },\n    0x0033: {\n      n: \"STRING\",\n      f: parse_STRING\n    },\n    0x0037: {\n      n: \"PASSWORD\"\n    },\n    0x0038: {\n      n: \"LOCKED\"\n    },\n    0x003C: {\n      n: \"QUERY\"\n    },\n    0x003D: {\n      n: \"QUERYNAME\"\n    },\n    0x003E: {\n      n: \"PRINT\"\n    },\n    0x003F: {\n      n: \"PRINTNAME\"\n    },\n    0x0040: {\n      n: \"GRAPH2\"\n    },\n    0x0041: {\n      n: \"GRAPHNAME\"\n    },\n    0x0042: {\n      n: \"ZOOM\"\n    },\n    0x0043: {\n      n: \"SYMSPLIT\"\n    },\n    0x0044: {\n      n: \"NSROWS\"\n    },\n    0x0045: {\n      n: \"NSCOLS\"\n    },\n    0x0046: {\n      n: \"RULER\"\n    },\n    0x0047: {\n      n: \"NNAME\"\n    },\n    0x0048: {\n      n: \"ACOMM\"\n    },\n    0x0049: {\n      n: \"AMACRO\"\n    },\n    0x004A: {\n      n: \"PARSE\"\n    },\n    // 0x0064\n    0x0066: {\n      n: \"PRANGES??\"\n    },\n    0x0067: {\n      n: \"RRANGES??\"\n    },\n    0x0068: {\n      n: \"FNAME??\"\n    },\n    0x0069: {\n      n: \"MRANGES??\"\n    },\n    // 0x0096\n    // 0x0099\n    // 0x009A\n    // 0x009B\n    // 0x009C\n    // 0x00C0\n    // 0x00C7\n    // 0x00C9\n    0x00CC: {\n      n: \"SHEETNAMECS\",\n      f: parse_SHEETNAMECS\n    },\n    // 0x00CD\n    0x00DE: {\n      n: \"SHEETNAMELP\",\n      f: parse_SHEETNAMELP\n    },\n    0x00FF: {\n      n: \"BOF\",\n      f: parseuint16\n    },\n    0x5402: {\n      n: \"WKSNF\",\n      f: parseuint16\n    },\n    0xFFFF: {\n      n: \"\"\n    }\n  };\n  var WK3Enum = {\n    0x0000: {\n      n: \"BOF\"\n    },\n    0x0001: {\n      n: \"EOF\"\n    },\n    0x0002: {\n      n: \"PASSWORD\"\n    },\n    0x0003: {\n      n: \"CALCSET\"\n    },\n    0x0004: {\n      n: \"WINDOWSET\"\n    },\n    0x0005: {\n      n: \"SHEETCELLPTR\"\n    },\n    0x0006: {\n      n: \"SHEETLAYOUT\"\n    },\n    0x0007: {\n      n: \"COLUMNWIDTH\"\n    },\n    0x0008: {\n      n: \"HIDDENCOLUMN\"\n    },\n    0x0009: {\n      n: \"USERRANGE\"\n    },\n    0x000A: {\n      n: \"SYSTEMRANGE\"\n    },\n    0x000B: {\n      n: \"ZEROFORCE\"\n    },\n    0x000C: {\n      n: \"SORTKEYDIR\"\n    },\n    0x000D: {\n      n: \"FILESEAL\"\n    },\n    0x000E: {\n      n: \"DATAFILLNUMS\"\n    },\n    0x000F: {\n      n: \"PRINTMAIN\"\n    },\n    0x0010: {\n      n: \"PRINTSTRING\"\n    },\n    0x0011: {\n      n: \"GRAPHMAIN\"\n    },\n    0x0012: {\n      n: \"GRAPHSTRING\"\n    },\n    0x0013: {\n      n: \"??\"\n    },\n    0x0014: {\n      n: \"ERRCELL\"\n    },\n    0x0015: {\n      n: \"NACELL\"\n    },\n    0x0016: {\n      n: \"LABEL16\",\n      f: parse_LABEL_16\n    },\n    0x0017: {\n      n: \"NUMBER17\",\n      f: parse_NUMBER_17\n    },\n    0x0018: {\n      n: \"NUMBER18\",\n      f: parse_NUMBER_18\n    },\n    0x0019: {\n      n: \"FORMULA19\",\n      f: parse_FORMULA_19\n    },\n    0x001A: {\n      n: \"FORMULA1A\"\n    },\n    0x001B: {\n      n: \"XFORMAT\",\n      f: parse_XFORMAT\n    },\n    0x001C: {\n      n: \"DTLABELMISC\"\n    },\n    0x001D: {\n      n: \"DTLABELCELL\"\n    },\n    0x001E: {\n      n: \"GRAPHWINDOW\"\n    },\n    0x001F: {\n      n: \"CPA\"\n    },\n    0x0020: {\n      n: \"LPLAUTO\"\n    },\n    0x0021: {\n      n: \"QUERY\"\n    },\n    0x0022: {\n      n: \"HIDDENSHEET\"\n    },\n    0x0023: {\n      n: \"??\"\n    },\n    0x0025: {\n      n: \"NUMBER25\",\n      f: parse_NUMBER_25\n    },\n    0x0026: {\n      n: \"??\"\n    },\n    0x0027: {\n      n: \"NUMBER27\",\n      f: parse_NUMBER_27\n    },\n    0x0028: {\n      n: \"FORMULA28\",\n      f: parse_FORMULA_28\n    },\n    0x008E: {\n      n: \"??\"\n    },\n    0x0093: {\n      n: \"??\"\n    },\n    0x0096: {\n      n: \"??\"\n    },\n    0x0097: {\n      n: \"??\"\n    },\n    0x0098: {\n      n: \"??\"\n    },\n    0x0099: {\n      n: \"??\"\n    },\n    0x009A: {\n      n: \"??\"\n    },\n    0x009B: {\n      n: \"??\"\n    },\n    0x009C: {\n      n: \"??\"\n    },\n    0x00A3: {\n      n: \"??\"\n    },\n    0x00AE: {\n      n: \"??\"\n    },\n    0x00AF: {\n      n: \"??\"\n    },\n    0x00B0: {\n      n: \"??\"\n    },\n    0x00B1: {\n      n: \"??\"\n    },\n    0x00B8: {\n      n: \"??\"\n    },\n    0x00B9: {\n      n: \"??\"\n    },\n    0x00BA: {\n      n: \"??\"\n    },\n    0x00BB: {\n      n: \"??\"\n    },\n    0x00BC: {\n      n: \"??\"\n    },\n    0x00C3: {\n      n: \"??\"\n    },\n    0x00C9: {\n      n: \"??\"\n    },\n    0x00CC: {\n      n: \"SHEETNAMECS\",\n      f: parse_SHEETNAMECS\n    },\n    0x00CD: {\n      n: \"??\"\n    },\n    0x00CE: {\n      n: \"??\"\n    },\n    0x00CF: {\n      n: \"??\"\n    },\n    0x00D0: {\n      n: \"??\"\n    },\n    0x0100: {\n      n: \"??\"\n    },\n    0x0103: {\n      n: \"??\"\n    },\n    0x0104: {\n      n: \"??\"\n    },\n    0x0105: {\n      n: \"??\"\n    },\n    0x0106: {\n      n: \"??\"\n    },\n    0x0107: {\n      n: \"??\"\n    },\n    0x0109: {\n      n: \"??\"\n    },\n    0x010A: {\n      n: \"??\"\n    },\n    0x010B: {\n      n: \"??\"\n    },\n    0x010C: {\n      n: \"??\"\n    },\n    0x010E: {\n      n: \"??\"\n    },\n    0x010F: {\n      n: \"??\"\n    },\n    0x0180: {\n      n: \"??\"\n    },\n    0x0185: {\n      n: \"??\"\n    },\n    0x0186: {\n      n: \"??\"\n    },\n    0x0189: {\n      n: \"??\"\n    },\n    0x018C: {\n      n: \"??\"\n    },\n    0x0200: {\n      n: \"??\"\n    },\n    0x0202: {\n      n: \"??\"\n    },\n    0x0201: {\n      n: \"??\"\n    },\n    0x0204: {\n      n: \"??\"\n    },\n    0x0205: {\n      n: \"??\"\n    },\n    0x0280: {\n      n: \"??\"\n    },\n    0x0281: {\n      n: \"??\"\n    },\n    0x0282: {\n      n: \"??\"\n    },\n    0x0283: {\n      n: \"??\"\n    },\n    0x0284: {\n      n: \"??\"\n    },\n    0x0285: {\n      n: \"??\"\n    },\n    0x0286: {\n      n: \"??\"\n    },\n    0x0287: {\n      n: \"??\"\n    },\n    0x0288: {\n      n: \"??\"\n    },\n    0x0292: {\n      n: \"??\"\n    },\n    0x0293: {\n      n: \"??\"\n    },\n    0x0294: {\n      n: \"??\"\n    },\n    0x0295: {\n      n: \"??\"\n    },\n    0x0296: {\n      n: \"??\"\n    },\n    0x0299: {\n      n: \"??\"\n    },\n    0x029A: {\n      n: \"??\"\n    },\n    0x0300: {\n      n: \"??\"\n    },\n    0x0304: {\n      n: \"??\"\n    },\n    0x0601: {\n      n: \"SHEETINFOQP\",\n      f: parse_SHEETINFOQP\n    },\n    0x0640: {\n      n: \"??\"\n    },\n    0x0642: {\n      n: \"??\"\n    },\n    0x0701: {\n      n: \"??\"\n    },\n    0x0702: {\n      n: \"??\"\n    },\n    0x0703: {\n      n: \"??\"\n    },\n    0x0704: {\n      n: \"??\"\n    },\n    0x0780: {\n      n: \"??\"\n    },\n    0x0800: {\n      n: \"??\"\n    },\n    0x0801: {\n      n: \"??\"\n    },\n    0x0804: {\n      n: \"??\"\n    },\n    0x0A80: {\n      n: \"??\"\n    },\n    0x2AF6: {\n      n: \"??\"\n    },\n    0x3231: {\n      n: \"??\"\n    },\n    0x6E49: {\n      n: \"??\"\n    },\n    0x6F44: {\n      n: \"??\"\n    },\n    0xFFFF: {\n      n: \"\"\n    }\n  };\n\n  /* TODO: fill out and verify this table across QP versions */\n  var QPWNFTable = {\n    0x05: \"dd-mmm-yy\",\n    0x06: \"dd-mmm\",\n    0x07: \"mmm-yy\",\n    0x08: \"mm/dd/yy\",\n    // Long Date Intl\n    0x0A: \"hh:mm:ss AM/PM\",\n    0x0B: \"hh:mm AM/PM\",\n    0x0E: \"dd-mmm-yyyy\",\n    0x0F: \"mmm-yyyy\",\n    /* It is suspected that the the low nybble specifies decimal places */\n    0x0022: \"0.00\",\n    0x0032: \"0.00;[Red]0.00\",\n    0x0042: \"0.00;\\(0.00\\)\",\n    0x0052: \"0.00;[Red]\\(0.00\\)\",\n    0x00A2: '\"$\"#,##0.00;\\\\(\"$\"#,##0.00\\\\)',\n    0x0120: '0%',\n    0x0130: '0E+00',\n    0x0140: '# ?/?'\n  };\n  function parse_qpw_str(p) {\n    var cch = p.read_shift(2);\n    var flags = p.read_shift(1);\n    /* TODO: find examples with nonzero flags */\n    if (flags != 0) throw \"unsupported QPW string type \" + flags.toString(16);\n    return p.read_shift(cch, \"sbcs-cont\");\n  }\n\n  /* QPW uses a different set of record types */\n  function qpw_to_workbook_buf(d, opts) /*:Workbook*/{\n    prep_blob(d, 0);\n    var o = opts || {};\n    if (DENSE != null && o.dense == null) o.dense = DENSE;\n    var s /*:Worksheet*/ = {} /*:any*/;\n    if (o.dense) s[\"!data\"] = [];\n    var SST = [],\n      sname = \"\",\n      formulae = [];\n    var range = {\n      s: {\n        r: -1,\n        c: -1\n      },\n      e: {\n        r: -1,\n        c: -1\n      }\n    };\n    var cnt = 0,\n      type = 0,\n      C = 0,\n      R = 0;\n    var wb = {\n      SheetNames: [],\n      Sheets: {}\n    };\n    var FMTS = [];\n    outer: while (d.l < d.length) {\n      var RT = d.read_shift(2),\n        length = d.read_shift(2);\n      var p = d.slice(d.l, d.l + length);\n      prep_blob(p, 0);\n      switch (RT) {\n        case 0x01:\n          /* BOF */\n          if (p.read_shift(4) != 0x39575051) throw \"Bad QPW9 BOF!\";\n          break;\n        case 0x02:\n          /* EOF */break outer;\n        case 0x08:\n          /* NF */break;\n        // TODO: this is tied to custom number formats\n\n        case 0x0A:\n          /* FORMATS */{\n            var fcnt = p.read_shift(4);\n            var step = (p.length - p.l) / fcnt | 0;\n            for (var ifmt = 0; ifmt < fcnt; ++ifmt) {\n              var end = p.l + step;\n              var fmt = {};\n              p.l += 2;\n              fmt.numFmtId = p.read_shift(2);\n              if (QPWNFTable[fmt.numFmtId]) fmt.z = QPWNFTable[fmt.numFmtId];\n              p.l = end;\n              FMTS.push(fmt);\n            }\n          }\n          break;\n\n        /* TODO: The behavior here should be consistent with Numbers: QP Notebook ~ .TN.SheetArchive, QP Sheet ~ .TST.TableModelArchive */\n        case 0x0401:\n          /* BON */break;\n        case 0x0402:\n          /* EON */ /* TODO: backfill missing sheets based on BON cnt */break;\n        case 0x0407:\n          {\n            /* SST */\n            p.l += 12;\n            while (p.l < p.length) {\n              cnt = p.read_shift(2);\n              type = p.read_shift(1);\n              SST.push(p.read_shift(cnt, 'cstr'));\n            }\n          }\n          break;\n        case 0x0408:\n          {/* FORMULAE */\n            //p.l += 12;\n            //while(p.l < p.length) {\n            //\tcnt = p.read_shift(2);\n            //\tformulae.push(p.slice(p.l, p.l + cnt + 1)); p.l += cnt + 1;\n            //}\n          }\n          break;\n        case 0x0601:\n          {\n            /* BOS */\n            var sidx = p.read_shift(2);\n            s = {} /*:any*/;\n            if (o.dense) s[\"!data\"] = [];\n            range.s.c = p.read_shift(2);\n            range.e.c = p.read_shift(2);\n            range.s.r = p.read_shift(4);\n            range.e.r = p.read_shift(4);\n            p.l += 4;\n            if (p.l + 2 < p.length) {\n              cnt = p.read_shift(2);\n              type = p.read_shift(1);\n              sname = cnt == 0 ? \"\" : p.read_shift(cnt, 'cstr');\n            }\n            if (!sname) sname = encode_col(sidx);\n            /* TODO: backfill empty sheets */\n          }\n          break;\n        case 0x0602:\n          {\n            /* EOS */\n            /* NOTE: QP valid range A1:IV1000000 */\n            if (range.s.c > 0xFF || range.s.r > 999999) break;\n            if (range.e.c < range.s.c) range.e.c = range.s.c;\n            if (range.e.r < range.s.r) range.e.r = range.s.r;\n            s[\"!ref\"] = encode_range(range);\n            book_append_sheet(wb, s, sname); // TODO: a barrel roll\n          }\n          break;\n        case 0x0A01:\n          {\n            /* COL (like XLS Row, modulo the layout transposition) */\n            C = p.read_shift(2);\n            if (range.e.c < C) range.e.c = C;\n            if (range.s.c > C) range.s.c = C;\n            R = p.read_shift(4);\n            if (range.s.r > R) range.s.r = R;\n            R = p.read_shift(4);\n            if (range.e.r < R) range.e.r = R;\n          }\n          break;\n        case 0x0C01:\n          {\n            /* MulCells (like XLS MulRK, but takes advantage of common column data patterns) */\n            R = p.read_shift(4), cnt = p.read_shift(4);\n            if (range.s.r > R) range.s.r = R;\n            if (range.e.r < R + cnt - 1) range.e.r = R + cnt - 1;\n            var CC = encode_col(C);\n            while (p.l < p.length) {\n              var cell = {\n                t: \"z\"\n              };\n              var flags = p.read_shift(1),\n                fmtidx = -1;\n              if (flags & 0x80) fmtidx = p.read_shift(2);\n              var mul = flags & 0x40 ? p.read_shift(2) - 1 : 0;\n              switch (flags & 0x1F) {\n                case 0:\n                  break;\n                case 1:\n                  break;\n                case 2:\n                  cell = {\n                    t: \"n\",\n                    v: p.read_shift(2)\n                  };\n                  break;\n                case 3:\n                  cell = {\n                    t: \"n\",\n                    v: p.read_shift(2, 'i')\n                  };\n                  break;\n                case 4:\n                  cell = {\n                    t: \"n\",\n                    v: parse_RkNumber(p)\n                  };\n                  break;\n                case 5:\n                  cell = {\n                    t: \"n\",\n                    v: p.read_shift(8, 'f')\n                  };\n                  break;\n                case 7:\n                  cell = {\n                    t: \"s\",\n                    v: SST[type = p.read_shift(4) - 1]\n                  };\n                  break;\n                case 8:\n                  cell = {\n                    t: \"n\",\n                    v: p.read_shift(8, 'f')\n                  };\n                  p.l += 2; /* cell.f = formulae[p.read_shift(4)]; */\n                  p.l += 4;\n                  if (isNaN(cell.v)) cell = {\n                    t: \"e\",\n                    v: 0x0F\n                  }; // #VALUE!\n                  break;\n                default:\n                  throw \"Unrecognized QPW cell type \" + (flags & 0x1F);\n              }\n              if (fmtidx != -1 && (FMTS[fmtidx - 1] || {}).z) cell.z = FMTS[fmtidx - 1].z;\n              var delta = 0;\n              if (flags & 0x20) switch (flags & 0x1F) {\n                case 2:\n                  delta = p.read_shift(2);\n                  break;\n                case 3:\n                  delta = p.read_shift(2, 'i');\n                  break;\n                case 7:\n                  delta = p.read_shift(2);\n                  break;\n                default:\n                  throw \"Unsupported delta for QPW cell type \" + (flags & 0x1F);\n              }\n              if (!(!o.sheetStubs && cell.t == \"z\")) {\n                var newcell = dup(cell);\n                if (cell.t == \"n\" && cell.z && fmt_is_date(cell.z) && o.cellDates) {\n                  newcell.v = numdate(cell.v);\n                  newcell.t = typeof newcell.v == \"number\" ? 'n' : 'd';\n                }\n                if (s[\"!data\"] != null) {\n                  if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n                  s[\"!data\"][R][C] = newcell;\n                } else s[CC + encode_row(R)] = newcell;\n              }\n              ++R;\n              --cnt;\n              while (mul-- > 0 && cnt >= 0) {\n                if (flags & 0x20) switch (flags & 0x1F) {\n                  case 2:\n                    cell = {\n                      t: \"n\",\n                      v: cell.v + delta & 0xFFFF\n                    };\n                    break;\n                  case 3:\n                    cell = {\n                      t: \"n\",\n                      v: cell.v + delta & 0xFFFF\n                    };\n                    if (cell.v > 0x7FFF) cell.v -= 0x10000;\n                    break;\n                  case 7:\n                    cell = {\n                      t: \"s\",\n                      v: SST[type = type + delta >>> 0]\n                    };\n                    break;\n                  default:\n                    throw \"Cannot apply delta for QPW cell type \" + (flags & 0x1F);\n                } else switch (flags & 0x1F) {\n                  case 1:\n                    cell = {\n                      t: \"z\"\n                    };\n                    break;\n                  case 2:\n                    cell = {\n                      t: \"n\",\n                      v: p.read_shift(2)\n                    };\n                    break;\n                  case 7:\n                    cell = {\n                      t: \"s\",\n                      v: SST[type = p.read_shift(4) - 1]\n                    };\n                    break;\n                  default:\n                    throw \"Cannot apply repeat for QPW cell type \" + (flags & 0x1F);\n                }\n                if (fmtidx != -1) ;\n                if (!(!o.sheetStubs && cell.t == \"z\")) {\n                  if (s[\"!data\"] != null) {\n                    if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n                    s[\"!data\"][R][C] = cell;\n                  } else s[CC + encode_row(R)] = cell;\n                }\n                ++R;\n                --cnt;\n              }\n            }\n          }\n          break;\n        case 0x0C02:\n          {\n            /* String (result of string formula expression) */\n            C = p.read_shift(2);\n            R = p.read_shift(4);\n            var str = parse_qpw_str(p);\n            /* TODO: QP10 record has an additional unknown character after the string */\n            if (s[\"!data\"] != null) {\n              if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n              s[\"!data\"][R][C] = {\n                t: \"s\",\n                v: str\n              };\n            } else s[encode_col(C) + encode_row(R)] = {\n              t: \"s\",\n              v: str\n            };\n          }\n          break;\n        default:\n          break;\n      }\n      d.l += length;\n    }\n    return wb;\n  }\n  return {\n    sheet_to_wk1: sheet_to_wk1,\n    book_to_wk3: book_to_wk3,\n    to_workbook: lotus_to_workbook\n  };\n}();\n/* 18.4.7 rPr CT_RPrElt */\nfunction parse_rpr(rpr) {\n  var font = {},\n    m = rpr.match(tagregex),\n    i = 0;\n  var pass = false;\n  if (m) for (; i != m.length; ++i) {\n    var y = parsexmltag(m[i]);\n    switch (y[0].replace(/<\\w*:/g, \"<\")) {\n      /* 18.8.12 condense CT_BooleanProperty */\n      /* ** not required . */\n      case '<condense':\n        break;\n      /* 18.8.17 extend CT_BooleanProperty */\n      /* ** not required . */\n      case '<extend':\n        break;\n      /* 18.8.36 shadow CT_BooleanProperty */\n      /* ** not required . */\n      case '<shadow':\n        if (!y.val) break;\n      /* falls through */\n      case '<shadow>':\n      case '<shadow/>':\n        font.shadow = 1;\n        break;\n      case '</shadow>':\n        break;\n\n      /* 18.4.1 charset CT_IntProperty TODO */\n      case '<charset':\n        if (y.val == '1') break;\n        font.cp = CS2CP[parseInt(y.val, 10)];\n        break;\n\n      /* 18.4.2 outline CT_BooleanProperty TODO */\n      case '<outline':\n        if (!y.val) break;\n      /* falls through */\n      case '<outline>':\n      case '<outline/>':\n        font.outline = 1;\n        break;\n      case '</outline>':\n        break;\n\n      /* 18.4.5 rFont CT_FontName */\n      case '<rFont':\n        font.name = y.val;\n        break;\n\n      /* 18.4.11 sz CT_FontSize */\n      case '<sz':\n        font.sz = y.val;\n        break;\n\n      /* 18.4.10 strike CT_BooleanProperty */\n      case '<strike':\n        if (!y.val) break;\n      /* falls through */\n      case '<strike>':\n      case '<strike/>':\n        font.strike = 1;\n        break;\n      case '</strike>':\n        break;\n\n      /* 18.4.13 u CT_UnderlineProperty */\n      case '<u':\n        if (!y.val) break;\n        switch (y.val) {\n          case 'double':\n            font.uval = \"double\";\n            break;\n          case 'singleAccounting':\n            font.uval = \"single-accounting\";\n            break;\n          case 'doubleAccounting':\n            font.uval = \"double-accounting\";\n            break;\n        }\n      /* falls through */\n      case '<u>':\n      case '<u/>':\n        font.u = 1;\n        break;\n      case '</u>':\n        break;\n\n      /* 18.8.2 b */\n      case '<b':\n        if (y.val == '0') break;\n      /* falls through */\n      case '<b>':\n      case '<b/>':\n        font.b = 1;\n        break;\n      case '</b>':\n        break;\n\n      /* 18.8.26 i */\n      case '<i':\n        if (y.val == '0') break;\n      /* falls through */\n      case '<i>':\n      case '<i/>':\n        font.i = 1;\n        break;\n      case '</i>':\n        break;\n\n      /* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n      case '<color':\n        if (y.rgb) font.color = y.rgb.slice(2, 8);\n        break;\n      case '<color>':\n      case '<color/>':\n      case '</color>':\n        break;\n\n      /* 18.8.18 family ST_FontFamily */\n      case '<family':\n        font.family = y.val;\n        break;\n      case '<family>':\n      case '<family/>':\n      case '</family>':\n        break;\n\n      /* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n      case '<vertAlign':\n        font.valign = y.val;\n        break;\n      case '<vertAlign>':\n      case '<vertAlign/>':\n      case '</vertAlign>':\n        break;\n\n      /* 18.8.35 scheme CT_FontScheme TODO */\n      case '<scheme':\n        break;\n      case '<scheme>':\n      case '<scheme/>':\n      case '</scheme>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n    }\n  }\n  return font;\n}\nvar parse_rs = /*#__PURE__*/function () {\n  /* 18.4.4 r CT_RElt */\n  function parse_r(r) {\n    /* 18.4.12 t ST_Xstring */\n    var t = str_match_xml_ns(r, \"t\") /*, cp = 65001*/;\n    if (!t) return {\n      t: \"s\",\n      v: \"\"\n    };\n    var o /*:Cell*/ = {\n      t: 's',\n      v: unescapexml(t[1])\n    } /*:any*/;\n    var rpr = str_match_xml_ns(r, \"rPr\");\n    if (rpr) o.s = parse_rpr(rpr[1]);\n    return o;\n  }\n  var rregex = /<(?:\\w+:)?r>/g,\n    rend = /<\\/(?:\\w+:)?r>/;\n  return function parse_rs(rs) {\n    return rs.replace(rregex, \"\").split(rend).map(parse_r).filter(function (r) {\n      return r.v;\n    });\n  };\n}();\n\n/* Parse a list of <r> tags */\nvar rs_to_html = /*#__PURE__*/function parse_rs_factory() {\n  var nlregex = /(\\r\\n|\\n)/g;\n  function parse_rpr2(font, intro, outro) {\n    var style /*:Array<string>*/ = [];\n    if (font.u) style.push(\"text-decoration: underline;\");\n    if (font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n    if (font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n    if (font.outline) style.push(\"text-effect: outline;\");\n    if (font.shadow) style.push(\"text-shadow: auto;\");\n    intro.push('<span style=\"' + style.join(\"\") + '\">');\n    if (font.b) {\n      intro.push(\"<b>\");\n      outro.push(\"</b>\");\n    }\n    if (font.i) {\n      intro.push(\"<i>\");\n      outro.push(\"</i>\");\n    }\n    if (font.strike) {\n      intro.push(\"<s>\");\n      outro.push(\"</s>\");\n    }\n    var align = font.valign || \"\";\n    if (align == \"superscript\" || align == \"super\") align = \"sup\";else if (align == \"subscript\") align = \"sub\";\n    if (align != \"\") {\n      intro.push(\"<\" + align + \">\");\n      outro.push(\"</\" + align + \">\");\n    }\n    outro.push(\"</span>\");\n    return font;\n  }\n\n  /* 18.4.4 r CT_RElt */\n  function r_to_html(r) {\n    var terms /*:[Array<string>, string, Array<string>]*/ = [[], r.v, []];\n    if (!r.v) return \"\";\n    if (r.s) parse_rpr2(r.s, terms[0], terms[2]);\n    return terms[0].join(\"\") + terms[1].replace(nlregex, '<br/>') + terms[2].join(\"\");\n  }\n  return function parse_rs(rs) {\n    return rs.map(r_to_html).join(\"\");\n  };\n}();\n\n/* 18.4.8 si CT_Rst */\nvar sitregex = /<(?:\\w+:)?t\\b[^<>]*>([^<]*)<\\/(?:\\w+:)?t>/g,\n  sirregex = /<(?:\\w+:)?r\\b[^<>]*>/;\nfunction parse_si(x, opts) {\n  var html = opts ? opts.cellHTML : true;\n  var z = {};\n  if (!x) return {\n    t: \"\"\n  };\n  //var y;\n  /* 18.4.12 t ST_Xstring (Plaintext String) */\n  // TODO: is whitespace actually valid here?\n  if (x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n    z.t = unescapexml(utf8read(x.slice(x.indexOf(\">\") + 1).split(/<\\/(?:\\w+:)?t>/)[0] || \"\"), true);\n    z.r = utf8read(x);\n    if (html) z.h = escapehtml(z.t);\n  }\n  /* 18.4.4 r CT_RElt (Rich Text Run) */else if (( /*y = */x.match(sirregex))) {\n    z.r = utf8read(x);\n    z.t = unescapexml(utf8read((str_remove_xml_ns_g(x, \"rPh\").match(sitregex) || []).join(\"\").replace(tagregex, \"\")), true);\n    if (html) z.h = rs_to_html(parse_rs(z.r));\n  }\n  /* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n  /* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n  return z;\n}\n\n/* 18.4 Shared String Table */\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\nfunction parse_sst_xml(data /*:string*/, opts) /*:SST*/{\n  var s /*:SST*/ = [] /*:any*/,\n    ss = \"\";\n  if (!data) return s;\n  /* 18.4.9 sst CT_Sst */\n  var sst = str_match_xml_ns(data, \"sst\");\n  if (sst) {\n    ss = sst[1].replace(sstr1, \"\").split(sstr2);\n    for (var i = 0; i != ss.length; ++i) {\n      var o = parse_si(ss[i].trim(), opts);\n      if (o != null) s[s.length] = o;\n    }\n    sst = parsexmltag(sst[0].slice(0, sst[0].indexOf(\">\")));\n    s.Count = sst.count;\n    s.Unique = sst.uniqueCount;\n  }\n  return s;\n}\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\nfunction write_sst_xml(sst /*:SST*/, opts) /*:string*/{\n  if (!opts.bookSST) return \"\";\n  var o = [XML_HEADER];\n  o[o.length] = writextag('sst', null, {\n    xmlns: XMLNS_main[0],\n    count: sst.Count,\n    uniqueCount: sst.Unique\n  });\n  for (var i = 0; i != sst.length; ++i) {\n    if (sst[i] == null) continue;\n    var s /*:XLString*/ = sst[i];\n    var sitag = \"<si>\";\n    if (s.r) sitag += s.r;else {\n      sitag += \"<t\";\n      if (!s.t) s.t = \"\";\n      if (typeof s.t !== \"string\") s.t = String(s.t);\n      if (s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n      sitag += \">\" + escapexml(s.t) + \"</t>\";\n    }\n    sitag += \"</si>\";\n    o[o.length] = sitag;\n  }\n  if (o.length > 2) {\n    o[o.length] = '</sst>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\nfunction parse_BrtBeginSst(data) {\n  return [data.read_shift(4), data.read_shift(4)];\n}\n\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\nfunction parse_sst_bin(data, opts) /*:SST*/{\n  var s /*:SST*/ = [] /*:any*/;\n  var pass = false;\n  recordhopper(data, function hopper_sst(val, R, RT) {\n    switch (RT) {\n      case 0x009F:\n        /* BrtBeginSst */\n        s.Count = val[0];\n        s.Unique = val[1];\n        break;\n      case 0x0013:\n        /* BrtSSTItem */\n        s.push(val);\n        break;\n      case 0x00A0:\n        /* BrtEndSst */\n        return true;\n      case 0x0023:\n        /* BrtFRTBegin */\n        pass = true;\n        break;\n      case 0x0024:\n        /* BrtFRTEnd */\n        pass = false;\n        break;\n      default:\n        if (R.T) {}\n        if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return s;\n}\nfunction write_BrtBeginSst(sst, o) {\n  if (!o) o = new_buf(8);\n  o.write_shift(4, sst.Count);\n  o.write_shift(4, sst.Unique);\n  return o;\n}\nvar write_BrtSSTItem = write_RichStr;\nfunction write_sst_bin(sst /*::, opts*/) {\n  var ba = buf_array();\n  write_record(ba, 0x009F /* BrtBeginSst */, write_BrtBeginSst(sst));\n  for (var i = 0; i < sst.length; ++i) write_record(ba, 0x0013 /* BrtSSTItem */, write_BrtSSTItem(sst[i]));\n  /* FRTSST */\n  write_record(ba, 0x00A0 /* BrtEndSst */);\n  return ba.end();\n}\nfunction _JS2ANSI(str /*:string*/) /*:Array<number>*/{\n  if (typeof $cptable !== 'undefined') return $cptable.utils.encode(current_ansi, str);\n  var o /*:Array<number>*/ = [],\n    oo = str.split(\"\");\n  for (var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.4 Version */\nfunction parse_CRYPTOVersion(blob, length /*:?number*/) {\n  var o /*:any*/ = {};\n  o.Major = blob.read_shift(2);\n  o.Minor = blob.read_shift(2);\n  /*:: if(length == null) return o; */\n  if (length >= 4) blob.l += length - 4;\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\nfunction parse_DataSpaceVersionInfo(blob) {\n  var o = {};\n  o.id = blob.read_shift(0, 'lpp4');\n  o.R = parse_CRYPTOVersion(blob, 4);\n  o.U = parse_CRYPTOVersion(blob, 4);\n  o.W = parse_CRYPTOVersion(blob, 4);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\nfunction parse_DataSpaceMapEntry(blob) {\n  var len = blob.read_shift(4);\n  var end = blob.l + len - 4;\n  var o = {};\n  var cnt = blob.read_shift(4);\n  var comps /*:Array<{t:number, v:string}>*/ = [];\n  /* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n  while (cnt-- > 0) comps.push({\n    t: blob.read_shift(4),\n    v: blob.read_shift(0, 'lpp4')\n  });\n  o.name = blob.read_shift(0, 'lpp4');\n  o.comps = comps;\n  if (blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\nfunction parse_DataSpaceMap(blob) {\n  var o = [];\n  blob.l += 4; // must be 0x8\n  var cnt = blob.read_shift(4);\n  while (cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\nfunction parse_DataSpaceDefinition(blob) /*:Array<string>*/{\n  var o /*:Array<string>*/ = [];\n  blob.l += 4; // must be 0x8\n  var cnt = blob.read_shift(4);\n  while (cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\nfunction parse_TransformInfoHeader(blob) {\n  var o = {};\n  /*var len = */\n  blob.read_shift(4);\n  blob.l += 4; // must be 0x1\n  o.id = blob.read_shift(0, 'lpp4');\n  o.name = blob.read_shift(0, 'lpp4');\n  o.R = parse_CRYPTOVersion(blob, 4);\n  o.U = parse_CRYPTOVersion(blob, 4);\n  o.W = parse_CRYPTOVersion(blob, 4);\n  return o;\n}\nfunction parse_Primary(blob) {\n  /* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n  var hdr = parse_TransformInfoHeader(blob);\n  /* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n  hdr.ename = blob.read_shift(0, '8lpp4');\n  hdr.blksz = blob.read_shift(4);\n  hdr.cmode = blob.read_shift(4);\n  if (blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n  return hdr;\n}\n\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\nfunction parse_EncryptionHeader(blob, length /*:number*/) {\n  var tgt = blob.l + length;\n  var o = {};\n  o.Flags = blob.read_shift(4) & 0x3F;\n  blob.l += 4;\n  o.AlgID = blob.read_shift(4);\n  var valid = false;\n  switch (o.AlgID) {\n    case 0x660E:\n    case 0x660F:\n    case 0x6610:\n      valid = o.Flags == 0x24;\n      break;\n    case 0x6801:\n      valid = o.Flags == 0x04;\n      break;\n    case 0:\n      valid = o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24;\n      break;\n    default:\n      throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n  }\n  if (!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n  o.AlgIDHash = blob.read_shift(4);\n  o.KeySize = blob.read_shift(4);\n  o.ProviderType = blob.read_shift(4);\n  blob.l += 8;\n  o.CSPName = blob.read_shift(tgt - blob.l >> 1, 'utf16le');\n  blob.l = tgt;\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\nfunction parse_EncryptionVerifier(blob, length /*:number*/) {\n  var o = {},\n    tgt = blob.l + length;\n  blob.l += 4; // SaltSize must be 0x10\n  o.Salt = blob.slice(blob.l, blob.l + 16);\n  blob.l += 16;\n  o.Verifier = blob.slice(blob.l, blob.l + 16);\n  blob.l += 16;\n  /*var sz = */\n  blob.read_shift(4);\n  o.VerifierHash = blob.slice(blob.l, tgt);\n  blob.l = tgt;\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\nfunction parse_EncryptionInfo(blob) {\n  var vers = parse_CRYPTOVersion(blob);\n  switch (vers.Minor) {\n    case 0x02:\n      return [vers.Minor, parse_EncInfoStd(blob, vers)];\n    case 0x03:\n      return [vers.Minor, parse_EncInfoExt(blob, vers)];\n    case 0x04:\n      return [vers.Minor, parse_EncInfoAgl(blob, vers)];\n  }\n  throw new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\nfunction parse_EncInfoStd(blob /*::, vers*/) {\n  var flags = blob.read_shift(4);\n  if ((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n  var sz = blob.read_shift(4);\n  //var tgt = blob.l + sz;\n  var hdr = parse_EncryptionHeader(blob, sz);\n  var verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n  return {\n    t: \"Std\",\n    h: hdr,\n    v: verifier\n  };\n}\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\nfunction parse_EncInfoExt( /*::blob, vers*/) {\n  throw new Error(\"File is password-protected: ECMA-376 Extensible\");\n}\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\nfunction parse_EncInfoAgl(blob /*::, vers*/) {\n  var KeyData = [\"saltSize\", \"blockSize\", \"keyBits\", \"hashSize\", \"cipherAlgorithm\", \"cipherChaining\", \"hashAlgorithm\", \"saltValue\"];\n  blob.l += 4;\n  var xml = blob.read_shift(blob.length - blob.l, 'utf8');\n  var o = {};\n  xml.replace(tagregex, function xml_agile(x) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n      case '<encryption':\n      case '</encryption>':\n        break;\n      case '<keyData':\n        KeyData.forEach(function (k) {\n          o[k] = y[k];\n        });\n        break;\n      case '<dataIntegrity':\n        o.encryptedHmacKey = y.encryptedHmacKey;\n        o.encryptedHmacValue = y.encryptedHmacValue;\n        break;\n      case '<keyEncryptors>':\n      case '<keyEncryptors':\n        o.encs = [];\n        break;\n      case '</keyEncryptors>':\n        break;\n      case '<keyEncryptor':\n        o.uri = y.uri;\n        break;\n      case '</keyEncryptor>':\n        break;\n      case '<encryptedKey':\n        o.encs.push(y);\n        break;\n      default:\n        throw y[0];\n    }\n  });\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\nfunction parse_RC4CryptoHeader(blob, length /*:number*/) {\n  var o = {};\n  var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n  length -= 4;\n  if (vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n  if (vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n  o.Flags = blob.read_shift(4);\n  length -= 4;\n  var sz = blob.read_shift(4);\n  length -= 4;\n  o.EncryptionHeader = parse_EncryptionHeader(blob, sz);\n  length -= sz;\n  o.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n  return o;\n}\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\nfunction parse_RC4Header(blob /*::, length*/) {\n  var o = {};\n  var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n  if (vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n  o.Salt = blob.read_shift(16);\n  o.EncryptedVerifier = blob.read_shift(16);\n  o.EncryptedVerifierHash = blob.read_shift(16);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\nfunction crypto_CreatePasswordVerifier_Method1(Password /*:string*/) {\n  var Verifier = 0x0000,\n    PasswordArray;\n  var PasswordDecoded = _JS2ANSI(Password);\n  var len = PasswordDecoded.length + 1,\n    i,\n    PasswordByte;\n  var Intermediate1, Intermediate2, Intermediate3;\n  PasswordArray = new_raw_buf(len);\n  PasswordArray[0] = PasswordDecoded.length;\n  for (i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i - 1];\n  for (i = len - 1; i >= 0; --i) {\n    PasswordByte = PasswordArray[i];\n    Intermediate1 = (Verifier & 0x4000) === 0x0000 ? 0 : 1;\n    Intermediate2 = Verifier << 1 & 0x7FFF;\n    Intermediate3 = Intermediate1 | Intermediate2;\n    Verifier = Intermediate3 ^ PasswordByte;\n  }\n  return Verifier ^ 0xCE4B;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\nvar crypto_CreateXorArray_Method1 = /*#__PURE__*/function () {\n  var PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n  var InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n  var XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n  var Ror = function (Byte) {\n    return (Byte / 2 | Byte * 128) & 0xFF;\n  };\n  var XorRor = function (byte1, byte2) {\n    return Ror(byte1 ^ byte2);\n  };\n  var CreateXorKey_Method1 = function (Password) {\n    var XorKey = InitialCode[Password.length - 1];\n    var CurrentElement = 0x68;\n    for (var i = Password.length - 1; i >= 0; --i) {\n      var Char = Password[i];\n      for (var j = 0; j != 7; ++j) {\n        if (Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n        Char *= 2;\n        --CurrentElement;\n      }\n    }\n    return XorKey;\n  };\n  return function (password /*:string*/) {\n    var Password = _JS2ANSI(password);\n    var XorKey = CreateXorKey_Method1(Password);\n    var Index = Password.length;\n    var ObfuscationArray = new_raw_buf(16);\n    for (var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n    var Temp, PasswordLastChar, PadIndex;\n    if ((Index & 1) === 1) {\n      Temp = XorKey >> 8;\n      ObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n      --Index;\n      Temp = XorKey & 0xFF;\n      PasswordLastChar = Password[Password.length - 1];\n      ObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n    }\n    while (Index > 0) {\n      --Index;\n      Temp = XorKey >> 8;\n      ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n      --Index;\n      Temp = XorKey & 0xFF;\n      ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n    }\n    Index = 15;\n    PadIndex = 15 - Password.length;\n    while (PadIndex > 0) {\n      Temp = XorKey >> 8;\n      ObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n      --Index;\n      --PadIndex;\n      Temp = XorKey & 0xFF;\n      ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n      --Index;\n      --PadIndex;\n    }\n    return ObfuscationArray;\n  };\n}();\n\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\nvar crypto_DecryptData_Method1 = function (password /*:string*/, Data, XorArrayIndex, XorArray, O) {\n  /* If XorArray is set, use it; if O is not set, make changes in-place */\n  if (!O) O = Data;\n  if (!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n  var Index, Value;\n  for (Index = 0; Index != Data.length; ++Index) {\n    Value = Data[Index];\n    Value ^= XorArray[XorArrayIndex];\n    Value = (Value >> 5 | Value << 3) & 0xFF;\n    O[Index] = Value;\n    ++XorArrayIndex;\n  }\n  return [O, XorArrayIndex, XorArray];\n};\nvar crypto_MakeXorDecryptor = function (password /*:string*/) {\n  var XorArrayIndex = 0,\n    XorArray = crypto_CreateXorArray_Method1(password);\n  return function (Data) {\n    var O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n    XorArrayIndex = O[1];\n    return O[0];\n  };\n};\n\n/* 2.5.343 */\nfunction parse_XORObfuscation(blob, length, opts, out) {\n  var o = {\n    key: parseuint16(blob),\n    verificationBytes: parseuint16(blob)\n  } /*:any*/;\n  if (opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n  out.valid = o.verificationBytes === o.verifier;\n  if (out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n  return o;\n}\n\n/* 2.4.117 */\nfunction parse_FilePassHeader(blob, length /*:number*/, oo) {\n  var o = oo || {};\n  o.Info = blob.read_shift(2);\n  blob.l -= 2;\n  if (o.Info === 1) o.Data = parse_RC4Header(blob, length);else o.Data = parse_RC4CryptoHeader(blob, length);\n  return o;\n}\nfunction parse_FilePass(blob, length /*:number*/, opts) {\n  var o = {\n    Type: opts.biff >= 8 ? blob.read_shift(2) : 0\n  } /*:any*/; /* wEncryptionType */\n  if (o.Type) parse_FilePassHeader(blob, length - 2, o);else parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n  return o;\n}\nfunction rtf_to_sheet(d, opts) {\n  switch (opts.type) {\n    case \"base64\":\n      return rtf_to_sheet_str(Base64_decode(d), opts);\n    case \"binary\":\n      return rtf_to_sheet_str(d, opts);\n    case \"buffer\":\n      return rtf_to_sheet_str(has_buf && Buffer.isBuffer(d) ? d.toString(\"binary\") : a2s(d), opts);\n    case \"array\":\n      return rtf_to_sheet_str(cc2str(d), opts);\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\nfunction rtf_to_sheet_str(str, opts) {\n  var o = opts || {};\n  var ws = {};\n  var dense = o.dense;\n  if (dense) ws[\"!data\"] = [];\n  var rows = str_match_ng(str, \"\\\\trowd\", \"\\\\row\");\n  if (!rows) throw new Error(\"RTF missing table\");\n  var range = {\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: 0,\n      r: rows.length - 1\n    }\n  };\n  var row = [];\n  rows.forEach(function (rowtf, R) {\n    if (dense) row = ws[\"!data\"][R] = [];\n    var rtfre = /\\\\[\\w\\-]+\\b/g;\n    var last_index = 0;\n    var res;\n    var C = -1;\n    var payload = [];\n    while ((res = rtfre.exec(rowtf)) != null) {\n      var data = rowtf.slice(last_index, rtfre.lastIndex - res[0].length);\n      if (data.charCodeAt(0) == 32) data = data.slice(1);\n      if (data.length) payload.push(data);\n      switch (res[0]) {\n        case \"\\\\cell\":\n          ++C;\n          if (payload.length) {\n            var cell = {\n              v: payload.join(\"\"),\n              t: \"s\"\n            };\n            if (cell.v == \"TRUE\" || cell.v == \"FALSE\") {\n              cell.v = cell.v == \"TRUE\";\n              cell.t = \"b\";\n            } else if (!isNaN(fuzzynum(cell.v))) {\n              cell.t = \"n\";\n              if (o.cellText !== false) cell.w = cell.v;\n              cell.v = fuzzynum(cell.v);\n            }\n            if (dense) row[C] = cell;else ws[encode_cell({\n              r: R,\n              c: C\n            })] = cell;\n          }\n          payload = [];\n          break;\n        case \"\\\\par\":\n          payload.push(\"\\n\");\n          break;\n      }\n      last_index = rtfre.lastIndex;\n    }\n    if (C > range.e.c) range.e.c = C;\n  });\n  ws[\"!ref\"] = encode_range(range);\n  return ws;\n}\nfunction rtf_to_workbook(d, opts) {\n  var wb = sheet_to_workbook(rtf_to_sheet(d, opts), opts);\n  wb.bookType = \"rtf\";\n  return wb;\n}\nfunction sheet_to_rtf(ws, opts) {\n  var o = [\"{\\\\rtf1\\\\ansi\"];\n  if (!ws[\"!ref\"]) return o[0] + \"}\";\n  var r = safe_decode_range(ws[\"!ref\"]),\n    cell;\n  var dense = ws[\"!data\"] != null,\n    row = [];\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    o.push(\"\\\\trowd\\\\trautofit1\");\n    for (var C = r.s.c; C <= r.e.c; ++C) o.push(\"\\\\cellx\" + (C + 1));\n    o.push(\"\\\\pard\\\\intbl\");\n    if (dense) row = ws[\"!data\"][R] || [];\n    for (C = r.s.c; C <= r.e.c; ++C) {\n      var coord = encode_cell({\n        r: R,\n        c: C\n      });\n      cell = dense ? row[C] : ws[coord];\n      if (!cell || cell.v == null && (!cell.f || cell.F)) {\n        o.push(\" \\\\cell\");\n        continue;\n      }\n      o.push(\" \" + (cell.w || (format_cell(cell), cell.w) || \"\").replace(/[\\r\\n]/g, \"\\\\par \"));\n      o.push(\"\\\\cell\");\n    }\n    o.push(\"\\\\pard\\\\intbl\\\\row\");\n  }\n  return o.join(\"\") + \"}\";\n}\nfunction hex2RGB(h) {\n  var o = h.slice(h[0] === \"#\" ? 1 : 0).slice(0, 6);\n  return [parseInt(o.slice(0, 2), 16), parseInt(o.slice(2, 4), 16), parseInt(o.slice(4, 6), 16)];\n}\nfunction rgb2Hex(rgb) {\n  for (var i = 0, o = 1; i != 3; ++i) o = o * 256 + (rgb[i] > 255 ? 255 : rgb[i] < 0 ? 0 : rgb[i]);\n  return o.toString(16).toUpperCase().slice(1);\n}\nfunction rgb2HSL(rgb) {\n  var R = rgb[0] / 255,\n    G = rgb[1] / 255,\n    B = rgb[2] / 255;\n  var M = Math.max(R, G, B),\n    m = Math.min(R, G, B),\n    C = M - m;\n  if (C === 0) return [0, 0, R];\n  var H6 = 0,\n    S = 0,\n    L2 = M + m;\n  S = C / (L2 > 1 ? 2 - L2 : L2);\n  switch (M) {\n    case R:\n      H6 = ((G - B) / C + 6) % 6;\n      break;\n    case G:\n      H6 = (B - R) / C + 2;\n      break;\n    case B:\n      H6 = (R - G) / C + 4;\n      break;\n  }\n  return [H6 / 6, S, L2 / 2];\n}\nfunction hsl2RGB(hsl) {\n  var H = hsl[0],\n    S = hsl[1],\n    L = hsl[2];\n  var C = S * 2 * (L < 0.5 ? L : 1 - L),\n    m = L - C / 2;\n  var rgb = [m, m, m],\n    h6 = 6 * H;\n  var X;\n  if (S !== 0) switch (h6 | 0) {\n    case 0:\n    case 6:\n      X = C * h6;\n      rgb[0] += C;\n      rgb[1] += X;\n      break;\n    case 1:\n      X = C * (2 - h6);\n      rgb[0] += X;\n      rgb[1] += C;\n      break;\n    case 2:\n      X = C * (h6 - 2);\n      rgb[1] += C;\n      rgb[2] += X;\n      break;\n    case 3:\n      X = C * (4 - h6);\n      rgb[1] += X;\n      rgb[2] += C;\n      break;\n    case 4:\n      X = C * (h6 - 4);\n      rgb[2] += C;\n      rgb[0] += X;\n      break;\n    case 5:\n      X = C * (6 - h6);\n      rgb[2] += X;\n      rgb[0] += C;\n      break;\n  }\n  for (var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i] * 255);\n  return rgb;\n}\n\n/* 18.8.3 bgColor tint algorithm */\nfunction rgb_tint(hex, tint) {\n  if (tint === 0) return hex;\n  var hsl = rgb2HSL(hex2RGB(hex));\n  if (tint < 0) hsl[2] = hsl[2] * (1 + tint);else hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n  return rgb2Hex(hsl2RGB(hsl));\n}\n\n/* 18.3.1.13 width calculations */\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\nvar DEF_MDW = 6,\n  MAX_MDW = 15,\n  MIN_MDW = 1,\n  MDW = DEF_MDW;\nfunction width2px(width) {\n  return Math.floor((width + Math.round(128 / MDW) / 256) * MDW);\n}\nfunction px2char(px) {\n  return Math.floor((px - 5) / MDW * 100 + 0.5) / 100;\n}\nfunction char2width(chr) {\n  return Math.round((chr * MDW + 5) / MDW * 256) / 256;\n}\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\nfunction cycle_width(collw) {\n  return char2width(px2char(width2px(collw)));\n}\n/* XLSX/XLSB/XLS specify width in units of MDW */\nfunction find_mdw_colw(collw) {\n  var delta = Math.abs(collw - cycle_width(collw)),\n    _MDW = MDW;\n  if (delta > 0.005) for (MDW = MIN_MDW; MDW < MAX_MDW; ++MDW) if (Math.abs(collw - cycle_width(collw)) <= delta) {\n    delta = Math.abs(collw - cycle_width(collw));\n    _MDW = MDW;\n  }\n  MDW = _MDW;\n}\n/* XLML specifies width in terms of pixels */\n/*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\nfunction process_col(coll /*:ColInfo*/) {\n  if (coll.width) {\n    coll.wpx = width2px(coll.width);\n    coll.wch = px2char(coll.wpx);\n    coll.MDW = MDW;\n  } else if (coll.wpx) {\n    coll.wch = px2char(coll.wpx);\n    coll.width = char2width(coll.wch);\n    coll.MDW = MDW;\n  } else if (typeof coll.wch == 'number') {\n    coll.width = char2width(coll.wch);\n    coll.wpx = width2px(coll.width);\n    coll.MDW = MDW;\n  }\n  if (coll.customWidth) delete coll.customWidth;\n}\nvar DEF_PPI = 96,\n  PPI = DEF_PPI;\nfunction px2pt(px) {\n  return px * 96 / PPI;\n}\nfunction pt2px(pt) {\n  return pt * PPI / 96;\n}\n\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\nvar XLMLPatternTypeMap = {\n  \"None\": \"none\",\n  \"Solid\": \"solid\",\n  \"Gray50\": \"mediumGray\",\n  \"Gray75\": \"darkGray\",\n  \"Gray25\": \"lightGray\",\n  \"HorzStripe\": \"darkHorizontal\",\n  \"VertStripe\": \"darkVertical\",\n  \"ReverseDiagStripe\": \"darkDown\",\n  \"DiagStripe\": \"darkUp\",\n  \"DiagCross\": \"darkGrid\",\n  \"ThickDiagCross\": \"darkTrellis\",\n  \"ThinHorzStripe\": \"lightHorizontal\",\n  \"ThinVertStripe\": \"lightVertical\",\n  \"ThinReverseDiagStripe\": \"lightDown\",\n  \"ThinHorzCross\": \"lightGrid\"\n};\n\n/* 18.8.5 borders CT_Borders */\nfunction parse_borders(t, styles, themes, opts) {\n  styles.Borders = [];\n  var border = {};\n  var pass = false;\n  (t.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<borders':\n      case '<borders>':\n      case '</borders>':\n        break;\n\n      /* 18.8.4 border CT_Border */\n      case '<border':\n      case '<border>':\n      case '<border/>':\n        border = /*::(*/{} /*:: :any)*/;\n        if (y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);\n        if (y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);\n        styles.Borders.push(border);\n        break;\n      case '</border>':\n        break;\n\n      /* note: not in spec, appears to be CT_BorderPr */\n      case '<left/>':\n        break;\n      case '<left':\n      case '<left>':\n        break;\n      case '</left>':\n        break;\n\n      /* note: not in spec, appears to be CT_BorderPr */\n      case '<right/>':\n        break;\n      case '<right':\n      case '<right>':\n        break;\n      case '</right>':\n        break;\n\n      /* 18.8.43 top CT_BorderPr */\n      case '<top/>':\n        break;\n      case '<top':\n      case '<top>':\n        break;\n      case '</top>':\n        break;\n\n      /* 18.8.6 bottom CT_BorderPr */\n      case '<bottom/>':\n        break;\n      case '<bottom':\n      case '<bottom>':\n        break;\n      case '</bottom>':\n        break;\n\n      /* 18.8.13 diagonal CT_BorderPr */\n      case '<diagonal':\n      case '<diagonal>':\n      case '<diagonal/>':\n        break;\n      case '</diagonal>':\n        break;\n\n      /* 18.8.25 horizontal CT_BorderPr */\n      case '<horizontal':\n      case '<horizontal>':\n      case '<horizontal/>':\n        break;\n      case '</horizontal>':\n        break;\n\n      /* 18.8.44 vertical CT_BorderPr */\n      case '<vertical':\n      case '<vertical>':\n      case '<vertical/>':\n        break;\n      case '</vertical>':\n        break;\n\n      /* 18.8.37 start CT_BorderPr */\n      case '<start':\n      case '<start>':\n      case '<start/>':\n        break;\n      case '</start>':\n        break;\n\n      /* 18.8.16 end CT_BorderPr */\n      case '<end':\n      case '<end>':\n      case '<end/>':\n        break;\n      case '</end>':\n        break;\n\n      /* 18.8.? color CT_Color */\n      case '<color':\n      case '<color>':\n        break;\n      case '<color/>':\n      case '</color>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n        }\n    }\n  });\n}\n\n/* 18.8.21 fills CT_Fills */\nfunction parse_fills(t, styles, themes, opts) {\n  styles.Fills = [];\n  var fill = {};\n  var pass = false;\n  (t.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<fills':\n      case '<fills>':\n      case '</fills>':\n        break;\n\n      /* 18.8.20 fill CT_Fill */\n      case '<fill>':\n      case '<fill':\n      case '<fill/>':\n        fill = {};\n        styles.Fills.push(fill);\n        break;\n      case '</fill>':\n        break;\n\n      /* 18.8.24 gradientFill CT_GradientFill */\n      case '<gradientFill>':\n        break;\n      case '<gradientFill':\n      case '</gradientFill>':\n        styles.Fills.push(fill);\n        fill = {};\n        break;\n\n      /* 18.8.32 patternFill CT_PatternFill */\n      case '<patternFill':\n      case '<patternFill>':\n        if (y.patternType) fill.patternType = y.patternType;\n        break;\n      case '<patternFill/>':\n      case '</patternFill>':\n        break;\n\n      /* 18.8.3 bgColor CT_Color */\n      case '<bgColor':\n        if (!fill.bgColor) fill.bgColor = {};\n        if (y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n        if (y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n        if (y.tint) fill.bgColor.tint = parseFloat(y.tint);\n        /* Excel uses ARGB strings */\n        if (y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n        break;\n      case '<bgColor/>':\n      case '</bgColor>':\n        break;\n\n      /* 18.8.19 fgColor CT_Color */\n      case '<fgColor':\n        if (!fill.fgColor) fill.fgColor = {};\n        if (y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n        if (y.tint) fill.fgColor.tint = parseFloat(y.tint);\n        /* Excel uses ARGB strings */\n        if (y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);\n        break;\n      case '<fgColor/>':\n      case '</fgColor>':\n        break;\n\n      /* 18.8.38 stop CT_GradientStop */\n      case '<stop':\n      case '<stop/>':\n        break;\n      case '</stop>':\n        break;\n\n      /* 18.8.? color CT_Color */\n      case '<color':\n      case '<color/>':\n        break;\n      case '</color>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n        }\n    }\n  });\n}\n\n/* 18.8.23 fonts CT_Fonts */\nfunction parse_fonts(t, styles, themes, opts) {\n  styles.Fonts = [];\n  var font = {};\n  var pass = false;\n  (t.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<fonts':\n      case '<fonts>':\n      case '</fonts>':\n        break;\n\n      /* 18.8.22 font CT_Font */\n      case '<font':\n      case '<font>':\n        break;\n      case '</font>':\n      case '<font/>':\n        styles.Fonts.push(font);\n        font = {};\n        break;\n\n      /* 18.8.29 name CT_FontName */\n      case '<name':\n        if (y.val) font.name = utf8read(y.val);\n        break;\n      case '<name/>':\n      case '</name>':\n        break;\n\n      /* 18.8.2  b CT_BooleanProperty */\n      case '<b':\n        font.bold = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<b/>':\n        font.bold = 1;\n        break;\n\n      /* 18.8.26 i CT_BooleanProperty */\n      case '<i':\n        font.italic = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<i/>':\n        font.italic = 1;\n        break;\n\n      /* 18.4.13 u CT_UnderlineProperty */\n      case '<u':\n        switch (y.val) {\n          case \"none\":\n            font.underline = 0x00;\n            break;\n          case \"single\":\n            font.underline = 0x01;\n            break;\n          case \"double\":\n            font.underline = 0x02;\n            break;\n          case \"singleAccounting\":\n            font.underline = 0x21;\n            break;\n          case \"doubleAccounting\":\n            font.underline = 0x22;\n            break;\n        }\n        break;\n      case '<u/>':\n        font.underline = 1;\n        break;\n\n      /* 18.4.10 strike CT_BooleanProperty */\n      case '<strike':\n        font.strike = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<strike/>':\n        font.strike = 1;\n        break;\n\n      /* 18.4.2  outline CT_BooleanProperty */\n      case '<outline':\n        font.outline = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<outline/>':\n        font.outline = 1;\n        break;\n\n      /* 18.8.36 shadow CT_BooleanProperty */\n      case '<shadow':\n        font.shadow = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<shadow/>':\n        font.shadow = 1;\n        break;\n\n      /* 18.8.12 condense CT_BooleanProperty */\n      case '<condense':\n        font.condense = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<condense/>':\n        font.condense = 1;\n        break;\n\n      /* 18.8.17 extend CT_BooleanProperty */\n      case '<extend':\n        font.extend = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<extend/>':\n        font.extend = 1;\n        break;\n\n      /* 18.4.11 sz CT_FontSize */\n      case '<sz':\n        if (y.val) font.sz = +y.val;\n        break;\n      case '<sz/>':\n      case '</sz>':\n        break;\n\n      /* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n      case '<vertAlign':\n        if (y.val) font.vertAlign = y.val;\n        break;\n      case '<vertAlign/>':\n      case '</vertAlign>':\n        break;\n\n      /* 18.8.18 family CT_FontFamily */\n      case '<family':\n        if (y.val) font.family = parseInt(y.val, 10);\n        break;\n      case '<family/>':\n      case '</family>':\n        break;\n\n      /* 18.8.35 scheme CT_FontScheme */\n      case '<scheme':\n        if (y.val) font.scheme = y.val;\n        break;\n      case '<scheme/>':\n      case '</scheme>':\n        break;\n\n      /* 18.4.1 charset CT_IntProperty */\n      case '<charset':\n        if (y.val == '1') break;\n        y.codepage = CS2CP[parseInt(y.val, 10)];\n        break;\n\n      /* 18.?.? color CT_Color */\n      case '<color':\n        if (!font.color) font.color = {};\n        if (y.auto) font.color.auto = parsexmlbool(y.auto);\n        if (y.rgb) font.color.rgb = y.rgb.slice(-6);else if (y.indexed) {\n          font.color.index = parseInt(y.indexed, 10);\n          var icv = XLSIcv[font.color.index];\n          if (font.color.index == 81) icv = XLSIcv[1];\n          if (!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid\n          font.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n        } else if (y.theme) {\n          font.color.theme = parseInt(y.theme, 10);\n          if (y.tint) font.color.tint = parseFloat(y.tint);\n          if (y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n            font.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n          }\n        }\n        break;\n      case '<color/>':\n      case '</color>':\n        break;\n\n      /* note: sometimes mc:AlternateContent appears bare */\n      case '<AlternateContent':\n        pass = true;\n        break;\n      case '</AlternateContent>':\n        pass = false;\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n        }\n    }\n  });\n}\n\n/* 18.8.31 numFmts CT_NumFmts */\nfunction parse_numFmts(t, styles, opts) {\n  styles.NumberFmt = [];\n  var k /*Array<number>*/ = keys(table_fmt) /*:any*/;\n  for (var i = 0; i < k.length; ++i) styles.NumberFmt[k[i]] = table_fmt[k[i]];\n  var m = t.match(tagregex);\n  if (!m) return;\n  for (i = 0; i < m.length; ++i) {\n    var y = parsexmltag(m[i]);\n    switch (strip_ns(y[0])) {\n      case '<numFmts':\n      case '</numFmts>':\n      case '<numFmts/>':\n      case '<numFmts>':\n        break;\n      case '<numFmt':\n        {\n          var f = unescapexml(utf8read(y.formatCode)),\n            j = parseInt(y.numFmtId, 10);\n          styles.NumberFmt[j] = f;\n          if (j > 0) {\n            if (j > 0x188) {\n              for (j = 0x188; j > 0x3c; --j) if (styles.NumberFmt[j] == null) break;\n              styles.NumberFmt[j] = f;\n            }\n            SSF__load(f, j);\n          }\n        }\n        break;\n      case '</numFmt>':\n        break;\n      default:\n        if (opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n    }\n  }\n}\nfunction write_numFmts(NF /*:{[n:number|string]:string}*/ /*::, opts*/) {\n  var o = [\"<numFmts>\"];\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) o[o.length] = writextag('numFmt', null, {\n      numFmtId: i,\n      formatCode: escapexml(NF[i])\n    });\n  });\n  if (o.length === 1) return \"\";\n  o[o.length] = \"</numFmts>\";\n  o[0] = writextag('numFmts', null, {\n    count: o.length - 2\n  }).replace(\"/>\", \">\");\n  return o.join(\"\");\n}\n\n/* 18.8.10 cellXfs CT_CellXfs */\nvar cellXF_uint = [\"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\"];\nvar cellXF_bool = [\"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\"];\nfunction parse_cellXfs(t, styles, opts) {\n  styles.CellXf = [];\n  var xf;\n  var pass = false;\n  (t.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x),\n      i = 0;\n    switch (strip_ns(y[0])) {\n      case '<cellXfs':\n      case '<cellXfs>':\n      case '<cellXfs/>':\n      case '</cellXfs>':\n        break;\n\n      /* 18.8.45 xf CT_Xf */\n      case '<xf':\n      case '<xf/>':\n      case '<xf>':\n        xf = y;\n        delete xf[0];\n        for (i = 0; i < cellXF_uint.length; ++i) if (xf[cellXF_uint[i]]) xf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n        for (i = 0; i < cellXF_bool.length; ++i) if (xf[cellXF_bool[i]]) xf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n        if (styles.NumberFmt && xf.numFmtId > 0x188) {\n          for (i = 0x188; i > 0x3c; --i) if (styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) {\n            xf.numFmtId = i;\n            break;\n          }\n        }\n        styles.CellXf.push(xf);\n        break;\n      case '</xf>':\n        break;\n\n      /* 18.8.1 alignment CT_CellAlignment */\n      case '<alignment':\n      case '<alignment/>':\n      case '<alignment>':\n        var alignment = {};\n        if (y.vertical) alignment.vertical = y.vertical;\n        if (y.horizontal) alignment.horizontal = y.horizontal;\n        if (y.textRotation != null) alignment.textRotation = y.textRotation;\n        if (y.indent) alignment.indent = y.indent;\n        if (y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);\n        xf.alignment = alignment;\n        break;\n      case '</alignment>':\n        break;\n\n      /* 18.8.33 protection CT_CellProtection */\n      case '<protection':\n      case '<protection>':\n        break;\n      case '</protection>':\n      case '<protection/>':\n        break;\n\n      /* note: sometimes mc:AlternateContent appears bare */\n      case '<AlternateContent':\n      case '<AlternateContent>':\n        pass = true;\n        break;\n      case '</AlternateContent>':\n        pass = false;\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n        }\n    }\n  });\n}\nfunction write_cellXfs(cellXfs) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  o[o.length] = writextag('cellXfs', null);\n  cellXfs.forEach(function (c) {\n    o[o.length] = writextag('xf', null, c);\n  });\n  o[o.length] = \"</cellXfs>\";\n  if (o.length === 2) return \"\";\n  o[0] = writextag('cellXfs', null, {\n    count: o.length - 2\n  }).replace(\"/>\", \">\");\n  return o.join(\"\");\n}\n\n/* 18.8 Styles CT_Stylesheet*/\nvar parse_sty_xml = /*#__PURE__*/function make_pstyx() {\n  return function parse_sty_xml(data, themes, opts) {\n    var styles = {};\n    if (!data) return styles;\n    data = remove_doctype(str_remove_ng(data, \"<!--\", \"-->\"));\n    /* 18.8.39 styleSheet CT_Stylesheet */\n    var t;\n\n    /* 18.8.31 numFmts CT_NumFmts ? */\n    if (t = str_match_xml_ns(data, \"numFmts\")) parse_numFmts(t[0], styles, opts);\n\n    /* 18.8.23 fonts CT_Fonts ? */\n    if (t = str_match_xml_ns(data, \"fonts\")) parse_fonts(t[0], styles, themes, opts);\n\n    /* 18.8.21 fills CT_Fills ? */\n    if (t = str_match_xml_ns(data, \"fills\")) parse_fills(t[0], styles, themes, opts);\n\n    /* 18.8.5  borders CT_Borders ? */\n    if (t = str_match_xml_ns(data, \"borders\")) parse_borders(t[0], styles, themes, opts);\n\n    /* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n    /* 18.8.8  cellStyles CT_CellStyles ? */\n\n    /* 18.8.10 cellXfs CT_CellXfs ? */\n    if (t = str_match_xml_ns(data, \"cellXfs\")) parse_cellXfs(t[0], styles, opts);\n\n    /* 18.8.15 dxfs CT_Dxfs ? */\n    /* 18.8.42 tableStyles CT_TableStyles ? */\n    /* 18.8.11 colors CT_Colors ? */\n    /* 18.2.10 extLst CT_ExtensionList ? */\n\n    return styles;\n  };\n}();\nfunction write_sty_xml(wb /*:Workbook*/, opts) /*:string*/{\n  var o = [XML_HEADER, writextag('styleSheet', null, {\n      'xmlns': XMLNS_main[0],\n      'xmlns:vt': XMLNS.vt\n    })],\n    w;\n  if (wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n  o[o.length] = '<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>';\n  o[o.length] = '<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>';\n  o[o.length] = '<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>';\n  o[o.length] = '<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>';\n  if (w = write_cellXfs(opts.cellXfs)) o[o.length] = w;\n  o[o.length] = '<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>';\n  o[o.length] = '<dxfs count=\"0\"/>';\n  o[o.length] = '<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>';\n  if (o.length > 2) {\n    o[o.length] = '</styleSheet>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.657 BrtFmt */\nfunction parse_BrtFmt(data, length /*:number*/) {\n  var numFmtId = data.read_shift(2);\n  var stFmtCode = parse_XLWideString(data, length - 2);\n  return [numFmtId, stFmtCode];\n}\nfunction write_BrtFmt(i /*:number*/, f /*:string*/, o) {\n  if (!o) o = new_buf(6 + 4 * f.length);\n  o.write_shift(2, i);\n  write_XLWideString(f, o);\n  var out = o.length > o.l ? o.slice(0, o.l) : o;\n  if (o.l == null) o.l = o.length;\n  return out;\n}\n\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\nfunction parse_BrtFont(data, length /*:number*/, opts) {\n  var out = {} /*:any*/;\n  out.sz = data.read_shift(2) / 20;\n  var grbit = parse_FontFlags(data, 2, opts);\n  if (grbit.fItalic) out.italic = 1;\n  if (grbit.fCondense) out.condense = 1;\n  if (grbit.fExtend) out.extend = 1;\n  if (grbit.fShadow) out.shadow = 1;\n  if (grbit.fOutline) out.outline = 1;\n  if (grbit.fStrikeout) out.strike = 1;\n  var bls = data.read_shift(2);\n  if (bls === 0x02BC) out.bold = 1;\n  switch (data.read_shift(2)) {\n    /* case 0: out.vertAlign = \"baseline\"; break; */\n    case 1:\n      out.vertAlign = \"superscript\";\n      break;\n    case 2:\n      out.vertAlign = \"subscript\";\n      break;\n  }\n  var underline = data.read_shift(1);\n  if (underline != 0) out.underline = underline;\n  var family = data.read_shift(1);\n  if (family > 0) out.family = family;\n  var bCharSet = data.read_shift(1);\n  if (bCharSet > 0) out.charset = bCharSet;\n  data.l++;\n  out.color = parse_BrtColor(data, 8);\n  switch (data.read_shift(1)) {\n    /* case 0: out.scheme = \"none\": break; */\n    case 1:\n      out.scheme = \"major\";\n      break;\n    case 2:\n      out.scheme = \"minor\";\n      break;\n  }\n  out.name = parse_XLWideString(data, length - 21);\n  return out;\n}\nfunction write_BrtFont(font /*:any*/, o) {\n  if (!o) o = new_buf(25 + 4 * 32);\n  o.write_shift(2, font.sz * 20);\n  write_FontFlags(font, o);\n  o.write_shift(2, font.bold ? 0x02BC : 0x0190);\n  var sss = 0;\n  if (font.vertAlign == \"superscript\") sss = 1;else if (font.vertAlign == \"subscript\") sss = 2;\n  o.write_shift(2, sss);\n  o.write_shift(1, font.underline || 0);\n  o.write_shift(1, font.family || 0);\n  o.write_shift(1, font.charset || 0);\n  o.write_shift(1, 0);\n  write_BrtColor(font.color, o);\n  var scheme = 0;\n  if (font.scheme == \"major\") scheme = 1;\n  if (font.scheme == \"minor\") scheme = 2;\n  o.write_shift(1, scheme);\n  write_XLWideString(font.name, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.650 BrtFill */\nvar XLSBFillPTNames = [\"none\", \"solid\", \"mediumGray\", \"darkGray\", \"lightGray\", \"darkHorizontal\", \"darkVertical\", \"darkDown\", \"darkUp\", \"darkGrid\", \"darkTrellis\", \"lightHorizontal\", \"lightVertical\", \"lightDown\", \"lightUp\", \"lightGrid\", \"lightTrellis\", \"gray125\", \"gray0625\"];\nvar rev_XLSBFillPTNames /*:EvertNumType*/;\n/* TODO: gradient fill representation */\nvar parse_BrtFill = parsenoop;\nfunction write_BrtFill(fill, o) {\n  if (!o) o = new_buf(4 * 3 + 8 * 7 + 16 * 1);\n  if (!rev_XLSBFillPTNames) rev_XLSBFillPTNames = evert(XLSBFillPTNames) /*:any*/;\n  var fls /*:number*/ = rev_XLSBFillPTNames[fill.patternType];\n  if (fls == null) fls = 0x28;\n  o.write_shift(4, fls);\n  var j = 0;\n  if (fls != 0x28) {\n    /* TODO: custom FG Color */\n    write_BrtColor({\n      auto: 1\n    }, o);\n    /* TODO: custom BG Color */\n    write_BrtColor({\n      auto: 1\n    }, o);\n    for (; j < 12; ++j) o.write_shift(4, 0);\n  } else {\n    for (; j < 4; ++j) o.write_shift(4, 0);\n    for (; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n    /* iGradientType */\n    /* xnumDegree */\n    /* xnumFillToLeft */\n    /* xnumFillToRight */\n    /* xnumFillToTop */\n    /* xnumFillToBottom */\n    /* cNumStop */\n    /* xfillGradientStop */\n  }\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.824 BrtXF */\nfunction parse_BrtXF(data, length /*:number*/) {\n  var tgt = data.l + length;\n  var ixfeParent = data.read_shift(2);\n  var ifmt = data.read_shift(2);\n  data.l = tgt;\n  return {\n    ixfe: ixfeParent,\n    numFmtId: ifmt\n  };\n}\nfunction write_BrtXF(data, ixfeP, o) {\n  if (!o) o = new_buf(16);\n  o.write_shift(2, ixfeP || 0);\n  o.write_shift(2, data.numFmtId || 0);\n  o.write_shift(2, 0); /* iFont */\n  o.write_shift(2, 0); /* iFill */\n  o.write_shift(2, 0); /* ixBorder */\n  o.write_shift(1, 0); /* trot */\n  o.write_shift(1, 0); /* indent */\n  var flow = 0;\n  o.write_shift(1, flow); /* flags */\n  o.write_shift(1, 0); /* flags */\n  o.write_shift(1, 0); /* xfGrbitAtr */\n  o.write_shift(1, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.4 Blxf TODO */\nfunction write_Blxf(data, o) {\n  if (!o) o = new_buf(10);\n  o.write_shift(1, 0); /* dg */\n  o.write_shift(1, 0);\n  o.write_shift(4, 0); /* color */\n  o.write_shift(4, 0); /* color */\n  return o;\n}\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\nvar parse_BrtBorder = parsenoop;\nfunction write_BrtBorder(border, o) {\n  if (!o) o = new_buf(51);\n  o.write_shift(1, 0); /* diagonal */\n  write_Blxf(null, o); /* top */\n  write_Blxf(null, o); /* bottom */\n  write_Blxf(null, o); /* left */\n  write_Blxf(null, o); /* right */\n  write_Blxf(null, o); /* diag */\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\nfunction write_BrtStyle(style, o) {\n  if (!o) o = new_buf(12 + 4 * 10);\n  o.write_shift(4, style.xfId);\n  o.write_shift(2, 1);\n  o.write_shift(1, +style.builtinId);\n  o.write_shift(1, 0); /* iLevel */\n  write_XLNullableWideString(style.name || \"\", o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n  var o = new_buf(4 + 256 * 2 * 4);\n  o.write_shift(4, cnt);\n  write_XLNullableWideString(defTableStyle, o);\n  write_XLNullableWideString(defPivotStyle, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction parse_sty_bin(data, themes, opts) {\n  var styles = {};\n  styles.NumberFmt = [] /*:any*/;\n  for (var y in table_fmt) styles.NumberFmt[y] = table_fmt[y];\n  styles.CellXf = [];\n  styles.Fonts = [];\n  var state /*:Array<string>*/ = [];\n  var pass = false;\n  recordhopper(data, function hopper_sty(val, R, RT) {\n    switch (RT) {\n      case 0x002C:\n        /* BrtFmt */\n        styles.NumberFmt[val[0]] = val[1];\n        SSF__load(val[1], val[0]);\n        break;\n      case 0x002B:\n        /* BrtFont */\n        styles.Fonts.push(val);\n        if (val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n          val.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n        }\n        break;\n      case 0x0401:\n        /* BrtKnownFonts */break;\n      case 0x002D:\n        /* BrtFill */\n        break;\n      case 0x002E:\n        /* BrtBorder */\n        break;\n      case 0x002F:\n        /* BrtXF */\n        if (state[state.length - 1] == 0x0269 /* BrtBeginCellXFs */) {\n          styles.CellXf.push(val);\n        }\n        break;\n      case 0x0030: /* BrtStyle */\n      case 0x01FB: /* BrtDXF */\n      case 0x023C: /* BrtMRUColor */\n      case 0x01DB:\n        /* BrtIndexedColor */\n        break;\n      case 0x0493: /* BrtDXF14 */\n      case 0x0836: /* BrtDXF15 */\n      case 0x046A: /* BrtSlicerStyleElement */\n      case 0x0200: /* BrtTableStyleElement */\n      case 0x082F: /* BrtTimelineStyleElement */\n      case 0x0C00:\n        /* BrtUid */\n        break;\n      case 0x0023:\n        /* BrtFRTBegin */\n        pass = true;\n        break;\n      case 0x0024:\n        /* BrtFRTEnd */\n        pass = false;\n        break;\n      case 0x0025:\n        /* BrtACBegin */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0026:\n        /* BrtACEnd */\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T > 0) state.push(RT);else if (R.T < 0) state.pop();else if (!pass || opts.WTF && state[state.length - 1] != 0x0025 /* BrtACBegin */) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return styles;\n}\nfunction write_FMTS_bin(ba, NF /*:?SSFTable*/) {\n  if (!NF) return;\n  var cnt = 0;\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    /*:: if(!NF) return; */\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) ++cnt;\n  });\n  if (cnt == 0) return;\n  write_record(ba, 0x0267 /* BrtBeginFmts */, write_UInt32LE(cnt));\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    /*:: if(!NF) return; */\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) write_record(ba, 0x002C /* BrtFmt */, write_BrtFmt(i, NF[i]));\n  });\n  write_record(ba, 0x0268 /* BrtEndFmts */);\n}\nfunction write_FONTS_bin(ba /*::, data*/) {\n  var cnt = 1;\n  if (cnt == 0) return;\n  write_record(ba, 0x0263 /* BrtBeginFonts */, write_UInt32LE(cnt));\n  write_record(ba, 0x002B /* BrtFont */, write_BrtFont({\n    sz: 12,\n    color: {\n      theme: 1\n    },\n    name: \"Calibri\",\n    family: 2,\n    scheme: \"minor\"\n  }));\n  /* 1*65491BrtFont [ACFONTS] */\n  write_record(ba, 0x0264 /* BrtEndFonts */);\n}\nfunction write_FILLS_bin(ba /*::, data*/) {\n  var cnt = 2;\n  if (cnt == 0) return;\n  write_record(ba, 0x025B /* BrtBeginFills */, write_UInt32LE(cnt));\n  write_record(ba, 0x002D /* BrtFill */, write_BrtFill({\n    patternType: \"none\"\n  }));\n  write_record(ba, 0x002D /* BrtFill */, write_BrtFill({\n    patternType: \"gray125\"\n  }));\n  /* 1*65431BrtFill */\n  write_record(ba, 0x025C /* BrtEndFills */);\n}\nfunction write_BORDERS_bin(ba /*::, data*/) {\n  var cnt = 1;\n  if (cnt == 0) return;\n  write_record(ba, 0x0265 /* BrtBeginBorders */, write_UInt32LE(cnt));\n  write_record(ba, 0x002E /* BrtBorder */, write_BrtBorder({}));\n  /* 1*65430BrtBorder */\n  write_record(ba, 0x0266 /* BrtEndBorders */);\n}\nfunction write_CELLSTYLEXFS_bin(ba /*::, data*/) {\n  var cnt = 1;\n  write_record(ba, 0x0272 /* BrtBeginCellStyleXFs */, write_UInt32LE(cnt));\n  write_record(ba, 0x002F /* BrtXF */, write_BrtXF({\n    numFmtId: 0,\n    fontId: 0,\n    fillId: 0,\n    borderId: 0\n  }, 0xFFFF));\n  /* 1*65430(BrtXF *FRT) */\n  write_record(ba, 0x0273 /* BrtEndCellStyleXFs */);\n}\nfunction write_CELLXFS_bin(ba, data) {\n  write_record(ba, 0x0269 /* BrtBeginCellXFs */, write_UInt32LE(data.length));\n  data.forEach(function (c) {\n    write_record(ba, 0x002F /* BrtXF */, write_BrtXF(c, 0));\n  });\n  /* 1*65430(BrtXF *FRT) */\n  write_record(ba, 0x026A /* BrtEndCellXFs */);\n}\nfunction write_STYLES_bin(ba /*::, data*/) {\n  var cnt = 1;\n  write_record(ba, 0x026B /* BrtBeginStyles */, write_UInt32LE(cnt));\n  write_record(ba, 0x0030 /* BrtStyle */, write_BrtStyle({\n    xfId: 0,\n    builtinId: 0,\n    name: \"Normal\"\n  }));\n  /* 1*65430(BrtStyle *FRT) */\n  write_record(ba, 0x026C /* BrtEndStyles */);\n}\nfunction write_DXFS_bin(ba /*::, data*/) {\n  var cnt = 0;\n  write_record(ba, 0x01F9 /* BrtBeginDXFs */, write_UInt32LE(cnt));\n  /* *2147483647(BrtDXF *FRT) */\n  write_record(ba, 0x01FA /* BrtEndDXFs */);\n}\nfunction write_TABLESTYLES_bin(ba /*::, data*/) {\n  var cnt = 0;\n  write_record(ba, 0x01FC /* BrtBeginTableStyles */, write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n  /* *TABLESTYLE */\n  write_record(ba, 0x01FD /* BrtEndTableStyles */);\n}\nfunction write_COLORPALETTE_bin( /*::ba, data*/\n) {\n  return;\n  /* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction write_sty_bin(wb, opts) {\n  var ba = buf_array();\n  write_record(ba, 0x0116 /* BrtBeginStyleSheet */);\n  write_FMTS_bin(ba, wb.SSF);\n  write_FONTS_bin(ba, wb);\n  write_FILLS_bin(ba, wb);\n  write_BORDERS_bin(ba, wb);\n  write_CELLSTYLEXFS_bin(ba, wb);\n  write_CELLXFS_bin(ba, opts.cellXfs);\n  write_STYLES_bin(ba, wb);\n  write_DXFS_bin(ba, wb);\n  write_TABLESTYLES_bin(ba, wb);\n  write_COLORPALETTE_bin(ba, wb);\n  /* FRTSTYLESHEET*/\n  write_record(ba, 0x0117 /* BrtEndStyleSheet */);\n  return ba.end();\n}\n/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */\nvar XLSXThemeClrScheme = ['</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>', '</a:accent1>', '</a:accent2>', '</a:accent3>', '</a:accent4>', '</a:accent5>', '</a:accent6>', '</a:hlink>', '</a:folHlink>'];\n/* 20.1.6.2 clrScheme CT_ColorScheme */\nfunction parse_clrScheme(t, themes, opts) {\n  themes.themeElements.clrScheme = [];\n  var color = {};\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (y[0]) {\n      /* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n      case '<a:clrScheme':\n      case '</a:clrScheme>':\n        break;\n\n      /* 20.1.2.3.32 srgbClr CT_SRgbColor */\n      case '<a:srgbClr':\n        color.rgb = y.val;\n        break;\n      case '</a:srgbClr>':\n        break;\n\n      /* 20.1.2.3.33 sysClr CT_SystemColor */\n      case '<a:sysClr':\n        color.rgb = y.lastClr;\n        break;\n      case '</a:sysClr>':\n        break;\n\n      /* 20.1.4.1.1 accent1 (Accent 1) */\n      /* 20.1.4.1.2 accent2 (Accent 2) */\n      /* 20.1.4.1.3 accent3 (Accent 3) */\n      /* 20.1.4.1.4 accent4 (Accent 4) */\n      /* 20.1.4.1.5 accent5 (Accent 5) */\n      /* 20.1.4.1.6 accent6 (Accent 6) */\n      /* 20.1.4.1.9 dk1 (Dark 1) */\n      /* 20.1.4.1.10 dk2 (Dark 2) */\n      /* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n      /* 20.1.4.1.19 hlink (Hyperlink) */\n      /* 20.1.4.1.22 lt1 (Light 1) */\n      /* 20.1.4.1.23 lt2 (Light 2) */\n      case '</a:dk1>':\n      case '</a:lt1>':\n      case '<a:dk1>':\n      case '<a:lt1>':\n      case '<a:dk2>':\n      case '</a:dk2>':\n      case '<a:lt2>':\n      case '</a:lt2>':\n      case '<a:accent1>':\n      case '</a:accent1>':\n      case '<a:accent2>':\n      case '</a:accent2>':\n      case '<a:accent3>':\n      case '</a:accent3>':\n      case '<a:accent4>':\n      case '</a:accent4>':\n      case '<a:accent5>':\n      case '</a:accent5>':\n      case '<a:accent6>':\n      case '</a:accent6>':\n      case '<a:hlink>':\n      case '</a:hlink>':\n      case '<a:folHlink>':\n      case '</a:folHlink>':\n        if (y[0].charAt(1) === '/') {\n          themes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;\n          color = {};\n        } else {\n          color.name = y[0].slice(3, y[0].length - 1);\n        }\n        break;\n      default:\n        if (opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n    }\n  });\n}\n\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\nfunction parse_fontScheme( /*::t, themes, opts*/) {}\n\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\nfunction parse_fmtScheme( /*::t, themes, opts*/) {}\n\n/* 20.1.6.10 themeElements CT_BaseStyles */\nfunction parse_themeElements(data, themes, opts) {\n  themes.themeElements = {};\n  var t;\n\n  /* clrScheme CT_ColorScheme */\n  if (!(t = str_match_xml(data, \"a:clrScheme\"))) throw new Error('clrScheme not found in themeElements');\n  parse_clrScheme(t, themes, opts);\n\n  /* fontScheme CT_FontScheme */\n  if (!(t = str_match_xml(data, \"a:fontScheme\"))) throw new Error('fontScheme not found in themeElements');\n  parse_fontScheme(t, themes, opts);\n\n  /* fmtScheme CT_StyleMatrix */\n  if (!(t = str_match_xml(data, \"a:fmtScheme\"))) throw new Error('fmtScheme not found in themeElements');\n  parse_fmtScheme(t, themes, opts);\n}\n\n/* 14.2.7 Theme Part */\nfunction parse_theme_xml(data /*:string*/, opts) {\n  /* 20.1.6.9 theme CT_OfficeStyleSheet */\n  if (!data || data.length === 0) data = write_theme();\n  var t;\n  var themes = {};\n\n  /* themeElements CT_BaseStyles */\n  if (!(t = str_match_xml(data, \"a:themeElements\"))) throw new Error('themeElements not found in theme');\n  parse_themeElements(t[0], themes, opts);\n  themes.raw = data;\n  return themes;\n}\nfunction write_theme(Themes, opts) /*:string*/{\n  if (opts && opts.themeXLSX) return opts.themeXLSX;\n  if (Themes && typeof Themes.raw == \"string\") return Themes.raw;\n  var o = [XML_HEADER];\n  o[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n  o[o.length] = '<a:themeElements>';\n  o[o.length] = '<a:clrScheme name=\"Office\">';\n  o[o.length] = '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n  o[o.length] = '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n  o[o.length] = '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n  o[o.length] = '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n  o[o.length] = '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n  o[o.length] = '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n  o[o.length] = '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n  o[o.length] = '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n  o[o.length] = '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n  o[o.length] = '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n  o[o.length] = '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n  o[o.length] = '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n  o[o.length] = '</a:clrScheme>';\n  o[o.length] = '<a:fontScheme name=\"Office\">';\n  o[o.length] = '<a:majorFont>';\n  o[o.length] = '<a:latin typeface=\"Cambria\"/>';\n  o[o.length] = '<a:ea typeface=\"\"/>';\n  o[o.length] = '<a:cs typeface=\"\"/>';\n  o[o.length] = '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n  o[o.length] = '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n  o[o.length] = '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n  o[o.length] = '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n  o[o.length] = '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n  o[o.length] = '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n  o[o.length] = '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n  o[o.length] = '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n  o[o.length] = '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n  o[o.length] = '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n  o[o.length] = '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n  o[o.length] = '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n  o[o.length] = '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n  o[o.length] = '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n  o[o.length] = '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n  o[o.length] = '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n  o[o.length] = '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n  o[o.length] = '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n  o[o.length] = '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n  o[o.length] = '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n  o[o.length] = '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n  o[o.length] = '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n  o[o.length] = '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n  o[o.length] = '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n  o[o.length] = '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n  o[o.length] = '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n  o[o.length] = '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n  o[o.length] = '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n  o[o.length] = '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n  o[o.length] = '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n  o[o.length] = '</a:majorFont>';\n  o[o.length] = '<a:minorFont>';\n  o[o.length] = '<a:latin typeface=\"Calibri\"/>';\n  o[o.length] = '<a:ea typeface=\"\"/>';\n  o[o.length] = '<a:cs typeface=\"\"/>';\n  o[o.length] = '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n  o[o.length] = '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n  o[o.length] = '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n  o[o.length] = '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n  o[o.length] = '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n  o[o.length] = '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n  o[o.length] = '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n  o[o.length] = '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n  o[o.length] = '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n  o[o.length] = '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n  o[o.length] = '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n  o[o.length] = '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n  o[o.length] = '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n  o[o.length] = '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n  o[o.length] = '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n  o[o.length] = '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n  o[o.length] = '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n  o[o.length] = '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n  o[o.length] = '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n  o[o.length] = '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n  o[o.length] = '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n  o[o.length] = '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n  o[o.length] = '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n  o[o.length] = '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n  o[o.length] = '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n  o[o.length] = '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n  o[o.length] = '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n  o[o.length] = '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n  o[o.length] = '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n  o[o.length] = '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n  o[o.length] = '</a:minorFont>';\n  o[o.length] = '</a:fontScheme>';\n  o[o.length] = '<a:fmtScheme name=\"Office\">';\n  o[o.length] = '<a:fillStyleLst>';\n  o[o.length] = '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '</a:fillStyleLst>';\n  o[o.length] = '<a:lnStyleLst>';\n  o[o.length] = '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n  o[o.length] = '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n  o[o.length] = '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n  o[o.length] = '</a:lnStyleLst>';\n  o[o.length] = '<a:effectStyleLst>';\n  o[o.length] = '<a:effectStyle>';\n  o[o.length] = '<a:effectLst>';\n  o[o.length] = '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n  o[o.length] = '</a:effectLst>';\n  o[o.length] = '</a:effectStyle>';\n  o[o.length] = '<a:effectStyle>';\n  o[o.length] = '<a:effectLst>';\n  o[o.length] = '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n  o[o.length] = '</a:effectLst>';\n  o[o.length] = '</a:effectStyle>';\n  o[o.length] = '<a:effectStyle>';\n  o[o.length] = '<a:effectLst>';\n  o[o.length] = '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n  o[o.length] = '</a:effectLst>';\n  o[o.length] = '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n  o[o.length] = '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n  o[o.length] = '</a:effectStyle>';\n  o[o.length] = '</a:effectStyleLst>';\n  o[o.length] = '<a:bgFillStyleLst>';\n  o[o.length] = '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '</a:bgFillStyleLst>';\n  o[o.length] = '</a:fmtScheme>';\n  o[o.length] = '</a:themeElements>';\n  o[o.length] = '<a:objectDefaults>';\n  o[o.length] = '<a:spDef>';\n  o[o.length] = '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n  o[o.length] = '</a:spDef>';\n  o[o.length] = '<a:lnDef>';\n  o[o.length] = '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n  o[o.length] = '</a:lnDef>';\n  o[o.length] = '</a:objectDefaults>';\n  o[o.length] = '<a:extraClrSchemeLst/>';\n  o[o.length] = '</a:theme>';\n  return o.join(\"\");\n}\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\nfunction parse_Theme(blob, length, opts) {\n  var end = blob.l + length;\n  var dwThemeVersion = blob.read_shift(4);\n  if (dwThemeVersion === 124226) return;\n  if (!opts.cellStyles) {\n    blob.l = end;\n    return;\n  }\n  var data = blob.slice(blob.l);\n  blob.l = end;\n  var zip;\n  try {\n    zip = zip_read(data, {\n      type: \"array\"\n    });\n  } catch (e) {\n    return;\n  }\n  var themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n  if (!themeXML) return;\n  return parse_theme_xml(themeXML, opts);\n}\n\n/* 2.5.49 */\nfunction parse_ColorTheme(blob /*::, length*/) {\n  return blob.read_shift(4);\n}\n\n/* 2.5.155 */\nfunction parse_FullColorExt(blob /*::, length*/) {\n  var o = {};\n  o.xclrType = blob.read_shift(2);\n  o.nTintShade = blob.read_shift(2);\n  switch (o.xclrType) {\n    case 0:\n      blob.l += 4;\n      break;\n    case 1:\n      o.xclrValue = parse_IcvXF(blob, 4);\n      break;\n    case 2:\n      o.xclrValue = parse_LongRGBA(blob, 4);\n      break;\n    case 3:\n      o.xclrValue = parse_ColorTheme(blob, 4);\n      break;\n    case 4:\n      blob.l += 4;\n      break;\n  }\n  blob.l += 8;\n  return o;\n}\n\n/* 2.5.164 TODO: read 7 bits*/\nfunction parse_IcvXF(blob, length) {\n  return parsenoop(blob, length);\n}\n\n/* 2.5.280 */\nfunction parse_XFExtGradient(blob, length) {\n  return parsenoop(blob, length);\n}\n\n/* [MS-XLS] 2.5.108 */\nfunction parse_ExtProp(blob /*::, length*/) /*:Array<any>*/{\n  var extType = blob.read_shift(2);\n  var cb = blob.read_shift(2) - 4;\n  var o = [extType];\n  switch (extType) {\n    case 0x04:\n    case 0x05:\n    case 0x07:\n    case 0x08:\n    case 0x09:\n    case 0x0A:\n    case 0x0B:\n    case 0x0D:\n      o[1] = parse_FullColorExt(blob, cb);\n      break;\n    case 0x06:\n      o[1] = parse_XFExtGradient(blob, cb);\n      break;\n    case 0x0E:\n    case 0x0F:\n      o[1] = blob.read_shift(cb === 1 ? 1 : 2);\n      break;\n    default:\n      throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n  }\n  return o;\n}\n\n/* 2.4.355 */\nfunction parse_XFExt(blob, length) {\n  var end = blob.l + length;\n  blob.l += 2;\n  var ixfe = blob.read_shift(2);\n  blob.l += 2;\n  var cexts = blob.read_shift(2);\n  var ext /*:AOA*/ = [];\n  while (cexts-- > 0) ext.push(parse_ExtProp(blob, end - blob.l));\n  return {\n    ixfe: ixfe,\n    ext: ext\n  };\n}\n\n/* xf is an XF, see parse_XFExt for xfext */\nfunction update_xfext(xf, xfext) {\n  xfext.forEach(function (xfe) {\n    switch (xfe[0]) {\n      /* 2.5.108 extPropData */\n      case 0x04:\n        break;\n      /* foreground color */\n      case 0x05:\n        break;\n      /* background color */\n      case 0x06:\n        break;\n      /* gradient fill */\n      case 0x07:\n        break;\n      /* top cell border color */\n      case 0x08:\n        break;\n      /* bottom cell border color */\n      case 0x09:\n        break;\n      /* left cell border color */\n      case 0x0a:\n        break;\n      /* right cell border color */\n      case 0x0b:\n        break;\n      /* diagonal cell border color */\n      case 0x0d:\n        /* text color */\n        break;\n      case 0x0e:\n        break;\n      /* font scheme */\n      case 0x0f:\n        break;\n      /* indentation level */\n    }\n  });\n}\nfunction parse_BrtMdtinfo(data, length) {\n  return {\n    flags: data.read_shift(4),\n    version: data.read_shift(4),\n    name: parse_XLWideString(data, length - 8)\n  };\n}\nfunction write_BrtMdtinfo(data) {\n  var o = new_buf(12 + 2 * data.name.length);\n  o.write_shift(4, data.flags);\n  o.write_shift(4, data.version);\n  write_XLWideString(data.name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtMdb(data) {\n  var out = [];\n  var cnt = data.read_shift(4);\n  while (cnt-- > 0) out.push([data.read_shift(4), data.read_shift(4)]);\n  return out;\n}\nfunction write_BrtMdb(mdb) {\n  var o = new_buf(4 + 8 * mdb.length);\n  o.write_shift(4, mdb.length);\n  for (var i = 0; i < mdb.length; ++i) {\n    o.write_shift(4, mdb[i][0]);\n    o.write_shift(4, mdb[i][1]);\n  }\n  return o;\n}\nfunction write_BrtBeginEsfmd(cnt, name) {\n  var o = new_buf(8 + 2 * name.length);\n  o.write_shift(4, cnt);\n  write_XLWideString(name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtBeginEsmdb(data) {\n  data.l += 4;\n  return data.read_shift(4) != 0;\n}\nfunction write_BrtBeginEsmdb(cnt, cm) {\n  var o = new_buf(8);\n  o.write_shift(4, cnt);\n  o.write_shift(4, cm ? 1 : 0);\n  return o;\n}\nfunction parse_xlmeta_bin(data, name, _opts) {\n  var out = {\n    Types: [],\n    Cell: [],\n    Value: []\n  };\n  var opts = _opts || {};\n  var state = [];\n  var pass = false;\n  var metatype = 2;\n  recordhopper(data, function (val, R, RT) {\n    switch (RT) {\n      case 335:\n        out.Types.push({\n          name: val.name\n        });\n        break;\n      case 51:\n        val.forEach(function (r) {\n          if (metatype == 1) out.Cell.push({\n            type: out.Types[r[0] - 1].name,\n            index: r[1]\n          });else if (metatype == 0) out.Value.push({\n            type: out.Types[r[0] - 1].name,\n            index: r[1]\n          });\n        });\n        break;\n      case 337:\n        metatype = val ? 1 : 0;\n        break;\n      case 338:\n        metatype = 2;\n        break;\n      case 35:\n        state.push(RT);\n        pass = true;\n        break;\n      case 36:\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T) {} else if (!pass || opts.WTF && state[state.length - 1] != 35) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_xlmeta_bin() {\n  var ba = buf_array();\n  write_record(ba, 332);\n  write_record(ba, 334, write_UInt32LE(1));\n  write_record(ba, 335, write_BrtMdtinfo({\n    name: \"XLDAPR\",\n    version: 12e4,\n    flags: 3496657072\n  }));\n  write_record(ba, 336);\n  write_record(ba, 339, write_BrtBeginEsfmd(1, \"XLDAPR\"));\n  write_record(ba, 52);\n  write_record(ba, 35, write_UInt32LE(514));\n  write_record(ba, 4096, write_UInt32LE(0));\n  write_record(ba, 4097, writeuint16(1));\n  write_record(ba, 36);\n  write_record(ba, 53);\n  write_record(ba, 340);\n  write_record(ba, 337, write_BrtBeginEsmdb(1, true));\n  write_record(ba, 51, write_BrtMdb([[1, 0]]));\n  write_record(ba, 338);\n  write_record(ba, 333);\n  return ba.end();\n}\nfunction parse_xlmeta_xml(data, name, opts) {\n  var out = {\n    Types: [],\n    Cell: [],\n    Value: []\n  };\n  if (!data) return out;\n  var pass = false;\n  var metatype = 2;\n  var lastmeta;\n  data.replace(tagregex, function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case \"<?xml\":\n        break;\n      case \"<metadata\":\n      case \"</metadata>\":\n        break;\n      case \"<metadataTypes\":\n      case \"</metadataTypes>\":\n        break;\n      case \"<metadataType\":\n        out.Types.push({\n          name: y.name\n        });\n        break;\n      case \"</metadataType>\":\n        break;\n      case \"<futureMetadata\":\n        for (var j = 0; j < out.Types.length; ++j) if (out.Types[j].name == y.name) lastmeta = out.Types[j];\n        break;\n      case \"</futureMetadata>\":\n        break;\n      case \"<bk>\":\n        break;\n      case \"</bk>\":\n        break;\n      case \"<rc\":\n        if (metatype == 1) out.Cell.push({\n          type: out.Types[y.t - 1].name,\n          index: +y.v\n        });else if (metatype == 0) out.Value.push({\n          type: out.Types[y.t - 1].name,\n          index: +y.v\n        });\n        break;\n      case \"</rc>\":\n        break;\n      case \"<cellMetadata\":\n        metatype = 1;\n        break;\n      case \"</cellMetadata>\":\n        metatype = 2;\n        break;\n      case \"<valueMetadata\":\n        metatype = 0;\n        break;\n      case \"</valueMetadata>\":\n        metatype = 2;\n        break;\n      case \"<extLst\":\n      case \"<extLst>\":\n      case \"</extLst>\":\n      case \"<extLst/>\":\n        break;\n      case \"<ext\":\n        pass = true;\n        break;\n      case \"</ext>\":\n        pass = false;\n        break;\n      case \"<rvb\":\n        if (!lastmeta) break;\n        if (!lastmeta.offsets) lastmeta.offsets = [];\n        lastmeta.offsets.push(+y.i);\n        break;\n      default:\n        if (!pass && (opts == null ? void 0 : opts.WTF)) throw new Error(\"unrecognized \" + y[0] + \" in metadata\");\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_xlmeta_xml() {\n  var o = [XML_HEADER];\n  o.push('<metadata xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:xlrd=\"http://schemas.microsoft.com/office/spreadsheetml/2017/richdata\" xmlns:xda=\"http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray\">\\n  <metadataTypes count=\"1\">\\n    <metadataType name=\"XLDAPR\" minSupportedVersion=\"120000\" copy=\"1\" pasteAll=\"1\" pasteValues=\"1\" merge=\"1\" splitFirst=\"1\" rowColShift=\"1\" clearFormats=\"1\" clearComments=\"1\" assign=\"1\" coerce=\"1\" cellMeta=\"1\"/>\\n  </metadataTypes>\\n  <futureMetadata name=\"XLDAPR\" count=\"1\">\\n    <bk>\\n      <extLst>\\n        <ext uri=\"{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}\">\\n          <xda:dynamicArrayProperties fDynamic=\"1\" fCollapsed=\"0\"/>\\n        </ext>\\n      </extLst>\\n    </bk>\\n  </futureMetadata>\\n  <cellMetadata count=\"1\">\\n    <bk>\\n      <rc t=\"1\" v=\"0\"/>\\n    </bk>\\n  </cellMetadata>\\n</metadata>');\n  return o.join(\"\");\n}\n/* 18.6 Calculation Chain */\nfunction parse_cc_xml(data /*::, name, opts*/) /*:Array<any>*/{\n  var d = [];\n  if (!data) return d;\n  var i = 1;\n  (data.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (y[0]) {\n      case '<?xml':\n        break;\n      /* 18.6.2  calcChain CT_CalcChain 1 */\n      case '<calcChain':\n      case '<calcChain>':\n      case '</calcChain>':\n        break;\n      /* 18.6.1  c CT_CalcCell 1 */\n      case '<c':\n        delete y[0];\n        if (y.i) i = y.i;else y.i = i;\n        d.push(y);\n        break;\n    }\n  });\n  return d;\n}\n\n//function write_cc_xml(data, opts) { }\n\n/* [MS-XLSB] 2.6.4.1 */\nfunction parse_BrtCalcChainItem$(data) {\n  var out = {};\n  out.i = data.read_shift(4);\n  var cell = {};\n  cell.r = data.read_shift(4);\n  cell.c = data.read_shift(4);\n  out.r = encode_cell(cell);\n  var flags = data.read_shift(1);\n  if (flags & 0x2) out.l = '1';\n  if (flags & 0x8) out.a = '1';\n  return out;\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_bin(data, name, opts) {\n  var out = [];\n  var pass = false;\n  recordhopper(data, function hopper_cc(val, R, RT) {\n    switch (RT) {\n      case 0x003F:\n        /* 'BrtCalcChainItem$' */\n        out.push(val);\n        break;\n      default:\n        if (R.T) {/* empty */} else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\n\n//function write_cc_bin(data, opts) { }\n/* 18.14 Supplementary Workbook Data */\nfunction parse_xlink_xml( /*::data, rel, name:string, _opts*/\n) {\n  //var opts = _opts || {};\n  //if(opts.WTF) throw \"XLSX External Link\";\n}\n\n/* [MS-XLSB] 2.1.7.25 External Link */\nfunction parse_xlink_bin(data, rel, name /*:string*/, _opts) {\n  if (!data) return data;\n  var opts = _opts || {};\n  var pass = false,\n    end = false;\n  recordhopper(data, function xlink_parse(val, R, RT) {\n    if (end) return;\n    switch (RT) {\n      case 0x0167: /* 'BrtSupTabs' */\n      case 0x016B: /* 'BrtExternTableStart' */\n      case 0x016C: /* 'BrtExternTableEnd' */\n      case 0x016E: /* 'BrtExternRowHdr' */\n      case 0x016F: /* 'BrtExternCellBlank' */\n      case 0x0170: /* 'BrtExternCellReal' */\n      case 0x0171: /* 'BrtExternCellBool' */\n      case 0x0172: /* 'BrtExternCellError' */\n      case 0x0173: /* 'BrtExternCellString' */\n      case 0x01D8: /* 'BrtExternValueMeta' */\n      case 0x0241: /* 'BrtSupNameStart' */\n      case 0x0242: /* 'BrtSupNameValueStart' */\n      case 0x0243: /* 'BrtSupNameValueEnd' */\n      case 0x0244: /* 'BrtSupNameNum' */\n      case 0x0245: /* 'BrtSupNameErr' */\n      case 0x0246: /* 'BrtSupNameSt' */\n      case 0x0247: /* 'BrtSupNameNil' */\n      case 0x0248: /* 'BrtSupNameBool' */\n      case 0x0249: /* 'BrtSupNameFmla' */\n      case 0x024A: /* 'BrtSupNameBits' */\n      case 0x024B:\n        /* 'BrtSupNameEnd' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      default:\n        if (R.T) {/* empty */} else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n}\n/* 20.5 DrawingML - SpreadsheetML Drawing */\n/* 20.5.2.35 wsDr CT_Drawing */\nfunction parse_drawing(data, rels /*:any*/) {\n  if (!data) return \"??\";\n  /*\n    Chartsheet Drawing:\n     - 20.5.2.35 wsDr CT_Drawing\n      - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n       - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n        - 20.1.2.2.16 graphic CT_GraphicalObject\n         - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n           - chart reference\n     the actual type is based on the URI of the graphicData\n  \tTODO: handle embedded charts and other types of graphics\n  */\n  var id = (data.match(/<c:chart [^<>]*r:id=\"([^<>\"]*)\"/) || [\"\", \"\"])[1];\n  return rels['!id'][id].Target;\n}\n\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\nfunction parse_vml(data /*:string*/, sheet, comments) {\n  var cidx = 0;\n  (str_match_xml_ns_g(data, \"shape\") || []).forEach(function (m) {\n    var type = \"\";\n    var hidden = true;\n    var aidx = -1;\n    var R = -1,\n      C = -1;\n    m.replace(tagregex, function (x /*:string*/, idx /*:number*/) {\n      var y = parsexmltag(x);\n      switch (strip_ns(y[0])) {\n        case '<ClientData':\n          if (y.ObjectType) type = y.ObjectType;\n          break;\n        case '<Visible':\n        case '<Visible/>':\n          hidden = false;\n          break;\n        case '<Row':\n        case '<Row>':\n          aidx = idx + x.length;\n          break;\n        case '</Row>':\n          R = +m.slice(aidx, idx).trim();\n          break;\n        case '<Column':\n        case '<Column>':\n          aidx = idx + x.length;\n          break;\n        case '</Column>':\n          C = +m.slice(aidx, idx).trim();\n          break;\n      }\n      return \"\";\n    });\n    switch (type) {\n      case 'Note':\n        var cell = ws_get_cell_stub(sheet, R >= 0 && C >= 0 ? encode_cell({\n          r: R,\n          c: C\n        }) : comments[cidx].ref);\n        if (cell.c) {\n          cell.c.hidden = hidden;\n        }\n        ++cidx;\n        break;\n    }\n  });\n}\n\n/* comment boxes */\nfunction write_vml(rId /*:number*/, comments, ws) {\n  var csize = [21600, 21600];\n  /* L.5.2.1.2 Path Attribute */\n  var bbox = [\"m0,0l0\", csize[1], csize[0], csize[1], csize[0], \"0xe\"].join(\",\");\n  var o = [writextag(\"xml\", null, {\n    'xmlns:v': XLMLNS.v,\n    'xmlns:o': XLMLNS.o,\n    'xmlns:x': XLMLNS.x,\n    'xmlns:mv': XLMLNS.mv\n  }).replace(/\\/>/, \">\"), writextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {\n    'v:ext': \"edit\",\n    'data': rId\n  }), {\n    'v:ext': \"edit\"\n  })];\n  var _shapeid = 65536 * rId;\n  var _comments = comments || [];\n  if (_comments.length > 0) o.push(writextag(\"v:shapetype\", [writextag(\"v:stroke\", null, {\n    joinstyle: \"miter\"\n  }), writextag(\"v:path\", null, {\n    gradientshapeok: \"t\",\n    'o:connecttype': \"rect\"\n  })].join(\"\"), {\n    id: \"_x0000_t202\",\n    coordsize: csize.join(\",\"),\n    'o:spt': 202,\n    path: bbox\n  }));\n  _comments.forEach(function (x) {\n    ++_shapeid;\n    o.push(write_vml_comment(x, _shapeid));\n  });\n  o.push('</xml>');\n  return o.join(\"\");\n}\nfunction write_vml_comment(x, _shapeid, ws) /*:string*/{\n  var c = decode_cell(x[0]);\n  var fillopts = /*::(*/{\n    'color2': \"#BEFF82\",\n    'type': \"gradient\"\n  } /*:: :any)*/;\n  if (fillopts.type == \"gradient\") fillopts.angle = \"-180\";\n  var fillparm = fillopts.type == \"gradient\" ? writextag(\"o:fill\", null, {\n    type: \"gradientUnscaled\",\n    'v:ext': \"view\"\n  }) : null;\n  var fillxml = writextag('v:fill', fillparm, fillopts);\n  var shadata = {\n    on: \"t\",\n    'obscured': \"t\"\n  } /*:any*/;\n  return ['<v:shape' + wxt_helper({\n    id: '_x0000_s' + _shapeid,\n    type: \"#_x0000_t202\",\n    style: \"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\"),\n    fillcolor: \"#ECFAD4\",\n    strokecolor: \"#edeaa1\"\n  }) + '>', fillxml, writextag(\"v:shadow\", null, shadata), writextag(\"v:path\", null, {\n    'o:connecttype': \"none\"\n  }), '<v:textbox><div style=\"text-align:left\"></div></v:textbox>', '<x:ClientData ObjectType=\"Note\">', '<x:MoveWithCells/>', '<x:SizeWithCells/>', /* Part 4 19.4.2.3 Anchor (Anchor) */\n  writetag('x:Anchor', [c.c + 1, 0, c.r + 1, 0, c.c + 3, 20, c.r + 5, 20].join(\",\")), writetag('x:AutoFill', \"False\"), writetag('x:Row', String(c.r)), writetag('x:Column', String(c.c)), x[1].hidden ? '' : '<x:Visible/>', '</x:ClientData>', '</v:shape>'].join(\"\");\n}\nfunction sheet_insert_comments(sheet /*:WorkSheet*/, comments /*:Array<RawComment>*/, threaded /*:boolean*/, people /*:?Array<any>*/) {\n  var dense = sheet[\"!data\"] != null;\n  var cell /*:Cell*/;\n  comments.forEach(function (comment) {\n    var r = decode_cell(comment.ref);\n    if (r.r < 0 || r.c < 0) return;\n    if (dense) {\n      if (!sheet[\"!data\"][r.r]) sheet[\"!data\"][r.r] = [];\n      cell = sheet[\"!data\"][r.r][r.c];\n    } else cell = sheet[comment.ref];\n    if (!cell) {\n      cell = {\n        t: \"z\"\n      } /*:any*/;\n      if (dense) sheet[\"!data\"][r.r][r.c] = cell;else sheet[comment.ref] = cell;\n      var range = safe_decode_range(sheet[\"!ref\"] || \"BDWGO1000001:A1\");\n      if (range.s.r > r.r) range.s.r = r.r;\n      if (range.e.r < r.r) range.e.r = r.r;\n      if (range.s.c > r.c) range.s.c = r.c;\n      if (range.e.c < r.c) range.e.c = r.c;\n      var encoded = encode_range(range);\n      sheet[\"!ref\"] = encoded;\n    }\n    if (!cell.c) cell.c = [];\n    var o /*:Comment*/ = {\n      a: comment.author,\n      t: comment.t,\n      r: comment.r,\n      T: threaded\n    };\n    if (comment.h) o.h = comment.h;\n\n    /* threaded comments always override */\n    for (var i = cell.c.length - 1; i >= 0; --i) {\n      if (!threaded && cell.c[i].T) return;\n      if (threaded && !cell.c[i].T) cell.c.splice(i, 1);\n    }\n    if (threaded && people) for (i = 0; i < people.length; ++i) {\n      if (o.a == people[i].id) {\n        o.a = people[i].name || o.a;\n        break;\n      }\n    }\n    cell.c.push(o);\n  });\n}\n/* 18.7 Comments */\nfunction parse_comments_xml(data /*:string*/, opts) /*:Array<RawComment>*/{\n  /* 18.7.6 CT_Comments */\n  if (data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n  var authors /*:Array<string>*/ = [];\n  var commentList /*:Array<RawComment>*/ = [];\n  var authtag = str_match_xml_ns(data, \"authors\");\n  if (authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function (x) {\n    if (x === \"\" || x.trim() === \"\") return;\n    var a = x.match(/<(?:\\w+:)?author[^<>]*>(.*)/);\n    if (a) authors.push(a[1]);\n  });\n  var cmnttag = str_match_xml_ns(data, \"commentList\");\n  if (cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function (x) {\n    if (x === \"\" || x.trim() === \"\") return;\n    var cm = x.match(/<(?:\\w+:)?comment[^<>]*>/);\n    if (!cm) return;\n    var y = parsexmltag(cm[0]);\n    var comment /*:RawComment*/ = {\n      author: y.authorId && authors[y.authorId] || \"sheetjsghost\",\n      ref: y.ref,\n      guid: y.guid\n    } /*:any*/;\n    var cell = decode_cell(y.ref);\n    if (opts.sheetRows && opts.sheetRows <= cell.r) return;\n    var textMatch = str_match_xml_ns(x, \"text\");\n    var rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {\n      r: \"\",\n      t: \"\",\n      h: \"\"\n    };\n    comment.r = rt.r;\n    if (rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n    comment.t = (rt.t || \"\").replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n    if (opts.cellHTML) comment.h = rt.h;\n    commentList.push(comment);\n  });\n  return commentList;\n}\nfunction write_comments_xml(data /*::, opts*/) {\n  var o = [XML_HEADER, writextag('comments', null, {\n    'xmlns': XMLNS_main[0]\n  })];\n  var iauthor /*:Array<string>*/ = [];\n  o.push(\"<authors>\");\n  data.forEach(function (x) {\n    x[1].forEach(function (w) {\n      var a = escapexml(w.a);\n      if (iauthor.indexOf(a) == -1) {\n        iauthor.push(a);\n        o.push(\"<author>\" + a + \"</author>\");\n      }\n      if (w.T && w.ID && iauthor.indexOf(\"tc=\" + w.ID) == -1) {\n        iauthor.push(\"tc=\" + w.ID);\n        o.push(\"<author>\" + \"tc=\" + w.ID + \"</author>\");\n      }\n    });\n  });\n  if (iauthor.length == 0) {\n    iauthor.push(\"SheetJ5\");\n    o.push(\"<author>SheetJ5</author>\");\n  }\n  o.push(\"</authors>\");\n  o.push(\"<commentList>\");\n  data.forEach(function (d) {\n    /* 18.7.3 CT_Comment */\n    var lastauthor = 0,\n      ts = [],\n      tcnt = 0;\n    if (d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);\n    d[1].forEach(function (c) {\n      if (c.a) lastauthor = iauthor.indexOf(escapexml(c.a));\n      if (c.T) ++tcnt;\n      ts.push(c.t == null ? \"\" : escapexml(c.t));\n    });\n    if (tcnt === 0) {\n      d[1].forEach(function (c) {\n        o.push('<comment ref=\"' + d[0] + '\" authorId=\"' + iauthor.indexOf(escapexml(c.a)) + '\"><text>');\n        o.push(writetag(\"t\", c.t == null ? \"\" : escapexml(c.t)));\n        o.push('</text></comment>');\n      });\n    } else {\n      if (d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);\n      /* based on Threaded Comments -> Comments projection */\n      o.push('<comment ref=\"' + d[0] + '\" authorId=\"' + lastauthor + '\"><text>');\n      var t = \"Comment:\\n    \" + ts[0] + \"\\n\";\n      for (var i = 1; i < ts.length; ++i) t += \"Reply:\\n    \" + ts[i] + \"\\n\";\n      o.push(writetag(\"t\", escapexml(t)));\n      o.push('</text></comment>');\n    }\n  });\n  o.push(\"</commentList>\");\n  if (o.length > 2) {\n    o[o.length] = '</comments>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.17 */\nfunction parse_tcmnt_xml(data /*:string*/, opts) /*:Array<RawComment>*/{\n  var out = [];\n  var pass = false,\n    comment = {},\n    tidx = 0;\n  data.replace(tagregex, function xml_tcmnt(x, idx) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n\n      /* 2.6.207 ThreadedComments CT_ThreadedComments */\n      case '<ThreadedComments':\n        break;\n      case '</ThreadedComments>':\n        break;\n\n      /* 2.6.205 threadedComment CT_ThreadedComment */\n      case '<threadedComment':\n        comment = {\n          author: y.personId,\n          guid: y.id,\n          ref: y.ref,\n          T: 1\n        };\n        break;\n      case '</threadedComment>':\n        if (comment.t != null) out.push(comment);\n        break;\n      case '<text>':\n      case '<text':\n        tidx = idx + x.length;\n        break;\n      case '</text>':\n        comment.t = data.slice(tidx, idx).replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n        break;\n\n      /* 2.6.206 mentions CT_ThreadedCommentMentions TODO */\n      case '<mentions':\n      case '<mentions>':\n        pass = true;\n        break;\n      case '</mentions>':\n        pass = false;\n        break;\n\n      /* 2.6.202 mention CT_Mention TODO */\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n      case '<extLst/>':\n        break;\n      /* 18.2.7  ext CT_Extension + */\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_tcmnt_xml(comments, people, opts) {\n  var o = [XML_HEADER, writextag('ThreadedComments', null, {\n    'xmlns': XMLNS.TCMNT\n  }).replace(/[\\/]>/, \">\")];\n  comments.forEach(function (carr) {\n    var rootid = \"\";\n    (carr[1] || []).forEach(function (c, idx) {\n      if (!c.T) {\n        delete c.ID;\n        return;\n      }\n      if (c.a && people.indexOf(c.a) == -1) people.push(c.a);\n      var tcopts = {\n        ref: carr[0],\n        id: \"{54EE7951-7262-4200-6969-\" + (\"000000000000\" + opts.tcid++).slice(-12) + \"}\"\n      };\n      if (idx == 0) rootid = tcopts.id;else tcopts.parentId = rootid;\n      c.ID = tcopts.id;\n      if (c.a) tcopts.personId = \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + people.indexOf(c.a)).slice(-12) + \"}\";\n      o.push(writextag('threadedComment', writetag('text', c.t || \"\"), tcopts));\n    });\n  });\n  o.push('</ThreadedComments>');\n  return o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.18 */\nfunction parse_people_xml(data /*:string*/, opts) {\n  var out = [];\n  var pass = false;\n  data.replace(tagregex, function xml_tcmnt(x) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n\n      /* 2.4.85 personList CT_PersonList */\n      case '<personList':\n        break;\n      case '</personList>':\n        break;\n\n      /* 2.6.203 person CT_Person TODO: providers */\n      case '<person':\n        out.push({\n          name: y.displayname,\n          id: y.id\n        });\n        break;\n      case '</person>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n      case '<extLst/>':\n        break;\n      /* 18.2.7  ext CT_Extension + */\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_people_xml(people /*, opts*/) {\n  var o = [XML_HEADER, writextag('personList', null, {\n    'xmlns': XMLNS.TCMNT,\n    'xmlns:x': XMLNS_main[0]\n  }).replace(/[\\/]>/, \">\")];\n  people.forEach(function (person, idx) {\n    o.push(writextag('person', null, {\n      displayName: person,\n      id: \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + idx).slice(-12) + \"}\",\n      userId: person,\n      providerId: \"None\"\n    }));\n  });\n  o.push(\"</personList>\");\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\nfunction parse_BrtBeginComment(data) {\n  var out = {};\n  out.iauthor = data.read_shift(4);\n  var rfx = parse_UncheckedRfX(data, 16);\n  out.rfx = rfx.s;\n  out.ref = encode_cell(rfx.s);\n  data.l += 16; /*var guid = parse_GUID(data); */\n  return out;\n}\nfunction write_BrtBeginComment(data, o) {\n  if (o == null) o = new_buf(36);\n  o.write_shift(4, data[1].iauthor);\n  write_UncheckedRfX(data[0] /*:any*/, o);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\nvar parse_BrtCommentAuthor = parse_XLWideString;\nfunction write_BrtCommentAuthor(data) {\n  return write_XLWideString(data.slice(0, 54));\n}\n\n/* [MS-XLSB] 2.1.7.8 Comments */\nfunction parse_comments_bin(data, opts) /*:Array<RawComment>*/{\n  var out /*:Array<RawComment>*/ = [];\n  var authors /*:Array<string>*/ = [];\n  var c = {};\n  var pass = false;\n  recordhopper(data, function hopper_cmnt(val, R, RT) {\n    switch (RT) {\n      case 0x0278:\n        /* 'BrtCommentAuthor' */\n        authors.push(val);\n        break;\n      case 0x027B:\n        /* 'BrtBeginComment' */\n        c = val;\n        break;\n      case 0x027D:\n        /* 'BrtCommentText' */\n        c.t = val.t;\n        c.h = val.h;\n        c.r = val.r;\n        break;\n      case 0x027C:\n        /* 'BrtEndComment' */\n        c.author = authors[c.iauthor];\n        delete c /*:any*/.iauthor;\n        if (opts.sheetRows && c.rfx && opts.sheetRows <= c.rfx.r) break;\n        if (!c.t) c.t = \"\";\n        delete c.rfx;\n        out.push(c);\n        break;\n      case 0x0C00:\n        /* 'BrtUid' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */break;\n      case 0x0026:\n        /* 'BrtACEnd' */break;\n      default:\n        if (R.T) {/* empty */} else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_comments_bin(data /*::, opts*/) {\n  var ba = buf_array();\n  var iauthor /*:Array<string>*/ = [];\n  write_record(ba, 0x0274 /* BrtBeginComments */);\n  write_record(ba, 0x0276 /* BrtBeginCommentAuthors */);\n  data.forEach(function (comment) {\n    comment[1].forEach(function (c) {\n      if (iauthor.indexOf(c.a) > -1) return;\n      iauthor.push(c.a.slice(0, 54));\n      write_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(c.a));\n      if (c.T && c.ID && iauthor.indexOf(\"tc=\" + c.ID) == -1) {\n        iauthor.push(\"tc=\" + c.ID);\n        write_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(\"tc=\" + c.ID));\n      }\n    });\n  });\n  write_record(ba, 0x0277 /* BrtEndCommentAuthors */);\n  write_record(ba, 0x0279 /* BrtBeginCommentList */);\n  data.forEach(function (comment) {\n    comment[1].forEach(function (c) {\n      var _ia = -1;\n      if (c.ID) _ia = iauthor.indexOf(\"tc=\" + c.ID);\n      if (_ia == -1 && comment[1][0].T && comment[1][0].ID) _ia = iauthor.indexOf(\"tc=\" + comment[1][0].ID);\n      if (_ia == -1) _ia = iauthor.indexOf(c.a);\n      c.iauthor = _ia;\n      var range = {\n        s: decode_cell(comment[0]),\n        e: decode_cell(comment[0])\n      };\n      write_record(ba, 0x027B /* BrtBeginComment */, write_BrtBeginComment([range, c]));\n      if (c.t && c.t.length > 0) write_record(ba, 0x027D /* BrtCommentText */, write_BrtCommentText(c));\n      write_record(ba, 0x027C /* BrtEndComment */);\n      delete c.iauthor;\n    });\n  });\n  write_record(ba, 0x027A /* BrtEndCommentList */);\n  write_record(ba, 0x0275 /* BrtEndComments */);\n  return ba.end();\n}\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\nfunction make_vba_xls(cfb) {\n  var newcfb = CFB.utils.cfb_new({\n    root: \"R\"\n  });\n  cfb.FullPaths.forEach(function (p, i) {\n    if (p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/)) return;\n    var newpath = p.replace(/^[^\\/]*/, \"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n  });\n  return CFB.write(newcfb);\n}\nfunction fill_vba_xls(cfb, vba) {\n  vba.FullPaths.forEach(function (p, i) {\n    if (i == 0) return;\n    var newpath = p.replace(/^[\\/]*[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n    if (newpath.slice(-1) !== \"/\") CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n  });\n}\nvar VBAFMTS = [\"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\"];\n/* macro and dialog sheet stubs */\nfunction parse_ds_bin( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'dialog'\n  };\n}\nfunction parse_ds_xml( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'dialog'\n  };\n}\nfunction parse_ms_bin( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'macro'\n  };\n}\nfunction parse_ms_xml( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'macro'\n  };\n}\n/* TODO: it will be useful to parse the function str */\nvar rc_to_a1 = /*#__PURE__*/function () {\n  var rcregex = /(^|[^A-Za-z_])R(\\[?-?\\d+\\]|[1-9]\\d*|)C(\\[?-?\\d+\\]|[1-9]\\d*|)(?![A-Za-z0-9_])/g;\n  var rcbase /*:Cell*/ = {\n    r: 0,\n    c: 0\n  } /*:any*/;\n  function rcfunc($$, $1, $2, $3) {\n    var cRel = false,\n      rRel = false;\n    if ($2.length == 0) rRel = true;else if ($2.charAt(0) == \"[\") {\n      rRel = true;\n      $2 = $2.slice(1, -1);\n    }\n    if ($3.length == 0) cRel = true;else if ($3.charAt(0) == \"[\") {\n      cRel = true;\n      $3 = $3.slice(1, -1);\n    }\n    var R = $2.length > 0 ? parseInt($2, 10) | 0 : 0,\n      C = $3.length > 0 ? parseInt($3, 10) | 0 : 0;\n    if (cRel) C += rcbase.c;else --C;\n    if (rRel) R += rcbase.r;else --R;\n    return $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n  }\n  return function rc_to_a1(fstr /*:string*/, base /*:Cell*/) /*:string*/{\n    rcbase = base;\n    return fstr.replace(rcregex, rcfunc);\n  };\n}();\nvar crefregex = /(^|[^._A-Z0-9])(\\$?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])(\\$?)(\\d{1,7})(?![_.\\(A-Za-z0-9])/g;\ntry {\n  crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})(?![_.\\(A-Za-z0-9])/g;\n} catch (e) {}\nvar a1_to_rc = /*#__PURE__*/function () {\n  return function a1_to_rc(fstr /*:string*/, base /*:CellAddress*/) {\n    return fstr.replace(crefregex, function ($0, $1, $2, $3, $4, $5) {\n      var c = decode_col($3) - ($2 ? 0 : base.c);\n      var r = decode_row($5) - ($4 ? 0 : base.r);\n      var R = $4 == \"$\" ? r + 1 : r == 0 ? \"\" : \"[\" + r + \"]\";\n      var C = $2 == \"$\" ? c + 1 : c == 0 ? \"\" : \"[\" + c + \"]\";\n      return $1 + \"R\" + R + \"C\" + C;\n    });\n  };\n}();\n\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\nfunction shift_formula_str(f /*:string*/, delta /*:Cell*/) /*:string*/{\n  return f.replace(crefregex, function ($0, $1, $2, $3, $4, $5) {\n    return $1 + ($2 == \"$\" ? $2 + $3 : encode_col(decode_col($3) + delta.c)) + ($4 == \"$\" ? $4 + $5 : encode_row(decode_row($5) + delta.r));\n  });\n}\nfunction shift_formula_xlsx(f /*:string*/, range /*:string*/, cell /*:string*/) /*:string*/{\n  var r = decode_range(range),\n    s = r.s,\n    c = decode_cell(cell);\n  var delta = {\n    r: c.r - s.r,\n    c: c.c - s.c\n  };\n  return shift_formula_str(f, delta);\n}\n\n/* TODO: parse formula */\nfunction fuzzyfmla(f /*:string*/) /*:boolean*/{\n  if (f.length == 1) return false;\n  return true;\n}\nfunction _xlfn(f /*:string*/) /*:string*/{\n  return f.replace(/_xlfn\\./g, \"\");\n}\nfunction parseread1(blob) {\n  blob.l += 1;\n  return;\n}\n\n/* [MS-XLS] 2.5.51 */\nfunction parse_ColRelU(blob, length) {\n  var c = blob.read_shift(length == 1 ? 1 : 2);\n  return [c & 0x3FFF, c >> 14 & 1, c >> 15 & 1];\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\nfunction parse_RgceArea(blob, length, opts) {\n  var w = 2;\n  if (opts) {\n    if (opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);else if (opts.biff == 12) w = 4;\n  }\n  var r = blob.read_shift(w),\n    R = blob.read_shift(w);\n  var c = parse_ColRelU(blob, 2);\n  var C = parse_ColRelU(blob, 2);\n  return {\n    s: {\n      r: r,\n      c: c[0],\n      cRel: c[1],\n      rRel: c[2]\n    },\n    e: {\n      r: R,\n      c: C[0],\n      cRel: C[1],\n      rRel: C[2]\n    }\n  };\n}\n/* BIFF 2-5 encodes flags in the row field */\nfunction parse_RgceArea_BIFF2(blob /*::, length, opts*/) {\n  var r = parse_ColRelU(blob, 2),\n    R = parse_ColRelU(blob, 2);\n  var c = blob.read_shift(1);\n  var C = blob.read_shift(1);\n  return {\n    s: {\n      r: r[0],\n      c: c,\n      cRel: r[1],\n      rRel: r[2]\n    },\n    e: {\n      r: R[0],\n      c: C,\n      cRel: R[1],\n      rRel: R[2]\n    }\n  };\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\nfunction parse_RgceAreaRel(blob, length, opts) {\n  if (opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\n  var r = blob.read_shift(opts.biff == 12 ? 4 : 2),\n    R = blob.read_shift(opts.biff == 12 ? 4 : 2);\n  var c = parse_ColRelU(blob, 2);\n  var C = parse_ColRelU(blob, 2);\n  return {\n    s: {\n      r: r,\n      c: c[0],\n      cRel: c[1],\n      rRel: c[2]\n    },\n    e: {\n      r: R,\n      c: C[0],\n      cRel: C[1],\n      rRel: C[2]\n    }\n  };\n}\n\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\nfunction parse_RgceLoc(blob, length, opts) {\n  if (opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\n  var r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n  var c = parse_ColRelU(blob, 2);\n  return {\n    r: r,\n    c: c[0],\n    cRel: c[1],\n    rRel: c[2]\n  };\n}\nfunction parse_RgceLoc_BIFF2(blob /*::, length, opts*/) {\n  var r = parse_ColRelU(blob, 2);\n  var c = blob.read_shift(1);\n  return {\n    r: r[0],\n    c: c,\n    cRel: r[1],\n    rRel: r[2]\n  };\n}\n\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\nfunction parse_RgceElfLoc(blob /*::, length, opts*/) {\n  var r = blob.read_shift(2);\n  var c = blob.read_shift(2);\n  return {\n    r: r,\n    c: c & 0xFF,\n    fQuoted: !!(c & 0x4000),\n    cRel: c >> 15,\n    rRel: c >> 15\n  };\n}\n\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\nfunction parse_RgceLocRel(blob, length, opts) {\n  var biff = opts && opts.biff ? opts.biff : 8;\n  if (biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\n  var r = blob.read_shift(biff >= 12 ? 4 : 2);\n  var cl = blob.read_shift(2);\n  var cRel = (cl & 0x4000) >> 14,\n    rRel = (cl & 0x8000) >> 15;\n  cl &= 0x3FFF;\n  if (rRel == 1) while (r > 0x7FFFF) r -= 0x100000;\n  if (cRel == 1) while (cl > 0x1FFF) cl = cl - 0x4000;\n  return {\n    r: r,\n    c: cl,\n    cRel: cRel,\n    rRel: rRel\n  };\n}\nfunction parse_RgceLocRel_BIFF2(blob /*::, length:number, opts*/) {\n  var rl = blob.read_shift(2);\n  var c = blob.read_shift(1);\n  var rRel = (rl & 0x8000) >> 15,\n    cRel = (rl & 0x4000) >> 14;\n  rl &= 0x3FFF;\n  if (rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n  if (cRel == 1 && c >= 0x80) c = c - 0x100;\n  return {\n    r: rl,\n    c: c,\n    cRel: cRel,\n    rRel: rRel\n  };\n}\n\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\nfunction parse_PtgArea(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n  return [type, area];\n}\n\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\nfunction parse_PtgArea3d(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var ixti = blob.read_shift(2, 'i');\n  var w = 8;\n  if (opts) switch (opts.biff) {\n    case 5:\n      blob.l += 12;\n      w = 6;\n      break;\n    case 12:\n      w = 12;\n      break;\n  }\n  var area = parse_RgceArea(blob, w, opts);\n  return [type, ixti, area];\n}\n\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\nfunction parse_PtgAreaErr(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  blob.l += opts && opts.biff > 8 ? 12 : opts.biff < 8 ? 6 : 8;\n  return [type];\n}\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\nfunction parse_PtgAreaErr3d(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var ixti = blob.read_shift(2);\n  var w = 8;\n  if (opts) switch (opts.biff) {\n    case 5:\n      blob.l += 12;\n      w = 6;\n      break;\n    case 12:\n      w = 12;\n      break;\n  }\n  blob.l += w;\n  return [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\nfunction parse_PtgAreaN(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var area = parse_RgceAreaRel(blob, length - 1, opts);\n  return [type, area];\n}\n\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\nfunction parse_PtgArray(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  blob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n  return [type];\n}\n\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\nfunction parse_PtgAttrBaxcel(blob) {\n  var bitSemi = blob[blob.l + 1] & 0x01; /* 1 = volatile */\n  var bitBaxcel = 1;\n  blob.l += 4;\n  return [bitSemi, bitBaxcel];\n}\n\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\nfunction parse_PtgAttrChoose(blob, length, opts) /*:Array<number>*/{\n  blob.l += 2;\n  var offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  var o /*:Array<number>*/ = [];\n  /* offset is 1 less than the number of elements */\n  for (var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n  return o;\n}\n\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\nfunction parse_PtgAttrGoto(blob, length, opts) {\n  var bitGoto = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += 2;\n  return [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\nfunction parse_PtgAttrIf(blob, length, opts) {\n  var bitIf = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += 2;\n  return [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLSB] 2.5.97.28 */\nfunction parse_PtgAttrIfError(blob) {\n  var bitIf = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += 2;\n  return [bitIf, blob.read_shift(2)];\n}\n\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\nfunction parse_PtgAttrSemi(blob, length, opts) {\n  var bitSemi = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += opts && opts.biff == 2 ? 3 : 4;\n  return [bitSemi];\n}\n\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\nfunction parse_PtgAttrSpaceType(blob /*::, length*/) {\n  var type = blob.read_shift(1),\n    cch = blob.read_shift(1);\n  return [type, cch];\n}\n\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\nfunction parse_PtgAttrSpace(blob) {\n  blob.read_shift(2);\n  return parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\nfunction parse_PtgAttrSpaceSemi(blob) {\n  blob.read_shift(2);\n  return parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\nfunction parse_PtgRef(blob, length, opts) {\n  //var ptg = blob[blob.l] & 0x1F;\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var loc = parse_RgceLoc(blob, 0, opts);\n  return [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\nfunction parse_PtgRefN(blob, length, opts) {\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var loc = parse_RgceLocRel(blob, 0, opts);\n  return [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\nfunction parse_PtgRef3d(blob, length, opts) {\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var ixti = blob.read_shift(2); // XtiIndex\n  if (opts && opts.biff == 5) blob.l += 12;\n  var loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n  return [type, ixti, loc];\n}\n\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\nfunction parse_PtgFunc(blob, length, opts) {\n  //var ptg = blob[blob.l] & 0x1F;\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n  return [FtabArgc[iftab], Ftab[iftab], type];\n}\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\nfunction parse_PtgFuncVar(blob, length, opts) {\n  var type = blob[blob.l++];\n  var cparams = blob.read_shift(1),\n    tab = opts && opts.biff <= 3 ? [type == 0x58 ? -1 : 0, blob.read_shift(1)] : parsetab(blob);\n  return [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n}\nfunction parsetab(blob) {\n  return [blob[blob.l + 1] >> 7, blob.read_shift(2) & 0x7FFF];\n}\n\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\nfunction parse_PtgAttrSum(blob, length, opts) {\n  blob.l += opts && opts.biff == 2 ? 3 : 4;\n  return;\n}\n\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\nfunction parse_PtgExp(blob, length, opts) {\n  blob.l++;\n  if (opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n  var row = blob.read_shift(2);\n  var col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  return [row, col];\n}\n\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\nfunction parse_PtgErr(blob) {\n  blob.l++;\n  return BErr[blob.read_shift(1)];\n}\n\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\nfunction parse_PtgInt(blob) {\n  blob.l++;\n  return blob.read_shift(2);\n}\n\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\nfunction parse_PtgBool(blob) {\n  blob.l++;\n  return blob.read_shift(1) !== 0;\n}\n\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\nfunction parse_PtgNum(blob) {\n  blob.l++;\n  return parse_Xnum(blob, 8);\n}\n\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\nfunction parse_PtgStr(blob, length, opts) {\n  blob.l++;\n  return parse_ShortXLUnicodeString(blob, length - 1, opts);\n}\n\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\nfunction parse_SerAr(blob, biff /*:number*/) {\n  var val = [blob.read_shift(1)];\n  if (biff == 12) switch (val[0]) {\n    case 0x02:\n      val[0] = 0x04;\n      break;\n    /* SerBool */\n    case 0x04:\n      val[0] = 0x10;\n      break;\n    /* SerErr */\n    case 0x00:\n      val[0] = 0x01;\n      break;\n    /* SerNum */\n    case 0x01:\n      val[0] = 0x02;\n      break;\n    /* SerStr */\n  }\n  switch (val[0]) {\n    case 0x04:\n      /* SerBool -- boolean */\n      val[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n      if (biff != 12) blob.l += 7;\n      break;\n    case 0x25: /* appears to be an alias */\n    case 0x10:\n      /* SerErr -- error */\n      val[1] = BErr[blob[blob.l]];\n      blob.l += biff == 12 ? 4 : 8;\n      break;\n    case 0x00:\n      /* SerNil -- honestly, I'm not sure how to reproduce this */\n      blob.l += 8;\n      break;\n    case 0x01:\n      /* SerNum -- Xnum */\n      val[1] = parse_Xnum(blob, 8);\n      break;\n    case 0x02:\n      /* SerStr -- XLUnicodeString (<256 chars) */\n      val[1] = parse_XLUnicodeString2(blob, 0, {\n        biff: biff > 0 && biff < 8 ? 2 : biff\n      });\n      break;\n    default:\n      throw new Error(\"Bad SerAr: \" + val[0]);\n    /* Unreachable */\n  }\n  return val;\n}\n\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\nfunction parse_PtgExtraMem(blob, cce, opts) {\n  var count = blob.read_shift(opts.biff == 12 ? 4 : 2);\n  var out /*:Array<Range>*/ = [];\n  for (var i = 0; i != count; ++i) out.push((opts.biff == 12 ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\n  return out;\n}\n\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\nfunction parse_PtgExtraArray(blob, length, opts) {\n  var rows = 0,\n    cols = 0;\n  if (opts.biff == 12) {\n    rows = blob.read_shift(4); // DRw\n    cols = blob.read_shift(4); // DCol\n  } else {\n    cols = 1 + blob.read_shift(1); //DColByteU\n    rows = 1 + blob.read_shift(2); //DRw\n  }\n  if (opts.biff >= 2 && opts.biff < 8) {\n    --rows;\n    if (--cols == 0) cols = 0x100;\n  }\n  // $FlowIgnore\n  for (var i = 0, o /*:Array<Array<any>>*/ = []; i != rows && (o[i] = []); ++i) for (var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n  return o;\n}\n\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\nfunction parse_PtgName(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var w = !opts || opts.biff >= 8 ? 4 : 2;\n  var nameindex = blob.read_shift(w);\n  switch (opts.biff) {\n    case 2:\n      blob.l += 5;\n      break;\n    case 3:\n    case 4:\n      blob.l += 8;\n      break;\n    case 5:\n      blob.l += 12;\n      break;\n  }\n  return [type, 0, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\nfunction parse_PtgNameX(blob, length, opts) {\n  if (opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var ixti = blob.read_shift(2); // XtiIndex\n  var nameindex = blob.read_shift(4);\n  return [type, ixti, nameindex];\n}\nfunction parse_PtgNameX_BIFF5(blob /*::, length, opts*/) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var ixti = blob.read_shift(2, 'i'); // XtiIndex\n  blob.l += 8;\n  var nameindex = blob.read_shift(2);\n  blob.l += 12;\n  return [type, ixti, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\nfunction parse_PtgMemArea(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  blob.l += opts && opts.biff == 2 ? 3 : 4;\n  var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  return [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\nfunction parse_PtgMemFunc(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  return [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\nfunction parse_PtgRefErr(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  blob.l += 4;\n  if (opts.biff < 8) blob.l--;\n  if (opts.biff == 12) blob.l += 2;\n  return [type];\n}\n\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\nfunction parse_PtgRefErr3d(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var ixti = blob.read_shift(2);\n  var w = 4;\n  if (opts) switch (opts.biff) {\n    case 5:\n      w = 15;\n      break;\n    case 12:\n      w = 6;\n      break;\n  }\n  blob.l += w;\n  return [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\nvar parse_PtgMemErr = parsenoop;\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\nvar parse_PtgMemNoMem = parsenoop;\n/* [MS-XLS] 2.5.198.92 */\nvar parse_PtgTbl = parsenoop;\nfunction parse_PtgElfLoc(blob, length, opts) {\n  blob.l += 2;\n  return [parse_RgceElfLoc(blob, 4, opts)];\n}\nfunction parse_PtgElfNoop(blob /*::, length, opts*/) {\n  blob.l += 6;\n  return [];\n}\n/* [MS-XLS] 2.5.198.46 */\nvar parse_PtgElfCol = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.47 */\nvar parse_PtgElfColS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.48 */\nvar parse_PtgElfColSV = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.49 */\nvar parse_PtgElfColV = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.50 */\nfunction parse_PtgElfLel(blob /*::, length, opts*/) {\n  blob.l += 2;\n  return [parseuint16(blob), blob.read_shift(2) & 0x01];\n}\n/* [MS-XLS] 2.5.198.51 */\nvar parse_PtgElfRadical = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.52 */\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\n/* [MS-XLS] 2.5.198.53 */\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.54 */\nvar parse_PtgElfRw = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.55 */\nvar parse_PtgElfRwV = parse_PtgElfLoc;\n\n/* [MS-XLSB] 2.5.97.52 TODO */\nvar PtgListRT = [\"Data\", \"All\", \"Headers\", \"??\", \"?Data2\", \"??\", \"?DataHeaders\", \"??\", \"Totals\", \"??\", \"??\", \"??\", \"?DataTotals\", \"??\", \"??\", \"??\", \"?Current\"];\nfunction parse_PtgList(blob /*::, length, opts*/) {\n  blob.l += 2;\n  var ixti = blob.read_shift(2);\n  var flags = blob.read_shift(2);\n  var idx = blob.read_shift(4);\n  var c = blob.read_shift(2);\n  var C = blob.read_shift(2);\n  var rt = PtgListRT[flags >> 2 & 0x1F];\n  return {\n    ixti: ixti,\n    coltype: flags & 0x3,\n    rt: rt,\n    idx: idx,\n    c: c,\n    C: C\n  };\n}\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\nfunction parse_PtgSxName(blob /*::, length, opts*/) {\n  blob.l += 2;\n  return [blob.read_shift(4)];\n}\n\n/* [XLS] old spec */\nfunction parse_PtgSheet(blob, length, opts) {\n  blob.l += 5;\n  blob.l += 2;\n  blob.l += opts.biff == 2 ? 1 : 4;\n  return [\"PTGSHEET\"];\n}\nfunction parse_PtgEndSheet(blob, length, opts) {\n  blob.l += opts.biff == 2 ? 4 : 5;\n  return [\"PTGENDSHEET\"];\n}\nfunction parse_PtgMemAreaN(blob /*::, length, opts*/) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var cce = blob.read_shift(2);\n  return [type, cce];\n}\nfunction parse_PtgMemNoMemN(blob /*::, length, opts*/) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var cce = blob.read_shift(2);\n  return [type, cce];\n}\nfunction parse_PtgAttrNoop(blob /*::, length, opts*/) {\n  blob.l += 4;\n  return [0, 0];\n}\n\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\nvar PtgTypes = {\n  0x01: {\n    n: 'PtgExp',\n    f: parse_PtgExp\n  },\n  0x02: {\n    n: 'PtgTbl',\n    f: parse_PtgTbl\n  },\n  0x03: {\n    n: 'PtgAdd',\n    f: parseread1\n  },\n  0x04: {\n    n: 'PtgSub',\n    f: parseread1\n  },\n  0x05: {\n    n: 'PtgMul',\n    f: parseread1\n  },\n  0x06: {\n    n: 'PtgDiv',\n    f: parseread1\n  },\n  0x07: {\n    n: 'PtgPower',\n    f: parseread1\n  },\n  0x08: {\n    n: 'PtgConcat',\n    f: parseread1\n  },\n  0x09: {\n    n: 'PtgLt',\n    f: parseread1\n  },\n  0x0A: {\n    n: 'PtgLe',\n    f: parseread1\n  },\n  0x0B: {\n    n: 'PtgEq',\n    f: parseread1\n  },\n  0x0C: {\n    n: 'PtgGe',\n    f: parseread1\n  },\n  0x0D: {\n    n: 'PtgGt',\n    f: parseread1\n  },\n  0x0E: {\n    n: 'PtgNe',\n    f: parseread1\n  },\n  0x0F: {\n    n: 'PtgIsect',\n    f: parseread1\n  },\n  0x10: {\n    n: 'PtgUnion',\n    f: parseread1\n  },\n  0x11: {\n    n: 'PtgRange',\n    f: parseread1\n  },\n  0x12: {\n    n: 'PtgUplus',\n    f: parseread1\n  },\n  0x13: {\n    n: 'PtgUminus',\n    f: parseread1\n  },\n  0x14: {\n    n: 'PtgPercent',\n    f: parseread1\n  },\n  0x15: {\n    n: 'PtgParen',\n    f: parseread1\n  },\n  0x16: {\n    n: 'PtgMissArg',\n    f: parseread1\n  },\n  0x17: {\n    n: 'PtgStr',\n    f: parse_PtgStr\n  },\n  0x1A: {\n    n: 'PtgSheet',\n    f: parse_PtgSheet\n  },\n  0x1B: {\n    n: 'PtgEndSheet',\n    f: parse_PtgEndSheet\n  },\n  0x1C: {\n    n: 'PtgErr',\n    f: parse_PtgErr\n  },\n  0x1D: {\n    n: 'PtgBool',\n    f: parse_PtgBool\n  },\n  0x1E: {\n    n: 'PtgInt',\n    f: parse_PtgInt\n  },\n  0x1F: {\n    n: 'PtgNum',\n    f: parse_PtgNum\n  },\n  0x20: {\n    n: 'PtgArray',\n    f: parse_PtgArray\n  },\n  0x21: {\n    n: 'PtgFunc',\n    f: parse_PtgFunc\n  },\n  0x22: {\n    n: 'PtgFuncVar',\n    f: parse_PtgFuncVar\n  },\n  0x23: {\n    n: 'PtgName',\n    f: parse_PtgName\n  },\n  0x24: {\n    n: 'PtgRef',\n    f: parse_PtgRef\n  },\n  0x25: {\n    n: 'PtgArea',\n    f: parse_PtgArea\n  },\n  0x26: {\n    n: 'PtgMemArea',\n    f: parse_PtgMemArea\n  },\n  0x27: {\n    n: 'PtgMemErr',\n    f: parse_PtgMemErr\n  },\n  0x28: {\n    n: 'PtgMemNoMem',\n    f: parse_PtgMemNoMem\n  },\n  0x29: {\n    n: 'PtgMemFunc',\n    f: parse_PtgMemFunc\n  },\n  0x2A: {\n    n: 'PtgRefErr',\n    f: parse_PtgRefErr\n  },\n  0x2B: {\n    n: 'PtgAreaErr',\n    f: parse_PtgAreaErr\n  },\n  0x2C: {\n    n: 'PtgRefN',\n    f: parse_PtgRefN\n  },\n  0x2D: {\n    n: 'PtgAreaN',\n    f: parse_PtgAreaN\n  },\n  0x2E: {\n    n: 'PtgMemAreaN',\n    f: parse_PtgMemAreaN\n  },\n  0x2F: {\n    n: 'PtgMemNoMemN',\n    f: parse_PtgMemNoMemN\n  },\n  0x39: {\n    n: 'PtgNameX',\n    f: parse_PtgNameX\n  },\n  0x3A: {\n    n: 'PtgRef3d',\n    f: parse_PtgRef3d\n  },\n  0x3B: {\n    n: 'PtgArea3d',\n    f: parse_PtgArea3d\n  },\n  0x3C: {\n    n: 'PtgRefErr3d',\n    f: parse_PtgRefErr3d\n  },\n  0x3D: {\n    n: 'PtgAreaErr3d',\n    f: parse_PtgAreaErr3d\n  },\n  0xFF: {}\n};\n/* These are duplicated in the PtgTypes table */\nvar PtgDupes = {\n  0x40: 0x20,\n  0x60: 0x20,\n  0x41: 0x21,\n  0x61: 0x21,\n  0x42: 0x22,\n  0x62: 0x22,\n  0x43: 0x23,\n  0x63: 0x23,\n  0x44: 0x24,\n  0x64: 0x24,\n  0x45: 0x25,\n  0x65: 0x25,\n  0x46: 0x26,\n  0x66: 0x26,\n  0x47: 0x27,\n  0x67: 0x27,\n  0x48: 0x28,\n  0x68: 0x28,\n  0x49: 0x29,\n  0x69: 0x29,\n  0x4A: 0x2A,\n  0x6A: 0x2A,\n  0x4B: 0x2B,\n  0x6B: 0x2B,\n  0x4C: 0x2C,\n  0x6C: 0x2C,\n  0x4D: 0x2D,\n  0x6D: 0x2D,\n  0x4E: 0x2E,\n  0x6E: 0x2E,\n  0x4F: 0x2F,\n  0x6F: 0x2F,\n  0x58: 0x22,\n  0x78: 0x22,\n  0x59: 0x39,\n  0x79: 0x39,\n  0x5A: 0x3A,\n  0x7A: 0x3A,\n  0x5B: 0x3B,\n  0x7B: 0x3B,\n  0x5C: 0x3C,\n  0x7C: 0x3C,\n  0x5D: 0x3D,\n  0x7D: 0x3D\n};\nvar Ptg18 = {\n  0x01: {\n    n: 'PtgElfLel',\n    f: parse_PtgElfLel\n  },\n  0x02: {\n    n: 'PtgElfRw',\n    f: parse_PtgElfRw\n  },\n  0x03: {\n    n: 'PtgElfCol',\n    f: parse_PtgElfCol\n  },\n  0x06: {\n    n: 'PtgElfRwV',\n    f: parse_PtgElfRwV\n  },\n  0x07: {\n    n: 'PtgElfColV',\n    f: parse_PtgElfColV\n  },\n  0x0A: {\n    n: 'PtgElfRadical',\n    f: parse_PtgElfRadical\n  },\n  0x0B: {\n    n: 'PtgElfRadicalS',\n    f: parse_PtgElfRadicalS\n  },\n  0x0D: {\n    n: 'PtgElfColS',\n    f: parse_PtgElfColS\n  },\n  0x0F: {\n    n: 'PtgElfColSV',\n    f: parse_PtgElfColSV\n  },\n  0x10: {\n    n: 'PtgElfRadicalLel',\n    f: parse_PtgElfRadicalLel\n  },\n  0x19: {\n    n: 'PtgList',\n    f: parse_PtgList\n  },\n  0x1D: {\n    n: 'PtgSxName',\n    f: parse_PtgSxName\n  },\n  0xFF: {}\n};\nvar Ptg19 = {\n  0x00: {\n    n: 'PtgAttrNoop',\n    f: parse_PtgAttrNoop\n  },\n  0x01: {\n    n: 'PtgAttrSemi',\n    f: parse_PtgAttrSemi\n  },\n  0x02: {\n    n: 'PtgAttrIf',\n    f: parse_PtgAttrIf\n  },\n  0x04: {\n    n: 'PtgAttrChoose',\n    f: parse_PtgAttrChoose\n  },\n  0x08: {\n    n: 'PtgAttrGoto',\n    f: parse_PtgAttrGoto\n  },\n  0x10: {\n    n: 'PtgAttrSum',\n    f: parse_PtgAttrSum\n  },\n  0x20: {\n    n: 'PtgAttrBaxcel',\n    f: parse_PtgAttrBaxcel\n  },\n  0x21: {\n    n: 'PtgAttrBaxcel',\n    f: parse_PtgAttrBaxcel\n  },\n  0x40: {\n    n: 'PtgAttrSpace',\n    f: parse_PtgAttrSpace\n  },\n  0x41: {\n    n: 'PtgAttrSpaceSemi',\n    f: parse_PtgAttrSpaceSemi\n  },\n  0x80: {\n    n: 'PtgAttrIfError',\n    f: parse_PtgAttrIfError\n  },\n  0xFF: {}\n};\n\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\nfunction parse_RgbExtra(blob, length, rgce, opts) {\n  if (opts.biff < 8) return parsenoop(blob, length);\n  var target = blob.l + length;\n  var o = [];\n  for (var i = 0; i !== rgce.length; ++i) {\n    switch (rgce[i][0]) {\n      case 'PtgArray':\n        /* PtgArray -> PtgExtraArray */\n        rgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n        o.push(rgce[i][1]);\n        break;\n      case 'PtgMemArea':\n        /* PtgMemArea -> PtgExtraMem */\n        rgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n        o.push(rgce[i][2]);\n        break;\n      case 'PtgExp':\n        /* PtgExp -> PtgExtraCol */\n        if (opts && opts.biff == 12) {\n          rgce[i][1][1] = blob.read_shift(4);\n          o.push(rgce[i][1]);\n        }\n        break;\n      case 'PtgList': /* TODO: PtgList -> PtgExtraList */\n      case 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n      case 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n      case 'PtgElfColSV':\n        /* TODO: PtgElfColSV -> PtgExtraElf */\n        throw \"Unsupported \" + rgce[i][0];\n      default:\n        break;\n    }\n  }\n  length = target - blob.l;\n  /* note: this is technically an error but Excel disregards */\n  //if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n  if (length !== 0) o.push(parsenoop(blob, length));\n  return o;\n}\n\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\nfunction parse_Rgce(blob, length, opts) {\n  var target = blob.l + length;\n  var R,\n    id,\n    ptgs = [];\n  while (target != blob.l) {\n    length = target - blob.l;\n    id = blob[blob.l];\n    R = PtgTypes[id] || PtgTypes[PtgDupes[id]];\n    if (id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n    if (!R || !R.f) {\n      /*ptgs.push*/parsenoop(blob, length);\n    } else {\n      ptgs.push([R.n, R.f(blob, length, opts)]);\n    }\n  }\n  return ptgs;\n}\nfunction stringify_array(f /*:Array<Array<string>>*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < f.length; ++i) {\n    var x = f[i],\n      r /*:Array<string>*/ = [];\n    for (var j = 0; j < x.length; ++j) {\n      var y = x[j];\n      if (y) switch (y[0]) {\n        // TODO: handle embedded quotes\n        case 0x02:\n          /*:: if(typeof y[1] != 'string') throw \"unreachable\"; */\n          r.push('\"' + y[1].replace(/\"/g, '\"\"') + '\"');\n          break;\n        default:\n          r.push(y[1]);\n      } else r.push(\"\");\n    }\n    o.push(r.join(\",\"));\n  }\n  return o.join(\";\");\n}\n\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\nvar PtgBinOp = {\n  PtgAdd: \"+\",\n  PtgConcat: \"&\",\n  PtgDiv: \"/\",\n  PtgEq: \"=\",\n  PtgGe: \">=\",\n  PtgGt: \">\",\n  PtgLe: \"<=\",\n  PtgLt: \"<\",\n  PtgMul: \"*\",\n  PtgNe: \"<>\",\n  PtgPower: \"^\",\n  PtgSub: \"-\"\n};\n\n// TODO: explore space\nfunction make_3d_range(start, end) {\n  var s = start.lastIndexOf(\"!\"),\n    e = end.lastIndexOf(\"!\");\n  if (s == -1 && e == -1) return start + \":\" + end;\n  if (s > 0 && e > 0 && start.slice(0, s).toLowerCase() == end.slice(0, e).toLowerCase()) return start + \":\" + end.slice(e + 1);\n  console.error(\"Cannot hydrate range\", start, end);\n  return start + \":\" + end;\n}\nfunction get_ixti_raw(supbooks, ixti /*:number*/, opts) /*:string*/{\n  if (!supbooks) return \"SH33TJSERR0\";\n  if (opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];\n  if (!supbooks.XTI) return \"SH33TJSERR6\";\n  var XTI = supbooks.XTI[ixti];\n  if (opts.biff < 8) {\n    if (ixti > 10000) ixti -= 65536;\n    if (ixti < 0) ixti = -ixti;\n    return ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n  }\n  if (!XTI) return \"SH33TJSERR1\";\n  var o = \"\";\n  if (opts.biff > 8) switch (supbooks[XTI[0]][0]) {\n    case 0x0165:\n      /* 'BrtSupSelf' */\n      o = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n      return XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n    case 0x0166:\n      /* 'BrtSupSame' */\n      if (opts.SID != null) return supbooks.SheetNames[opts.SID];\n      return \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n    case 0x0163: /* 'BrtSupBookSrc' */\n    /* falls through */\n    default:\n      return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n  }\n  switch (supbooks[XTI[0]][0][0]) {\n    case 0x0401:\n      o = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\";\n      return XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n    case 0x3A01:\n      return supbooks[XTI[0]].slice(1).map(function (name) {\n        return name.Name;\n      }).join(\";;\");\n    //return \"SH33TJSERR8\";\n    default:\n      if (!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n      o = XTI[1] == -1 ? \"#REF\" : supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\";\n      return XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n  }\n}\nfunction get_ixti(supbooks, ixti /*:number*/, opts) /*:string*/{\n  var ixtiraw = get_ixti_raw(supbooks, ixti, opts);\n  return ixtiraw == \"#REF\" ? ixtiraw : formula_quote_sheet_name(ixtiraw, opts);\n}\nfunction stringify_formula(formula /*Array<any>*/, range, cell /*:any*/, supbooks, opts) /*:string*/{\n  var biff = opts && opts.biff || 8;\n  var _range = /*range != null ? range :*/{\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  var stack /*:Array<string>*/ = [],\n    e1,\n    e2,\n    /*::type,*/c /*:CellAddress*/,\n    ixti = 0,\n    nameidx = 0,\n    r,\n    sname = \"\";\n  if (!formula[0] || !formula[0][0]) return \"\";\n  var last_sp = -1,\n    sp = \"\";\n  for (var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n    var f = formula[0][ff];\n    switch (f[0]) {\n      case 'PtgUminus':\n        /* [MS-XLS] 2.5.198.93 */\n        stack.push(\"-\" + stack.pop());\n        break;\n      case 'PtgUplus':\n        /* [MS-XLS] 2.5.198.95 */\n        stack.push(\"+\" + stack.pop());\n        break;\n      case 'PtgPercent':\n        /* [MS-XLS] 2.5.198.81 */\n        stack.push(stack.pop() + \"%\");\n        break;\n      case 'PtgAdd': /* [MS-XLS] 2.5.198.26 */\n      case 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n      case 'PtgDiv': /* [MS-XLS] 2.5.198.45 */\n      case 'PtgEq': /* [MS-XLS] 2.5.198.56 */\n      case 'PtgGe': /* [MS-XLS] 2.5.198.64 */\n      case 'PtgGt': /* [MS-XLS] 2.5.198.65 */\n      case 'PtgLe': /* [MS-XLS] 2.5.198.68 */\n      case 'PtgLt': /* [MS-XLS] 2.5.198.69 */\n      case 'PtgMul': /* [MS-XLS] 2.5.198.75 */\n      case 'PtgNe': /* [MS-XLS] 2.5.198.78 */\n      case 'PtgPower': /* [MS-XLS] 2.5.198.82 */\n      case 'PtgSub':\n        /* [MS-XLS] 2.5.198.90 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        if (last_sp >= 0) {\n          switch (formula[0][last_sp][1][0]) {\n            case 0:\n              // $FlowIgnore\n              sp = fill(\" \", formula[0][last_sp][1][1]);\n              break;\n            case 1:\n              // $FlowIgnore\n              sp = fill(\"\\r\", formula[0][last_sp][1][1]);\n              break;\n            default:\n              sp = \"\";\n              // $FlowIgnore\n              if (opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n          }\n          e2 = e2 + sp;\n          last_sp = -1;\n        }\n        stack.push(e2 + PtgBinOp[f[0]] + e1);\n        break;\n      case 'PtgIsect':\n        /* [MS-XLS] 2.5.198.67 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        stack.push(e2 + \" \" + e1);\n        break;\n      case 'PtgUnion':\n        /* [MS-XLS] 2.5.198.94 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        stack.push(e2 + \",\" + e1);\n        break;\n      case 'PtgRange':\n        /* [MS-XLS] 2.5.198.83 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        stack.push(make_3d_range(e2, e1));\n        break;\n      case 'PtgAttrChoose':\n        /* [MS-XLS] 2.5.198.34 */\n        break;\n      case 'PtgAttrGoto':\n        /* [MS-XLS] 2.5.198.35 */\n        break;\n      case 'PtgAttrIf':\n        /* [MS-XLS] 2.5.198.36 */\n        break;\n      case 'PtgAttrIfError':\n        /* [MS-XLSB] 2.5.97.28 */\n        break;\n      case 'PtgRef':\n        /* [MS-XLS] 2.5.198.84 */\n        /*::type = f[1][0]; */c = shift_cell_xls(f[1][1] /*:any*/, _range, opts);\n        stack.push(encode_cell_xls(c, biff));\n        break;\n      case 'PtgRefN':\n        /* [MS-XLS] 2.5.198.88 */\n        /*::type = f[1][0]; */c = cell ? shift_cell_xls(f[1][1] /*:any*/, cell, opts) : f[1][1] /*:any*/;\n        stack.push(encode_cell_xls(c, biff));\n        break;\n      case 'PtgRef3d':\n        /* [MS-XLS] 2.5.198.85 */\n        /*::type = f[1][0]; */ixti = /*::Number(*/f[1][1] /*::)*/;\n        c = shift_cell_xls(f[1][2] /*:any*/, _range, opts);\n        sname = get_ixti(supbooks, ixti, opts);\n        var w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\n        stack.push(sname + \"!\" + encode_cell_xls(c, biff));\n        break;\n      case 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n      case 'PtgFuncVar':\n        /* [MS-XLS] 2.5.198.63 */\n        /* f[1] = [argc, func, type] */\n        var argc /*:number*/ = f[1][0] /*:any*/,\n          func /*:string*/ = f[1][1] /*:any*/;\n        if (!argc) argc = 0;\n        argc &= 0x7F;\n        var args = argc == 0 ? [] : stack.slice(-argc);\n        stack.length -= argc;\n        if (func === 'User') func = args.shift();\n        stack.push(func + \"(\" + args.join(\",\") + \")\");\n        break;\n      case 'PtgBool':\n        /* [MS-XLS] 2.5.198.42 */\n        stack.push(f[1] ? \"TRUE\" : \"FALSE\");\n        break;\n      case 'PtgInt':\n        /* [MS-XLS] 2.5.198.66 */\n        stack.push( /*::String(*/f[1] /*::)*/);\n        break;\n      case 'PtgNum':\n        /* [MS-XLS] 2.5.198.79 TODO: precision? */\n        stack.push(String(f[1]));\n        break;\n      case 'PtgStr':\n        /* [MS-XLS] 2.5.198.89 */\n        // $FlowIgnore\n        stack.push('\"' + f[1].replace(/\"/g, '\"\"') + '\"');\n        break;\n      case 'PtgErr':\n        /* [MS-XLS] 2.5.198.57 */\n        stack.push( /*::String(*/f[1] /*::)*/);\n        break;\n      case 'PtgAreaN':\n        /* [MS-XLS] 2.5.198.31 TODO */\n        /*::type = f[1][0]; */r = shift_range_xls(f[1][1], cell ? {\n          s: cell\n        } : _range, opts);\n        stack.push(encode_range_xls(r /*:any*/, opts));\n        break;\n      case 'PtgArea':\n        /* [MS-XLS] 2.5.198.27 TODO: fixed points */\n        /*::type = f[1][0]; */r = shift_range_xls(f[1][1], _range, opts);\n        stack.push(encode_range_xls(r /*:any*/, opts));\n        break;\n      case 'PtgArea3d':\n        /* [MS-XLS] 2.5.198.28 TODO */\n        /*::type = f[1][0]; */ixti = /*::Number(*/f[1][1] /*::)*/;\n        r = f[1][2];\n        sname = get_ixti(supbooks, ixti, opts);\n        stack.push(sname + \"!\" + encode_range_xls(r /*:any*/, opts));\n        break;\n      case 'PtgAttrSum':\n        /* [MS-XLS] 2.5.198.41 */\n        stack.push(\"SUM(\" + stack.pop() + \")\");\n        break;\n      case 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n      case 'PtgAttrSemi':\n        /* [MS-XLS] 2.5.198.37 */\n        break;\n      case 'PtgName':\n        /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n        /* f[1] = type, 0, nameindex */\n        nameidx = f[1][2] /*:any*/;\n        var lbl = (supbooks.names || [])[nameidx - 1] || (supbooks[0] || [])[nameidx];\n        var name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n        /* [MS-XLSB] 2.5.97.10 Ftab -- last verified 20220204 */\n        if (name && name.slice(0, 6) == \"_xlfn.\" && !opts.xlfn) name = name.slice(6);\n        stack.push(name);\n        break;\n      case 'PtgNameX':\n        /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n        /* f[1] = type, ixti, nameindex */\n        var bookidx /*:number*/ = f[1][1] /*:any*/;\n        nameidx = f[1][2] /*:any*/;\n        var externbook;\n        /* TODO: Properly handle missing values -- this should be using get_ixti_raw primarily */\n        if (opts.biff <= 5) {\n          if (bookidx < 0) bookidx = -bookidx;\n          if (supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n        } else {\n          var o = \"\";\n          if (((supbooks[bookidx] || [])[0] || [])[0] == 0x3A01) {/* empty */} else if (((supbooks[bookidx] || [])[0] || [])[0] == 0x0401) {\n            if (supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n              o = supbooks.SheetNames[supbooks[bookidx][nameidx].itab - 1] + \"!\";\n            }\n          } else o = supbooks.SheetNames[nameidx - 1] + \"!\";\n          if (supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;else if (supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;else {\n            var ixtidata = (get_ixti_raw(supbooks, bookidx, opts) || \"\").split(\";;\");\n            if (ixtidata[nameidx - 1]) o = ixtidata[nameidx - 1]; // TODO: confirm this is correct\n            else o += \"SH33TJSERRX\";\n          }\n          stack.push(o);\n          break;\n        }\n        if (!externbook) externbook = {\n          Name: \"SH33TJSERRY\"\n        };\n        stack.push(externbook.Name);\n        break;\n      case 'PtgParen':\n        /* [MS-XLS] 2.5.198.80 */\n        var lp = '(',\n          rp = ')';\n        if (last_sp >= 0) {\n          sp = \"\";\n          switch (formula[0][last_sp][1][0]) {\n            // $FlowIgnore\n            case 2:\n              lp = fill(\" \", formula[0][last_sp][1][1]) + lp;\n              break;\n            // $FlowIgnore\n            case 3:\n              lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp;\n              break;\n            // $FlowIgnore\n            case 4:\n              rp = fill(\" \", formula[0][last_sp][1][1]) + rp;\n              break;\n            // $FlowIgnore\n            case 5:\n              rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp;\n              break;\n            default:\n              // $FlowIgnore\n              if (opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n          }\n          last_sp = -1;\n        }\n        stack.push(lp + stack.pop() + rp);\n        break;\n      case 'PtgRefErr':\n        /* [MS-XLS] 2.5.198.86 */\n        stack.push('#REF!');\n        break;\n      case 'PtgRefErr3d':\n        /* [MS-XLS] 2.5.198.87 */\n        stack.push('#REF!');\n        break;\n      case 'PtgExp':\n        /* [MS-XLS] 2.5.198.58 TODO */\n        c = {\n          c: f[1][1] /*:any*/,\n          r: f[1][0] /*:any*/\n        };\n        var q = {\n          c: cell.c,\n          r: cell.r\n        } /*:any*/;\n        if (supbooks.sharedf[encode_cell(c)]) {\n          var parsedf = supbooks.sharedf[encode_cell(c)];\n          stack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n        } else {\n          var fnd = false;\n          for (e1 = 0; e1 != supbooks.arrayf.length; ++e1) {\n            /* TODO: should be something like range_has */\n            e2 = supbooks.arrayf[e1];\n            if (c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n            if (c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n            stack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n            fnd = true;\n            break;\n          }\n          if (!fnd) stack.push( /*::String(*/f[1] /*::)*/);\n        }\n        break;\n      case 'PtgArray':\n        /* [MS-XLS] 2.5.198.32 TODO */\n        stack.push(\"{\" + stringify_array( /*::(*/f[1] /*:: :any)*/) + \"}\");\n        break;\n      case 'PtgMemArea':\n        /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n        //stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n        break;\n      case 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n      case 'PtgAttrSpaceSemi':\n        /* [MS-XLS] 2.5.198.39 */\n        last_sp = ff;\n        break;\n      case 'PtgTbl':\n        /* [MS-XLS] 2.5.198.92 TODO */\n        break;\n      case 'PtgMemErr':\n        /* [MS-XLS] 2.5.198.71 */\n        break;\n      case 'PtgMissArg':\n        /* [MS-XLS] 2.5.198.74 */\n        stack.push(\"\");\n        break;\n      case 'PtgAreaErr':\n        /* [MS-XLS] 2.5.198.29 */\n        stack.push(\"#REF!\");\n        break;\n      case 'PtgAreaErr3d':\n        /* [MS-XLS] 2.5.198.30 */\n        stack.push(\"#REF!\");\n        break;\n      case 'PtgList':\n        /* [MS-XLSB] 2.5.97.52 */\n        // $FlowIgnore\n        stack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n        break;\n      case 'PtgMemAreaN':\n      case 'PtgMemNoMemN':\n      case 'PtgAttrNoop':\n      case 'PtgSheet':\n      case 'PtgEndSheet':\n        break;\n      case 'PtgMemFunc':\n        /* [MS-XLS] 2.5.198.72 TODO */\n        break;\n      case 'PtgMemNoMem':\n        /* [MS-XLS] 2.5.198.73 TODO */\n        break;\n      case 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n      case 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n      case 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n      case 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n      case 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n      case 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n      case 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n      case 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n      case 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n      case 'PtgElfRwV':\n        /* [MS-XLS] 2.5.198.55 */\n        throw new Error(\"Unsupported ELFs\");\n      case 'PtgSxName':\n        /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n        throw new Error('Unrecognized Formula Token: ' + String(f));\n      default:\n        throw new Error('Unrecognized Formula Token: ' + String(f));\n    }\n    var PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n    if (opts.biff != 3) if (last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n      f = formula[0][last_sp];\n      var _left = true;\n      switch (f[1][0]) {\n        /* note: some bad XLSB files omit the PtgParen */\n        case 4:\n          _left = false;\n        /* falls through */\n        case 0:\n          // $FlowIgnore\n          sp = fill(\" \", f[1][1]);\n          break;\n        case 5:\n          _left = false;\n        /* falls through */\n        case 1:\n          // $FlowIgnore\n          sp = fill(\"\\r\", f[1][1]);\n          break;\n        default:\n          sp = \"\";\n          // $FlowIgnore\n          if (opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n      }\n      stack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n      last_sp = -1;\n    }\n  }\n  if (stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n  if (stack[0] == \"TRUE\") return true;\n  if (stack[0] == \"FALSE\") return false;\n  return stack[0];\n}\n\n/* [MS-XLS] 2.5.198.1 TODO */\nfunction parse_ArrayParsedFormula(blob, length, opts /*::, ref*/) {\n  var target = blob.l + length,\n    len = opts.biff == 2 ? 1 : 2;\n  var rgcb,\n    cce = blob.read_shift(len); // length of rgce\n  if (cce == 0xFFFF) return [[], parsenoop(blob, length - 2)];\n  var rgce = parse_Rgce(blob, cce, opts);\n  if (length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n  blob.l = target;\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.3 TODO */\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\n  var target = blob.l + length,\n    len = opts.biff == 2 ? 1 : 2;\n  var rgcb,\n    cce = blob.read_shift(len); // length of rgce\n  if (cce == 0xFFFF) return [[], parsenoop(blob, length - 2)];\n  var rgce = parse_Rgce(blob, cce, opts);\n  if (length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n  blob.l = target;\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.21 */\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\n  var target = blob.l + length;\n  var rgce = parse_Rgce(blob, cce, opts);\n  var rgcb;\n  if (target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.118 TODO */\nfunction parse_SharedParsedFormula(blob, length, opts) {\n  var target = blob.l + length;\n  var rgcb,\n    cce = blob.read_shift(2); // length of rgce\n  var rgce = parse_Rgce(blob, cce, opts);\n  if (cce == 0xFFFF) return [[], parsenoop(blob, length - 2)];\n  if (length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\nfunction parse_FormulaValue(blob /*::, length*/) {\n  var b;\n  if (__readUInt16LE(blob, blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob), 'n'];\n  switch (blob[blob.l]) {\n    case 0x00:\n      blob.l += 8;\n      return [\"String\", 's'];\n    case 0x01:\n      b = blob[blob.l + 2] === 0x1;\n      blob.l += 8;\n      return [b, 'b'];\n    case 0x02:\n      b = blob[blob.l + 2];\n      blob.l += 8;\n      return [b, 'e'];\n    case 0x03:\n      blob.l += 8;\n      return [\"\", 's'];\n  }\n  return [];\n}\nfunction write_FormulaValue(value) {\n  if (value == null) {\n    // Blank String Value\n    var o = new_buf(8);\n    o.write_shift(1, 0x03);\n    o.write_shift(1, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0xFFFF);\n    return o;\n  } else if (typeof value == \"number\") return write_Xnum(value);\n  return write_Xnum(0);\n}\n\n/* [MS-XLS] 2.4.127 TODO */\nfunction parse_Formula(blob, length, opts) {\n  var end = blob.l + length;\n  var cell = parse_XLSCell(blob, 6, opts);\n  var val = parse_FormulaValue(blob, 8);\n  var flags = blob.read_shift(1);\n  if (opts.biff != 2) {\n    blob.read_shift(1);\n    if (opts.biff >= 5) {\n      /*var chn = */blob.read_shift(4);\n    }\n  }\n  var cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n  return {\n    cell: cell,\n    val: val[0],\n    formula: cbf,\n    shared: flags >> 3 & 1,\n    tt: val[1]\n  };\n}\nfunction write_Formula(cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, os /*:number*/) {\n  // Cell\n  var o1 = write_XLSCell(R, C, os);\n\n  // FormulaValue\n  var o2 = write_FormulaValue(cell.v);\n\n  // flags + cache\n  var o3 = new_buf(6);\n  var flags = 0x01 | 0x20;\n  o3.write_shift(2, flags);\n  o3.write_shift(4, 0);\n\n  // CellParsedFormula\n  var bf = new_buf(cell.bf.length);\n  for (var i = 0; i < cell.bf.length; ++i) bf[i] = cell.bf[i];\n  var out = bconcat([o1, o2, o3, bf]);\n  return out;\n}\n\n/* XLSB Parsed Formula records have the same shape */\nfunction parse_XLSBParsedFormula(data, length, opts) {\n  var cce = data.read_shift(4);\n  var rgce = parse_Rgce(data, cce, opts);\n  var cb = data.read_shift(4);\n  var rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n  return [rgce, rgcb];\n}\n\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.8 DVParsedFormula */\n//var parse_XLSBDVParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.9 FRTParsedFormula */\n//var parse_XLSBFRTParsedFormula = parse_XLSBParsedFormula2;\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\n\n/* Writes a PtgNum or PtgInt */\nfunction write_XLSBFormulaNum(val /*:number*/) {\n  if ((val | 0) == val && val < Math.pow(2, 16) && val >= 0) {\n    var oint = new_buf(11);\n    oint.write_shift(4, 3);\n    oint.write_shift(1, 0x1e);\n    oint.write_shift(2, val);\n    oint.write_shift(4, 0);\n    return oint;\n  }\n  var num = new_buf(17);\n  num.write_shift(4, 11);\n  num.write_shift(1, 0x1f);\n  num.write_shift(8, val);\n  num.write_shift(4, 0);\n  return num;\n}\n/* Writes a PtgErr */\nfunction write_XLSBFormulaErr(val /*:number*/) {\n  var oint = new_buf(10);\n  oint.write_shift(4, 2);\n  oint.write_shift(1, 0x1C);\n  oint.write_shift(1, val);\n  oint.write_shift(4, 0);\n  return oint;\n}\n/* Writes a PtgBool */\nfunction write_XLSBFormulaBool(val /*:boolean*/) {\n  var oint = new_buf(10);\n  oint.write_shift(4, 2);\n  oint.write_shift(1, 0x1D);\n  oint.write_shift(1, val ? 1 : 0);\n  oint.write_shift(4, 0);\n  return oint;\n}\n\n/* Writes a PtgStr */\nfunction write_XLSBFormulaStr(val /*:string*/) {\n  var preamble = new_buf(7);\n  preamble.write_shift(4, 3 + 2 * val.length);\n  preamble.write_shift(1, 0x17);\n  preamble.write_shift(2, val.length);\n  var body = new_buf(2 * val.length);\n  body.write_shift(2 * val.length, val, \"utf16le\");\n  var postamble = new_buf(4);\n  postamble.write_shift(4, 0);\n  return bconcat([preamble, body, postamble]);\n}\n\n/* Writes a PtgRef */\nfunction write_XLSBFormulaRef(str) {\n  var cell = decode_cell(str);\n  var out = new_buf(15);\n  out.write_shift(4, 7);\n  out.write_shift(1, 0x04 | 1 << 5);\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a PtgRef3d */\nfunction write_XLSBFormulaRef3D(str, wb) {\n  var lastbang = str.lastIndexOf(\"!\");\n  var sname = str.slice(0, lastbang);\n  str = str.slice(lastbang + 1);\n  var cell = decode_cell(str);\n  if (sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n  var out = new_buf(17);\n  out.write_shift(4, 9);\n  out.write_shift(1, 0x1A | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a PtgRefErr3d */\nfunction write_XLSBFormulaRefErr3D(str, wb) {\n  var lastbang = str.lastIndexOf(\"!\");\n  var sname = str.slice(0, lastbang);\n  str = str.slice(lastbang + 1);\n  if (sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n  var out = new_buf(17);\n  out.write_shift(4, 9);\n  out.write_shift(1, 0x1C | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, 0);\n  out.write_shift(2, 0); // <== ColRelShort\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a single sheet range [PtgRef PtgRef PtgRange] */\nfunction write_XLSBFormulaRange(_str) {\n  var parts = _str.split(\":\"),\n    str = parts[0];\n  var out = new_buf(23);\n  out.write_shift(4, 15);\n\n  /* start cell */\n  str = parts[0];\n  var cell = decode_cell(str);\n  out.write_shift(1, 0x04 | 1 << 5);\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n  out.write_shift(4, 0);\n\n  /* end cell */\n  str = parts[1];\n  cell = decode_cell(str);\n  out.write_shift(1, 0x04 | 1 << 5);\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n  out.write_shift(4, 0);\n\n  /* PtgRange */\n  out.write_shift(1, 0x11);\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a range with explicit sheet name [PtgRef3D PtgRef3D PtgRange] */\nfunction write_XLSBFormulaRangeWS(_str, wb) {\n  var lastbang = _str.lastIndexOf(\"!\");\n  var sname = _str.slice(0, lastbang);\n  _str = _str.slice(lastbang + 1);\n  if (sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n  var parts = _str.split(\":\");\n  var out = new_buf(27);\n  out.write_shift(4, 19);\n\n  /* start cell */\n  var str = parts[0],\n    cell = decode_cell(str);\n  out.write_shift(1, 0x1A | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n\n  /* end cell */\n  str = parts[1];\n  cell = decode_cell(str);\n  out.write_shift(1, 0x1A | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n\n  /* PtgRange */\n  out.write_shift(1, 0x11);\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a range with explicit sheet name [PtgArea3d] */\nfunction write_XLSBFormulaArea3D(_str, wb) {\n  var lastbang = _str.lastIndexOf(\"!\");\n  var sname = _str.slice(0, lastbang);\n  _str = _str.slice(lastbang + 1);\n  if (sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n  var range = decode_range(_str);\n  var out = new_buf(23);\n  out.write_shift(4, 15);\n  out.write_shift(1, 0x1B | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, range.s.r);\n  out.write_shift(4, range.e.r);\n  out.write_shift(2, range.s.c);\n  out.write_shift(2, range.e.c);\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* General Formula */\nfunction write_XLSBFormula(val /*:string|number*/, wb) {\n  if (typeof val == \"number\") return write_XLSBFormulaNum(val);\n  if (typeof val == \"boolean\") return write_XLSBFormulaBool(val);\n  if (/^#(DIV\\/0!|GETTING_DATA|N\\/A|NAME\\?|NULL!|NUM!|REF!|VALUE!)$/.test(val)) return write_XLSBFormulaErr(+RBErr[val]);\n  if (val.match(/^\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRef(val);\n  if (val.match(/^\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRange(val);\n  if (val.match(/^#REF!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaArea3D(val, wb);\n  if (val.match(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRef3D(val, wb);\n  if (val.match(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRangeWS(val, wb);\n  if (/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!#REF!$/.test(val)) return write_XLSBFormulaRefErr3D(val, wb);\n  if (/^\".*\"$/.test(val)) return write_XLSBFormulaStr(val);\n  if (/^[+-]\\d+$/.test(val)) return write_XLSBFormulaNum(parseInt(val, 10));\n  throw \"Formula |\" + val + \"| not supported for XLSB\";\n}\nvar write_XLSBNameParsedFormula = write_XLSBFormula;\nvar Cetab = {\n  0: \"BEEP\",\n  1: \"OPEN\",\n  2: \"OPEN.LINKS\",\n  3: \"CLOSE.ALL\",\n  4: \"SAVE\",\n  5: \"SAVE.AS\",\n  6: \"FILE.DELETE\",\n  7: \"PAGE.SETUP\",\n  8: \"PRINT\",\n  9: \"PRINTER.SETUP\",\n  10: \"QUIT\",\n  11: \"NEW.WINDOW\",\n  12: \"ARRANGE.ALL\",\n  13: \"WINDOW.SIZE\",\n  14: \"WINDOW.MOVE\",\n  15: \"FULL\",\n  16: \"CLOSE\",\n  17: \"RUN\",\n  22: \"SET.PRINT.AREA\",\n  23: \"SET.PRINT.TITLES\",\n  24: \"SET.PAGE.BREAK\",\n  25: \"REMOVE.PAGE.BREAK\",\n  26: \"FONT\",\n  27: \"DISPLAY\",\n  28: \"PROTECT.DOCUMENT\",\n  29: \"PRECISION\",\n  30: \"A1.R1C1\",\n  31: \"CALCULATE.NOW\",\n  32: \"CALCULATION\",\n  34: \"DATA.FIND\",\n  35: \"EXTRACT\",\n  36: \"DATA.DELETE\",\n  37: \"SET.DATABASE\",\n  38: \"SET.CRITERIA\",\n  39: \"SORT\",\n  40: \"DATA.SERIES\",\n  41: \"TABLE\",\n  42: \"FORMAT.NUMBER\",\n  43: \"ALIGNMENT\",\n  44: \"STYLE\",\n  45: \"BORDER\",\n  46: \"CELL.PROTECTION\",\n  47: \"COLUMN.WIDTH\",\n  48: \"UNDO\",\n  49: \"CUT\",\n  50: \"COPY\",\n  51: \"PASTE\",\n  52: \"CLEAR\",\n  53: \"PASTE.SPECIAL\",\n  54: \"EDIT.DELETE\",\n  55: \"INSERT\",\n  56: \"FILL.RIGHT\",\n  57: \"FILL.DOWN\",\n  61: \"DEFINE.NAME\",\n  62: \"CREATE.NAMES\",\n  63: \"FORMULA.GOTO\",\n  64: \"FORMULA.FIND\",\n  65: \"SELECT.LAST.CELL\",\n  66: \"SHOW.ACTIVE.CELL\",\n  67: \"GALLERY.AREA\",\n  68: \"GALLERY.BAR\",\n  69: \"GALLERY.COLUMN\",\n  70: \"GALLERY.LINE\",\n  71: \"GALLERY.PIE\",\n  72: \"GALLERY.SCATTER\",\n  73: \"COMBINATION\",\n  74: \"PREFERRED\",\n  75: \"ADD.OVERLAY\",\n  76: \"GRIDLINES\",\n  77: \"SET.PREFERRED\",\n  78: \"AXES\",\n  79: \"LEGEND\",\n  80: \"ATTACH.TEXT\",\n  81: \"ADD.ARROW\",\n  82: \"SELECT.CHART\",\n  83: \"SELECT.PLOT.AREA\",\n  84: \"PATTERNS\",\n  85: \"MAIN.CHART\",\n  86: \"OVERLAY\",\n  87: \"SCALE\",\n  88: \"FORMAT.LEGEND\",\n  89: \"FORMAT.TEXT\",\n  90: \"EDIT.REPEAT\",\n  91: \"PARSE\",\n  92: \"JUSTIFY\",\n  93: \"HIDE\",\n  94: \"UNHIDE\",\n  95: \"WORKSPACE\",\n  96: \"FORMULA\",\n  97: \"FORMULA.FILL\",\n  98: \"FORMULA.ARRAY\",\n  99: \"DATA.FIND.NEXT\",\n  100: \"DATA.FIND.PREV\",\n  101: \"FORMULA.FIND.NEXT\",\n  102: \"FORMULA.FIND.PREV\",\n  103: \"ACTIVATE\",\n  104: \"ACTIVATE.NEXT\",\n  105: \"ACTIVATE.PREV\",\n  106: \"UNLOCKED.NEXT\",\n  107: \"UNLOCKED.PREV\",\n  108: \"COPY.PICTURE\",\n  109: \"SELECT\",\n  110: \"DELETE.NAME\",\n  111: \"DELETE.FORMAT\",\n  112: \"VLINE\",\n  113: \"HLINE\",\n  114: \"VPAGE\",\n  115: \"HPAGE\",\n  116: \"VSCROLL\",\n  117: \"HSCROLL\",\n  118: \"ALERT\",\n  119: \"NEW\",\n  120: \"CANCEL.COPY\",\n  121: \"SHOW.CLIPBOARD\",\n  122: \"MESSAGE\",\n  124: \"PASTE.LINK\",\n  125: \"APP.ACTIVATE\",\n  126: \"DELETE.ARROW\",\n  127: \"ROW.HEIGHT\",\n  128: \"FORMAT.MOVE\",\n  129: \"FORMAT.SIZE\",\n  130: \"FORMULA.REPLACE\",\n  131: \"SEND.KEYS\",\n  132: \"SELECT.SPECIAL\",\n  133: \"APPLY.NAMES\",\n  134: \"REPLACE.FONT\",\n  135: \"FREEZE.PANES\",\n  136: \"SHOW.INFO\",\n  137: \"SPLIT\",\n  138: \"ON.WINDOW\",\n  139: \"ON.DATA\",\n  140: \"DISABLE.INPUT\",\n  142: \"OUTLINE\",\n  143: \"LIST.NAMES\",\n  144: \"FILE.CLOSE\",\n  145: \"SAVE.WORKBOOK\",\n  146: \"DATA.FORM\",\n  147: \"COPY.CHART\",\n  148: \"ON.TIME\",\n  149: \"WAIT\",\n  150: \"FORMAT.FONT\",\n  151: \"FILL.UP\",\n  152: \"FILL.LEFT\",\n  153: \"DELETE.OVERLAY\",\n  155: \"SHORT.MENUS\",\n  159: \"SET.UPDATE.STATUS\",\n  161: \"COLOR.PALETTE\",\n  162: \"DELETE.STYLE\",\n  163: \"WINDOW.RESTORE\",\n  164: \"WINDOW.MAXIMIZE\",\n  166: \"CHANGE.LINK\",\n  167: \"CALCULATE.DOCUMENT\",\n  168: \"ON.KEY\",\n  169: \"APP.RESTORE\",\n  170: \"APP.MOVE\",\n  171: \"APP.SIZE\",\n  172: \"APP.MINIMIZE\",\n  173: \"APP.MAXIMIZE\",\n  174: \"BRING.TO.FRONT\",\n  175: \"SEND.TO.BACK\",\n  185: \"MAIN.CHART.TYPE\",\n  186: \"OVERLAY.CHART.TYPE\",\n  187: \"SELECT.END\",\n  188: \"OPEN.MAIL\",\n  189: \"SEND.MAIL\",\n  190: \"STANDARD.FONT\",\n  191: \"CONSOLIDATE\",\n  192: \"SORT.SPECIAL\",\n  193: \"GALLERY.3D.AREA\",\n  194: \"GALLERY.3D.COLUMN\",\n  195: \"GALLERY.3D.LINE\",\n  196: \"GALLERY.3D.PIE\",\n  197: \"VIEW.3D\",\n  198: \"GOAL.SEEK\",\n  199: \"WORKGROUP\",\n  200: \"FILL.GROUP\",\n  201: \"UPDATE.LINK\",\n  202: \"PROMOTE\",\n  203: \"DEMOTE\",\n  204: \"SHOW.DETAIL\",\n  206: \"UNGROUP\",\n  207: \"OBJECT.PROPERTIES\",\n  208: \"SAVE.NEW.OBJECT\",\n  209: \"SHARE\",\n  210: \"SHARE.NAME\",\n  211: \"DUPLICATE\",\n  212: \"APPLY.STYLE\",\n  213: \"ASSIGN.TO.OBJECT\",\n  214: \"OBJECT.PROTECTION\",\n  215: \"HIDE.OBJECT\",\n  216: \"SET.EXTRACT\",\n  217: \"CREATE.PUBLISHER\",\n  218: \"SUBSCRIBE.TO\",\n  219: \"ATTRIBUTES\",\n  220: \"SHOW.TOOLBAR\",\n  222: \"PRINT.PREVIEW\",\n  223: \"EDIT.COLOR\",\n  224: \"SHOW.LEVELS\",\n  225: \"FORMAT.MAIN\",\n  226: \"FORMAT.OVERLAY\",\n  227: \"ON.RECALC\",\n  228: \"EDIT.SERIES\",\n  229: \"DEFINE.STYLE\",\n  240: \"LINE.PRINT\",\n  243: \"ENTER.DATA\",\n  249: \"GALLERY.RADAR\",\n  250: \"MERGE.STYLES\",\n  251: \"EDITION.OPTIONS\",\n  252: \"PASTE.PICTURE\",\n  253: \"PASTE.PICTURE.LINK\",\n  254: \"SPELLING\",\n  256: \"ZOOM\",\n  259: \"INSERT.OBJECT\",\n  260: \"WINDOW.MINIMIZE\",\n  265: \"SOUND.NOTE\",\n  266: \"SOUND.PLAY\",\n  267: \"FORMAT.SHAPE\",\n  268: \"EXTEND.POLYGON\",\n  269: \"FORMAT.AUTO\",\n  272: \"GALLERY.3D.BAR\",\n  273: \"GALLERY.3D.SURFACE\",\n  274: \"FILL.AUTO\",\n  276: \"CUSTOMIZE.TOOLBAR\",\n  277: \"ADD.TOOL\",\n  278: \"EDIT.OBJECT\",\n  279: \"ON.DOUBLECLICK\",\n  280: \"ON.ENTRY\",\n  281: \"WORKBOOK.ADD\",\n  282: \"WORKBOOK.MOVE\",\n  283: \"WORKBOOK.COPY\",\n  284: \"WORKBOOK.OPTIONS\",\n  285: \"SAVE.WORKSPACE\",\n  288: \"CHART.WIZARD\",\n  289: \"DELETE.TOOL\",\n  290: \"MOVE.TOOL\",\n  291: \"WORKBOOK.SELECT\",\n  292: \"WORKBOOK.ACTIVATE\",\n  293: \"ASSIGN.TO.TOOL\",\n  295: \"COPY.TOOL\",\n  296: \"RESET.TOOL\",\n  297: \"CONSTRAIN.NUMERIC\",\n  298: \"PASTE.TOOL\",\n  302: \"WORKBOOK.NEW\",\n  305: \"SCENARIO.CELLS\",\n  306: \"SCENARIO.DELETE\",\n  307: \"SCENARIO.ADD\",\n  308: \"SCENARIO.EDIT\",\n  309: \"SCENARIO.SHOW\",\n  310: \"SCENARIO.SHOW.NEXT\",\n  311: \"SCENARIO.SUMMARY\",\n  312: \"PIVOT.TABLE.WIZARD\",\n  313: \"PIVOT.FIELD.PROPERTIES\",\n  314: \"PIVOT.FIELD\",\n  315: \"PIVOT.ITEM\",\n  316: \"PIVOT.ADD.FIELDS\",\n  318: \"OPTIONS.CALCULATION\",\n  319: \"OPTIONS.EDIT\",\n  320: \"OPTIONS.VIEW\",\n  321: \"ADDIN.MANAGER\",\n  322: \"MENU.EDITOR\",\n  323: \"ATTACH.TOOLBARS\",\n  324: \"VBAActivate\",\n  325: \"OPTIONS.CHART\",\n  328: \"VBA.INSERT.FILE\",\n  330: \"VBA.PROCEDURE.DEFINITION\",\n  336: \"ROUTING.SLIP\",\n  338: \"ROUTE.DOCUMENT\",\n  339: \"MAIL.LOGON\",\n  342: \"INSERT.PICTURE\",\n  343: \"EDIT.TOOL\",\n  344: \"GALLERY.DOUGHNUT\",\n  350: \"CHART.TREND\",\n  352: \"PIVOT.ITEM.PROPERTIES\",\n  354: \"WORKBOOK.INSERT\",\n  355: \"OPTIONS.TRANSITION\",\n  356: \"OPTIONS.GENERAL\",\n  370: \"FILTER.ADVANCED\",\n  373: \"MAIL.ADD.MAILER\",\n  374: \"MAIL.DELETE.MAILER\",\n  375: \"MAIL.REPLY\",\n  376: \"MAIL.REPLY.ALL\",\n  377: \"MAIL.FORWARD\",\n  378: \"MAIL.NEXT.LETTER\",\n  379: \"DATA.LABEL\",\n  380: \"INSERT.TITLE\",\n  381: \"FONT.PROPERTIES\",\n  382: \"MACRO.OPTIONS\",\n  383: \"WORKBOOK.HIDE\",\n  384: \"WORKBOOK.UNHIDE\",\n  385: \"WORKBOOK.DELETE\",\n  386: \"WORKBOOK.NAME\",\n  388: \"GALLERY.CUSTOM\",\n  390: \"ADD.CHART.AUTOFORMAT\",\n  391: \"DELETE.CHART.AUTOFORMAT\",\n  392: \"CHART.ADD.DATA\",\n  393: \"AUTO.OUTLINE\",\n  394: \"TAB.ORDER\",\n  395: \"SHOW.DIALOG\",\n  396: \"SELECT.ALL\",\n  397: \"UNGROUP.SHEETS\",\n  398: \"SUBTOTAL.CREATE\",\n  399: \"SUBTOTAL.REMOVE\",\n  400: \"RENAME.OBJECT\",\n  412: \"WORKBOOK.SCROLL\",\n  413: \"WORKBOOK.NEXT\",\n  414: \"WORKBOOK.PREV\",\n  415: \"WORKBOOK.TAB.SPLIT\",\n  416: \"FULL.SCREEN\",\n  417: \"WORKBOOK.PROTECT\",\n  420: \"SCROLLBAR.PROPERTIES\",\n  421: \"PIVOT.SHOW.PAGES\",\n  422: \"TEXT.TO.COLUMNS\",\n  423: \"FORMAT.CHARTTYPE\",\n  424: \"LINK.FORMAT\",\n  425: \"TRACER.DISPLAY\",\n  430: \"TRACER.NAVIGATE\",\n  431: \"TRACER.CLEAR\",\n  432: \"TRACER.ERROR\",\n  433: \"PIVOT.FIELD.GROUP\",\n  434: \"PIVOT.FIELD.UNGROUP\",\n  435: \"CHECKBOX.PROPERTIES\",\n  436: \"LABEL.PROPERTIES\",\n  437: \"LISTBOX.PROPERTIES\",\n  438: \"EDITBOX.PROPERTIES\",\n  439: \"PIVOT.REFRESH\",\n  440: \"LINK.COMBO\",\n  441: \"OPEN.TEXT\",\n  442: \"HIDE.DIALOG\",\n  443: \"SET.DIALOG.FOCUS\",\n  444: \"ENABLE.OBJECT\",\n  445: \"PUSHBUTTON.PROPERTIES\",\n  446: \"SET.DIALOG.DEFAULT\",\n  447: \"FILTER\",\n  448: \"FILTER.SHOW.ALL\",\n  449: \"CLEAR.OUTLINE\",\n  450: \"FUNCTION.WIZARD\",\n  451: \"ADD.LIST.ITEM\",\n  452: \"SET.LIST.ITEM\",\n  453: \"REMOVE.LIST.ITEM\",\n  454: \"SELECT.LIST.ITEM\",\n  455: \"SET.CONTROL.VALUE\",\n  456: \"SAVE.COPY.AS\",\n  458: \"OPTIONS.LISTS.ADD\",\n  459: \"OPTIONS.LISTS.DELETE\",\n  460: \"SERIES.AXES\",\n  461: \"SERIES.X\",\n  462: \"SERIES.Y\",\n  463: \"ERRORBAR.X\",\n  464: \"ERRORBAR.Y\",\n  465: \"FORMAT.CHART\",\n  466: \"SERIES.ORDER\",\n  467: \"MAIL.LOGOFF\",\n  468: \"CLEAR.ROUTING.SLIP\",\n  469: \"APP.ACTIVATE.MICROSOFT\",\n  470: \"MAIL.EDIT.MAILER\",\n  471: \"ON.SHEET\",\n  472: \"STANDARD.WIDTH\",\n  473: \"SCENARIO.MERGE\",\n  474: \"SUMMARY.INFO\",\n  475: \"FIND.FILE\",\n  476: \"ACTIVE.CELL.FONT\",\n  477: \"ENABLE.TIPWIZARD\",\n  478: \"VBA.MAKE.ADDIN\",\n  480: \"INSERTDATATABLE\",\n  481: \"WORKGROUP.OPTIONS\",\n  482: \"MAIL.SEND.MAILER\",\n  485: \"AUTOCORRECT\",\n  489: \"POST.DOCUMENT\",\n  491: \"PICKLIST\",\n  493: \"VIEW.SHOW\",\n  494: \"VIEW.DEFINE\",\n  495: \"VIEW.DELETE\",\n  509: \"SHEET.BACKGROUND\",\n  510: \"INSERT.MAP.OBJECT\",\n  511: \"OPTIONS.MENONO\",\n  517: \"MSOCHECKS\",\n  518: \"NORMAL\",\n  519: \"LAYOUT\",\n  520: \"RM.PRINT.AREA\",\n  521: \"CLEAR.PRINT.AREA\",\n  522: \"ADD.PRINT.AREA\",\n  523: \"MOVE.BRK\",\n  545: \"HIDECURR.NOTE\",\n  546: \"HIDEALL.NOTES\",\n  547: \"DELETE.NOTE\",\n  548: \"TRAVERSE.NOTES\",\n  549: \"ACTIVATE.NOTES\",\n  620: \"PROTECT.REVISIONS\",\n  621: \"UNPROTECT.REVISIONS\",\n  647: \"OPTIONS.ME\",\n  653: \"WEB.PUBLISH\",\n  667: \"NEWWEBQUERY\",\n  673: \"PIVOT.TABLE.CHART\",\n  753: \"OPTIONS.SAVE\",\n  755: \"OPTIONS.SPELL\",\n  808: \"HIDEALL.INKANNOTS\"\n};\nvar Ftab = {\n  0: \"COUNT\",\n  1: \"IF\",\n  2: \"ISNA\",\n  3: \"ISERROR\",\n  4: \"SUM\",\n  5: \"AVERAGE\",\n  6: \"MIN\",\n  7: \"MAX\",\n  8: \"ROW\",\n  9: \"COLUMN\",\n  10: \"NA\",\n  11: \"NPV\",\n  12: \"STDEV\",\n  13: \"DOLLAR\",\n  14: \"FIXED\",\n  15: \"SIN\",\n  16: \"COS\",\n  17: \"TAN\",\n  18: \"ATAN\",\n  19: \"PI\",\n  20: \"SQRT\",\n  21: \"EXP\",\n  22: \"LN\",\n  23: \"LOG10\",\n  24: \"ABS\",\n  25: \"INT\",\n  26: \"SIGN\",\n  27: \"ROUND\",\n  28: \"LOOKUP\",\n  29: \"INDEX\",\n  30: \"REPT\",\n  31: \"MID\",\n  32: \"LEN\",\n  33: \"VALUE\",\n  34: \"TRUE\",\n  35: \"FALSE\",\n  36: \"AND\",\n  37: \"OR\",\n  38: \"NOT\",\n  39: \"MOD\",\n  40: \"DCOUNT\",\n  41: \"DSUM\",\n  42: \"DAVERAGE\",\n  43: \"DMIN\",\n  44: \"DMAX\",\n  45: \"DSTDEV\",\n  46: \"VAR\",\n  47: \"DVAR\",\n  48: \"TEXT\",\n  49: \"LINEST\",\n  50: \"TREND\",\n  51: \"LOGEST\",\n  52: \"GROWTH\",\n  53: \"GOTO\",\n  54: \"HALT\",\n  55: \"RETURN\",\n  56: \"PV\",\n  57: \"FV\",\n  58: \"NPER\",\n  59: \"PMT\",\n  60: \"RATE\",\n  61: \"MIRR\",\n  62: \"IRR\",\n  63: \"RAND\",\n  64: \"MATCH\",\n  65: \"DATE\",\n  66: \"TIME\",\n  67: \"DAY\",\n  68: \"MONTH\",\n  69: \"YEAR\",\n  70: \"WEEKDAY\",\n  71: \"HOUR\",\n  72: \"MINUTE\",\n  73: \"SECOND\",\n  74: \"NOW\",\n  75: \"AREAS\",\n  76: \"ROWS\",\n  77: \"COLUMNS\",\n  78: \"OFFSET\",\n  79: \"ABSREF\",\n  80: \"RELREF\",\n  81: \"ARGUMENT\",\n  82: \"SEARCH\",\n  83: \"TRANSPOSE\",\n  84: \"ERROR\",\n  85: \"STEP\",\n  86: \"TYPE\",\n  87: \"ECHO\",\n  88: \"SET.NAME\",\n  89: \"CALLER\",\n  90: \"DEREF\",\n  91: \"WINDOWS\",\n  92: \"SERIES\",\n  93: \"DOCUMENTS\",\n  94: \"ACTIVE.CELL\",\n  95: \"SELECTION\",\n  96: \"RESULT\",\n  97: \"ATAN2\",\n  98: \"ASIN\",\n  99: \"ACOS\",\n  100: \"CHOOSE\",\n  101: \"HLOOKUP\",\n  102: \"VLOOKUP\",\n  103: \"LINKS\",\n  104: \"INPUT\",\n  105: \"ISREF\",\n  106: \"GET.FORMULA\",\n  107: \"GET.NAME\",\n  108: \"SET.VALUE\",\n  109: \"LOG\",\n  110: \"EXEC\",\n  111: \"CHAR\",\n  112: \"LOWER\",\n  113: \"UPPER\",\n  114: \"PROPER\",\n  115: \"LEFT\",\n  116: \"RIGHT\",\n  117: \"EXACT\",\n  118: \"TRIM\",\n  119: \"REPLACE\",\n  120: \"SUBSTITUTE\",\n  121: \"CODE\",\n  122: \"NAMES\",\n  123: \"DIRECTORY\",\n  124: \"FIND\",\n  125: \"CELL\",\n  126: \"ISERR\",\n  127: \"ISTEXT\",\n  128: \"ISNUMBER\",\n  129: \"ISBLANK\",\n  130: \"T\",\n  131: \"N\",\n  132: \"FOPEN\",\n  133: \"FCLOSE\",\n  134: \"FSIZE\",\n  135: \"FREADLN\",\n  136: \"FREAD\",\n  137: \"FWRITELN\",\n  138: \"FWRITE\",\n  139: \"FPOS\",\n  140: \"DATEVALUE\",\n  141: \"TIMEVALUE\",\n  142: \"SLN\",\n  143: \"SYD\",\n  144: \"DDB\",\n  145: \"GET.DEF\",\n  146: \"REFTEXT\",\n  147: \"TEXTREF\",\n  148: \"INDIRECT\",\n  149: \"REGISTER\",\n  150: \"CALL\",\n  151: \"ADD.BAR\",\n  152: \"ADD.MENU\",\n  153: \"ADD.COMMAND\",\n  154: \"ENABLE.COMMAND\",\n  155: \"CHECK.COMMAND\",\n  156: \"RENAME.COMMAND\",\n  157: \"SHOW.BAR\",\n  158: \"DELETE.MENU\",\n  159: \"DELETE.COMMAND\",\n  160: \"GET.CHART.ITEM\",\n  161: \"DIALOG.BOX\",\n  162: \"CLEAN\",\n  163: \"MDETERM\",\n  164: \"MINVERSE\",\n  165: \"MMULT\",\n  166: \"FILES\",\n  167: \"IPMT\",\n  168: \"PPMT\",\n  169: \"COUNTA\",\n  170: \"CANCEL.KEY\",\n  171: \"FOR\",\n  172: \"WHILE\",\n  173: \"BREAK\",\n  174: \"NEXT\",\n  175: \"INITIATE\",\n  176: \"REQUEST\",\n  177: \"POKE\",\n  178: \"EXECUTE\",\n  179: \"TERMINATE\",\n  180: \"RESTART\",\n  181: \"HELP\",\n  182: \"GET.BAR\",\n  183: \"PRODUCT\",\n  184: \"FACT\",\n  185: \"GET.CELL\",\n  186: \"GET.WORKSPACE\",\n  187: \"GET.WINDOW\",\n  188: \"GET.DOCUMENT\",\n  189: \"DPRODUCT\",\n  190: \"ISNONTEXT\",\n  191: \"GET.NOTE\",\n  192: \"NOTE\",\n  193: \"STDEVP\",\n  194: \"VARP\",\n  195: \"DSTDEVP\",\n  196: \"DVARP\",\n  197: \"TRUNC\",\n  198: \"ISLOGICAL\",\n  199: \"DCOUNTA\",\n  200: \"DELETE.BAR\",\n  201: \"UNREGISTER\",\n  204: \"USDOLLAR\",\n  205: \"FINDB\",\n  206: \"SEARCHB\",\n  207: \"REPLACEB\",\n  208: \"LEFTB\",\n  209: \"RIGHTB\",\n  210: \"MIDB\",\n  211: \"LENB\",\n  212: \"ROUNDUP\",\n  213: \"ROUNDDOWN\",\n  214: \"ASC\",\n  215: \"DBCS\",\n  216: \"RANK\",\n  219: \"ADDRESS\",\n  220: \"DAYS360\",\n  221: \"TODAY\",\n  222: \"VDB\",\n  223: \"ELSE\",\n  224: \"ELSE.IF\",\n  225: \"END.IF\",\n  226: \"FOR.CELL\",\n  227: \"MEDIAN\",\n  228: \"SUMPRODUCT\",\n  229: \"SINH\",\n  230: \"COSH\",\n  231: \"TANH\",\n  232: \"ASINH\",\n  233: \"ACOSH\",\n  234: \"ATANH\",\n  235: \"DGET\",\n  236: \"CREATE.OBJECT\",\n  237: \"VOLATILE\",\n  238: \"LAST.ERROR\",\n  239: \"CUSTOM.UNDO\",\n  240: \"CUSTOM.REPEAT\",\n  241: \"FORMULA.CONVERT\",\n  242: \"GET.LINK.INFO\",\n  243: \"TEXT.BOX\",\n  244: \"INFO\",\n  245: \"GROUP\",\n  246: \"GET.OBJECT\",\n  247: \"DB\",\n  248: \"PAUSE\",\n  251: \"RESUME\",\n  252: \"FREQUENCY\",\n  253: \"ADD.TOOLBAR\",\n  254: \"DELETE.TOOLBAR\",\n  255: \"User\",\n  256: \"RESET.TOOLBAR\",\n  257: \"EVALUATE\",\n  258: \"GET.TOOLBAR\",\n  259: \"GET.TOOL\",\n  260: \"SPELLING.CHECK\",\n  261: \"ERROR.TYPE\",\n  262: \"APP.TITLE\",\n  263: \"WINDOW.TITLE\",\n  264: \"SAVE.TOOLBAR\",\n  265: \"ENABLE.TOOL\",\n  266: \"PRESS.TOOL\",\n  267: \"REGISTER.ID\",\n  268: \"GET.WORKBOOK\",\n  269: \"AVEDEV\",\n  270: \"BETADIST\",\n  271: \"GAMMALN\",\n  272: \"BETAINV\",\n  273: \"BINOMDIST\",\n  274: \"CHIDIST\",\n  275: \"CHIINV\",\n  276: \"COMBIN\",\n  277: \"CONFIDENCE\",\n  278: \"CRITBINOM\",\n  279: \"EVEN\",\n  280: \"EXPONDIST\",\n  281: \"FDIST\",\n  282: \"FINV\",\n  283: \"FISHER\",\n  284: \"FISHERINV\",\n  285: \"FLOOR\",\n  286: \"GAMMADIST\",\n  287: \"GAMMAINV\",\n  288: \"CEILING\",\n  289: \"HYPGEOMDIST\",\n  290: \"LOGNORMDIST\",\n  291: \"LOGINV\",\n  292: \"NEGBINOMDIST\",\n  293: \"NORMDIST\",\n  294: \"NORMSDIST\",\n  295: \"NORMINV\",\n  296: \"NORMSINV\",\n  297: \"STANDARDIZE\",\n  298: \"ODD\",\n  299: \"PERMUT\",\n  300: \"POISSON\",\n  301: \"TDIST\",\n  302: \"WEIBULL\",\n  303: \"SUMXMY2\",\n  304: \"SUMX2MY2\",\n  305: \"SUMX2PY2\",\n  306: \"CHITEST\",\n  307: \"CORREL\",\n  308: \"COVAR\",\n  309: \"FORECAST\",\n  310: \"FTEST\",\n  311: \"INTERCEPT\",\n  312: \"PEARSON\",\n  313: \"RSQ\",\n  314: \"STEYX\",\n  315: \"SLOPE\",\n  316: \"TTEST\",\n  317: \"PROB\",\n  318: \"DEVSQ\",\n  319: \"GEOMEAN\",\n  320: \"HARMEAN\",\n  321: \"SUMSQ\",\n  322: \"KURT\",\n  323: \"SKEW\",\n  324: \"ZTEST\",\n  325: \"LARGE\",\n  326: \"SMALL\",\n  327: \"QUARTILE\",\n  328: \"PERCENTILE\",\n  329: \"PERCENTRANK\",\n  330: \"MODE\",\n  331: \"TRIMMEAN\",\n  332: \"TINV\",\n  334: \"MOVIE.COMMAND\",\n  335: \"GET.MOVIE\",\n  336: \"CONCATENATE\",\n  337: \"POWER\",\n  338: \"PIVOT.ADD.DATA\",\n  339: \"GET.PIVOT.TABLE\",\n  340: \"GET.PIVOT.FIELD\",\n  341: \"GET.PIVOT.ITEM\",\n  342: \"RADIANS\",\n  343: \"DEGREES\",\n  344: \"SUBTOTAL\",\n  345: \"SUMIF\",\n  346: \"COUNTIF\",\n  347: \"COUNTBLANK\",\n  348: \"SCENARIO.GET\",\n  349: \"OPTIONS.LISTS.GET\",\n  350: \"ISPMT\",\n  351: \"DATEDIF\",\n  352: \"DATESTRING\",\n  353: \"NUMBERSTRING\",\n  354: \"ROMAN\",\n  355: \"OPEN.DIALOG\",\n  356: \"SAVE.DIALOG\",\n  357: \"VIEW.GET\",\n  358: \"GETPIVOTDATA\",\n  359: \"HYPERLINK\",\n  360: \"PHONETIC\",\n  361: \"AVERAGEA\",\n  362: \"MAXA\",\n  363: \"MINA\",\n  364: \"STDEVPA\",\n  365: \"VARPA\",\n  366: \"STDEVA\",\n  367: \"VARA\",\n  368: \"BAHTTEXT\",\n  369: \"THAIDAYOFWEEK\",\n  370: \"THAIDIGIT\",\n  371: \"THAIMONTHOFYEAR\",\n  372: \"THAINUMSOUND\",\n  373: \"THAINUMSTRING\",\n  374: \"THAISTRINGLENGTH\",\n  375: \"ISTHAIDIGIT\",\n  376: \"ROUNDBAHTDOWN\",\n  377: \"ROUNDBAHTUP\",\n  378: \"THAIYEAR\",\n  379: \"RTD\",\n  380: \"CUBEVALUE\",\n  381: \"CUBEMEMBER\",\n  382: \"CUBEMEMBERPROPERTY\",\n  383: \"CUBERANKEDMEMBER\",\n  384: \"HEX2BIN\",\n  385: \"HEX2DEC\",\n  386: \"HEX2OCT\",\n  387: \"DEC2BIN\",\n  388: \"DEC2HEX\",\n  389: \"DEC2OCT\",\n  390: \"OCT2BIN\",\n  391: \"OCT2HEX\",\n  392: \"OCT2DEC\",\n  393: \"BIN2DEC\",\n  394: \"BIN2OCT\",\n  395: \"BIN2HEX\",\n  396: \"IMSUB\",\n  397: \"IMDIV\",\n  398: \"IMPOWER\",\n  399: \"IMABS\",\n  400: \"IMSQRT\",\n  401: \"IMLN\",\n  402: \"IMLOG2\",\n  403: \"IMLOG10\",\n  404: \"IMSIN\",\n  405: \"IMCOS\",\n  406: \"IMEXP\",\n  407: \"IMARGUMENT\",\n  408: \"IMCONJUGATE\",\n  409: \"IMAGINARY\",\n  410: \"IMREAL\",\n  411: \"COMPLEX\",\n  412: \"IMSUM\",\n  413: \"IMPRODUCT\",\n  414: \"SERIESSUM\",\n  415: \"FACTDOUBLE\",\n  416: \"SQRTPI\",\n  417: \"QUOTIENT\",\n  418: \"DELTA\",\n  419: \"GESTEP\",\n  420: \"ISEVEN\",\n  421: \"ISODD\",\n  422: \"MROUND\",\n  423: \"ERF\",\n  424: \"ERFC\",\n  425: \"BESSELJ\",\n  426: \"BESSELK\",\n  427: \"BESSELY\",\n  428: \"BESSELI\",\n  429: \"XIRR\",\n  430: \"XNPV\",\n  431: \"PRICEMAT\",\n  432: \"YIELDMAT\",\n  433: \"INTRATE\",\n  434: \"RECEIVED\",\n  435: \"DISC\",\n  436: \"PRICEDISC\",\n  437: \"YIELDDISC\",\n  438: \"TBILLEQ\",\n  439: \"TBILLPRICE\",\n  440: \"TBILLYIELD\",\n  441: \"PRICE\",\n  442: \"YIELD\",\n  443: \"DOLLARDE\",\n  444: \"DOLLARFR\",\n  445: \"NOMINAL\",\n  446: \"EFFECT\",\n  447: \"CUMPRINC\",\n  448: \"CUMIPMT\",\n  449: \"EDATE\",\n  450: \"EOMONTH\",\n  451: \"YEARFRAC\",\n  452: \"COUPDAYBS\",\n  453: \"COUPDAYS\",\n  454: \"COUPDAYSNC\",\n  455: \"COUPNCD\",\n  456: \"COUPNUM\",\n  457: \"COUPPCD\",\n  458: \"DURATION\",\n  459: \"MDURATION\",\n  460: \"ODDLPRICE\",\n  461: \"ODDLYIELD\",\n  462: \"ODDFPRICE\",\n  463: \"ODDFYIELD\",\n  464: \"RANDBETWEEN\",\n  465: \"WEEKNUM\",\n  466: \"AMORDEGRC\",\n  467: \"AMORLINC\",\n  468: \"CONVERT\",\n  724: \"SHEETJS\",\n  469: \"ACCRINT\",\n  470: \"ACCRINTM\",\n  471: \"WORKDAY\",\n  472: \"NETWORKDAYS\",\n  473: \"GCD\",\n  474: \"MULTINOMIAL\",\n  475: \"LCM\",\n  476: \"FVSCHEDULE\",\n  477: \"CUBEKPIMEMBER\",\n  478: \"CUBESET\",\n  479: \"CUBESETCOUNT\",\n  480: \"IFERROR\",\n  481: \"COUNTIFS\",\n  482: \"SUMIFS\",\n  483: \"AVERAGEIF\",\n  484: \"AVERAGEIFS\"\n};\nvar FtabArgc = {\n  2: 1,\n  3: 1,\n  10: 0,\n  15: 1,\n  16: 1,\n  17: 1,\n  18: 1,\n  19: 0,\n  20: 1,\n  21: 1,\n  22: 1,\n  23: 1,\n  24: 1,\n  25: 1,\n  26: 1,\n  27: 2,\n  30: 2,\n  31: 3,\n  32: 1,\n  33: 1,\n  34: 0,\n  35: 0,\n  38: 1,\n  39: 2,\n  40: 3,\n  41: 3,\n  42: 3,\n  43: 3,\n  44: 3,\n  45: 3,\n  47: 3,\n  48: 2,\n  53: 1,\n  61: 3,\n  63: 0,\n  65: 3,\n  66: 3,\n  67: 1,\n  68: 1,\n  69: 1,\n  70: 1,\n  71: 1,\n  72: 1,\n  73: 1,\n  74: 0,\n  75: 1,\n  76: 1,\n  77: 1,\n  79: 2,\n  80: 2,\n  83: 1,\n  85: 0,\n  86: 1,\n  89: 0,\n  90: 1,\n  94: 0,\n  95: 0,\n  97: 2,\n  98: 1,\n  99: 1,\n  101: 3,\n  102: 3,\n  105: 1,\n  106: 1,\n  108: 2,\n  111: 1,\n  112: 1,\n  113: 1,\n  114: 1,\n  117: 2,\n  118: 1,\n  119: 4,\n  121: 1,\n  126: 1,\n  127: 1,\n  128: 1,\n  129: 1,\n  130: 1,\n  131: 1,\n  133: 1,\n  134: 1,\n  135: 1,\n  136: 2,\n  137: 2,\n  138: 2,\n  140: 1,\n  141: 1,\n  142: 3,\n  143: 4,\n  144: 4,\n  161: 1,\n  162: 1,\n  163: 1,\n  164: 1,\n  165: 2,\n  172: 1,\n  175: 2,\n  176: 2,\n  177: 3,\n  178: 2,\n  179: 1,\n  184: 1,\n  186: 1,\n  189: 3,\n  190: 1,\n  195: 3,\n  196: 3,\n  197: 1,\n  198: 1,\n  199: 3,\n  201: 1,\n  207: 4,\n  210: 3,\n  211: 1,\n  212: 2,\n  213: 2,\n  214: 1,\n  215: 1,\n  225: 0,\n  229: 1,\n  230: 1,\n  231: 1,\n  232: 1,\n  233: 1,\n  234: 1,\n  235: 3,\n  244: 1,\n  247: 4,\n  252: 2,\n  257: 1,\n  261: 1,\n  271: 1,\n  273: 4,\n  274: 2,\n  275: 2,\n  276: 2,\n  277: 3,\n  278: 3,\n  279: 1,\n  280: 3,\n  281: 3,\n  282: 3,\n  283: 1,\n  284: 1,\n  285: 2,\n  286: 4,\n  287: 3,\n  288: 2,\n  289: 4,\n  290: 3,\n  291: 3,\n  292: 3,\n  293: 4,\n  294: 1,\n  295: 3,\n  296: 1,\n  297: 3,\n  298: 1,\n  299: 2,\n  300: 3,\n  301: 3,\n  302: 4,\n  303: 2,\n  304: 2,\n  305: 2,\n  306: 2,\n  307: 2,\n  308: 2,\n  309: 3,\n  310: 2,\n  311: 2,\n  312: 2,\n  313: 2,\n  314: 2,\n  315: 2,\n  316: 4,\n  325: 2,\n  326: 2,\n  327: 2,\n  328: 2,\n  331: 2,\n  332: 2,\n  337: 2,\n  342: 1,\n  343: 1,\n  346: 2,\n  347: 1,\n  350: 4,\n  351: 3,\n  352: 1,\n  353: 2,\n  360: 1,\n  368: 1,\n  369: 1,\n  370: 1,\n  371: 1,\n  372: 1,\n  373: 1,\n  374: 1,\n  375: 1,\n  376: 1,\n  377: 1,\n  378: 1,\n  382: 3,\n  385: 1,\n  392: 1,\n  393: 1,\n  396: 2,\n  397: 2,\n  398: 2,\n  399: 1,\n  400: 1,\n  401: 1,\n  402: 1,\n  403: 1,\n  404: 1,\n  405: 1,\n  406: 1,\n  407: 1,\n  408: 1,\n  409: 1,\n  410: 1,\n  414: 4,\n  415: 1,\n  416: 1,\n  417: 2,\n  420: 1,\n  421: 1,\n  422: 2,\n  424: 1,\n  425: 2,\n  426: 2,\n  427: 2,\n  428: 2,\n  430: 3,\n  438: 3,\n  439: 3,\n  440: 3,\n  443: 2,\n  444: 2,\n  445: 2,\n  446: 2,\n  447: 6,\n  448: 6,\n  449: 2,\n  450: 2,\n  464: 2,\n  468: 3,\n  476: 2,\n  479: 1,\n  480: 2,\n  65535: 0\n};\n/* Part 3 TODO: actually parse formulae */\nfunction ods_to_csf_formula(f /*:string*/) /*:string*/{\n  if (f.slice(0, 3) == \"of:\") f = f.slice(3);\n  /* 5.2 Basic Expressions */\n  if (f.charCodeAt(0) == 61) {\n    f = f.slice(1);\n    if (f.charCodeAt(0) == 61) f = f.slice(1);\n  }\n  f = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n  /* Part 3 Section 5.8 References */\n  f = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function ($$, $1) {\n    return $1.replace(/\\./g, \"\");\n  });\n  f = f.replace(/\\$'([^']|'')+'/g, function ($$) {\n    return $$.slice(1);\n  });\n  f = f.replace(/\\$([^\\]\\. #$]+)/g, function ($$, $1) {\n    return $1.match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})?$/) ? $$ : $1;\n  });\n  /* TODO: something other than this */\n  f = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n  return f.replace(/[;~]/g, \",\").replace(/\\|/g, \";\");\n}\nfunction csf_to_ods_formula(f /*:string*/) /*:string*/{\n  var o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g, \":\");\n  /* TODO: something other than this */\n  return o.replace(/;/g, \"|\").replace(/,/g, \";\");\n}\nfunction ods_to_csf_3D(r /*:string*/) /*:[string, string]*/{\n  r = r.replace(/\\$'([^']|'')+'/g, function ($$) {\n    return $$.slice(1);\n  });\n  r = r.replace(/\\$([^\\]\\. #$]+)/g, function ($$, $1) {\n    return $1.match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})?$/) ? $$ : $1;\n  });\n  var a = r.split(\":\");\n  var s = a[0].split(\".\")[0];\n  return [s, a[0].split(\".\")[1] + (a.length > 1 ? \":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0]) : \"\")];\n}\nfunction csf_to_ods_3D(r /*:string*/) /*:string*/{\n  return r.replace(/!/, \".\").replace(/:/, \":.\");\n}\nvar strs = {}; // shared strings\nvar _ssfopts = {}; // spreadsheet formatting options\n\n/*global Map */\nvar browser_has_Map = typeof Map !== 'undefined';\nfunction get_sst_id(sst /*:SST*/, str /*:string*/, rev) /*:number*/{\n  var i = 0,\n    len = sst.length;\n  if (rev) {\n    if (browser_has_Map ? rev.has(str) : Object.prototype.hasOwnProperty.call(rev, str)) {\n      var revarr = browser_has_Map ? rev.get(str) : rev[str];\n      for (; i < revarr.length; ++i) {\n        if (sst[revarr[i]].t === str) {\n          sst.Count++;\n          return revarr[i];\n        }\n      }\n    }\n  } else for (; i < len; ++i) {\n    if (sst[i].t === str) {\n      sst.Count++;\n      return i;\n    }\n  }\n  sst[len] = {\n    t: str\n  } /*:any*/;\n  sst.Count++;\n  sst.Unique++;\n  if (rev) {\n    if (browser_has_Map) {\n      if (!rev.has(str)) rev.set(str, []);\n      rev.get(str).push(len);\n    } else {\n      if (!Object.prototype.hasOwnProperty.call(rev, str)) rev[str] = [];\n      rev[str].push(len);\n    }\n  }\n  return len;\n}\nfunction col_obj_w(C /*:number*/, col) {\n  var p = {\n    min: C + 1,\n    max: C + 1\n  } /*:any*/;\n  /* wch (chars), wpx (pixels) */\n  var wch = -1;\n  if (col.MDW) MDW = col.MDW;\n  if (col.width != null) p.customWidth = 1;else if (col.wpx != null) wch = px2char(col.wpx);else if (col.wch != null) wch = col.wch;\n  if (wch > -1) {\n    p.width = char2width(wch);\n    p.customWidth = 1;\n  } else if (col.width != null) p.width = col.width;\n  if (col.hidden) p.hidden = true;\n  if (col.level != null) {\n    p.outlineLevel = p.level = col.level;\n  }\n  return p;\n}\nfunction default_margins(margins /*:Margins*/, mode /*:?string*/) {\n  if (!margins) return;\n  var defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n  if (mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n  if (margins.left == null) margins.left = defs[0];\n  if (margins.right == null) margins.right = defs[1];\n  if (margins.top == null) margins.top = defs[2];\n  if (margins.bottom == null) margins.bottom = defs[3];\n  if (margins.header == null) margins.header = defs[4];\n  if (margins.footer == null) margins.footer = defs[5];\n}\nfunction get_cell_style(styles /*:Array<any>*/, cell /*:Cell*/, opts) {\n  var z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n  var i = 0x3c,\n    len = styles.length;\n  if (z == null && opts.ssf) {\n    for (; i < 0x188; ++i) if (opts.ssf[i] == null) {\n      SSF__load(cell.z, i);\n      // $FlowIgnore\n      opts.ssf[i] = cell.z;\n      opts.revssf[cell.z] = z = i;\n      break;\n    }\n  }\n  for (i = 0; i != len; ++i) if (styles[i].numFmtId === z) return i;\n  styles[len] = {\n    numFmtId: z,\n    fontId: 0,\n    fillId: 0,\n    borderId: 0,\n    xfId: 0,\n    applyNumberFormat: 1\n  };\n  return len;\n}\nfunction safe_format(p /*:Cell*/, fmtid /*:number*/, fillid /*:?number*/, opts, themes, styles, date1904) {\n  try {\n    if (opts.cellNF) p.z = table_fmt[fmtid];\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (p.t === 'z' && !opts.cellStyles) return;\n  if (p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\n  if ((!opts || opts.cellText !== false) && p.t !== 'z') try {\n    if (table_fmt[fmtid] == null) SSF__load(SSFImplicit[fmtid] || \"General\", fmtid);\n    if (p.t === 'e') p.w = p.w || BErr[p.v];else if (fmtid === 0) {\n      if (p.t === 'n') {\n        if ((p.v | 0) === p.v) p.w = p.v.toString(10);else p.w = SSF_general_num(p.v);\n      } else if (p.t === 'd') {\n        var dd = datenum(p.v, !!date1904);\n        if ((dd | 0) === dd) p.w = dd.toString(10);else p.w = SSF_general_num(dd);\n      } else if (p.v === undefined) return \"\";else p.w = SSF_general(p.v, _ssfopts);\n    } else if (p.t === 'd') p.w = SSF_format(fmtid, datenum(p.v, !!date1904), _ssfopts);else p.w = SSF_format(fmtid, p.v, _ssfopts);\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (!opts.cellStyles) return;\n  if (fillid != null) try {\n    p.s = styles.Fills[fillid];\n    if (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n      p.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n      if (opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n    }\n    if (p.s.bgColor && p.s.bgColor.theme) {\n      p.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n      if (opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n    }\n  } catch (e) {\n    if (opts.WTF && styles.Fills) throw e;\n  }\n}\nfunction check_ws(ws /*:Worksheet*/, sname /*:string*/, i /*:number*/) {\n  if (ws && ws['!ref']) {\n    var range = safe_decode_range(ws['!ref']);\n    if (range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n  }\n}\nfunction parse_ws_xml_dim(ws /*:Worksheet*/, s /*:string*/) {\n  var d = safe_decode_range(s);\n  if (d.s.r <= d.e.r && d.s.c <= d.e.c && d.s.r >= 0 && d.s.c >= 0) ws[\"!ref\"] = encode_range(d);\n}\nvar mergecregex = /<(?:\\w+:)?mergeCell ref=[\"'][A-Z0-9:]+['\"]\\s*[\\/]?>/g;\nvar hlinkregex = /<(?:\\w+:)?hyperlink [^<>]*>/mg;\nvar dimregex = /\"(\\w*:\\w*)\"/;\nvar colregex = /<(?:\\w+:)?col\\b[^<>]*[\\/]?>/g;\nvar afregex = /<(?:\\w+:)?autoFilter[^>]*/g;\nvar marginregex = /<(?:\\w+:)?pageMargins[^<>]*\\/>/g;\nvar sheetprregex = /<(?:\\w+:)?sheetPr\\b[^<>]*?\\/>/;\n\n/* 18.3 Worksheets */\nfunction parse_ws_xml(data /*:?string*/, opts, idx /*:number*/, rels, wb /*:WBWBProps*/, themes, styles) /*:Worksheet*/{\n  if (!data) return data;\n  if (!rels) rels = {\n    '!id': {}\n  };\n  if (DENSE != null && opts.dense == null) opts.dense = DENSE;\n\n  /* 18.3.1.99 worksheet CT_Worksheet */\n  var s = {} /*:any*/;\n  if (opts.dense) s[\"!data\"] = [];\n  var refguess /*:Range*/ = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  } /*:any*/;\n  var data1 = \"\",\n    data2 = \"\";\n  var mtch /*:?any*/ = str_match_xml_ns(data, \"sheetData\");\n  if (mtch) {\n    data1 = data.slice(0, mtch.index);\n    data2 = data.slice(mtch.index + mtch[0].length);\n  } else data1 = data2 = data;\n\n  /* 18.3.1.82 sheetPr CT_SheetPr */\n  var sheetPr = data1.match(sheetprregex);\n  if (sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);else if (sheetPr = str_match_xml_ns(data1, \"sheetPr\")) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1] || \"\", s, wb, idx, styles, themes);\n\n  /* 18.3.1.35 dimension CT_SheetDimension */\n  var ridx = (data1.match(/<(?:\\w*:)?dimension/) || {\n    index: -1\n  }).index;\n  if (ridx > 0) {\n    var ref = data1.slice(ridx, ridx + 50).match(dimregex);\n    if (ref && !(opts && opts.nodim)) parse_ws_xml_dim(s, ref[1]);\n  }\n\n  /* 18.3.1.88 sheetViews CT_SheetViews */\n  var svs = str_match_xml_ns(data1, \"sheetViews\");\n  if (svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n  /* 18.3.1.17 cols CT_Cols */\n  var columns /*:Array<ColInfo>*/ = [];\n  if (opts.cellStyles) {\n    /* 18.3.1.13 col CT_Col */\n    var cols = data1.match(colregex);\n    if (cols) parse_ws_xml_cols(columns, cols);\n  }\n\n  /* 18.3.1.80 sheetData CT_SheetData ? */\n  if (mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles, wb);\n\n  /* 18.3.1.2  autoFilter CT_AutoFilter */\n  var afilter = data2.match(afregex);\n  if (afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n  /* 18.3.1.55 mergeCells CT_MergeCells */\n  var merges /*:Array<Range>*/ = [];\n  var _merge = data2.match(mergecregex);\n  if (_merge) for (ridx = 0; ridx != _merge.length; ++ridx) merges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\") + 1));\n\n  /* 18.3.1.48 hyperlinks CT_Hyperlinks */\n  var hlink = data2.match(hlinkregex);\n  if (hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n  /* 18.3.1.62 pageMargins CT_PageMargins */\n  var margins = data2.match(marginregex);\n  if (margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n\n  /* legacyDrawing */\n  var m;\n  if (m = data2.match(/legacyDrawing r:id=\"(.*?)\"/)) s['!legrel'] = m[1];\n  if (opts && opts.nodim) refguess.s.c = refguess.s.r = 0;\n  if (!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n  if (opts.sheetRows > 0 && s[\"!ref\"]) {\n    var tmpref = safe_decode_range(s[\"!ref\"]);\n    if (opts.sheetRows <= +tmpref.e.r) {\n      tmpref.e.r = opts.sheetRows - 1;\n      if (tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n      if (tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n      if (tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n      if (tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n      s[\"!fullref\"] = s[\"!ref\"];\n      s[\"!ref\"] = encode_range(tmpref);\n    }\n  }\n  if (columns.length > 0) s[\"!cols\"] = columns;\n  if (merges.length > 0) s[\"!merges\"] = merges;\n  if (rels['!id'][s['!legrel']]) s['!legdrawel'] = rels['!id'][s['!legrel']];\n  return s;\n}\nfunction write_ws_xml_merges(merges /*:Array<Range>*/) /*:string*/{\n  if (merges.length === 0) return \"\";\n  var o = '<mergeCells count=\"' + merges.length + '\">';\n  for (var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n  return o + '</mergeCells>';\n}\n\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\nfunction parse_ws_xml_sheetpr(sheetPr /*:string*/, s, wb /*:WBWBProps*/, idx /*:number*/) {\n  var data = parsexmltag(sheetPr);\n  if (!wb.Sheets[idx]) wb.Sheets[idx] = {};\n  if (data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));\n}\nfunction parse_ws_xml_sheetpr2(sheetPr /*:string*/, body /*:string*/, s, wb /*:WBWBProps*/, idx /*:number*/) {\n  parse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(\">\")), s, wb, idx);\n}\nfunction write_ws_xml_sheetpr(ws, wb, idx, opts, o) {\n  var needed = false;\n  var props = {},\n    payload = null;\n  if (opts.bookType !== 'xlsx' && wb.vbaraw) {\n    var cname = wb.SheetNames[idx];\n    try {\n      if (wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname;\n    } catch (e) {}\n    needed = true;\n    props.codeName = utf8write(escapexml(cname));\n  }\n  if (ws && ws[\"!outline\"]) {\n    var outlineprops = {\n      summaryBelow: 1,\n      summaryRight: 1\n    };\n    if (ws[\"!outline\"].above) outlineprops.summaryBelow = 0;\n    if (ws[\"!outline\"].left) outlineprops.summaryRight = 0;\n    payload = (payload || \"\") + writextag('outlinePr', null, outlineprops);\n  }\n  if (!needed && !payload) return;\n  o[o.length] = writextag('sheetPr', payload, props);\n}\n\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\nvar sheetprot_deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\nvar sheetprot_deftrue = [\"formatColumns\", \"formatRows\", \"formatCells\", \"insertColumns\", \"insertRows\", \"insertHyperlinks\", \"deleteColumns\", \"deleteRows\", \"sort\", \"autoFilter\", \"pivotTables\"];\nfunction write_ws_xml_protection(sp) /*:string*/{\n  // algorithmName, hashValue, saltValue, spinCount\n  var o = {\n    sheet: 1\n  } /*:any*/;\n  sheetprot_deffalse.forEach(function (n) {\n    if (sp[n] != null && sp[n]) o[n] = \"1\";\n  });\n  sheetprot_deftrue.forEach(function (n) {\n    if (sp[n] != null && !sp[n]) o[n] = \"0\";\n  });\n  /* TODO: algorithm */\n  if (sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n  return writextag('sheetProtection', null, o);\n}\nfunction parse_ws_xml_hlinks(s, data /*:Array<string>*/, rels) {\n  var dense = s[\"!data\"] != null;\n  for (var i = 0; i != data.length; ++i) {\n    var val = parsexmltag(utf8read(data[i]), true);\n    if (!val.ref) return;\n    var rel = ((rels || {})['!id'] || [])[val.id];\n    if (rel) {\n      val.Target = rel.Target;\n      if (val.location) val.Target += \"#\" + unescapexml(val.location);\n    } else {\n      val.Target = \"#\" + unescapexml(val.location);\n      rel = {\n        Target: val.Target,\n        TargetMode: 'Internal'\n      };\n    }\n    val.Rel = rel;\n    if (val.tooltip) {\n      val.Tooltip = val.tooltip;\n      delete val.tooltip;\n    }\n    var rng = safe_decode_range(val.ref);\n    for (var R = rng.s.r; R <= rng.e.r; ++R) for (var C = rng.s.c; C <= rng.e.c; ++C) {\n      var addr = encode_col(C) + encode_row(R);\n      if (dense) {\n        if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n        if (!s[\"!data\"][R][C]) s[\"!data\"][R][C] = {\n          t: \"z\",\n          v: undefined\n        };\n        s[\"!data\"][R][C].l = val;\n      } else {\n        if (!s[addr]) s[addr] = {\n          t: \"z\",\n          v: undefined\n        };\n        s[addr].l = val;\n      }\n    }\n  }\n}\nfunction parse_ws_xml_margins(margin) {\n  var o = {};\n  [\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function (k) {\n    if (margin[k]) o[k] = parseFloat(margin[k]);\n  });\n  return o;\n}\nfunction write_ws_xml_margins(margin) /*:string*/{\n  default_margins(margin);\n  return writextag('pageMargins', null, margin);\n}\nfunction parse_ws_xml_cols(columns, cols) {\n  var seencol = false;\n  for (var coli = 0; coli != cols.length; ++coli) {\n    var coll = parsexmltag(cols[coli], true);\n    if (coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n    var colm = parseInt(coll.min, 10) - 1,\n      colM = parseInt(coll.max, 10) - 1;\n    if (coll.outlineLevel) coll.level = +coll.outlineLevel || 0;\n    delete coll.min;\n    delete coll.max;\n    coll.width = +coll.width;\n    if (!seencol && coll.width) {\n      seencol = true;\n      find_mdw_colw(coll.width);\n    }\n    process_col(coll);\n    while (colm <= colM) columns[colm++] = dup(coll);\n  }\n}\nfunction write_ws_xml_cols(ws, cols) /*:string*/{\n  var o = [\"<cols>\"],\n    col;\n  for (var i = 0; i != cols.length; ++i) {\n    if (!(col = cols[i])) continue;\n    o[o.length] = writextag('col', null, col_obj_w(i, col));\n  }\n  o[o.length] = \"</cols>\";\n  return o.join(\"\");\n}\nfunction parse_ws_xml_autofilter(data /*:string*/) {\n  var o = {\n    ref: (data.match(/ref=\"([^\"]*)\"/) || [])[1]\n  };\n  return o;\n}\nfunction write_ws_xml_autofilter(data, ws, wb, idx) /*:string*/{\n  var ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n  if (!wb.Workbook) wb.Workbook = {\n    Sheets: []\n  } /*:any*/;\n  if (!wb.Workbook.Names) wb.Workbook.Names = [];\n  var names /*: Array<any> */ = wb.Workbook.Names;\n  var range = decode_range(ref);\n  if (range.s.r == range.e.r) {\n    range.e.r = decode_range(ws[\"!ref\"]).e.r;\n    ref = encode_range(range);\n  }\n  for (var i = 0; i < names.length; ++i) {\n    var name = names[i];\n    if (name.Name != '_xlnm._FilterDatabase') continue;\n    if (name.Sheet != idx) continue;\n    name.Ref = formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref);\n    break;\n  }\n  if (i == names.length) names.push({\n    Name: '_xlnm._FilterDatabase',\n    Sheet: idx,\n    Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref\n  });\n  return writextag(\"autoFilter\", null, {\n    ref: ref\n  });\n}\n\n/* 18.3.1.88 sheetViews CT_SheetViews */\n/* 18.3.1.87 sheetView CT_SheetView */\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^<>a-z][^<>]*)?\\/?>/g;\nfunction parse_ws_xml_sheetviews(data, wb /*:WBWBProps*/) {\n  if (!wb.Views) wb.Views = [{}];\n  (data.match(sviewregex) || []).forEach(function (r /*:string*/, i /*:number*/) {\n    var tag = parsexmltag(r);\n    // $FlowIgnore\n    if (!wb.Views[i]) wb.Views[i] = {};\n    // $FlowIgnore\n    if (+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;\n    // $FlowIgnore\n    if (tag.rightToLeft && parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;\n  });\n}\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb) /*:string*/{\n  var sview = {\n    workbookViewId: \"0\"\n  } /*:any*/;\n  // $FlowIgnore\n  if ((((wb || {}).Workbook || {}).Views || [])[0]) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n  return writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n}\nfunction write_ws_xml_cell(cell /*:Cell*/, ref, ws, opts, idx, wb, date1904) /*:string*/{\n  if (cell.c) ws['!comments'].push([ref, cell.c]);\n  if ((cell.v === undefined || cell.t === \"z\" && !(opts || {}).sheetStubs) && typeof cell.f !== \"string\" && typeof cell.z == \"undefined\") return \"\";\n  var vv = \"\";\n  var oldt = cell.t,\n    oldv = cell.v;\n  if (cell.t !== \"z\") switch (cell.t) {\n    case 'b':\n      vv = cell.v ? \"1\" : \"0\";\n      break;\n    case 'n':\n      if (isNaN(cell.v)) {\n        cell.t = \"e\";\n        vv = BErr[cell.v = 0x24];\n      } // #NUM!\n      else if (!isFinite(cell.v)) {\n        cell.t = \"e\";\n        vv = BErr[cell.v = 0x07];\n      } // #DIV/0!\n      else vv = '' + cell.v;\n      break;\n    case 'e':\n      vv = BErr[cell.v];\n      break;\n    case 'd':\n      if (opts && opts.cellDates) {\n        var _vv = parseDate(cell.v, date1904);\n        vv = _vv.toISOString();\n        if (_vv.getUTCFullYear() < 1900) vv = vv.slice(vv.indexOf(\"T\") + 1).replace(\"Z\", \"\");\n      } else {\n        cell = dup(cell);\n        cell.t = 'n';\n        vv = '' + (cell.v = datenum(parseDate(cell.v, date1904), date1904));\n      }\n      if (typeof cell.z === 'undefined') cell.z = table_fmt[14];\n      break;\n    default:\n      vv = cell.v;\n      break;\n  }\n  var v = cell.t == \"z\" || cell.v == null ? \"\" : writetag('v', escapexml(vv)),\n    o = {\n      r: ref\n    } /*:any*/;\n  /* TODO: cell style */\n  var os = get_cell_style(opts.cellXfs, cell, opts);\n  if (os !== 0) o.s = os;\n  switch (cell.t) {\n    case 'n':\n      break;\n    case 'd':\n      o.t = \"d\";\n      break;\n    case 'b':\n      o.t = \"b\";\n      break;\n    case 'e':\n      o.t = \"e\";\n      break;\n    case 'z':\n      break;\n    default:\n      if (cell.v == null) {\n        delete cell.t;\n        break;\n      }\n      if (cell.v.length > 32767) throw new Error(\"Text length must not exceed 32767 characters\");\n      if (opts && opts.bookSST) {\n        v = writetag('v', '' + get_sst_id(opts.Strings, cell.v, opts.revStrings));\n        o.t = \"s\";\n        break;\n      } else o.t = \"str\";\n      break;\n  }\n  if (cell.t != oldt) {\n    cell.t = oldt;\n    cell.v = oldv;\n  }\n  if (typeof cell.f == \"string\" && cell.f) {\n    var ff = cell.F && cell.F.slice(0, ref.length) == ref ? {\n      t: \"array\",\n      ref: cell.F\n    } : null;\n    v = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n  }\n  if (cell.l) {\n    cell.l.display = escapexml(vv);\n    ws['!links'].push([ref, cell.l]);\n  }\n  if (cell.D) o.cm = 1;\n  return writextag('c', v, o);\n}\nvar parse_ws_xml_data = /*#__PURE__*/function () {\n  var cellregex = /<(?:\\w+:)?c[ \\/>]/,\n    rowregex = /<\\/(?:\\w+:)?row>/;\n  var rregex = /r=[\"']([^\"']*)[\"']/;\n  var refregex = /ref=[\"']([^\"']*)[\"']/;\n  return function parse_ws_xml_data(sdata /*:string*/, s, opts, guess /*:Range*/, themes, styles, wb) {\n    var ri = 0,\n      x = \"\",\n      cells /*:Array<string>*/ = [],\n      cref /*:?Array<string>*/ = [],\n      idx = 0,\n      i = 0,\n      cc = 0,\n      d = \"\",\n      p /*:any*/;\n    var tag,\n      tagr = 0,\n      tagc = 0;\n    var sstr, ftag;\n    var fmtid = 0,\n      fillid = 0;\n    var do_format = Array.isArray(styles.CellXf),\n      cf;\n    var arrayf /*:Array<[Range, string]>*/ = [];\n    var sharedf = [];\n    var dense = s[\"!data\"] != null;\n    var rows /*:Array<RowInfo>*/ = [],\n      rowobj = {},\n      rowrite = false;\n    var sheetStubs = !!opts.sheetStubs;\n    var date1904 = !!((wb || {}).WBProps || {}).date1904;\n    for (var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n      x = marr[mt].trim();\n      var xlen = x.length;\n      if (xlen === 0) continue;\n\n      /* 18.3.1.73 row CT_Row */\n      var rstarti = 0;\n      outa: for (ri = 0; ri < xlen; ++ri) switch ( /*x.charCodeAt(ri)*/x[ri]) {\n        case \">\" /*62*/:\n          if ( /*x.charCodeAt(ri-1) != 47*/x[ri - 1] != \"/\") {\n            ++ri;\n            break outa;\n          }\n          if (opts && opts.cellStyles) {\n            // TODO: avoid duplication\n            tag = parsexmltag(x.slice(rstarti, ri), true);\n            tagr = tag.r != null ? parseInt(tag.r, 10) : tagr + 1;\n            tagc = -1;\n            if (opts.sheetRows && opts.sheetRows < tagr) continue;\n            rowobj = {};\n            rowrite = false;\n            if (tag.ht) {\n              rowrite = true;\n              rowobj.hpt = parseFloat(tag.ht);\n              rowobj.hpx = pt2px(rowobj.hpt);\n            }\n            if (tag.hidden && parsexmlbool(tag.hidden)) {\n              rowrite = true;\n              rowobj.hidden = true;\n            }\n            if (tag.outlineLevel != null) {\n              rowrite = true;\n              rowobj.level = +tag.outlineLevel;\n            }\n            if (rowrite) rows[tagr - 1] = rowobj;\n          }\n          break;\n        case \"<\" /*60*/:\n          rstarti = ri;\n          break;\n      }\n      if (rstarti >= ri) break;\n      tag = parsexmltag(x.slice(rstarti, ri), true);\n      tagr = tag.r != null ? parseInt(tag.r, 10) : tagr + 1;\n      tagc = -1;\n      if (opts.sheetRows && opts.sheetRows < tagr) continue;\n      if (!opts.nodim) {\n        if (guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n        if (guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n      }\n      if (opts && opts.cellStyles) {\n        rowobj = {};\n        rowrite = false;\n        if (tag.ht) {\n          rowrite = true;\n          rowobj.hpt = parseFloat(tag.ht);\n          rowobj.hpx = pt2px(rowobj.hpt);\n        }\n        if (tag.hidden && parsexmlbool(tag.hidden)) {\n          rowrite = true;\n          rowobj.hidden = true;\n        }\n        if (tag.outlineLevel != null) {\n          rowrite = true;\n          rowobj.level = +tag.outlineLevel;\n        }\n        if (rowrite) rows[tagr - 1] = rowobj;\n      }\n\n      /* 18.3.1.4 c CT_Cell */\n      cells = x.slice(ri).split(cellregex);\n      for (var rslice = 0; rslice != cells.length; ++rslice) if (cells[rslice].trim().charAt(0) != \"<\") break;\n      cells = cells.slice(rslice);\n      for (ri = 0; ri != cells.length; ++ri) {\n        x = cells[ri].trim();\n        if (x.length === 0) continue;\n        cref = x.match(rregex);\n        idx = ri;\n        i = 0;\n        cc = 0;\n        x = \"<c \" + (x.slice(0, 1) == \"<\" ? \">\" : \"\") + x;\n        if (cref != null && cref.length === 2) {\n          idx = 0;\n          d = cref[1];\n          for (i = 0; i != d.length; ++i) {\n            if ((cc = d.charCodeAt(i) - 64) < 1 || cc > 26) break;\n            idx = 26 * idx + cc;\n          }\n          --idx;\n          tagc = idx;\n        } else ++tagc;\n        for (i = 0; i != x.length; ++i) if (x.charCodeAt(i) === 62) break;\n        ++i;\n        tag = parsexmltag(x.slice(0, i), true);\n        if (!tag.r) tag.r = encode_cell({\n          r: tagr - 1,\n          c: tagc\n        });\n        d = x.slice(i);\n        p = {\n          t: \"\"\n        } /*:any*/;\n        if ((cref = str_match_xml_ns(d, \"v\")) != null && /*::cref != null && */cref[1] !== '') p.v = unescapexml(cref[1]);\n        if (opts.cellFormula) {\n          if ((cref = str_match_xml_ns(d, \"f\")) != null /*:: && cref != null*/) {\n            if (cref[1] == \"\") {\n              if ( /*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n                // TODO: parse formula\n                ftag = parsexmltag(cref[0]);\n                if (sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2] /*[0].ref*/, tag.r);\n              }\n            } else {\n              /* TODO: match against XLSXFutureFunctions */\n              p.f = unescapexml(utf8read(cref[1]), true);\n              if (!opts.xlfn) p.f = _xlfn(p.f);\n              if ( /*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"array\"') > -1) {\n                p.F = (d.match(refregex) || [])[1];\n                if (p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n              } else if ( /*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n                // TODO: parse formula\n                ftag = parsexmltag(cref[0]);\n                var ___f = unescapexml(utf8read(cref[1]));\n                if (!opts.xlfn) ___f = _xlfn(___f);\n                sharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];\n              }\n            }\n          } else if (cref = d.match(/<f[^<>]*\\/>/)) {\n            ftag = parsexmltag(cref[0]);\n            if (sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2] /*[0].ref*/, tag.r);\n          }\n          /* TODO: factor out contains logic */\n          var _tag = decode_cell(tag.r);\n          for (i = 0; i < arrayf.length; ++i) if (_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r) if (_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c) p.F = arrayf[i][1];\n        }\n        if (tag.t == null && p.v === undefined) {\n          if (p.f || p.F) {\n            p.v = 0;\n            p.t = \"n\";\n          } else if (!sheetStubs) continue;else p.t = \"z\";\n        } else p.t = tag.t || \"n\";\n        if (guess.s.c > tagc) guess.s.c = tagc;\n        if (guess.e.c < tagc) guess.e.c = tagc;\n        /* 18.18.11 t ST_CellType */\n        switch (p.t) {\n          case 'n':\n            if (p.v == \"\" || p.v == null) {\n              if (!sheetStubs) continue;\n              p.t = 'z';\n            } else p.v = parseFloat(p.v);\n            break;\n          case 's':\n            if (typeof p.v == 'undefined') {\n              if (!sheetStubs) continue;\n              p.t = 'z';\n            } else {\n              sstr = strs[parseInt(p.v, 10)];\n              p.v = sstr.t;\n              p.r = sstr.r;\n              if (opts.cellHTML) p.h = sstr.h;\n            }\n            break;\n          case 'str':\n            p.t = \"s\";\n            p.v = p.v != null ? unescapexml(utf8read(p.v), true) : '';\n            if (opts.cellHTML) p.h = escapehtml(p.v);\n            break;\n          case 'inlineStr':\n            cref = str_match_xml_ns(d, \"is\");\n            p.t = 's';\n            if (cref != null && (sstr = parse_si(cref[1]))) {\n              p.v = sstr.t;\n              if (opts.cellHTML) p.h = sstr.h;\n            } else p.v = \"\";\n            break;\n          case 'b':\n            p.v = parsexmlbool(p.v);\n            break;\n          case 'd':\n            if (opts.cellDates) p.v = parseDate(p.v, date1904);else {\n              p.v = datenum(parseDate(p.v, date1904), date1904);\n              p.t = 'n';\n            }\n            break;\n          /* error string in .w, number in .v */\n          case 'e':\n            if (!opts || opts.cellText !== false) p.w = p.v;\n            p.v = RBErr[p.v];\n            break;\n        }\n        /* formatting */\n        fmtid = fillid = 0;\n        cf = null;\n        if (do_format && tag.s !== undefined) {\n          cf = styles.CellXf[tag.s];\n          if (cf != null) {\n            if (cf.numFmtId != null) fmtid = cf.numFmtId;\n            if (opts.cellStyles) {\n              if (cf.fillId != null) fillid = cf.fillId;\n            }\n          }\n        }\n        safe_format(p, fmtid, fillid, opts, themes, styles, date1904);\n        if (opts.cellDates && do_format && p.t == 'n' && fmt_is_date(table_fmt[fmtid])) {\n          p.v = numdate(p.v + (date1904 ? 1462 : 0));\n          p.t = typeof p.v == \"number\" ? 'n' : 'd';\n        }\n        if (tag.cm && opts.xlmeta) {\n          var cm = (opts.xlmeta.Cell || [])[+tag.cm - 1];\n          if (cm && cm.type == 'XLDAPR') p.D = true;\n        }\n        var _r;\n        if (opts.nodim) {\n          _r = decode_cell(tag.r);\n          if (guess.s.r > _r.r) guess.s.r = _r.r;\n          if (guess.e.r < _r.r) guess.e.r = _r.r;\n        }\n        if (dense) {\n          _r = decode_cell(tag.r);\n          if (!s[\"!data\"][_r.r]) s[\"!data\"][_r.r] = [];\n          s[\"!data\"][_r.r][_r.c] = p;\n        } else s[tag.r] = p;\n      }\n    }\n    if (rows.length > 0) s['!rows'] = rows;\n  };\n}();\nfunction write_ws_xml_data(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/ /*::, rels*/) /*:string*/{\n  var o /*:Array<string>*/ = [],\n    r /*:Array<string>*/ = [],\n    range = safe_decode_range(ws['!ref']),\n    cell = \"\",\n    ref,\n    rr = \"\",\n    cols /*:Array<string>*/ = [],\n    R = 0,\n    C = 0,\n    rows = ws['!rows'];\n  var dense = ws[\"!data\"] != null;\n  var params = {\n      r: rr\n    } /*:any*/,\n    row /*:RowInfo*/,\n    height = -1;\n  var date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n  for (C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n  for (R = range.s.r; R <= range.e.r; ++R) {\n    r = [];\n    rr = encode_row(R);\n    for (C = range.s.c; C <= range.e.c; ++C) {\n      ref = cols[C] + rr;\n      var _cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n      if (_cell === undefined) continue;\n      if ((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb, date1904)) != null) r.push(cell);\n    }\n    if (r.length > 0 || rows && rows[R]) {\n      params = {\n        r: rr\n      } /*:any*/;\n      if (rows && rows[R]) {\n        row = rows[R];\n        if (row.hidden) params.hidden = 1;\n        height = -1;\n        if (row.hpx) height = px2pt(row.hpx);else if (row.hpt) height = row.hpt;\n        if (height > -1) {\n          params.ht = height;\n          params.customHeight = 1;\n        }\n        if (row.level) {\n          params.outlineLevel = row.level;\n        }\n      }\n      o[o.length] = writextag('row', r.join(\"\"), params);\n    }\n  }\n  if (rows) for (; R < rows.length; ++R) {\n    if (rows && rows[R]) {\n      params = {\n        r: R + 1\n      } /*:any*/;\n      row = rows[R];\n      if (row.hidden) params.hidden = 1;\n      height = -1;\n      if (row.hpx) height = px2pt(row.hpx);else if (row.hpt) height = row.hpt;\n      if (height > -1) {\n        params.ht = height;\n        params.customHeight = 1;\n      }\n      if (row.level) {\n        params.outlineLevel = row.level;\n      }\n      o[o.length] = writextag('row', \"\", params);\n    }\n  }\n  return o.join(\"\");\n}\nfunction write_ws_xml(idx /*:number*/, opts, wb /*:Workbook*/, rels) /*:string*/{\n  var o = [XML_HEADER, writextag('worksheet', null, {\n    'xmlns': XMLNS_main[0],\n    'xmlns:r': XMLNS.r\n  })];\n  var s = wb.SheetNames[idx],\n    sidx = 0,\n    rdata = \"\";\n  var ws = wb.Sheets[s];\n  if (ws == null) ws = {};\n  var ref = ws['!ref'] || 'A1';\n  var range = safe_decode_range(ref);\n  if (range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n    if (opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n    range.e.c = Math.min(range.e.c, 0x3FFF);\n    range.e.r = Math.min(range.e.c, 0xFFFFF);\n    ref = encode_range(range);\n  }\n  if (!rels) rels = {};\n  ws['!comments'] = [];\n  var _drawing = [];\n  write_ws_xml_sheetpr(ws, wb, idx, opts, o);\n  o[o.length] = writextag('dimension', null, {\n    'ref': ref\n  });\n  o[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n  /* TODO: store in WB, process styles */\n  if (opts.sheetFormat) o[o.length] = writextag('sheetFormatPr', null, {\n    defaultRowHeight: opts.sheetFormat.defaultRowHeight || '16',\n    baseColWidth: opts.sheetFormat.baseColWidth || '10',\n    outlineLevelRow: opts.sheetFormat.outlineLevelRow || '7'\n  });\n  if (ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = write_ws_xml_cols(ws, ws['!cols']);\n  o[sidx = o.length] = '<sheetData/>';\n  ws['!links'] = [];\n  if (ws['!ref'] != null) {\n    rdata = write_ws_xml_data(ws, opts, idx, wb, rels);\n    if (rdata.length > 0) o[o.length] = rdata;\n  }\n  if (o.length > sidx + 1) {\n    o[o.length] = '</sheetData>';\n    o[sidx] = o[sidx].replace(\"/>\", \">\");\n  }\n\n  /* sheetCalcPr */\n\n  if (ws['!protect']) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n  /* protectedRanges */\n  /* scenarios */\n\n  if (ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n  /* sortState */\n  /* dataConsolidate */\n  /* customSheetViews */\n\n  if (ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = write_ws_xml_merges(ws['!merges']);\n\n  /* phoneticPr */\n  /* conditionalFormatting */\n  /* dataValidations */\n\n  var relc = -1,\n    rel,\n    rId = -1;\n  if ( /*::(*/ws['!links'] /*::||[])*/.length > 0) {\n    o[o.length] = \"<hyperlinks>\";\n    /*::(*/\n    ws['!links'] /*::||[])*/.forEach(function (l) {\n      if (!l[1].Target) return;\n      rel = {\n        \"ref\": l[0]\n      } /*:any*/;\n      if (l[1].Target.charAt(0) != \"#\") {\n        rId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#[\\s\\S]*$/, \"\"), RELS.HLINK);\n        rel[\"r:id\"] = \"rId\" + rId;\n      }\n      if ((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc + 1));\n      if (l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n      rel.display = l[1].display;\n      o[o.length] = writextag(\"hyperlink\", null, rel);\n    });\n    o[o.length] = \"</hyperlinks>\";\n  }\n  delete ws['!links'];\n\n  /* printOptions */\n\n  if (ws['!margins'] != null) o[o.length] = write_ws_xml_margins(ws['!margins']);\n\n  /* pageSetup */\n  /* headerFooter */\n  /* rowBreaks */\n  /* colBreaks */\n  /* customProperties */\n  /* cellWatches */\n\n  if (!opts || opts.ignoreEC || opts.ignoreEC == void 0) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {\n    numberStoredAsText: 1,\n    sqref: ref\n  }));\n\n  /* smartTags */\n\n  if (_drawing.length > 0) {\n    rId = add_rels(rels, -1, \"../drawings/drawing\" + (idx + 1) + \".xml\", RELS.DRAW);\n    o[o.length] = writextag(\"drawing\", null, {\n      \"r:id\": \"rId\" + rId\n    });\n    ws['!drawing'] = _drawing;\n  }\n  if (ws['!comments'].length > 0) {\n    rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx + 1) + \".vml\", RELS.VML);\n    o[o.length] = writextag(\"legacyDrawing\", null, {\n      \"r:id\": \"rId\" + rId\n    });\n    ws['!legacy'] = rId;\n  }\n\n  /* legacyDrawingHF */\n  /* picture */\n  /* oleObjects */\n  /* controls */\n  /* webPublishItems */\n  /* tableParts */\n  /* extLst */\n\n  if (o.length > 1) {\n    o[o.length] = '</worksheet>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\nfunction parse_BrtRowHdr(data, length) {\n  var z = {} /*:any*/;\n  var tgt = data.l + length;\n  z.r = data.read_shift(4);\n  data.l += 4; // TODO: ixfe\n  var miyRw = data.read_shift(2);\n  data.l += 1; // TODO: top/bot padding\n  var flags = data.read_shift(1);\n  data.l = tgt;\n  if (flags & 0x07) z.level = flags & 0x07;\n  if (flags & 0x10) z.hidden = true;\n  if (flags & 0x20) z.hpt = miyRw / 20;\n  return z;\n}\nfunction write_BrtRowHdr(R /*:number*/, range, ws) {\n  var o = new_buf(17 + 8 * 16);\n  var row = (ws['!rows'] || [])[R] || {};\n  o.write_shift(4, R);\n  o.write_shift(4, 0); /* TODO: ixfe */\n\n  var miyRw = 0x0140;\n  if (row.hpx) miyRw = px2pt(row.hpx) * 20;else if (row.hpt) miyRw = row.hpt * 20;\n  o.write_shift(2, miyRw);\n  o.write_shift(1, 0); /* top/bot padding */\n\n  var flags = 0x0;\n  if (row.level) flags |= row.level;\n  if (row.hidden) flags |= 0x10;\n  if (row.hpx || row.hpt) flags |= 0x20;\n  o.write_shift(1, flags);\n  o.write_shift(1, 0); /* phonetic guide */\n\n  /* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n  var ncolspan = 0,\n    lcs = o.l;\n  o.l += 4;\n  var caddr = {\n    r: R,\n    c: 0\n  };\n  var dense = ws[\"!data\"] != null;\n  for (var i = 0; i < 16; ++i) {\n    if (range.s.c > i + 1 << 10 || range.e.c < i << 10) continue;\n    var first = -1,\n      last = -1;\n    for (var j = i << 10; j < i + 1 << 10; ++j) {\n      caddr.c = j;\n      var cell = dense ? (ws[\"!data\"][caddr.r] || [])[caddr.c] : ws[encode_cell(caddr)];\n      if (cell) {\n        if (first < 0) first = j;\n        last = j;\n      }\n    }\n    if (first < 0) continue;\n    ++ncolspan;\n    o.write_shift(4, first);\n    o.write_shift(4, last);\n  }\n  var l = o.l;\n  o.l = lcs;\n  o.write_shift(4, ncolspan);\n  o.l = l;\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_row_header(ba, ws, range, R) {\n  var o = write_BrtRowHdr(R, range, ws);\n  if (o.length > 17 || (ws['!rows'] || [])[R]) write_record(ba, 0x0000 /* BrtRowHdr */, o);\n}\n\n/* [MS-XLSB] 2.4.820 BrtWsDim */\nvar parse_BrtWsDim = parse_UncheckedRfX;\nvar write_BrtWsDim = write_UncheckedRfX;\n\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\nfunction parse_BrtWsFmtInfo( /*::data, length*/\n) {}\n//function write_BrtWsFmtInfo(ws, o) { }\n\n/* [MS-XLSB] 2.4.823 BrtWsProp */\nfunction parse_BrtWsProp(data, length) {\n  var z = {};\n  var f = data[data.l];\n  ++data.l;\n  z.above = !(f & 0x40);\n  z.left = !(f & 0x80);\n  /* TODO: pull flags */\n  data.l += 18;\n  z.name = parse_XLSBCodeName(data, length - 19);\n  return z;\n}\nfunction write_BrtWsProp(str, outl, o) {\n  if (o == null) o = new_buf(84 + 4 * str.length);\n  var f = 0xC0;\n  if (outl) {\n    if (outl.above) f &= ~0x40;\n    if (outl.left) f &= ~0x80;\n  }\n  o.write_shift(1, f);\n  for (var i = 1; i < 3; ++i) o.write_shift(1, 0);\n  write_BrtColor({\n    auto: 1\n  }, o);\n  o.write_shift(-4, -1);\n  o.write_shift(-4, -1);\n  write_XLSBCodeName(str, o);\n  return o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\nfunction parse_BrtCellBlank(data) {\n  var cell = parse_XLSBCell(data);\n  return [cell];\n}\nfunction write_BrtCellBlank(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  return write_XLSBCell(ncell, o);\n}\nfunction parse_BrtShortBlank(data) {\n  var cell = parse_XLSBShortCell(data);\n  return [cell];\n}\nfunction write_BrtShortBlank(cell, ncell, o) {\n  if (o == null) o = new_buf(4);\n  return write_XLSBShortCell(ncell, o);\n}\n\n/* [MS-XLSB] 2.4.307 BrtCellBool */\nfunction parse_BrtCellBool(data) {\n  var cell = parse_XLSBCell(data);\n  var fBool = data.read_shift(1);\n  return [cell, fBool, 'b'];\n}\nfunction write_BrtCellBool(cell, ncell, o) {\n  if (o == null) o = new_buf(9);\n  write_XLSBCell(ncell, o);\n  o.write_shift(1, cell.v ? 1 : 0);\n  return o;\n}\nfunction parse_BrtShortBool(data) {\n  var cell = parse_XLSBShortCell(data);\n  var fBool = data.read_shift(1);\n  return [cell, fBool, 'b'];\n}\nfunction write_BrtShortBool(cell, ncell, o) {\n  if (o == null) o = new_buf(5);\n  write_XLSBShortCell(ncell, o);\n  o.write_shift(1, cell.v ? 1 : 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.308 BrtCellError */\nfunction parse_BrtCellError(data) {\n  var cell = parse_XLSBCell(data);\n  var bError = data.read_shift(1);\n  return [cell, bError, 'e'];\n}\nfunction write_BrtCellError(cell, ncell, o) {\n  if (o == null) o = new_buf(9);\n  write_XLSBCell(ncell, o);\n  o.write_shift(1, cell.v);\n  return o;\n}\nfunction parse_BrtShortError(data) {\n  var cell = parse_XLSBShortCell(data);\n  var bError = data.read_shift(1);\n  return [cell, bError, 'e'];\n}\nfunction write_BrtShortError(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  write_XLSBShortCell(ncell, o);\n  o.write_shift(1, cell.v);\n  o.write_shift(2, 0);\n  o.write_shift(1, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\nfunction parse_BrtCellIsst(data) {\n  var cell = parse_XLSBCell(data);\n  var isst = data.read_shift(4);\n  return [cell, isst, 's'];\n}\nfunction write_BrtCellIsst(cell, ncell, o) {\n  if (o == null) o = new_buf(12);\n  write_XLSBCell(ncell, o);\n  o.write_shift(4, ncell.v);\n  return o;\n}\nfunction parse_BrtShortIsst(data) {\n  var cell = parse_XLSBShortCell(data);\n  var isst = data.read_shift(4);\n  return [cell, isst, 's'];\n}\nfunction write_BrtShortIsst(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  write_XLSBShortCell(ncell, o);\n  o.write_shift(4, ncell.v);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.313 BrtCellReal */\nfunction parse_BrtCellReal(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_Xnum(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtCellReal(cell, ncell, o) {\n  if (o == null) o = new_buf(16);\n  write_XLSBCell(ncell, o);\n  write_Xnum(cell.v, o);\n  return o;\n}\nfunction parse_BrtShortReal(data) {\n  var cell = parse_XLSBShortCell(data);\n  var value = parse_Xnum(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtShortReal(cell, ncell, o) {\n  if (o == null) o = new_buf(12);\n  write_XLSBShortCell(ncell, o);\n  write_Xnum(cell.v, o);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.314 BrtCellRk */\nfunction parse_BrtCellRk(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_RkNumber(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtCellRk(cell, ncell, o) {\n  if (o == null) o = new_buf(12);\n  write_XLSBCell(ncell, o);\n  write_RkNumber(cell.v, o);\n  return o;\n}\nfunction parse_BrtShortRk(data) {\n  var cell = parse_XLSBShortCell(data);\n  var value = parse_RkNumber(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtShortRk(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  write_XLSBShortCell(ncell, o);\n  write_RkNumber(cell.v, o);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtCellRString */\nfunction parse_BrtCellRString(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_RichStr(data);\n  return [cell, value, 'is'];\n}\n\n/* [MS-XLSB] 2.4.317 BrtCellSt */\nfunction parse_BrtCellSt(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_XLWideString(data);\n  return [cell, value, 'str'];\n}\nfunction write_BrtCellSt(cell, ncell, o) {\n  var data = cell.v == null ? \"\" : String(cell.v);\n  if (o == null) o = new_buf(12 + 4 * cell.v.length);\n  write_XLSBCell(ncell, o);\n  write_XLWideString(data, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction parse_BrtShortSt(data) {\n  var cell = parse_XLSBShortCell(data);\n  var value = parse_XLWideString(data);\n  return [cell, value, 'str'];\n}\nfunction write_BrtShortSt(cell, ncell, o) {\n  var data = cell.v == null ? \"\" : String(cell.v);\n  if (o == null) o = new_buf(8 + 4 * data.length);\n  write_XLSBShortCell(ncell, o);\n  write_XLWideString(data, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\nfunction parse_BrtFmlaBool(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = data.read_shift(1);\n  var o = [cell, value, 'b'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\nfunction parse_BrtFmlaError(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = data.read_shift(1);\n  var o = [cell, value, 'e'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\nfunction parse_BrtFmlaNum(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = parse_Xnum(data);\n  var o = [cell, value, 'n'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\nfunction parse_BrtFmlaString(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = parse_XLWideString(data);\n  var o = [cell, value, 'str'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\nvar parse_BrtMergeCell = parse_UncheckedRfX;\nvar write_BrtMergeCell = write_UncheckedRfX;\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\nfunction write_BrtBeginMergeCells(cnt, o) {\n  if (o == null) o = new_buf(4);\n  o.write_shift(4, cnt);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.662 BrtHLink */\nfunction parse_BrtHLink(data, length /*::, opts*/) {\n  var end = data.l + length;\n  var rfx = parse_UncheckedRfX(data, 16);\n  var relId = parse_XLNullableWideString(data);\n  var loc = parse_XLWideString(data);\n  var tooltip = parse_XLWideString(data);\n  var display = parse_XLWideString(data);\n  data.l = end;\n  var o = {\n    rfx: rfx,\n    relId: relId,\n    loc: loc,\n    display: display\n  } /*:any*/;\n  if (tooltip) o.Tooltip = tooltip;\n  return o;\n}\nfunction write_BrtHLink(l, rId) {\n  var o = new_buf(50 + 4 * (l[1].Target.length + (l[1].Tooltip || \"\").length));\n  write_UncheckedRfX({\n    s: decode_cell(l[0]),\n    e: decode_cell(l[0])\n  }, o);\n  write_RelID(\"rId\" + rId, o);\n  var locidx = l[1].Target.indexOf(\"#\");\n  var loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx + 1);\n  write_XLWideString(loc || \"\", o);\n  write_XLWideString(l[1].Tooltip || \"\", o);\n  write_XLWideString(\"\", o);\n  return o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.692 BrtPane */\nfunction parse_BrtPane( /*data, length, opts*/\n) {}\n\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\nfunction parse_BrtArrFmla(data, length, opts) {\n  var end = data.l + length;\n  var rfx = parse_RfX(data, 16);\n  var fAlwaysCalc = data.read_shift(1);\n  var o = [rfx];\n  o[2] = fAlwaysCalc;\n  if (opts.cellFormula) {\n    var formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n    o[1] = formula;\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\nfunction parse_BrtShrFmla(data, length, opts) {\n  var end = data.l + length;\n  var rfx = parse_UncheckedRfX(data, 16);\n  var o = [rfx];\n  if (opts.cellFormula) {\n    var formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n    o[1] = formula;\n    data.l = end;\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtColInfo */\n/* TODO: once XLS ColInfo is set, combine the functions */\nfunction write_BrtColInfo(C /*:number*/, col, o) {\n  if (o == null) o = new_buf(18);\n  var p = col_obj_w(C, col);\n  o.write_shift(-4, C);\n  o.write_shift(-4, C);\n  o.write_shift(4, (p.width || 10) * 256);\n  o.write_shift(4, 0 /*ixfe*/); // style\n  var flags = 0;\n  if (col.hidden) flags |= 0x01;\n  if (typeof p.width == 'number') flags |= 0x02;\n  if (col.level) flags |= col.level << 8;\n  o.write_shift(2, flags); // bit flag\n  return o;\n}\n\n/* [MS-XLSB] 2.4.678 BrtMargins */\nvar BrtMarginKeys = [\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"];\nfunction parse_BrtMargins(data /*::, length, opts*/) /*:Margins*/{\n  var margins = {} /*:any*/;\n  BrtMarginKeys.forEach(function (k) {\n    margins[k] = parse_Xnum(data, 8);\n  });\n  return margins;\n}\nfunction write_BrtMargins(margins /*:Margins*/, o) {\n  if (o == null) o = new_buf(6 * 8);\n  default_margins(margins);\n  BrtMarginKeys.forEach(function (k) {\n    write_Xnum(margins /*:any*/[k], o);\n  });\n  return o;\n}\n\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\nfunction parse_BrtBeginWsView(data /*::, length, opts*/) {\n  var f = data.read_shift(2);\n  data.l += 28;\n  return {\n    RTL: f & 0x20\n  };\n}\nfunction write_BrtBeginWsView(ws, Workbook, o) {\n  if (o == null) o = new_buf(30);\n  var f = 0x39c;\n  if ((((Workbook || {}).Views || [])[0] || {}).RTL) f |= 0x20;\n  o.write_shift(2, f); // bit flag\n  o.write_shift(4, 0);\n  o.write_shift(4, 0); // view first row\n  o.write_shift(4, 0); // view first col\n  o.write_shift(1, 0); // gridline color ICV\n  o.write_shift(1, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 100); // zoom scale\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(4, 0); // workbook view id\n  return o;\n}\n\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\nfunction write_BrtCellIgnoreEC(ref) {\n  var o = new_buf(24);\n  o.write_shift(4, 4);\n  o.write_shift(4, 1);\n  write_UncheckedRfX(ref, o);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\nfunction write_BrtSheetProtection(sp, o) {\n  if (o == null) o = new_buf(16 * 4 + 2);\n  o.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n  o.write_shift(4, 1); // this record should not be written if no protection\n  [[\"objects\", false],\n  // fObjects\n  [\"scenarios\", false],\n  // fScenarios\n  [\"formatCells\", true],\n  // fFormatCells\n  [\"formatColumns\", true],\n  // fFormatColumns\n  [\"formatRows\", true],\n  // fFormatRows\n  [\"insertColumns\", true],\n  // fInsertColumns\n  [\"insertRows\", true],\n  // fInsertRows\n  [\"insertHyperlinks\", true],\n  // fInsertHyperlinks\n  [\"deleteColumns\", true],\n  // fDeleteColumns\n  [\"deleteRows\", true],\n  // fDeleteRows\n  [\"selectLockedCells\", false],\n  // fSelLockedCells\n  [\"sort\", true],\n  // fSort\n  [\"autoFilter\", true],\n  // fAutoFilter\n  [\"pivotTables\", true],\n  // fPivotTables\n  [\"selectUnlockedCells\", false] // fSelUnlockedCells\n  ].forEach(function (n) {\n    /*:: if(o == null) throw \"unreachable\"; */\n    if (n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);else o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n  });\n  return o;\n}\nfunction parse_BrtDVal( /*data, length, opts*/\n) {}\nfunction parse_BrtDVal14( /*data, length, opts*/\n) {}\n/* [MS-XLSB] 2.1.7.61 Worksheet */\nfunction parse_ws_bin(data, _opts, idx, rels, wb /*:WBWBProps*/, themes, styles) /*:Worksheet*/{\n  if (!data) return data;\n  var opts = _opts || {};\n  if (!rels) rels = {\n    '!id': {}\n  };\n  if (DENSE != null && opts.dense == null) opts.dense = DENSE;\n  var s /*:Worksheet*/ = {};\n  if (opts.dense) s[\"!data\"] = [];\n  var ref;\n  var refguess = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var state /*:Array<string>*/ = [];\n  var pass = false,\n    end = false;\n  var row, p, cf, R, C, addr, sstr, rr, cell /*:Cell*/;\n  var merges /*:Array<Range>*/ = [];\n  opts.biff = 12;\n  opts['!row'] = 0;\n  var ai = 0,\n    af = false;\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var sharedf = {};\n  var supbooks = opts.supbooks || /*::(*/wb /*:: :any)*/.supbooks || [[]] /*:any*/;\n  supbooks.sharedf = sharedf;\n  supbooks.arrayf = arrayf;\n  supbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function (x) {\n    return x.name;\n  });\n  if (!opts.supbooks) {\n    opts.supbooks = supbooks;\n    if (wb.Names) for (var i = 0; i < wb.Names.length; ++i) supbooks[0][i + 1] = wb.Names[i];\n  }\n  var colinfo /*:Array<ColInfo>*/ = [],\n    rowinfo /*:Array<RowInfo>*/ = [];\n  var seencol = false;\n  XLSBRecordEnum[0x0010] = {\n    n: \"BrtShortReal\",\n    f: parse_BrtShortReal\n  };\n  var cm, vm;\n  var date1904 = 1462 * +!!((wb || {}).WBProps || {}).date1904;\n  recordhopper(data, function ws_parse(val, RR, RT) {\n    if (end) return;\n    switch (RT) {\n      case 0x0094:\n        /* 'BrtWsDim' */\n        ref = val;\n        break;\n      case 0x0000:\n        /* 'BrtRowHdr' */\n        row = val;\n        if (opts.sheetRows && opts.sheetRows <= row.r) end = true;\n        rr = encode_row(R = row.r);\n        opts['!row'] = row.r;\n        if (val.hidden || val.hpt || val.level != null) {\n          if (val.hpt) val.hpx = pt2px(val.hpt);\n          rowinfo[val.r] = val;\n        }\n        break;\n      case 0x0002: /* 'BrtCellRk' */\n      case 0x0003: /* 'BrtCellError' */\n      case 0x0004: /* 'BrtCellBool' */\n      case 0x0005: /* 'BrtCellReal' */\n      case 0x0006: /* 'BrtCellSt' */\n      case 0x0007: /* 'BrtCellIsst' */\n      case 0x0008: /* 'BrtFmlaString' */\n      case 0x0009: /* 'BrtFmlaNum' */\n      case 0x000A: /* 'BrtFmlaBool' */\n      case 0x000B: /* 'BrtFmlaError' */\n      case 0x000D: /* 'BrtShortRk' */\n      case 0x000E: /* 'BrtShortError' */\n      case 0x000F: /* 'BrtShortBool' */\n      case 0x0010: /* 'BrtShortReal' */\n      case 0x0011: /* 'BrtShortSt' */\n      case 0x0012: /* 'BrtShortIsst' */\n      case 0x003E:\n        /* 'BrtCellRString' */\n        p = {\n          t: val[2]\n        } /*:any*/;\n        switch (val[2]) {\n          case 'n':\n            p.v = val[1];\n            break;\n          case 's':\n            sstr = strs[val[1]];\n            p.v = sstr.t;\n            p.r = sstr.r;\n            break;\n          case 'b':\n            p.v = val[1] ? true : false;\n            break;\n          case 'e':\n            p.v = val[1];\n            if (opts.cellText !== false) p.w = BErr[p.v];\n            break;\n          case 'str':\n            p.t = 's';\n            p.v = val[1];\n            break;\n          case 'is':\n            p.t = 's';\n            p.v = val[1].t;\n            break;\n        }\n        if (cf = styles.CellXf[val[0].iStyleRef]) safe_format(p, cf.numFmtId, null, opts, themes, styles, date1904 > 0);\n        C = val[0].c == -1 ? C + 1 : val[0].c;\n        if (opts.dense) {\n          if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n          s[\"!data\"][R][C] = p;\n        } else s[encode_col(C) + rr] = p;\n        if (opts.cellFormula) {\n          af = false;\n          for (ai = 0; ai < arrayf.length; ++ai) {\n            var aii = arrayf[ai];\n            if (row.r >= aii[0].s.r && row.r <= aii[0].e.r) if (C >= aii[0].s.c && C <= aii[0].e.c) {\n              p.F = encode_range(aii[0]);\n              af = true;\n            }\n          }\n          if (!af && val.length > 3) p.f = val[3];\n        }\n        if (refguess.s.r > row.r) refguess.s.r = row.r;\n        if (refguess.s.c > C) refguess.s.c = C;\n        if (refguess.e.r < row.r) refguess.e.r = row.r;\n        if (refguess.e.c < C) refguess.e.c = C;\n        if (opts.cellDates && cf && p.t == 'n' && fmt_is_date(table_fmt[cf.numFmtId])) {\n          var _d = SSF_parse_date_code(p.v + date1904);\n          if (_d) {\n            p.t = 'd';\n            p.v = new Date(Date.UTC(_d.y, _d.m - 1, _d.d, _d.H, _d.M, _d.S, _d.u));\n          }\n        }\n        if (cm) {\n          if (cm.type == 'XLDAPR') p.D = true;\n          cm = void 0;\n        }\n        if (vm) vm = void 0;\n        break;\n      case 0x0001: /* 'BrtCellBlank' */\n      case 0x000C:\n        /* 'BrtShortBlank' */\n        if (!opts.sheetStubs || pass) break;\n        p = {\n          t: 'z',\n          v: void 0\n        } /*:any*/;\n        C = val[0].c == -1 ? C + 1 : val[0].c;\n        if (opts.dense) {\n          if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n          s[\"!data\"][R][C] = p;\n        } else s[encode_col(C) + rr] = p;\n        if (refguess.s.r > row.r) refguess.s.r = row.r;\n        if (refguess.s.c > C) refguess.s.c = C;\n        if (refguess.e.r < row.r) refguess.e.r = row.r;\n        if (refguess.e.c < C) refguess.e.c = C;\n        if (cm) {\n          if (cm.type == 'XLDAPR') p.D = true;\n          cm = void 0;\n        }\n        if (vm) vm = void 0;\n        break;\n      case 0x00B0:\n        /* 'BrtMergeCell' */\n        merges.push(val);\n        break;\n      case 0x0031:\n        {\n          /* 'BrtCellMeta' */\n          cm = ((opts.xlmeta || {}).Cell || [])[val - 1];\n        }\n        break;\n      case 0x01EE:\n        /* 'BrtHLink' */\n        var rel = rels['!id'][val.relId];\n        if (rel) {\n          val.Target = rel.Target;\n          if (val.loc) val.Target += \"#\" + val.loc;\n          val.Rel = rel;\n        } else if (val.relId == '') {\n          val.Target = \"#\" + val.loc;\n        }\n        for (R = val.rfx.s.r; R <= val.rfx.e.r; ++R) for (C = val.rfx.s.c; C <= val.rfx.e.c; ++C) {\n          if (opts.dense) {\n            if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n            if (!s[\"!data\"][R][C]) s[\"!data\"][R][C] = {\n              t: 'z',\n              v: undefined\n            };\n            s[\"!data\"][R][C].l = val;\n          } else {\n            addr = encode_col(C) + encode_row(R);\n            if (!s[addr]) s[addr] = {\n              t: 'z',\n              v: undefined\n            };\n            s[addr].l = val;\n          }\n        }\n        break;\n      case 0x01AA:\n        /* 'BrtArrFmla' */\n        if (!opts.cellFormula) break;\n        arrayf.push(val);\n        cell = opts.dense ? s[\"!data\"][R][C] : s[encode_col(C) + rr] /*:any*/;\n        cell.f = stringify_formula(val[1], refguess, {\n          r: row.r,\n          c: C\n        }, supbooks, opts);\n        cell.F = encode_range(val[0]);\n        break;\n      case 0x01AB:\n        /* 'BrtShrFmla' */\n        if (!opts.cellFormula) break;\n        sharedf[encode_cell(val[0].s)] = val[1];\n        cell = opts.dense ? s[\"!data\"][R][C] : s[encode_col(C) + rr];\n        cell.f = stringify_formula(val[1], refguess, {\n          r: row.r,\n          c: C\n        }, supbooks, opts);\n        break;\n\n      /* identical to 'ColInfo' in XLS */\n      case 0x003C:\n        /* 'BrtColInfo' */\n        if (!opts.cellStyles) break;\n        while (val.e >= val.s) {\n          colinfo[val.e--] = {\n            width: val.w / 256,\n            hidden: !!(val.flags & 0x01),\n            level: val.level\n          };\n          if (!seencol) {\n            seencol = true;\n            find_mdw_colw(val.w / 256);\n          }\n          process_col(colinfo[val.e + 1]);\n        }\n        break;\n      case 0x0227:\n        /* 'BrtLegacyDrawing' */\n        if (val) s[\"!legrel\"] = val;\n        break;\n      case 0x00A1:\n        /* 'BrtBeginAFilter' */\n        s['!autofilter'] = {\n          ref: encode_range(val)\n        };\n        break;\n      case 0x01DC:\n        /* 'BrtMargins' */\n        s['!margins'] = val;\n        break;\n      case 0x0093:\n        /* 'BrtWsProp' */\n        if (!wb.Sheets[idx]) wb.Sheets[idx] = {};\n        if (val.name) wb.Sheets[idx].CodeName = val.name;\n        if (val.above || val.left) s['!outline'] = {\n          above: val.above,\n          left: val.left\n        };\n        break;\n      case 0x0089:\n        /* 'BrtBeginWsView' */\n        if (!wb.Views) wb.Views = [{}];\n        if (!wb.Views[0]) wb.Views[0] = {};\n        if (val.RTL) wb.Views[0].RTL = true;\n        break;\n      case 0x01E5:\n        /* 'BrtWsFmtInfo' */\n        break;\n      case 0x0040: /* 'BrtDVal' */\n      case 0x041D:\n        /* 'BrtDVal14' */\n        break;\n      case 0x0097:\n        /* 'BrtPane' */\n        break;\n      case 0x0098: /* 'BrtSel' */\n      case 0x00AF: /* 'BrtAFilterDateGroupItem' */\n      case 0x0284: /* 'BrtActiveX' */\n      case 0x0271: /* 'BrtBigName' */\n      case 0x0232: /* 'BrtBkHim' */\n      case 0x018C: /* 'BrtBrk' */\n      case 0x0458: /* 'BrtCFIcon' */\n      case 0x047A: /* 'BrtCFRuleExt' */\n      case 0x01D7: /* 'BrtCFVO' */\n      case 0x041A: /* 'BrtCFVO14' */\n      case 0x0289: /* 'BrtCellIgnoreEC' */\n      case 0x0451: /* 'BrtCellIgnoreEC14' */\n      case 0x024D: /* 'BrtCellSmartTagProperty' */\n      case 0x025F: /* 'BrtCellWatch' */\n      case 0x0234: /* 'BrtColor' */\n      case 0x041F: /* 'BrtColor14' */\n      case 0x00A8: /* 'BrtColorFilter' */\n      case 0x00AE: /* 'BrtCustomFilter' */\n      case 0x049C: /* 'BrtCustomFilter14' */\n      case 0x01F3: /* 'BrtDRef' */\n      case 0x01FB: /* 'BrtDXF' */\n      case 0x0226: /* 'BrtDrawing' */\n      case 0x00AB: /* 'BrtDynamicFilter' */\n      case 0x00A7: /* 'BrtFilter' */\n      case 0x0499: /* 'BrtFilter14' */\n      case 0x00A9: /* 'BrtIconFilter' */\n      case 0x049D: /* 'BrtIconFilter14' */\n      case 0x0228: /* 'BrtLegacyDrawingHF' */\n      case 0x0295: /* 'BrtListPart' */\n      case 0x027F: /* 'BrtOleObject' */\n      case 0x01DE: /* 'BrtPageSetup' */\n      case 0x0219: /* 'BrtPhoneticInfo' */\n      case 0x01DD: /* 'BrtPrintOptions' */\n      case 0x0218: /* 'BrtRangeProtection' */\n      case 0x044F: /* 'BrtRangeProtection14' */\n      case 0x02A8: /* 'BrtRangeProtectionIso' */\n      case 0x0450: /* 'BrtRangeProtectionIso14' */\n      case 0x0400: /* 'BrtRwDescent' */\n      case 0x0297: /* 'BrtSheetCalcProp' */\n      case 0x0217: /* 'BrtSheetProtection' */\n      case 0x02A6: /* 'BrtSheetProtectionIso' */\n      case 0x01F8: /* 'BrtSlc' */\n      case 0x0413: /* 'BrtSparkline' */\n      case 0x01AC: /* 'BrtTable' */\n      case 0x00AA: /* 'BrtTop10Filter' */\n      case 0x0C00: /* 'BrtUid' */\n      case 0x0032: /* 'BrtValueMeta' */\n      case 0x0816: /* 'BrtWebExtension' */\n      case 0x0415:\n        /* 'BrtWsFmtInfoEx14' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0026:\n        /* 'BrtACEnd' */\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (RR.T) {/* empty */} else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n  delete opts.supbooks;\n  delete opts['!row'];\n  if (!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n  if (opts.sheetRows && s[\"!ref\"]) {\n    var tmpref = safe_decode_range(s[\"!ref\"]);\n    if (opts.sheetRows <= +tmpref.e.r) {\n      tmpref.e.r = opts.sheetRows - 1;\n      if (tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n      if (tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n      if (tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n      if (tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n      s[\"!fullref\"] = s[\"!ref\"];\n      s[\"!ref\"] = encode_range(tmpref);\n    }\n  }\n  if (merges.length > 0) s[\"!merges\"] = merges;\n  if (colinfo.length > 0) s[\"!cols\"] = colinfo;\n  if (rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n  if (rels['!id'][s['!legrel']]) s['!legdrawel'] = rels['!id'][s['!legrel']];\n  return s;\n}\n\n/* TODO: something useful -- this is a stub */\nfunction write_ws_bin_cell(ba /*:BufArray*/, cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, ws /*:Worksheet*/, last_seen /*:boolean*/, date1904 /*:boolean*/) /*:boolean*/{\n  var o /*:any*/ = {\n    r: R,\n    c: C\n  } /*:any*/;\n  if (cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n  if (cell.v === undefined) return false;\n  var vv = \"\";\n  switch (cell.t) {\n    case 'b':\n      vv = cell.v ? \"1\" : \"0\";\n      break;\n    case 'd':\n      // no BrtCellDate :(\n      cell = dup(cell);\n      cell.z = cell.z || table_fmt[14];\n      cell.v = datenum(parseDate(cell.v, date1904), date1904);\n      cell.t = 'n';\n      break;\n    /* falls through */\n    case 'n':\n    case 'e':\n      vv = '' + cell.v;\n      break;\n    default:\n      vv = cell.v;\n      break;\n  }\n  /* TODO: cell style */\n  o.s = get_cell_style(opts.cellXfs, cell, opts);\n  if (cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n  switch (cell.t) {\n    case 's':\n    case 'str':\n      if (opts.bookSST) {\n        vv = get_sst_id(opts.Strings, cell.v == null ? \"\" : String(cell.v) /*:any*/, opts.revStrings);\n        o.t = \"s\";\n        o.v = vv;\n        if (last_seen) write_record(ba, 0x0012 /* BrtShortIsst */, write_BrtShortIsst(cell, o));else write_record(ba, 0x0007 /* BrtCellIsst */, write_BrtCellIsst(cell, o));\n      } else {\n        o.t = \"str\";\n        if (last_seen) write_record(ba, 0x0011 /* BrtShortSt */, write_BrtShortSt(cell, o));else write_record(ba, 0x0006 /* BrtCellSt */, write_BrtCellSt(cell, o));\n      }\n      return true;\n    case 'n':\n      /* TODO: determine threshold for Real vs RK */\n      if (cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) {\n        if (last_seen) write_record(ba, 0x000D /* BrtShortRk */, write_BrtShortRk(cell, o));else write_record(ba, 0x0002 /* BrtCellRk */, write_BrtCellRk(cell, o));\n      } else if (isNaN(cell.v)) {\n        if (last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError({\n          t: \"e\",\n          v: 0x24\n        }, o)); // #NUM!\n        else write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError({\n          t: \"e\",\n          v: 0x24\n        }, o)); // #NUM!\n      } else if (!isFinite(cell.v)) {\n        if (last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError({\n          t: \"e\",\n          v: 0x07\n        }, o)); // #DIV/0!\n        else write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError({\n          t: \"e\",\n          v: 0x07\n        }, o)); // #DIV/0!\n      } else {\n        if (last_seen) write_record(ba, 0x0010 /* BrtShortReal */, write_BrtShortReal(cell, o));else write_record(ba, 0x0005 /* BrtCellReal */, write_BrtCellReal(cell, o));\n      }\n      return true;\n    case 'b':\n      o.t = \"b\";\n      if (last_seen) write_record(ba, 0x000F /* BrtShortBool */, write_BrtShortBool(cell, o));else write_record(ba, 0x0004 /* BrtCellBool */, write_BrtCellBool(cell, o));\n      return true;\n    case 'e':\n      o.t = \"e\";\n      if (last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError(cell, o));else write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError(cell, o));\n      return true;\n  }\n  if (last_seen) write_record(ba, 0x000C /* BrtShortBlank */, write_BrtShortBlank(cell, o));else write_record(ba, 0x0001 /* BrtCellBlank */, write_BrtCellBlank(cell, o));\n  return true;\n}\nfunction write_CELLTABLE(ba, ws /*:Worksheet*/, idx /*:number*/, opts, wb /*:Workbook*/) {\n  var range = safe_decode_range(ws['!ref'] || \"A1\"),\n    ref,\n    rr = \"\",\n    cols /*:Array<string>*/ = [];\n  var date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n  write_record(ba, 0x0091 /* BrtBeginSheetData */);\n  var dense = ws[\"!data\"] != null;\n  var cap = range.e.r;\n  if (ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n  for (var R = range.s.r; R <= cap; ++R) {\n    rr = encode_row(R);\n    /* [ACCELLTABLE] */\n    /* BrtRowHdr */\n    write_row_header(ba, ws, range, R);\n    var last_seen = false;\n    if (R <= range.e.r) for (var C = range.s.c; C <= range.e.c; ++C) {\n      /* *16384CELL */\n      if (R === range.s.r) cols[C] = encode_col(C);\n      ref = cols[C] + rr;\n      var cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n      if (!cell) {\n        last_seen = false;\n        continue;\n      }\n      /* write cell */\n      last_seen = write_ws_bin_cell(ba, cell, R, C, opts, ws, last_seen, date1904);\n    }\n  }\n  write_record(ba, 0x0092 /* BrtEndSheetData */);\n}\nfunction write_MERGECELLS(ba, ws /*:Worksheet*/) {\n  if (!ws || !ws['!merges']) return;\n  write_record(ba, 0x00B1 /* BrtBeginMergeCells */, write_BrtBeginMergeCells(ws['!merges'].length));\n  ws['!merges'].forEach(function (m) {\n    write_record(ba, 0x00B0 /* BrtMergeCell */, write_BrtMergeCell(m));\n  });\n  write_record(ba, 0x00B2 /* BrtEndMergeCells */);\n}\nfunction write_COLINFOS(ba, ws /*:Worksheet*/ /*::, idx:number, opts, wb:Workbook*/) {\n  if (!ws || !ws['!cols']) return;\n  write_record(ba, 0x0186 /* BrtBeginColInfos */);\n  ws['!cols'].forEach(function (m, i) {\n    if (m) write_record(ba, 0x003C /* 'BrtColInfo' */, write_BrtColInfo(i, m));\n  });\n  write_record(ba, 0x0187 /* BrtEndColInfos */);\n}\nfunction write_IGNOREECS(ba, ws /*:Worksheet*/) {\n  if (!ws || !ws['!ref']) return;\n  write_record(ba, 0x0288 /* BrtBeginCellIgnoreECs */);\n  write_record(ba, 0x0289 /* BrtCellIgnoreEC */, write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n  write_record(ba, 0x028A /* BrtEndCellIgnoreECs */);\n}\nfunction write_HLINKS(ba, ws /*:Worksheet*/, rels) {\n  /* *BrtHLink */\n  ws['!links'].forEach(function (l) {\n    if (!l[1].Target) return;\n    var rId = add_rels(rels, -1, l[1].Target.replace(/#[\\s\\S]*$/, \"\"), RELS.HLINK);\n    write_record(ba, 0x01EE /* BrtHLink */, write_BrtHLink(l, rId));\n  });\n  delete ws['!links'];\n}\nfunction write_LEGACYDRAWING(ba, ws /*:Worksheet*/, idx /*:number*/, rels) {\n  /* [BrtLegacyDrawing] */\n  if (ws['!comments'].length > 0) {\n    var rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx + 1) + \".vml\", RELS.VML);\n    write_record(ba, 0x0227 /* BrtLegacyDrawing */, write_RelID(\"rId\" + rId));\n    ws['!legacy'] = rId;\n  }\n}\nfunction write_AUTOFILTER(ba, ws, wb, idx) {\n  if (!ws['!autofilter']) return;\n  var data = ws['!autofilter'];\n  var ref = typeof data.ref === \"string\" ? data.ref : encode_range(data.ref);\n\n  /* Update FilterDatabase defined name for the worksheet */\n  if (!wb.Workbook) wb.Workbook = {\n    Sheets: []\n  } /*:any*/;\n  if (!wb.Workbook.Names) wb.Workbook.Names = [];\n  var names /*: Array<any> */ = wb.Workbook.Names;\n  var range = decode_range(ref);\n  if (range.s.r == range.e.r) {\n    range.e.r = decode_range(ws[\"!ref\"]).e.r;\n    ref = encode_range(range);\n  }\n  for (var i = 0; i < names.length; ++i) {\n    var name = names[i];\n    if (name.Name != '_xlnm._FilterDatabase') continue;\n    if (name.Sheet != idx) continue;\n    name.Ref = formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref);\n    break;\n  }\n  if (i == names.length) names.push({\n    Name: '_xlnm._FilterDatabase',\n    Sheet: idx,\n    Ref: formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref)\n  });\n  write_record(ba, 0x00A1 /* BrtBeginAFilter */, write_UncheckedRfX(safe_decode_range(ref)));\n  /* *FILTERCOLUMN */\n  /* [SORTSTATE] */\n  /* BrtEndAFilter */\n  write_record(ba, 0x00A2 /* BrtEndAFilter */);\n}\nfunction write_WSVIEWS2(ba, ws, Workbook) {\n  write_record(ba, 0x0085 /* BrtBeginWsViews */);\n  {\n    /* 1*WSVIEW2 */\n    /* [ACUID] */\n    write_record(ba, 0x0089 /* BrtBeginWsView */, write_BrtBeginWsView(ws, Workbook));\n    /* [BrtPane] */\n    /* *4BrtSel */\n    /* *4SXSELECT */\n    /* *FRT */\n    write_record(ba, 0x008A /* BrtEndWsView */);\n  }\n  /* *FRT */\n  write_record(ba, 0x0086 /* BrtEndWsViews */);\n}\nfunction write_WSFMTINFO( /*::ba, ws*/\n) {\n  /* [ACWSFMTINFO] */\n  // write_record(ba, 0x01E5 /* BrtWsFmtInfo */, write_BrtWsFmtInfo(ws));\n}\nfunction write_SHEETPROTECT(ba, ws) {\n  if (!ws['!protect']) return;\n  /* [BrtSheetProtectionIso] */\n  write_record(ba, 0x0217 /* BrtSheetProtection */, write_BrtSheetProtection(ws['!protect']));\n}\nfunction write_ws_bin(idx /*:number*/, opts, wb /*:Workbook*/, rels) {\n  var ba = buf_array();\n  var s = wb.SheetNames[idx],\n    ws = wb.Sheets[s] || {};\n  var c /*:string*/ = s;\n  try {\n    if (wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c;\n  } catch (e) {}\n  var r = safe_decode_range(ws['!ref'] || \"A1\");\n  if (r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n    if (opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n    r.e.c = Math.min(r.e.c, 0x3FFF);\n    r.e.r = Math.min(r.e.c, 0xFFFFF);\n  }\n  ws['!links'] = [];\n  /* passed back to write_zip and removed there */\n  ws['!comments'] = [];\n  write_record(ba, 0x0081 /* BrtBeginSheet */);\n  if (wb.vbaraw || ws['!outline']) write_record(ba, 0x0093 /* BrtWsProp */, write_BrtWsProp(c, ws['!outline']));\n  write_record(ba, 0x0094 /* BrtWsDim */, write_BrtWsDim(r));\n  write_WSVIEWS2(ba, ws, wb.Workbook);\n  write_WSFMTINFO(ba, ws);\n  write_COLINFOS(ba, ws, idx, opts, wb);\n  write_CELLTABLE(ba, ws, idx, opts, wb);\n  /* [BrtSheetCalcProp] */\n  write_SHEETPROTECT(ba, ws);\n  /* *([BrtRangeProtectionIso] BrtRangeProtection) */\n  /* [SCENMAN] */\n  write_AUTOFILTER(ba, ws, wb, idx);\n  /* [SORTSTATE] */\n  /* [DCON] */\n  /* [USERSHVIEWS] */\n  write_MERGECELLS(ba, ws);\n  /* [BrtPhoneticInfo] */\n  /* *CONDITIONALFORMATTING */\n  /* [DVALS] */\n  write_HLINKS(ba, ws, rels);\n  /* [BrtPrintOptions] */\n  if (ws['!margins']) write_record(ba, 0x01DC /* BrtMargins */, write_BrtMargins(ws['!margins']));\n  /* [BrtPageSetup] */\n  /* [HEADERFOOTER] */\n  /* [RWBRK] */\n  /* [COLBRK] */\n  /* *BrtBigName */\n  /* [CELLWATCHES] */\n  if (!opts || opts.ignoreEC || opts.ignoreEC == void 0) write_IGNOREECS(ba, ws);\n  /* [SMARTTAGS] */\n  /* [BrtDrawing] */\n  write_LEGACYDRAWING(ba, ws, idx, rels);\n  /* [BrtLegacyDrawingHF] */\n  /* [BrtBkHim] */\n  /* [OLEOBJECTS] */\n  /* [ACTIVEXCONTROLS] */\n  /* [WEBPUBITEMS] */\n  /* [LISTPARTS] */\n  /* FRTWORKSHEET */\n  write_record(ba, 0x0082 /* BrtEndSheet */);\n  return ba.end();\n}\nfunction parse_Cache(data /*:string*/) /*:[Array<number|string>, string, ?string]*/{\n  var col /*:Array<number|string>*/ = [];\n  var num = data.match(/^<c:numCache>/);\n  var f;\n\n  /* 21.2.2.150 pt CT_NumVal */\n  (data.match(/<c:pt idx=\"(\\d*)\"[^<>\\/]*><c:v>([^<])<\\/c:v><\\/c:pt>/mg) || []).forEach(function (pt) {\n    var q = pt.match(/<c:pt idx=\"(\\d*)\"[^<>\\/]*><c:v>([^<]*)<\\/c:v><\\/c:pt>/);\n    if (!q) return;\n    col[+q[1]] = num ? +q[2] : q[2];\n  });\n\n  /* 21.2.2.71 formatCode CT_Xstring */\n  var nf = unescapexml((str_match_xml(data, \"c:formatCode\") || [\"\", \"General\"])[1]);\n  (str_match_ng(data, \"<c:f>\", \"</c:f>\") || []).forEach(function (F) {\n    f = F.replace(/<[^<>]*>/g, \"\");\n  });\n  return [col, nf, f];\n}\n\n/* 21.2 DrawingML - Charts */\nfunction parse_chart(data /*:?string*/, name /*:string*/, opts, rels, wb, csheet) {\n  var cs /*:Worksheet*/ = csheet || {\n    \"!type\": \"chart\"\n  } /*:any*/;\n  if (!data) return csheet;\n  /* 21.2.2.27 chart CT_Chart */\n\n  var C = 0,\n    R = 0,\n    col = \"A\";\n  var refguess = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n\n  /* 21.2.2.120 numCache CT_NumData */\n  (str_match_ng(data, \"<c:numCache>\", \"</c:numCache>\") || []).forEach(function (nc) {\n    var cache = parse_Cache(nc);\n    refguess.s.r = refguess.s.c = 0;\n    refguess.e.c = C;\n    col = encode_col(C);\n    cache[0].forEach(function (n, i) {\n      if (cs[\"!data\"]) {\n        if (!cs[\"!data\"][i]) cs[\"!data\"][i] = [];\n        cs[\"!data\"][i][C] = {\n          t: 'n',\n          v: n,\n          z: cache[1]\n        };\n      } else cs[col + encode_row(i)] = {\n        t: 'n',\n        v: n,\n        z: cache[1]\n      };\n      R = i;\n    });\n    if (refguess.e.r < R) refguess.e.r = R;\n    ++C;\n  });\n  if (C > 0) cs[\"!ref\"] = encode_range(refguess);\n  return cs;\n}\n/* 18.3 Worksheets also covers Chartsheets */\nfunction parse_cs_xml(data /*:?string*/, opts, idx /*:number*/, rels, wb /*::, themes, styles*/) /*:Worksheet*/{\n  if (!data) return data;\n  /* 18.3.1.12 chartsheet CT_ChartSheet */\n  if (!rels) rels = {\n    '!id': {}\n  };\n  var s = {\n    '!type': \"chart\",\n    '!drawel': null,\n    '!rel': \"\"\n  } /*:any*/;\n  var m;\n\n  /* 18.3.1.83 sheetPr CT_ChartsheetPr */\n  var sheetPr = data.match(sheetprregex);\n  if (sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n  /* 18.3.1.36 drawing CT_Drawing */\n  if (m = data.match(/drawing r:id=\"(.*?)\"/)) s['!rel'] = m[1];\n  if (rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n  return s;\n}\n//function write_cs_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n//\tvar o = [XML_HEADER, writextag('chartsheet', null, {\n//\t\t'xmlns': XMLNS_main[0],\n//\t\t'xmlns:r': XMLNS.r\n//\t})];\n//\to[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\n//\tadd_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n//\tif(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n//\treturn o.join(\"\");\n//}\n\n/* [MS-XLSB] 2.4.331 BrtCsProp */\nfunction parse_BrtCsProp(data, length /*:number*/) {\n  data.l += 10;\n  var name = parse_XLWideString(data, length - 10);\n  return {\n    name: name\n  };\n}\n\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\nfunction parse_cs_bin(data, opts, idx /*:number*/, rels, wb /*::, themes, styles*/) /*:Worksheet*/{\n  if (!data) return data;\n  if (!rels) rels = {\n    '!id': {}\n  };\n  var s = {\n    '!type': \"chart\",\n    '!drawel': null,\n    '!rel': \"\"\n  };\n  var state /*:Array<string>*/ = [];\n  var pass = false;\n  recordhopper(data, function cs_parse(val, R, RT) {\n    switch (RT) {\n      case 0x0226:\n        /* 'BrtDrawing' */\n        s['!rel'] = val;\n        break;\n      case 0x028B:\n        /* 'BrtCsProp' */\n        if (!wb.Sheets[idx]) wb.Sheets[idx] = {};\n        if (val.name) wb.Sheets[idx].CodeName = val.name;\n        break;\n      case 0x0232: /* 'BrtBkHim' */\n      case 0x028C: /* 'BrtCsPageSetup' */\n      case 0x029D: /* 'BrtCsProtection' */\n      case 0x02A7: /* 'BrtCsProtectionIso' */\n      case 0x0227: /* 'BrtLegacyDrawing' */\n      case 0x0228: /* 'BrtLegacyDrawingHF' */\n      case 0x01DC: /* 'BrtMargins' */\n      case 0x0C00:\n        /* 'BrtUid' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */\n        state.push(RT);\n        break;\n      case 0x0026:\n        /* 'BrtACEnd' */\n        state.pop();\n        break;\n      default:\n        if (R.T > 0) state.push(RT);else if (R.T < 0) state.pop();else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n  if (rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n  return s;\n}\n//function write_cs_bin(/*::idx:number, opts, wb:Workbook, rels*/) {\n//\tvar ba = buf_array();\n//\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n//\t/* [BrtCsProp] */\n//\t/* CSVIEWS */\n//\t/* [[BrtCsProtectionIso] BrtCsProtection] */\n//\t/* [USERCSVIEWS] */\n//\t/* [BrtMargins] */\n//\t/* [BrtCsPageSetup] */\n//\t/* [HEADERFOOTER] */\n//\t/* BrtDrawing */\n//\t/* [BrtLegacyDrawing] */\n//\t/* [BrtLegacyDrawingHF] */\n//\t/* [BrtBkHim] */\n//\t/* [WEBPUBITEMS] */\n//\t/* FRTCHARTSHEET */\n//\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n//\treturn ba.end();\n//}\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\nvar WBPropsDef = [['allowRefreshQuery', false, \"bool\"], ['autoCompressPictures', true, \"bool\"], ['backupFile', false, \"bool\"], ['checkCompatibility', false, \"bool\"], ['CodeName', ''], ['date1904', false, \"bool\"], ['defaultThemeVersion', 0, \"int\"], ['filterPrivacy', false, \"bool\"], ['hidePivotFieldList', false, \"bool\"], ['promptedSolutions', false, \"bool\"], ['publishItems', false, \"bool\"], ['refreshAllConnections', false, \"bool\"], ['saveExternalLinkValues', true, \"bool\"], ['showBorderUnselectedTables', true, \"bool\"], ['showInkAnnotation', true, \"bool\"], ['showObjects', 'all'], ['showPivotChartFilter', false, \"bool\"], ['updateLinks', 'userSet']];\n\n/* 18.2.30 (CT_BookView) Defaults */\nvar WBViewDef = [['activeTab', 0, \"int\"], ['autoFilterDateGrouping', true, \"bool\"], ['firstSheet', 0, \"int\"], ['minimized', false, \"bool\"], ['showHorizontalScroll', true, \"bool\"], ['showSheetTabs', true, \"bool\"], ['showVerticalScroll', true, \"bool\"], ['tabRatio', 600, \"int\"], ['visibility', 'visible']\n//window{Height,Width}, {x,y}Window\n];\n\n/* 18.2.19 (CT_Sheet) Defaults */\nvar SheetDef = [\n  //['state', 'visible']\n];\n\n/* 18.2.2  (CT_CalcPr) Defaults */\nvar CalcPrDef = [['calcCompleted', 'true'], ['calcMode', 'auto'], ['calcOnSave', 'true'], ['concurrentCalc', 'true'], ['fullCalcOnLoad', 'false'], ['fullPrecision', 'true'], ['iterate', 'false'], ['iterateCount', '100'], ['iterateDelta', '0.001'], ['refMode', 'A1']];\n\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\n/*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\nfunction push_defaults_array(target, defaults) {\n  for (var j = 0; j != target.length; ++j) {\n    var w = target[j];\n    for (var i = 0; i != defaults.length; ++i) {\n      var z = defaults[i];\n      if (w[z[0]] == null) w[z[0]] = z[1];else switch (z[2]) {\n        case \"bool\":\n          if (typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]);\n          break;\n        case \"int\":\n          if (typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10);\n          break;\n      }\n    }\n  }\n}\nfunction push_defaults(target, defaults) {\n  for (var i = 0; i != defaults.length; ++i) {\n    var z = defaults[i];\n    if (target[z[0]] == null) target[z[0]] = z[1];else switch (z[2]) {\n      case \"bool\":\n        if (typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]);\n        break;\n      case \"int\":\n        if (typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10);\n        break;\n    }\n  }\n}\nfunction parse_wb_defaults(wb) {\n  push_defaults(wb.WBProps, WBPropsDef);\n  push_defaults(wb.CalcPr, CalcPrDef);\n  push_defaults_array(wb.WBView, WBViewDef);\n  push_defaults_array(wb.Sheets, SheetDef);\n  _ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n}\nfunction safe1904(wb /*:Workbook*/) /*:string*/{\n  /* TODO: store date1904 somewhere else */\n  if (!wb.Workbook) return \"false\";\n  if (!wb.Workbook.WBProps) return \"false\";\n  return parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n}\nvar badchars = /*#__PURE__*/\":][*?\\/\\\\\".split(\"\");\nfunction check_ws_name(n /*:string*/, safe /*:?boolean*/) /*:boolean*/{\n  try {\n    if (n == \"\") throw new Error(\"Sheet name cannot be blank\");\n    if (n.length > 31) throw new Error(\"Sheet name cannot exceed 31 chars\");\n    if (n.charCodeAt(0) == 0x27 || n.charCodeAt(n.length - 1) == 0x27) throw new Error(\"Sheet name cannot start or end with apostrophe (')\");\n    if (n.toLowerCase() == \"history\") throw new Error(\"Sheet name cannot be 'History'\");\n    badchars.forEach(function (c) {\n      if (n.indexOf(c) == -1) return;\n      throw new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n    });\n  } catch (e) {\n    if (safe) return false;\n    throw e;\n  }\n  return true;\n}\nfunction check_wb_names(N, S, codes) {\n  N.forEach(function (n, i) {\n    check_ws_name(n);\n    for (var j = 0; j < i; ++j) if (n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n    if (codes) {\n      var cn = S && S[i] && S[i].CodeName || n;\n      if (cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n    }\n  });\n}\nfunction check_wb(wb) {\n  if (!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n  if (!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n  var Sheets = wb.Workbook && wb.Workbook.Sheets || [];\n  check_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n  for (var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n  wb.SheetNames.forEach(function (n, i) {\n    var ws = wb.Sheets[n];\n    if (!ws || !ws[\"!autofilter\"]) return;\n    var DN;\n    if (!wb.Workbook) wb.Workbook = {};\n    if (!wb.Workbook.Names) wb.Workbook.Names = [];\n    wb.Workbook.Names.forEach(function (dn) {\n      if (dn.Name == \"_xlnm._FilterDatabase\" && dn.Sheet == i) DN = dn;\n    });\n    var nn = formula_quote_sheet_name(n) + \"!\" + fix_range(ws[\"!autofilter\"].ref);\n    if (DN) DN.Ref = nn;else wb.Workbook.Names.push({\n      Name: \"_xlnm._FilterDatabase\",\n      Sheet: i,\n      Ref: nn\n    });\n  });\n  /* TODO: validate workbook */\n}\n/* 18.2 Workbook */\nvar wbnsregex = /<\\w+:workbook/;\nfunction parse_wb_xml(data, opts) /*:WorkbookFile*/{\n  if (!data) throw new Error(\"Could not find file\");\n  var wb = /*::(*/{\n    AppVersion: {},\n    WBProps: {},\n    WBView: [],\n    Sheets: [],\n    CalcPr: {},\n    Names: [],\n    xmlns: \"\"\n  } /*::)*/;\n  var pass = false,\n    xmlns = \"xmlns\";\n  var dname = {},\n    dnstart = 0;\n  data.replace(tagregex, function xml_wb(x, idx) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n\n      /* 18.2.27 workbook CT_Workbook 1 */\n      case '<workbook':\n        if (x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n        wb.xmlns = y[xmlns];\n        break;\n      case '</workbook>':\n        break;\n\n      /* 18.2.13 fileVersion CT_FileVersion ? */\n      case '<fileVersion':\n        delete y[0];\n        wb.AppVersion = y;\n        break;\n      case '<fileVersion/>':\n      case '</fileVersion>':\n        break;\n\n      /* 18.2.12 fileSharing CT_FileSharing ? */\n      case '<fileSharing':\n        break;\n      case '<fileSharing/>':\n        break;\n\n      /* 18.2.28 workbookPr CT_WorkbookPr ? */\n      case '<workbookPr':\n      case '<workbookPr/>':\n        WBPropsDef.forEach(function (w) {\n          if (y[w[0]] == null) return;\n          switch (w[2]) {\n            case \"bool\":\n              wb.WBProps[w[0]] = parsexmlbool(y[w[0]]);\n              break;\n            case \"int\":\n              wb.WBProps[w[0]] = parseInt(y[w[0]], 10);\n              break;\n            default:\n              wb.WBProps[w[0]] = y[w[0]];\n          }\n        });\n        if (y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);\n        break;\n      case '</workbookPr>':\n        break;\n\n      /* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n      case '<workbookProtection':\n        break;\n      case '<workbookProtection/>':\n        break;\n\n      /* 18.2.1  bookViews CT_BookViews ? */\n      case '<bookViews':\n      case '<bookViews>':\n      case '</bookViews>':\n        break;\n      /* 18.2.30   workbookView CT_BookView + */\n      case '<workbookView':\n      case '<workbookView/>':\n        delete y[0];\n        wb.WBView.push(y);\n        break;\n      case '</workbookView>':\n        break;\n\n      /* 18.2.20 sheets CT_Sheets 1 */\n      case '<sheets':\n      case '<sheets>':\n      case '</sheets>':\n        break;\n      // aggregate sheet\n      /* 18.2.19   sheet CT_Sheet + */\n      case '<sheet':\n        switch (y.state) {\n          case \"hidden\":\n            y.Hidden = 1;\n            break;\n          case \"veryHidden\":\n            y.Hidden = 2;\n            break;\n          default:\n            y.Hidden = 0;\n        }\n        delete y.state;\n        y.name = unescapexml(utf8read(y.name));\n        delete y[0];\n        wb.Sheets.push(y);\n        break;\n      case '</sheet>':\n        break;\n\n      /* 18.2.15 functionGroups CT_FunctionGroups ? */\n      case '<functionGroups':\n      case '<functionGroups/>':\n        break;\n      /* 18.2.14   functionGroup CT_FunctionGroup + */\n      case '<functionGroup':\n        break;\n\n      /* 18.2.9  externalReferences CT_ExternalReferences ? */\n      case '<externalReferences':\n      case '</externalReferences>':\n      case '<externalReferences>':\n        break;\n      /* 18.2.8    externalReference CT_ExternalReference + */\n      case '<externalReference':\n        break;\n\n      /* 18.2.6  definedNames CT_DefinedNames ? */\n      case '<definedNames/>':\n        break;\n      case '<definedNames>':\n      case '<definedNames':\n        pass = true;\n        break;\n      case '</definedNames>':\n        pass = false;\n        break;\n      /* 18.2.5    definedName CT_DefinedName + */\n      case '<definedName':\n        {\n          dname = {};\n          dname.Name = utf8read(y.name);\n          if (y.comment) dname.Comment = y.comment;\n          if (y.localSheetId) dname.Sheet = +y.localSheetId;\n          if (parsexmlbool(y.hidden || \"0\")) dname.Hidden = true;\n          dnstart = idx + x.length;\n        }\n        break;\n      case '</definedName>':\n        {\n          dname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n          wb.Names.push(dname);\n        }\n        break;\n      case '<definedName/>':\n        break;\n\n      /* 18.2.2  calcPr CT_CalcPr ? */\n      case '<calcPr':\n        delete y[0];\n        wb.CalcPr = y;\n        break;\n      case '<calcPr/>':\n        delete y[0];\n        wb.CalcPr = y;\n        break;\n      case '</calcPr>':\n        break;\n\n      /* 18.2.16 oleSize CT_OleSize ? (ref required) */\n      case '<oleSize':\n        break;\n\n      /* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n      case '<customWorkbookViews>':\n      case '</customWorkbookViews>':\n      case '<customWorkbookViews':\n        break;\n      /* 18.2.3  customWorkbookView CT_CustomWorkbookView + */\n      case '<customWorkbookView':\n      case '</customWorkbookView>':\n        break;\n\n      /* 18.2.18 pivotCaches CT_PivotCaches ? */\n      case '<pivotCaches>':\n      case '</pivotCaches>':\n      case '<pivotCaches':\n        break;\n      /* 18.2.17 pivotCache CT_PivotCache ? */\n      case '<pivotCache':\n        break;\n\n      /* 18.2.21 smartTagPr CT_SmartTagPr ? */\n      case '<smartTagPr':\n      case '<smartTagPr/>':\n        break;\n\n      /* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n      case '<smartTagTypes':\n      case '<smartTagTypes>':\n      case '</smartTagTypes>':\n        break;\n      /* 18.2.22 smartTagType CT_SmartTagType ? */\n      case '<smartTagType':\n        break;\n\n      /* 18.2.24 webPublishing CT_WebPublishing ? */\n      case '<webPublishing':\n      case '<webPublishing/>':\n        break;\n\n      /* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n      case '<fileRecoveryPr':\n      case '<fileRecoveryPr/>':\n        break;\n\n      /* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n      case '<webPublishObjects>':\n      case '<webPublishObjects':\n      case '</webPublishObjects>':\n        break;\n      /* 18.2.25 webPublishObject CT_WebPublishObject ? */\n      case '<webPublishObject':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n      case '<extLst/>':\n        break;\n      /* 18.2.7  ext CT_Extension + */\n      case '<ext':\n        pass = true;\n        break;\n      //TODO: check with versions of excel\n      case '</ext>':\n        pass = false;\n        break;\n\n      /* Others */\n      case '<ArchID':\n        break;\n      case '<AlternateContent':\n      case '<AlternateContent>':\n        pass = true;\n        break;\n      case '</AlternateContent>':\n        pass = false;\n        break;\n\n      /* TODO */\n      case '<revisionPtr':\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n    }\n    return x;\n  });\n  if (XMLNS_main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n  parse_wb_defaults(wb);\n  return wb;\n}\nfunction write_wb_xml(wb /*:Workbook*/ /*::, opts:?WriteOpts*/) /*:string*/{\n  var o = [XML_HEADER];\n  o[o.length] = writextag('workbook', null, {\n    'xmlns': XMLNS_main[0],\n    //'xmlns:mx': XMLNS.mx,\n    //'xmlns:s': XMLNS_main[0],\n    'xmlns:r': XMLNS.r\n  });\n  var write_names = wb.Workbook && (wb.Workbook.Names || []).length > 0;\n\n  /* fileVersion */\n  /* fileSharing */\n\n  var workbookPr /*:any*/ = {\n    codeName: \"ThisWorkbook\"\n  } /*:any*/;\n  if (wb.Workbook && wb.Workbook.WBProps) {\n    WBPropsDef.forEach(function (x) {\n      /*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n      if (wb.Workbook.WBProps[x[0]] /*:any*/ == null) return;\n      if (wb.Workbook.WBProps[x[0]] /*:any*/ == x[1]) return;\n      workbookPr[x[0]] = wb.Workbook.WBProps[x[0]] /*:any*/;\n    });\n    /*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n    if (wb.Workbook.WBProps.CodeName) {\n      workbookPr.codeName = wb.Workbook.WBProps.CodeName;\n      delete workbookPr.CodeName;\n    }\n  }\n  o[o.length] = writextag('workbookPr', null, workbookPr);\n\n  /* workbookProtection */\n\n  var sheets = wb.Workbook && wb.Workbook.Sheets || [];\n  var i = 0;\n\n  /* bookViews only written if first worksheet is hidden */\n  if (sheets && sheets[0] && !!sheets[0].Hidden) {\n    o[o.length] = \"<bookViews>\";\n    for (i = 0; i != wb.SheetNames.length; ++i) {\n      if (!sheets[i]) break;\n      if (!sheets[i].Hidden) break;\n    }\n    if (i == wb.SheetNames.length) i = 0;\n    o[o.length] = '<workbookView firstSheet=\"' + i + '\" activeTab=\"' + i + '\"/>';\n    o[o.length] = \"</bookViews>\";\n  }\n  o[o.length] = \"<sheets>\";\n  for (i = 0; i != wb.SheetNames.length; ++i) {\n    var sht = {\n      name: escapexml(wb.SheetNames[i].slice(0, 31))\n    } /*:any*/;\n    sht.sheetId = \"\" + (i + 1);\n    sht[\"r:id\"] = \"rId\" + (i + 1);\n    if (sheets[i]) switch (sheets[i].Hidden) {\n      case 1:\n        sht.state = \"hidden\";\n        break;\n      case 2:\n        sht.state = \"veryHidden\";\n        break;\n    }\n    o[o.length] = writextag('sheet', null, sht);\n  }\n  o[o.length] = \"</sheets>\";\n\n  /* functionGroups */\n  /* externalReferences */\n\n  if (write_names) {\n    o[o.length] = \"<definedNames>\";\n    if (wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function (n) {\n      var d /*:any*/ = {\n        name: n.Name\n      };\n      if (n.Comment) d.comment = n.Comment;\n      if (n.Sheet != null) d.localSheetId = \"\" + n.Sheet;\n      if (n.Hidden) d.hidden = \"1\";\n      if (!n.Ref) return;\n      o[o.length] = writextag('definedName', escapexml(n.Ref), d);\n    });\n    o[o.length] = \"</definedNames>\";\n  }\n\n  /* calcPr */\n  /* oleSize */\n  /* customWorkbookViews */\n  /* pivotCaches */\n  /* smartTagPr */\n  /* smartTagTypes */\n  /* webPublishing */\n  /* fileRecoveryPr */\n  /* webPublishObjects */\n  /* extLst */\n\n  if (o.length > 2) {\n    o[o.length] = '</workbook>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\nfunction parse_BrtBundleSh(data, length /*:number*/) {\n  var z = {};\n  z.Hidden = data.read_shift(4); //hsState ST_SheetState\n  z.iTabID = data.read_shift(4);\n  z.strRelID = parse_RelID(data, length - 8);\n  z.name = parse_XLWideString(data);\n  return z;\n}\nfunction write_BrtBundleSh(data, o) {\n  if (!o) o = new_buf(127);\n  o.write_shift(4, data.Hidden);\n  o.write_shift(4, data.iTabID);\n  write_RelID(data.strRelID, o);\n  write_XLWideString(data.name.slice(0, 31), o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.815 BrtWbProp */\nfunction parse_BrtWbProp(data, length) /*:WBProps*/{\n  var o /*:WBProps*/ = {} /*:any*/;\n  var flags = data.read_shift(4);\n  o.defaultThemeVersion = data.read_shift(4);\n  var strName = length > 8 ? parse_XLWideString(data) : \"\";\n  if (strName.length > 0) o.CodeName = strName;\n  o.autoCompressPictures = !!(flags & 0x10000);\n  o.backupFile = !!(flags & 0x40);\n  o.checkCompatibility = !!(flags & 0x1000);\n  o.date1904 = !!(flags & 0x01);\n  o.filterPrivacy = !!(flags & 0x08);\n  o.hidePivotFieldList = !!(flags & 0x400);\n  o.promptedSolutions = !!(flags & 0x10);\n  o.publishItems = !!(flags & 0x800);\n  o.refreshAllConnections = !!(flags & 0x40000);\n  o.saveExternalLinkValues = !!(flags & 0x80);\n  o.showBorderUnselectedTables = !!(flags & 0x04);\n  o.showInkAnnotation = !!(flags & 0x20);\n  o.showObjects = [\"all\", \"placeholders\", \"none\"][flags >> 13 & 0x03];\n  o.showPivotChartFilter = !!(flags & 0x8000);\n  o.updateLinks = [\"userSet\", \"never\", \"always\"][flags >> 8 & 0x03];\n  return o;\n}\nfunction write_BrtWbProp(data /*:?WBProps*/, o) {\n  if (!o) o = new_buf(72);\n  var flags = 0;\n  if (data) {\n    /* TODO: mirror parse_BrtWbProp fields */\n    if (data.date1904) flags |= 0x01;\n    if (data.filterPrivacy) flags |= 0x08;\n  }\n  o.write_shift(4, flags);\n  o.write_shift(4, 0);\n  write_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtFRTArchID$(data, length) {\n  var o = {};\n  data.read_shift(4);\n  o.ArchID = data.read_shift(4);\n  data.l += length - 8;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.687 BrtName */\nfunction parse_BrtName(data, length, opts) {\n  var end = data.l + length;\n  var flags = data.read_shift(4);\n  data.l += 1; //var chKey = data.read_shift(1);\n  var itab = data.read_shift(4);\n  var name = parse_XLNameWideString(data);\n  var formula;\n  var comment = \"\";\n  try {\n    formula = parse_XLSBNameParsedFormula(data, 0, opts);\n    try {\n      comment = parse_XLNullableWideString(data);\n    } catch (e) {}\n  } catch (e) {\n    console.error(\"Could not parse defined name \" + name);\n  }\n  if (flags & 0x20) name = \"_xlnm.\" + name;\n  //if(0 /* fProc */) {\n  // unusedstring1: XLNullableWideString\n  // description: XLNullableWideString\n  // helpTopic: XLNullableWideString\n  // unusedstring2: XLNullableWideString\n  //}\n  data.l = end;\n  var out = {\n    Name: name,\n    Ptg: formula,\n    Flags: flags\n  } /*:any*/;\n  if (itab < 0xFFFFFFF) out.Sheet = itab;\n  if (comment) out.Comment = comment;\n  return out;\n}\nfunction write_BrtName(name, wb) {\n  var o = new_buf(9);\n  var flags = 0;\n  var dname = name.Name;\n  if (XLSLblBuiltIn.indexOf(dname) > -1) {\n    flags |= 0x20;\n    dname = dname.slice(6);\n  }\n  o.write_shift(4, flags); // flags\n  o.write_shift(1, 0); // chKey\n  o.write_shift(4, name.Sheet == null ? 0xFFFFFFFF : name.Sheet);\n  var arr = [o, write_XLWideString(dname), write_XLSBNameParsedFormula(name.Ref, wb)];\n  if (name.Comment) arr.push(write_XLNullableWideString(name.Comment));else {\n    var x = new_buf(4);\n    x.write_shift(4, 0xFFFFFFFF);\n    arr.push(x);\n  }\n\n  // if macro (flags & 0x0F):\n  // write_shift(4, 0xFFFFFFFF);\n  // write_XLNullableWideString(description)\n  // write_XLNullableWideString(helpTopic)\n  // write_shift(4, 0xFFFFFFFF);\n\n  return bconcat(arr);\n}\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction parse_wb_bin(data, opts) /*:WorkbookFile*/{\n  var wb = {\n    AppVersion: {},\n    WBProps: {},\n    WBView: [],\n    Sheets: [],\n    CalcPr: {},\n    xmlns: \"\"\n  };\n  var state /*:Array<string>*/ = [];\n  var pass = false;\n  if (!opts) opts = {};\n  opts.biff = 12;\n  var Names = [];\n  var supbooks = [[]] /*:any*/;\n  supbooks.SheetNames = [];\n  supbooks.XTI = [];\n  XLSBRecordEnum[0x0010] = {\n    n: \"BrtFRTArchID$\",\n    f: parse_BrtFRTArchID$\n  };\n  recordhopper(data, function hopper_wb(val, R, RT) {\n    switch (RT) {\n      case 0x009C:\n        /* 'BrtBundleSh' */\n        supbooks.SheetNames.push(val.name);\n        wb.Sheets.push(val);\n        break;\n      case 0x0099:\n        /* 'BrtWbProp' */\n        wb.WBProps = val;\n        break;\n      case 0x0027:\n        /* 'BrtName' */\n        if (val.Sheet != null) opts.SID = val.Sheet;\n        val.Ref = val.Ptg ? stringify_formula(val.Ptg, null, null, supbooks, opts) : \"#REF!\";\n        delete opts.SID;\n        delete val.Ptg;\n        Names.push(val);\n        break;\n      case 0x040C:\n        /* 'BrtNameExt' */break;\n      case 0x0165: /* 'BrtSupSelf' */\n      case 0x0166: /* 'BrtSupSame' */\n      case 0x0163: /* 'BrtSupBookSrc' */\n      case 0x029B:\n        /* 'BrtSupAddin' */\n        if (!supbooks[0].length) supbooks[0] = [RT, val];else supbooks.push([RT, val]);\n        supbooks[supbooks.length - 1].XTI = [];\n        break;\n      case 0x016A:\n        /* 'BrtExternSheet' */\n        if (supbooks.length === 0) {\n          supbooks[0] = [];\n          supbooks[0].XTI = [];\n        }\n        supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n        supbooks.XTI = supbooks.XTI.concat(val);\n        break;\n      case 0x0169:\n        /* 'BrtPlaceholderName' */\n        break;\n      case 0x0817: /* 'BrtAbsPath15' */\n      case 0x009E: /* 'BrtBookView' */\n      case 0x008F: /* 'BrtBeginBundleShs' */\n      case 0x0298: /* 'BrtBeginFnGroup' */\n      case 0x0161:\n        /* 'BrtBeginExternals' */\n        break;\n\n      /* case 'BrtModelTimeGroupingCalcCol' */\n      case 0x0C00: /* 'BrtUid' */\n      case 0x0C01: /* 'BrtRevisionPtr' */\n      case 0x0216: /* 'BrtBookProtection' */\n      case 0x02A5: /* 'BrtBookProtectionIso' */\n      case 0x009D: /* 'BrtCalcProp' */\n      case 0x0262: /* 'BrtCrashRecErr' */\n      case 0x0802: /* 'BrtDecoupledPivotCacheID' */\n      case 0x009B: /* 'BrtFileRecover' */\n      case 0x0224: /* 'BrtFileSharing' */\n      case 0x02A4: /* 'BrtFileSharingIso' */\n      case 0x0080: /* 'BrtFileVersion' */\n      case 0x0299: /* 'BrtFnGroup' */\n      case 0x0850: /* 'BrtModelRelationship' */\n      case 0x084D: /* 'BrtModelTable' */\n      case 0x0225: /* 'BrtOleSize' */\n      case 0x0805: /* 'BrtPivotTableRef' */\n      case 0x0254: /* 'BrtSmartTagType' */\n      case 0x081C: /* 'BrtTableSlicerCacheID' */\n      case 0x081B: /* 'BrtTableSlicerCacheIDs' */\n      case 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n      case 0x018D: /* 'BrtUserBookView' */\n      case 0x009A: /* 'BrtWbFactoid' */\n      case 0x045D: /* 'BrtWbProp14' */\n      case 0x0229: /* 'BrtWebOpt' */\n      case 0x082B:\n        /* 'BrtWorkBookPr15' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        state.pop();\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0026:\n        /* 'BrtACEnd' */\n        state.pop();\n        pass = false;\n        break;\n      case 0x0010:\n        /* 'BrtFRTArchID$' */break;\n      default:\n        if (R.T) {/* empty */} else if (!pass || opts.WTF && state[state.length - 1] != 0x0025 /* BrtACBegin */ && state[state.length - 1] != 0x0023 /* BrtFRTBegin */) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n  parse_wb_defaults(wb);\n\n  // $FlowIgnore\n  wb.Names = Names;\n  wb /*:any*/.supbooks = supbooks;\n  return wb;\n}\nfunction write_BUNDLESHS(ba, wb /*::, opts*/) {\n  write_record(ba, 0x008F /* BrtBeginBundleShs */);\n  for (var idx = 0; idx != wb.SheetNames.length; ++idx) {\n    var viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n    var d = {\n      Hidden: viz,\n      iTabID: idx + 1,\n      strRelID: 'rId' + (idx + 1),\n      name: wb.SheetNames[idx]\n    };\n    write_record(ba, 0x009C /* BrtBundleSh */, write_BrtBundleSh(d));\n  }\n  write_record(ba, 0x0090 /* BrtEndBundleShs */);\n}\n\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\nfunction write_BrtFileVersion(data, o) {\n  if (!o) o = new_buf(127);\n  for (var i = 0; i != 4; ++i) o.write_shift(4, 0);\n  write_XLWideString(\"SheetJS\", o);\n  write_XLWideString(XLSX.version, o);\n  write_XLWideString(XLSX.version, o);\n  write_XLWideString(\"7262\", o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.301 BrtBookView */\nfunction write_BrtBookView(idx, o) {\n  if (!o) o = new_buf(29);\n  o.write_shift(-4, 0);\n  o.write_shift(-4, 460);\n  o.write_shift(4, 28800);\n  o.write_shift(4, 17600);\n  o.write_shift(4, 500);\n  o.write_shift(4, idx);\n  o.write_shift(4, idx);\n  var flags = 0x78;\n  o.write_shift(1, flags);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_BOOKVIEWS(ba, wb /*::, opts*/) {\n  /* required if hidden tab appears before visible tab */\n  if (!wb.Workbook || !wb.Workbook.Sheets) return;\n  var sheets = wb.Workbook.Sheets;\n  var i = 0,\n    vistab = -1,\n    hidden = -1;\n  for (; i < sheets.length; ++i) {\n    if (!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;else if (sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n  }\n  if (hidden > vistab) return;\n  write_record(ba, 0x0087 /* BrtBeginBookViews */);\n  write_record(ba, 0x009E /* BrtBookView */, write_BrtBookView(vistab));\n  /* 1*(BrtBookView *FRT) */\n  write_record(ba, 0x0088 /* BrtEndBookViews */);\n}\nfunction write_BRTNAMES(ba, wb) {\n  if (!wb.Workbook || !wb.Workbook.Names) return;\n  wb.Workbook.Names.forEach(function (name) {\n    try {\n      if (name.Flags & 0x0e) return; // TODO: macro name write\n      write_record(ba, 0x0027 /* BrtName */, write_BrtName(name, wb));\n    } catch (e) {\n      console.error(\"Could not serialize defined name \" + JSON.stringify(name));\n    }\n  });\n}\nfunction write_SELF_EXTERNS_xlsb(wb) {\n  var L = wb.SheetNames.length;\n  var o = new_buf(12 * L + 28);\n  o.write_shift(4, L + 2);\n  o.write_shift(4, 0);\n  o.write_shift(4, -2);\n  o.write_shift(4, -2); // workbook-level reference\n  o.write_shift(4, 0);\n  o.write_shift(4, -1);\n  o.write_shift(4, -1); // #REF!...\n  for (var i = 0; i < L; ++i) {\n    o.write_shift(4, 0);\n    o.write_shift(4, i);\n    o.write_shift(4, i);\n  }\n  return o;\n}\nfunction write_EXTERNALS_xlsb(ba, wb) {\n  write_record(ba, 0x0161 /* BrtBeginExternals */);\n  write_record(ba, 0x0165 /* BrtSupSelf */);\n  write_record(ba, 0x016A /* BrtExternSheet */, write_SELF_EXTERNS_xlsb(wb, 0));\n  write_record(ba, 0x0162 /* BrtEndExternals */);\n}\n\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\n/*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\n/*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction write_wb_bin(wb, opts) {\n  var ba = buf_array();\n  write_record(ba, 0x0083 /* BrtBeginBook */);\n  write_record(ba, 0x0080 /* BrtFileVersion */, write_BrtFileVersion());\n  /* [[BrtFileSharingIso] BrtFileSharing] */\n  write_record(ba, 0x0099 /* BrtWbProp */, write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n  /* [ACABSPATH] */\n  /* [[BrtBookProtectionIso] BrtBookProtection] */\n  write_BOOKVIEWS(ba, wb, opts);\n  write_BUNDLESHS(ba, wb, opts);\n  /* [FNGROUP] */\n  write_EXTERNALS_xlsb(ba, wb);\n  if ((wb.Workbook || {}).Names) write_BRTNAMES(ba, wb);\n  /* write_record(ba, 0x009D BrtCalcProp, write_BrtCalcProp()); */\n  /* [BrtOleSize] */\n  /* *(BrtUserBookView *FRT) */\n  /* [PIVOTCACHEIDS] */\n  /* [BrtWbFactoid] */\n  /* [SMARTTAGTYPES] */\n  /* [BrtWebOpt] */\n  /* write_record(ba, 0x009B BrtFileRecover, write_BrtFileRecover()); */\n  /* [WEBPUBITEMS] */\n  /* [CRERRS] */\n  /* FRTWORKBOOK */\n  write_record(ba, 0x0084 /* BrtEndBook */);\n  return ba.end();\n}\nfunction parse_wb(data, name /*:string*/, opts) /*:WorkbookFile*/{\n  if (name.slice(-4) === \".bin\") return parse_wb_bin(data /*:any*/, opts);\n  return parse_wb_xml(data /*:any*/, opts);\n}\nfunction parse_ws(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_ws_bin(data /*:any*/, opts, idx, rels, wb, themes, styles);\n  return parse_ws_xml(data /*:any*/, opts, idx, rels, wb, themes, styles);\n}\nfunction parse_cs(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_cs_bin(data /*:any*/, opts, idx, rels, wb, themes, styles);\n  return parse_cs_xml(data /*:any*/, opts, idx, rels, wb, themes, styles);\n}\nfunction parse_ms(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_ms_bin(data /*:any*/, opts, idx, rels, wb, themes, styles);\n  return parse_ms_xml(data /*:any*/, opts, idx, rels, wb, themes, styles);\n}\nfunction parse_ds(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_ds_bin(data /*:any*/, opts, idx, rels, wb, themes, styles);\n  return parse_ds_xml(data /*:any*/, opts, idx, rels, wb, themes, styles);\n}\nfunction parse_sty(data, name /*:string*/, themes, opts) {\n  if (name.slice(-4) === \".bin\") return parse_sty_bin(data /*:any*/, themes, opts);\n  return parse_sty_xml(data /*:any*/, themes, opts);\n}\nfunction parse_sst(data, name /*:string*/, opts) /*:SST*/{\n  if (name.slice(-4) === \".bin\") return parse_sst_bin(data /*:any*/, opts);\n  return parse_sst_xml(data /*:any*/, opts);\n}\nfunction parse_cmnt(data, name /*:string*/, opts) /*:Array<RawComment>*/{\n  if (name.slice(-4) === \".bin\") return parse_comments_bin(data /*:any*/, opts);\n  return parse_comments_xml(data /*:any*/, opts);\n}\nfunction parse_cc(data, name /*:string*/, opts) {\n  if (name.slice(-4) === \".bin\") return parse_cc_bin(data /*:any*/, name, opts);\n  return parse_cc_xml(data /*:any*/, name, opts);\n}\nfunction parse_xlink(data, rel, name /*:string*/, opts) {\n  if (name.slice(-4) === \".bin\") return parse_xlink_bin(data /*:any*/, rel, name, opts);\n  return parse_xlink_xml(data /*:any*/, rel, name, opts);\n}\nfunction parse_xlmeta(data, name /*:string*/, opts) {\n  if (name.slice(-4) === \".bin\") return parse_xlmeta_bin(data /*:any*/, name, opts);\n  return parse_xlmeta_xml(data /*:any*/, name, opts);\n}\nvar attregexg2 = /\\b((?:\\w+:)?[\\w]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\nvar attregex2 = /\\b((?:\\w+:)?[\\w]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\nfunction xlml_parsexmltag(tag /*:string*/, skip_root /*:?boolean*/) {\n  var words = tag.split(/\\s+/);\n  var z /*:any*/ = [] /*:any*/;\n  if (!skip_root) z[0] = words[0];\n  if (words.length === 1) return z;\n  var m = tag.match(attregexg2),\n    y,\n    j,\n    w,\n    i;\n  if (m) for (i = 0; i != m.length; ++i) {\n    y = m[i].match(attregex2);\n    /*:: if(!y || !y[2]) continue; */\n    if ((j = y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1, y[2].length - 1);else {\n      if (y[1].slice(0, 6) === \"xmlns:\") w = \"xmlns\" + y[1].slice(6);else w = y[1].slice(j + 1);\n      z[w] = y[2].slice(1, y[2].length - 1);\n    }\n  }\n  return z;\n}\nfunction xlml_parsexmltagobj(tag /*:string*/) {\n  var words = tag.split(/\\s+/);\n  var z = {};\n  if (words.length === 1) return z;\n  var m = tag.match(attregexg2),\n    y,\n    j,\n    w,\n    i;\n  if (m) for (i = 0; i != m.length; ++i) {\n    y = m[i].match(attregex2);\n    /*:: if(!y || !y[2]) continue; */\n    if ((j = y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1, y[2].length - 1);else {\n      if (y[1].slice(0, 6) === \"xmlns:\") w = \"xmlns\" + y[1].slice(6);else w = y[1].slice(j + 1);\n      z[w] = y[2].slice(1, y[2].length - 1);\n    }\n  }\n  return z;\n}\n\n// ----\n\n/* map from xlml named formats to SSF TODO: localize */\nvar XLMLFormatMap /*: {[string]:string}*/;\nfunction xlml_format(format, value, date1904) /*:string*/{\n  var fmt = XLMLFormatMap[format] || unescapexml(format);\n  if (fmt === \"General\") return SSF_general(value);\n  return SSF_format(fmt, value, {\n    date1904: !!date1904\n  });\n}\nfunction xlml_set_custprop(Custprops, key, cp, val /*:string*/) {\n  var oval /*:any*/ = val;\n  switch ((cp[0].match(/dt:dt=\"([\\w.]+)\"/) || [\"\", \"\"])[1]) {\n    case \"boolean\":\n      oval = parsexmlbool(val);\n      break;\n    case \"i2\":\n    case \"int\":\n      oval = parseInt(val, 10);\n      break;\n    case \"r4\":\n    case \"float\":\n      oval = parseFloat(val);\n      break;\n    case \"date\":\n    case \"dateTime.tz\":\n      oval = parseDate(val);\n      break;\n    case \"i8\":\n    case \"string\":\n    case \"fixed\":\n    case \"uuid\":\n    case \"bin.base64\":\n      break;\n    default:\n      throw new Error(\"bad custprop:\" + cp[0]);\n  }\n  Custprops[unescapexml(key)] = oval;\n}\nfunction safe_format_xlml(cell /*:Cell*/, nf, o, date1904) {\n  if (cell.t === 'z') return;\n  if (!o || o.cellText !== false) try {\n    if (cell.t === 'e') {\n      cell.w = cell.w || BErr[cell.v];\n    } else if (nf === \"General\") {\n      if (cell.t === 'n') {\n        if ((cell.v | 0) === cell.v) cell.w = cell.v.toString(10);else cell.w = SSF_general_num(cell.v);\n      } else cell.w = SSF_general(cell.v);\n    } else cell.w = xlml_format(nf || \"General\", cell.v, date1904);\n  } catch (e) {\n    if (o.WTF) throw e;\n  }\n  try {\n    var z = XLMLFormatMap[nf] || nf || \"General\";\n    if (o.cellNF) cell.z = z;\n    if (o.cellDates && cell.t == 'n' && fmt_is_date(z)) {\n      var _d = SSF_parse_date_code(cell.v + (date1904 ? 1462 : 0));\n      if (_d) {\n        cell.t = 'd';\n        cell.v = new Date(Date.UTC(_d.y, _d.m - 1, _d.d, _d.H, _d.M, _d.S, _d.u));\n      }\n    }\n  } catch (e) {\n    if (o.WTF) throw e;\n  }\n}\nfunction process_style_xlml(styles, stag, opts) {\n  if (opts.cellStyles) {\n    if (stag.Interior) {\n      var I = stag.Interior;\n      if (I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n    }\n  }\n  styles[stag.ID] = stag;\n}\n\n/* TODO: there must exist some form of OSP-blessed spec */\nfunction parse_xlml_data(xml, ss, data, cell /*:any*/, base, styles, csty, row, arrayf, o, date1904) {\n  var nf = \"General\",\n    sid = cell.StyleID,\n    S = {};\n  o = o || {};\n  var interiors = [];\n  var i = 0;\n  if (sid === undefined && row) sid = row.StyleID;\n  if (sid === undefined && csty) sid = csty.StyleID;\n  while (styles[sid] !== undefined) {\n    var ssid = styles[sid];\n    if (ssid.nf) nf = ssid.nf;\n    if (ssid.Interior) interiors.push(ssid.Interior);\n    if (!ssid.Parent) break;\n    sid = ssid.Parent;\n  }\n  switch (data.Type) {\n    case 'Boolean':\n      cell.t = 'b';\n      cell.v = parsexmlbool(xml);\n      break;\n    case 'String':\n      cell.t = 's';\n      cell.r = xlml_fixstr(unescapexml(xml));\n      cell.v = xml.indexOf(\"<\") > -1 ? unescapexml(ss || xml).replace(/<[^<>]*>/g, \"\") : cell.r; // todo: BR etc\n      break;\n    case 'DateTime':\n      if (xml.slice(-1) != \"Z\") xml += \"Z\";\n      cell.v = datenum(parseDate(xml, date1904), date1904);\n      if (cell.v !== cell.v) cell.v = unescapexml(xml);\n      if (!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n    /* falls through */\n    case 'Number':\n      if (cell.v === undefined) cell.v = +xml;\n      if (!cell.t) cell.t = 'n';\n      break;\n    case 'Error':\n      cell.t = 'e';\n      cell.v = RBErr[xml];\n      if (o.cellText !== false) cell.w = xml;\n      break;\n    default:\n      if (xml == \"\" && ss == \"\") {\n        cell.t = 'z';\n      } else {\n        cell.t = 's';\n        cell.v = xlml_fixstr(ss || xml);\n      }\n      break;\n  }\n  safe_format_xlml(cell, nf, o, date1904);\n  if (o.cellFormula !== false) {\n    if (cell.Formula) {\n      var fstr = unescapexml(cell.Formula);\n      /* strictly speaking, the leading = is required but some writers omit */\n      if (fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n      cell.f = rc_to_a1(fstr, base);\n      delete cell.Formula;\n      if (cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);else if (cell.ArrayRange) {\n        cell.F = rc_to_a1(cell.ArrayRange, base);\n        arrayf.push([safe_decode_range(cell.F), cell.F]);\n      }\n    } else {\n      for (i = 0; i < arrayf.length; ++i) if (base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r) if (base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c) cell.F = arrayf[i][1];\n    }\n  }\n  if (o.cellStyles) {\n    interiors.forEach(function (x) {\n      if (!S.patternType && x.patternType) S.patternType = x.patternType;\n    });\n    cell.s = S;\n  }\n  if (cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n}\nfunction xlml_prefix_dname(dname) {\n  return XLSLblBuiltIn.indexOf(\"_xlnm.\" + dname) > -1 ? \"_xlnm.\" + dname : dname;\n}\nfunction xlml_clean_comment(comment /*:any*/) {\n  comment.t = comment.v || \"\";\n  comment.t = comment.t.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  comment.v = comment.w = comment.ixfe = undefined;\n}\n\n/* TODO: Everything */\nfunction parse_xlml_xml(d, _opts) /*:Workbook*/{\n  var opts = _opts || {};\n  make_ssf();\n  var str = debom(xlml_normalize(d));\n  if (opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n    if (typeof $cptable !== 'undefined') str = $cptable.utils.decode(65001, char_codes(str));else str = utf8read(str);\n  }\n  var opening = str.slice(0, 1024).toLowerCase(),\n    ishtml = false;\n  opening = opening.replace(/\".*?\"/g, \"\");\n  if ((opening.indexOf(\">\") & 1023) > Math.min(opening.indexOf(\",\") & 1023, opening.indexOf(\";\") & 1023)) {\n    var _o = dup(opts);\n    _o.type = \"string\";\n    return PRN.to_workbook(str, _o);\n  }\n  if (opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function (tag) {\n    if (opening.indexOf(\"<\" + tag) >= 0) ishtml = true;\n  });\n  if (ishtml) return html_to_workbook(str, opts);\n  XLMLFormatMap = {\n    \"General Number\": \"General\",\n    \"General Date\": table_fmt[22],\n    \"Long Date\": \"dddd, mmmm dd, yyyy\",\n    \"Medium Date\": table_fmt[15],\n    \"Short Date\": table_fmt[14],\n    \"Long Time\": table_fmt[19],\n    \"Medium Time\": table_fmt[18],\n    \"Short Time\": table_fmt[20],\n    \"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n    \"Fixed\": table_fmt[2],\n    \"Standard\": table_fmt[4],\n    \"Percent\": table_fmt[10],\n    \"Scientific\": table_fmt[11],\n    \"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n    \"True/False\": '\"True\";\"True\";\"False\";@',\n    \"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n  } /*:any*/;\n  var Rn;\n  var state = [],\n    tmp;\n  if (DENSE != null && opts.dense == null) opts.dense = DENSE;\n  var sheets = {},\n    sheetnames /*:Array<string>*/ = [],\n    cursheet /*:Worksheet*/ = {},\n    sheetname = \"\";\n  if (opts.dense) cursheet[\"!data\"] = [];\n  var cell = {} /*:any*/,\n    row = {}; // eslint-disable-line no-unused-vars\n  var dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'),\n    didx = 0;\n  var c = 0,\n    r = 0;\n  var refguess /*:Range*/ = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var styles = {},\n    stag = {};\n  var ss = \"\",\n    fidx = 0;\n  var merges /*:Array<Range>*/ = [];\n  var Props = {},\n    Custprops = {},\n    pidx = 0,\n    cp = [];\n  var comments /*:Array<Comment>*/ = [],\n    comment /*:Comment*/ = {} /*:any*/;\n  var cstys = [],\n    csty,\n    seencol = false;\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var rowinfo /*:Array<RowInfo>*/ = [],\n    rowobj = {},\n    cc = 0,\n    rr = 0;\n  var Workbook /*:WBWBProps*/ = {\n      Sheets: [],\n      WBProps: {\n        date1904: false\n      }\n    } /*:any*/,\n    wsprops = {};\n  xlmlregex.lastIndex = 0;\n  str = str_remove_ng(str, \"<!--\", \"-->\");\n  var raw_Rn3 = \"\";\n  while (Rn = xlmlregex.exec(str)) switch (Rn[3] = (raw_Rn3 = Rn[3]).toLowerCase()) {\n    case 'data' /*case 'Data'*/:\n      if (raw_Rn3 == \"data\") {\n        if (Rn[1] === '/') {\n          if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n        break;\n      }\n      if (state[state.length - 1][1]) break;\n      if (Rn[1] === '/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length - 1][0] == /*\"Comment\"*/\"comment\" ? comment : cell, {\n        c: c,\n        r: r\n      }, styles, cstys[c], row, arrayf, opts, Workbook.WBProps.date1904);else {\n        ss = \"\";\n        dtag = xlml_parsexmltag(Rn[0]);\n        didx = Rn.index + Rn[0].length;\n      }\n      break;\n    case 'cell' /*case 'Cell'*/:\n      if (Rn[1] === '/') {\n        if (comments.length > 0) cell.c = comments;\n        if ((!opts.sheetRows || opts.sheetRows > r) && cell.v !== void 0) {\n          if (opts.dense) {\n            if (!cursheet[\"!data\"][r]) cursheet[\"!data\"][r] = [];\n            cursheet[\"!data\"][r][c] = cell;\n          } else cursheet[encode_col(c) + encode_row(r)] = cell;\n        }\n        if (cell.HRef) {\n          cell.l = {\n            Target: unescapexml(cell.HRef)\n          } /*:any*/;\n          if (cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n          delete cell.HRef;\n          delete cell.HRefScreenTip;\n        }\n        if (cell.MergeAcross || cell.MergeDown) {\n          cc = c + (parseInt(cell.MergeAcross, 10) | 0);\n          rr = r + (parseInt(cell.MergeDown, 10) | 0);\n          if (cc > c || rr > r) merges.push({\n            s: {\n              c: c,\n              r: r\n            },\n            e: {\n              c: cc,\n              r: rr\n            }\n          });\n        }\n        if (!opts.sheetStubs) {\n          if (cell.MergeAcross) c = cc + 1;else ++c;\n        } else if (cell.MergeAcross || cell.MergeDown) {\n          /*:: if(!cc) cc = 0; if(!rr) rr = 0; */\n          for (var cma = c; cma <= cc; ++cma) {\n            for (var cmd = r; cmd <= rr; ++cmd) {\n              if (cma > c || cmd > r) {\n                if (opts.dense) {\n                  if (!cursheet[\"!data\"][cmd]) cursheet[\"!data\"][cmd] = [];\n                  cursheet[\"!data\"][cmd][cma] = {\n                    t: 'z'\n                  };\n                } else cursheet[encode_col(cma) + encode_row(cmd)] = {\n                  t: 'z'\n                };\n              }\n            }\n          }\n          c = cc + 1;\n        } else ++c;\n      } else {\n        cell = xlml_parsexmltagobj(Rn[0]);\n        if (cell.Index) c = +cell.Index - 1;\n        if (c < refguess.s.c) refguess.s.c = c;\n        if (c > refguess.e.c) refguess.e.c = c;\n        if (Rn[0].slice(-2) === \"/>\") ++c;\n        comments = [];\n      }\n      break;\n    case 'row' /*case 'Row'*/:\n      if (Rn[1] === '/' || Rn[0].slice(-2) === \"/>\") {\n        if (r < refguess.s.r) refguess.s.r = r;\n        if (r > refguess.e.r) refguess.e.r = r;\n        if (Rn[0].slice(-2) === \"/>\") {\n          row = xlml_parsexmltag(Rn[0]);\n          if (row.Index) r = +row.Index - 1;\n        }\n        c = 0;\n        ++r;\n      } else {\n        row = xlml_parsexmltag(Rn[0]);\n        if (row.Index) r = +row.Index - 1;\n        rowobj = {};\n        if (row.AutoFitHeight == \"0\" || row.Height) {\n          rowobj.hpx = parseInt(row.Height, 10);\n          rowobj.hpt = px2pt(rowobj.hpx);\n          rowinfo[r] = rowobj;\n        }\n        if (row.Hidden == \"1\") {\n          rowobj.hidden = true;\n          rowinfo[r] = rowobj;\n        }\n      }\n      break;\n    case 'worksheet' /*case 'Worksheet'*/:\n      /* TODO: read range from FullRows/FullColumns */\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n        sheetnames.push(sheetname);\n        if (refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n          cursheet[\"!ref\"] = encode_range(refguess);\n          if (opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n            cursheet[\"!fullref\"] = cursheet[\"!ref\"];\n            refguess.e.r = opts.sheetRows - 1;\n            cursheet[\"!ref\"] = encode_range(refguess);\n          }\n        }\n        if (merges.length) cursheet[\"!merges\"] = merges;\n        if (cstys.length > 0) cursheet[\"!cols\"] = cstys;\n        if (rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n        sheets[sheetname] = cursheet;\n      } else {\n        refguess = {\n          s: {\n            r: 2000000,\n            c: 2000000\n          },\n          e: {\n            r: 0,\n            c: 0\n          }\n        };\n        r = c = 0;\n        state.push([Rn[3], false]);\n        tmp = xlml_parsexmltag(Rn[0]);\n        sheetname = unescapexml(tmp.Name);\n        cursheet = {};\n        if (opts.dense) cursheet[\"!data\"] = [];\n        merges = [];\n        arrayf = [];\n        rowinfo = [];\n        wsprops = {\n          name: sheetname,\n          Hidden: 0\n        };\n        Workbook.Sheets.push(wsprops);\n      }\n      break;\n    case 'table' /*case 'Table'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else if (Rn[0].slice(-2) == \"/>\") break;else {\n        state.push([Rn[3], false]);\n        cstys = [];\n        seencol = false;\n      }\n      break;\n    case 'style' /*case 'Style'*/:\n      if (Rn[1] === '/') process_style_xlml(styles, stag, opts);else stag = xlml_parsexmltag(Rn[0]);\n      break;\n    case 'numberformat' /*case 'NumberFormat'*/:\n      stag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n      if (XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n      for (var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if (table_fmt[ssfidx] == stag.nf) break;\n      if (ssfidx == 0x188) for (ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if (table_fmt[ssfidx] == null) {\n        SSF__load(stag.nf, ssfidx);\n        break;\n      }\n      break;\n    case 'column' /*case 'Column'*/:\n      if (state[state.length - 1][0] !== /*'Table'*/'table') break;\n      if (Rn[1] === '/') break;\n      csty = xlml_parsexmltag(Rn[0]);\n      if (csty.Hidden) {\n        csty.hidden = true;\n        delete csty.Hidden;\n      }\n      if (csty.Width) csty.wpx = parseInt(csty.Width, 10);\n      if (!seencol && csty.wpx > 10) {\n        seencol = true;\n        MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n        for (var _col = 0; _col < cstys.length; ++_col) if (cstys[_col]) process_col(cstys[_col]);\n      }\n      if (seencol) process_col(csty);\n      cstys[csty.Index - 1 || cstys.length] = csty;\n      for (var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n      break;\n    case 'namedrange' /*case 'NamedRange'*/:\n      if (Rn[1] === '/') break;\n      if (!Workbook.Names) Workbook.Names = [];\n      var _NamedRange = parsexmltag(Rn[0]);\n      var _DefinedName /*:DefinedName*/ = {\n        Name: xlml_prefix_dname(_NamedRange.Name),\n        Ref: rc_to_a1(_NamedRange.RefersTo.slice(1), {\n          r: 0,\n          c: 0\n        })\n      } /*:any*/;\n      if (Workbook.Sheets.length > 0) _DefinedName.Sheet = Workbook.Sheets.length - 1;\n      /*:: if(Workbook.Names) */\n      Workbook.Names.push(_DefinedName);\n      break;\n    case 'namedcell' /*case 'NamedCell'*/:\n      break;\n    case 'b' /*case 'B'*/:\n      break;\n    case 'i' /*case 'I'*/:\n      break;\n    case 'u' /*case 'U'*/:\n      break;\n    case 's' /*case 'S'*/:\n      break;\n    case 'em' /*case 'EM'*/:\n      break;\n    case 'h2' /*case 'H2'*/:\n      break;\n    case 'h3' /*case 'H3'*/:\n      break;\n    case 'sub' /*case 'Sub'*/:\n      break;\n    case 'sup' /*case 'Sup'*/:\n      break;\n    case 'span' /*case 'Span'*/:\n      break;\n    case 'alignment' /*case 'Alignment'*/:\n      break;\n    case 'borders' /*case 'Borders'*/:\n      break;\n    case 'border' /*case 'Border'*/:\n      break;\n    case 'font' /*case 'Font'*/:\n      if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") ss += str.slice(fidx, Rn.index);else fidx = Rn.index + Rn[0].length;\n      break;\n    case 'interior' /*case 'Interior'*/:\n      if (!opts.cellStyles) break;\n      stag.Interior = xlml_parsexmltag(Rn[0]);\n      break;\n    case 'protection' /*case 'Protection'*/:\n      break;\n    case 'author' /*case 'Author'*/:\n    case 'title' /*case 'Title'*/:\n    case 'description' /*case 'Description'*/:\n    case 'created' /*case 'Created'*/:\n    case 'keywords' /*case 'Keywords'*/:\n    case 'subject' /*case 'Subject'*/:\n    case 'category' /*case 'Category'*/:\n    case 'company' /*case 'Company'*/:\n    case 'lastauthor' /*case 'LastAuthor'*/:\n    case 'lastsaved' /*case 'LastSaved'*/:\n    case 'lastprinted' /*case 'LastPrinted'*/:\n    case 'version' /*case 'Version'*/:\n    case 'revision' /*case 'Revision'*/:\n    case 'totaltime' /*case 'TotalTime'*/:\n    case 'hyperlinkbase' /*case 'HyperlinkBase'*/:\n    case 'manager' /*case 'Manager'*/:\n    case 'contentstatus' /*case 'ContentStatus'*/:\n    case 'identifier' /*case 'Identifier'*/:\n    case 'language' /*case 'Language'*/:\n    case 'appname' /*case 'AppName'*/:\n      if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") xlml_set_prop(Props, raw_Rn3, str.slice(pidx, Rn.index));else pidx = Rn.index + Rn[0].length;\n      break;\n    case 'paragraphs' /*case 'Paragraphs'*/:\n      break;\n    case 'styles' /*case 'Styles'*/:\n    case 'workbook' /*case 'Workbook'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else state.push([Rn[3], false]);\n      break;\n    case 'comment' /*case 'Comment'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n        xlml_clean_comment(comment);\n        comments.push(comment);\n      } else {\n        state.push([Rn[3], false]);\n        tmp = xlml_parsexmltag(Rn[0]);\n        if (!parsexmlbool(tmp[\"ShowAlways\"] || \"0\")) comments.hidden = true;\n        comment = {\n          a: tmp.Author\n        } /*:any*/;\n      }\n      break;\n    case 'autofilter' /*case 'AutoFilter'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        var AutoFilter = xlml_parsexmltag(Rn[0]);\n        cursheet['!autofilter'] = {\n          ref: rc_to_a1(AutoFilter.Range).replace(/\\$/g, \"\")\n        };\n        state.push([Rn[3], true]);\n      }\n      break;\n    case 'name' /*case 'Name'*/:\n      break;\n    case 'datavalidation' /*case 'DataValidation'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else {\n        if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n      }\n      break;\n    case 'pixelsperinch' /*case 'PixelsPerInch'*/:\n      break;\n    case 'componentoptions' /*case 'ComponentOptions'*/:\n    case 'documentproperties' /*case 'DocumentProperties'*/:\n    case 'customdocumentproperties' /*case 'CustomDocumentProperties'*/:\n    case 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n    case 'pivottable' /*case 'PivotTable'*/:\n    case 'pivotcache' /*case 'PivotCache'*/:\n    case 'names' /*case 'Names'*/:\n    case 'mapinfo' /*case 'MapInfo'*/:\n    case 'pagebreaks' /*case 'PageBreaks'*/:\n    case 'querytable' /*case 'QueryTable'*/:\n    case 'sorting' /*case 'Sorting'*/:\n    case 'schema' /*case 'Schema'*/: //case 'data' /*case 'data'*/:\n    case 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n    case 'smarttagtype' /*case 'SmartTagType'*/:\n    case 'smarttags' /*case 'SmartTags'*/:\n    case 'excelworkbook' /*case 'ExcelWorkbook'*/:\n    case 'workbookoptions' /*case 'WorkbookOptions'*/:\n    case 'worksheetoptions' /*case 'WorksheetOptions'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n      break;\n    case 'null' /*case 'Null'*/:\n      break;\n    default:\n      /* FODS file root is <office:document> */\n      if (state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n      /* UOS file root is <uof:UOF> */\n      if (state.length == 0 && Rn[3] == \"uof\" /*\"UOF\"*/) return parse_fods(str, opts);\n      var seen = true;\n      switch (state[state.length - 1][0]) {\n        /* OfficeDocumentSettings */\n        case 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n          switch (Rn[3]) {\n            case 'allowpng' /*case 'AllowPNG'*/:\n              break;\n            case 'removepersonalinformation' /*case 'RemovePersonalInformation'*/:\n              break;\n            case 'downloadcomponents' /*case 'DownloadComponents'*/:\n              break;\n            case 'locationofcomponents' /*case 'LocationOfComponents'*/:\n              break;\n            case 'colors' /*case 'Colors'*/:\n              break;\n            case 'color' /*case 'Color'*/:\n              break;\n            case 'index' /*case 'Index'*/:\n              break;\n            case 'rgb' /*case 'RGB'*/:\n              break;\n            case 'targetscreensize' /*case 'TargetScreenSize'*/:\n              break;\n            case 'readonlyrecommended' /*case 'ReadOnlyRecommended'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* ComponentOptions */\n        case 'componentoptions' /*case 'ComponentOptions'*/:\n          switch (Rn[3]) {\n            case 'toolbar' /*case 'Toolbar'*/:\n              break;\n            case 'hideofficelogo' /*case 'HideOfficeLogo'*/:\n              break;\n            case 'spreadsheetautofit' /*case 'SpreadsheetAutoFit'*/:\n              break;\n            case 'label' /*case 'Label'*/:\n              break;\n            case 'caption' /*case 'Caption'*/:\n              break;\n            case 'maxheight' /*case 'MaxHeight'*/:\n              break;\n            case 'maxwidth' /*case 'MaxWidth'*/:\n              break;\n            case 'nextsheetnumber' /*case 'NextSheetNumber'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* ExcelWorkbook */\n        case 'excelworkbook' /*case 'ExcelWorkbook'*/:\n          switch (Rn[3]) {\n            case 'date1904' /*case 'Date1904'*/:\n              /*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n              Workbook.WBProps.date1904 = true;\n              break;\n            case 'hidehorizontalscrollbar' /*case 'HideHorizontalScrollBar'*/:\n              break;\n            case 'hideverticalscrollbar' /*case 'HideVerticalScrollBar'*/:\n              break;\n            case 'hideworkbooktabs' /*case 'HideWorkbookTabs'*/:\n              break;\n            case 'windowheight' /*case 'WindowHeight'*/:\n              break;\n            case 'windowwidth' /*case 'WindowWidth'*/:\n              break;\n            case 'windowtopx' /*case 'WindowTopX'*/:\n              break;\n            case 'windowtopy' /*case 'WindowTopY'*/:\n              break;\n            case 'tabratio' /*case 'TabRatio'*/:\n              break;\n            case 'protectstructure' /*case 'ProtectStructure'*/:\n              break;\n            case 'protectwindow' /*case 'ProtectWindow'*/:\n              break;\n            case 'protectwindows' /*case 'ProtectWindows'*/:\n              break;\n            case 'activesheet' /*case 'ActiveSheet'*/:\n              break;\n            case 'displayinknotes' /*case 'DisplayInkNotes'*/:\n              break;\n            case 'firstvisiblesheet' /*case 'FirstVisibleSheet'*/:\n              break;\n            case 'supbook' /*case 'SupBook'*/:\n              break;\n            case 'sheetname' /*case 'SheetName'*/:\n              break;\n            case 'sheetindex' /*case 'SheetIndex'*/:\n              break;\n            case 'sheetindexfirst' /*case 'SheetIndexFirst'*/:\n              break;\n            case 'sheetindexlast' /*case 'SheetIndexLast'*/:\n              break;\n            case 'dll' /*case 'Dll'*/:\n              break;\n            case 'acceptlabelsinformulas' /*case 'AcceptLabelsInFormulas'*/:\n              break;\n            case 'donotsavelinkvalues' /*case 'DoNotSaveLinkValues'*/:\n              break;\n            case 'iteration' /*case 'Iteration'*/:\n              break;\n            case 'maxiterations' /*case 'MaxIterations'*/:\n              break;\n            case 'maxchange' /*case 'MaxChange'*/:\n              break;\n            case 'path' /*case 'Path'*/:\n              break;\n            case 'xct' /*case 'Xct'*/:\n              break;\n            case 'count' /*case 'Count'*/:\n              break;\n            case 'selectedsheets' /*case 'SelectedSheets'*/:\n              break;\n            case 'calculation' /*case 'Calculation'*/:\n              break;\n            case 'uncalced' /*case 'Uncalced'*/:\n              break;\n            case 'startupprompt' /*case 'StartupPrompt'*/:\n              break;\n            case 'crn' /*case 'Crn'*/:\n              break;\n            case 'externname' /*case 'ExternName'*/:\n              break;\n            case 'formula' /*case 'Formula'*/:\n              break;\n            case 'colfirst' /*case 'ColFirst'*/:\n              break;\n            case 'collast' /*case 'ColLast'*/:\n              break;\n            case 'wantadvise' /*case 'WantAdvise'*/:\n              break;\n            case 'boolean' /*case 'Boolean'*/:\n              break;\n            case 'error' /*case 'Error'*/:\n              break;\n            case 'text' /*case 'Text'*/:\n              break;\n            case 'ole' /*case 'OLE'*/:\n              break;\n            case 'noautorecover' /*case 'NoAutoRecover'*/:\n              break;\n            case 'publishobjects' /*case 'PublishObjects'*/:\n              break;\n            case 'donotcalculatebeforesave' /*case 'DoNotCalculateBeforeSave'*/:\n              break;\n            case 'number' /*case 'Number'*/:\n              break;\n            case 'refmoder1c1' /*case 'RefModeR1C1'*/:\n              break;\n            case 'embedsavesmarttags' /*case 'EmbedSaveSmartTags'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* WorkbookOptions */\n        case 'workbookoptions' /*case 'WorkbookOptions'*/:\n          switch (Rn[3]) {\n            case 'owcversion' /*case 'OWCVersion'*/:\n              break;\n            case 'height' /*case 'Height'*/:\n              break;\n            case 'width' /*case 'Width'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* WorksheetOptions */\n        case 'worksheetoptions' /*case 'WorksheetOptions'*/:\n          switch (Rn[3]) {\n            case 'visible' /*case 'Visible'*/:\n              if (Rn[0].slice(-2) === \"/>\") {/* empty */} else if (Rn[1] === \"/\") switch (str.slice(pidx, Rn.index)) {\n                case \"SheetHidden\":\n                  wsprops.Hidden = 1;\n                  break;\n                case \"SheetVeryHidden\":\n                  wsprops.Hidden = 2;\n                  break;\n              } else pidx = Rn.index + Rn[0].length;\n              break;\n            case 'header' /*case 'Header'*/:\n              if (!cursheet['!margins']) default_margins(cursheet['!margins'] = {}, 'xlml');\n              if (!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].header = +parsexmltag(Rn[0]).Margin;\n              break;\n            case 'footer' /*case 'Footer'*/:\n              if (!cursheet['!margins']) default_margins(cursheet['!margins'] = {}, 'xlml');\n              if (!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].footer = +parsexmltag(Rn[0]).Margin;\n              break;\n            case 'pagemargins' /*case 'PageMargins'*/:\n              var pagemargins = parsexmltag(Rn[0]);\n              if (!cursheet['!margins']) default_margins(cursheet['!margins'] = {}, 'xlml');\n              if (!isNaN(+pagemargins.Top)) cursheet['!margins'].top = +pagemargins.Top;\n              if (!isNaN(+pagemargins.Left)) cursheet['!margins'].left = +pagemargins.Left;\n              if (!isNaN(+pagemargins.Right)) cursheet['!margins'].right = +pagemargins.Right;\n              if (!isNaN(+pagemargins.Bottom)) cursheet['!margins'].bottom = +pagemargins.Bottom;\n              break;\n            case 'displayrighttoleft' /*case 'DisplayRightToLeft'*/:\n              if (!Workbook.Views) Workbook.Views = [];\n              if (!Workbook.Views[0]) Workbook.Views[0] = {};\n              Workbook.Views[0].RTL = true;\n              break;\n            case 'freezepanes' /*case 'FreezePanes'*/:\n              break;\n            case 'frozennosplit' /*case 'FrozenNoSplit'*/:\n              break;\n            case 'splithorizontal' /*case 'SplitHorizontal'*/:\n            case 'splitvertical' /*case 'SplitVertical'*/:\n              break;\n            case 'donotdisplaygridlines' /*case 'DoNotDisplayGridlines'*/:\n              break;\n            case 'activerow' /*case 'ActiveRow'*/:\n              break;\n            case 'activecol' /*case 'ActiveCol'*/:\n              break;\n            case 'toprowbottompane' /*case 'TopRowBottomPane'*/:\n              break;\n            case 'leftcolumnrightpane' /*case 'LeftColumnRightPane'*/:\n              break;\n            case 'unsynced' /*case 'Unsynced'*/:\n              break;\n            case 'print' /*case 'Print'*/:\n              break;\n            case 'printerrors' /*case 'PrintErrors'*/:\n              break;\n            case 'panes' /*case 'Panes'*/:\n              break;\n            case 'scale' /*case 'Scale'*/:\n              break;\n            case 'pane' /*case 'Pane'*/:\n              break;\n            case 'number' /*case 'Number'*/:\n              break;\n            case 'layout' /*case 'Layout'*/:\n              break;\n            case 'pagesetup' /*case 'PageSetup'*/:\n              break;\n            case 'selected' /*case 'Selected'*/:\n              break;\n            case 'protectobjects' /*case 'ProtectObjects'*/:\n              break;\n            case 'enableselection' /*case 'EnableSelection'*/:\n              break;\n            case 'protectscenarios' /*case 'ProtectScenarios'*/:\n              break;\n            case 'validprinterinfo' /*case 'ValidPrinterInfo'*/:\n              break;\n            case 'horizontalresolution' /*case 'HorizontalResolution'*/:\n              break;\n            case 'verticalresolution' /*case 'VerticalResolution'*/:\n              break;\n            case 'numberofcopies' /*case 'NumberofCopies'*/:\n              break;\n            case 'activepane' /*case 'ActivePane'*/:\n              break;\n            case 'toprowvisible' /*case 'TopRowVisible'*/:\n              break;\n            case 'leftcolumnvisible' /*case 'LeftColumnVisible'*/:\n              break;\n            case 'fittopage' /*case 'FitToPage'*/:\n              break;\n            case 'rangeselection' /*case 'RangeSelection'*/:\n              break;\n            case 'papersizeindex' /*case 'PaperSizeIndex'*/:\n              break;\n            case 'pagelayoutzoom' /*case 'PageLayoutZoom'*/:\n              break;\n            case 'pagebreakzoom' /*case 'PageBreakZoom'*/:\n              break;\n            case 'filteron' /*case 'FilterOn'*/:\n              break;\n            case 'fitwidth' /*case 'FitWidth'*/:\n              break;\n            case 'fitheight' /*case 'FitHeight'*/:\n              break;\n            case 'commentslayout' /*case 'CommentsLayout'*/:\n              break;\n            case 'zoom' /*case 'Zoom'*/:\n              break;\n            case 'lefttoright' /*case 'LeftToRight'*/:\n              break;\n            case 'gridlines' /*case 'Gridlines'*/:\n              break;\n            case 'allowsort' /*case 'AllowSort'*/:\n              break;\n            case 'allowfilter' /*case 'AllowFilter'*/:\n              break;\n            case 'allowinsertrows' /*case 'AllowInsertRows'*/:\n              break;\n            case 'allowdeleterows' /*case 'AllowDeleteRows'*/:\n              break;\n            case 'allowinsertcols' /*case 'AllowInsertCols'*/:\n              break;\n            case 'allowdeletecols' /*case 'AllowDeleteCols'*/:\n              break;\n            case 'allowinserthyperlinks' /*case 'AllowInsertHyperlinks'*/:\n              break;\n            case 'allowformatcells' /*case 'AllowFormatCells'*/:\n              break;\n            case 'allowsizecols' /*case 'AllowSizeCols'*/:\n              break;\n            case 'allowsizerows' /*case 'AllowSizeRows'*/:\n              break;\n            case 'nosummaryrowsbelowdetail' /*case 'NoSummaryRowsBelowDetail'*/:\n              if (!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n              cursheet[\"!outline\"].above = true;\n              break;\n            case 'tabcolorindex' /*case 'TabColorIndex'*/:\n              break;\n            case 'donotdisplayheadings' /*case 'DoNotDisplayHeadings'*/:\n              break;\n            case 'showpagelayoutzoom' /*case 'ShowPageLayoutZoom'*/:\n              break;\n            case 'nosummarycolumnsrightdetail' /*case 'NoSummaryColumnsRightDetail'*/:\n              if (!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n              cursheet[\"!outline\"].left = true;\n              break;\n            case 'blackandwhite' /*case 'BlackAndWhite'*/:\n              break;\n            case 'donotdisplayzeros' /*case 'DoNotDisplayZeros'*/:\n              break;\n            case 'displaypagebreak' /*case 'DisplayPageBreak'*/:\n              break;\n            case 'rowcolheadings' /*case 'RowColHeadings'*/:\n              break;\n            case 'donotdisplayoutline' /*case 'DoNotDisplayOutline'*/:\n              break;\n            case 'noorientation' /*case 'NoOrientation'*/:\n              break;\n            case 'allowusepivottables' /*case 'AllowUsePivotTables'*/:\n              break;\n            case 'zeroheight' /*case 'ZeroHeight'*/:\n              break;\n            case 'viewablerange' /*case 'ViewableRange'*/:\n              break;\n            case 'selection' /*case 'Selection'*/:\n              break;\n            case 'protectcontents' /*case 'ProtectContents'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* PivotTable */\n        case 'pivottable' /*case 'PivotTable'*/:\n        case 'pivotcache' /*case 'PivotCache'*/:\n          switch (Rn[3]) {\n            case 'immediateitemsondrop' /*case 'ImmediateItemsOnDrop'*/:\n              break;\n            case 'showpagemultipleitemlabel' /*case 'ShowPageMultipleItemLabel'*/:\n              break;\n            case 'compactrowindent' /*case 'CompactRowIndent'*/:\n              break;\n            case 'location' /*case 'Location'*/:\n              break;\n            case 'pivotfield' /*case 'PivotField'*/:\n              break;\n            case 'orientation' /*case 'Orientation'*/:\n              break;\n            case 'layoutform' /*case 'LayoutForm'*/:\n              break;\n            case 'layoutsubtotallocation' /*case 'LayoutSubtotalLocation'*/:\n              break;\n            case 'layoutcompactrow' /*case 'LayoutCompactRow'*/:\n              break;\n            case 'position' /*case 'Position'*/:\n              break;\n            case 'pivotitem' /*case 'PivotItem'*/:\n              break;\n            case 'datatype' /*case 'DataType'*/:\n              break;\n            case 'datafield' /*case 'DataField'*/:\n              break;\n            case 'sourcename' /*case 'SourceName'*/:\n              break;\n            case 'parentfield' /*case 'ParentField'*/:\n              break;\n            case 'ptlineitems' /*case 'PTLineItems'*/:\n              break;\n            case 'ptlineitem' /*case 'PTLineItem'*/:\n              break;\n            case 'countofsameitems' /*case 'CountOfSameItems'*/:\n              break;\n            case 'item' /*case 'Item'*/:\n              break;\n            case 'itemtype' /*case 'ItemType'*/:\n              break;\n            case 'ptsource' /*case 'PTSource'*/:\n              break;\n            case 'cacheindex' /*case 'CacheIndex'*/:\n              break;\n            case 'consolidationreference' /*case 'ConsolidationReference'*/:\n              break;\n            case 'filename' /*case 'FileName'*/:\n              break;\n            case 'reference' /*case 'Reference'*/:\n              break;\n            case 'nocolumngrand' /*case 'NoColumnGrand'*/:\n              break;\n            case 'norowgrand' /*case 'NoRowGrand'*/:\n              break;\n            case 'blanklineafteritems' /*case 'BlankLineAfterItems'*/:\n              break;\n            case 'hidden' /*case 'Hidden'*/:\n              break;\n            case 'subtotal' /*case 'Subtotal'*/:\n              break;\n            case 'basefield' /*case 'BaseField'*/:\n              break;\n            case 'mapchilditems' /*case 'MapChildItems'*/:\n              break;\n            case 'function' /*case 'Function'*/:\n              break;\n            case 'refreshonfileopen' /*case 'RefreshOnFileOpen'*/:\n              break;\n            case 'printsettitles' /*case 'PrintSetTitles'*/:\n              break;\n            case 'mergelabels' /*case 'MergeLabels'*/:\n              break;\n            case 'defaultversion' /*case 'DefaultVersion'*/:\n              break;\n            case 'refreshname' /*case 'RefreshName'*/:\n              break;\n            case 'refreshdate' /*case 'RefreshDate'*/:\n              break;\n            case 'refreshdatecopy' /*case 'RefreshDateCopy'*/:\n              break;\n            case 'versionlastrefresh' /*case 'VersionLastRefresh'*/:\n              break;\n            case 'versionlastupdate' /*case 'VersionLastUpdate'*/:\n              break;\n            case 'versionupdateablemin' /*case 'VersionUpdateableMin'*/:\n              break;\n            case 'versionrefreshablemin' /*case 'VersionRefreshableMin'*/:\n              break;\n            case 'calculation' /*case 'Calculation'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* PageBreaks */\n        case 'pagebreaks' /*case 'PageBreaks'*/:\n          switch (Rn[3]) {\n            case 'colbreaks' /*case 'ColBreaks'*/:\n              break;\n            case 'colbreak' /*case 'ColBreak'*/:\n              break;\n            case 'rowbreaks' /*case 'RowBreaks'*/:\n              break;\n            case 'rowbreak' /*case 'RowBreak'*/:\n              break;\n            case 'colstart' /*case 'ColStart'*/:\n              break;\n            case 'colend' /*case 'ColEnd'*/:\n              break;\n            case 'rowend' /*case 'RowEnd'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* AutoFilter */\n        case 'autofilter' /*case 'AutoFilter'*/:\n          switch (Rn[3]) {\n            case 'autofiltercolumn' /*case 'AutoFilterColumn'*/:\n              break;\n            case 'autofiltercondition' /*case 'AutoFilterCondition'*/:\n              break;\n            case 'autofilterand' /*case 'AutoFilterAnd'*/:\n              break;\n            case 'autofilteror' /*case 'AutoFilterOr'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* QueryTable */\n        case 'querytable' /*case 'QueryTable'*/:\n          switch (Rn[3]) {\n            case 'id' /*case 'Id'*/:\n              break;\n            case 'autoformatfont' /*case 'AutoFormatFont'*/:\n              break;\n            case 'autoformatpattern' /*case 'AutoFormatPattern'*/:\n              break;\n            case 'querysource' /*case 'QuerySource'*/:\n              break;\n            case 'querytype' /*case 'QueryType'*/:\n              break;\n            case 'enableredirections' /*case 'EnableRedirections'*/:\n              break;\n            case 'refreshedinxl9' /*case 'RefreshedInXl9'*/:\n              break;\n            case 'urlstring' /*case 'URLString'*/:\n              break;\n            case 'htmltables' /*case 'HTMLTables'*/:\n              break;\n            case 'connection' /*case 'Connection'*/:\n              break;\n            case 'commandtext' /*case 'CommandText'*/:\n              break;\n            case 'refreshinfo' /*case 'RefreshInfo'*/:\n              break;\n            case 'notitles' /*case 'NoTitles'*/:\n              break;\n            case 'nextid' /*case 'NextId'*/:\n              break;\n            case 'columninfo' /*case 'ColumnInfo'*/:\n              break;\n            case 'overwritecells' /*case 'OverwriteCells'*/:\n              break;\n            case 'donotpromptforfile' /*case 'DoNotPromptForFile'*/:\n              break;\n            case 'textwizardsettings' /*case 'TextWizardSettings'*/:\n              break;\n            case 'source' /*case 'Source'*/:\n              break;\n            case 'number' /*case 'Number'*/:\n              break;\n            case 'decimal' /*case 'Decimal'*/:\n              break;\n            case 'thousandseparator' /*case 'ThousandSeparator'*/:\n              break;\n            case 'trailingminusnumbers' /*case 'TrailingMinusNumbers'*/:\n              break;\n            case 'formatsettings' /*case 'FormatSettings'*/:\n              break;\n            case 'fieldtype' /*case 'FieldType'*/:\n              break;\n            case 'delimiters' /*case 'Delimiters'*/:\n              break;\n            case 'tab' /*case 'Tab'*/:\n              break;\n            case 'comma' /*case 'Comma'*/:\n              break;\n            case 'autoformatname' /*case 'AutoFormatName'*/:\n              break;\n            case 'versionlastedit' /*case 'VersionLastEdit'*/:\n              break;\n            case 'versionlastrefresh' /*case 'VersionLastRefresh'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n        case 'datavalidation' /*case 'DataValidation'*/:\n          switch (Rn[3]) {\n            case 'range' /*case 'Range'*/:\n              break;\n            case 'type' /*case 'Type'*/:\n              break;\n            case 'min' /*case 'Min'*/:\n              break;\n            case 'max' /*case 'Max'*/:\n              break;\n            case 'sort' /*case 'Sort'*/:\n              break;\n            case 'descending' /*case 'Descending'*/:\n              break;\n            case 'order' /*case 'Order'*/:\n              break;\n            case 'casesensitive' /*case 'CaseSensitive'*/:\n              break;\n            case 'value' /*case 'Value'*/:\n              break;\n            case 'errorstyle' /*case 'ErrorStyle'*/:\n              break;\n            case 'errormessage' /*case 'ErrorMessage'*/:\n              break;\n            case 'errortitle' /*case 'ErrorTitle'*/:\n              break;\n            case 'inputmessage' /*case 'InputMessage'*/:\n              break;\n            case 'inputtitle' /*case 'InputTitle'*/:\n              break;\n            case 'combohide' /*case 'ComboHide'*/:\n              break;\n            case 'inputhide' /*case 'InputHide'*/:\n              break;\n            case 'condition' /*case 'Condition'*/:\n              break;\n            case 'qualifier' /*case 'Qualifier'*/:\n              break;\n            case 'useblank' /*case 'UseBlank'*/:\n              break;\n            case 'value1' /*case 'Value1'*/:\n              break;\n            case 'value2' /*case 'Value2'*/:\n              break;\n            case 'format' /*case 'Format'*/:\n              break;\n            case 'cellrangelist' /*case 'CellRangeList'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n        case 'sorting' /*case 'Sorting'*/:\n        case 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n          switch (Rn[3]) {\n            case 'range' /*case 'Range'*/:\n              break;\n            case 'type' /*case 'Type'*/:\n              break;\n            case 'min' /*case 'Min'*/:\n              break;\n            case 'max' /*case 'Max'*/:\n              break;\n            case 'sort' /*case 'Sort'*/:\n              break;\n            case 'descending' /*case 'Descending'*/:\n              break;\n            case 'order' /*case 'Order'*/:\n              break;\n            case 'casesensitive' /*case 'CaseSensitive'*/:\n              break;\n            case 'value' /*case 'Value'*/:\n              break;\n            case 'errorstyle' /*case 'ErrorStyle'*/:\n              break;\n            case 'errormessage' /*case 'ErrorMessage'*/:\n              break;\n            case 'errortitle' /*case 'ErrorTitle'*/:\n              break;\n            case 'cellrangelist' /*case 'CellRangeList'*/:\n              break;\n            case 'inputmessage' /*case 'InputMessage'*/:\n              break;\n            case 'inputtitle' /*case 'InputTitle'*/:\n              break;\n            case 'combohide' /*case 'ComboHide'*/:\n              break;\n            case 'inputhide' /*case 'InputHide'*/:\n              break;\n            case 'condition' /*case 'Condition'*/:\n              break;\n            case 'qualifier' /*case 'Qualifier'*/:\n              break;\n            case 'useblank' /*case 'UseBlank'*/:\n              break;\n            case 'value1' /*case 'Value1'*/:\n              break;\n            case 'value2' /*case 'Value2'*/:\n              break;\n            case 'format' /*case 'Format'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* MapInfo (schema) */\n        case 'mapinfo' /*case 'MapInfo'*/:\n        case 'schema' /*case 'Schema'*/:\n        case 'data' /*case 'data'*/:\n          switch (Rn[3]) {\n            case 'map' /*case 'Map'*/:\n              break;\n            case 'entry' /*case 'Entry'*/:\n              break;\n            case 'range' /*case 'Range'*/:\n              break;\n            case 'xpath' /*case 'XPath'*/:\n              break;\n            case 'field' /*case 'Field'*/:\n              break;\n            case 'xsdtype' /*case 'XSDType'*/:\n              break;\n            case 'filteron' /*case 'FilterOn'*/:\n              break;\n            case 'aggregate' /*case 'Aggregate'*/:\n              break;\n            case 'elementtype' /*case 'ElementType'*/:\n              break;\n            case 'attributetype' /*case 'AttributeType'*/:\n              break;\n            /* These are from xsd (XML Schema Definition) */\n            case 'schema' /*case 'schema'*/:\n            case 'element' /*case 'element'*/:\n            case 'complextype' /*case 'complexType'*/:\n            case 'datatype' /*case 'datatype'*/:\n            case 'all' /*case 'all'*/:\n            case 'attribute' /*case 'attribute'*/:\n            case 'extends' /*case 'extends'*/:\n              break;\n            case 'row' /*case 'row'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* SmartTags (can be anything) */\n        case 'smarttags' /*case 'SmartTags'*/:\n          break;\n        default:\n          seen = false;\n          break;\n      }\n      if (seen) break;\n      /* CustomDocumentProperties */\n      if (Rn[3].match(/!\\[CDATA/)) break;\n      if (!state[state.length - 1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n      if (state[state.length - 1][0] === /*'CustomDocumentProperties'*/'customdocumentproperties') {\n        if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") xlml_set_custprop(Custprops, raw_Rn3, cp, str.slice(pidx, Rn.index));else {\n          cp = Rn;\n          pidx = Rn.index + Rn[0].length;\n        }\n        break;\n      }\n      if (opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n  }\n  var out = {} /*:any*/;\n  if (!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n  out.SheetNames = sheetnames;\n  out.Workbook = Workbook;\n  out.SSF = dup(table_fmt);\n  out.Props = Props;\n  out.Custprops = Custprops;\n  out.bookType = \"xlml\";\n  return out;\n}\nfunction parse_xlml(data /*:RawBytes|string*/, opts) /*:Workbook*/{\n  fix_read_opts(opts = opts || {});\n  switch (opts.type || \"base64\") {\n    case \"base64\":\n      return parse_xlml_xml(Base64_decode(data), opts);\n    case \"binary\":\n    case \"buffer\":\n    case \"file\":\n      return parse_xlml_xml(data, opts);\n    case \"array\":\n      return parse_xlml_xml(a2s(data), opts);\n  }\n  /*:: throw new Error(\"unsupported type \" + opts.type); */\n}\n\n/* TODO */\nfunction write_props_xlml(wb /*:Workbook*/, opts) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  /* DocumentProperties */\n  if (wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n  /* CustomDocumentProperties */\n  if (wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\n  return o.join(\"\");\n}\n/* TODO */\nfunction write_wb_xlml(wb /*::, opts*/) /*:string*/{\n  /* OfficeDocumentSettings */\n  /* ExcelWorkbook */\n  if ((((wb || {}).Workbook || {}).WBProps || {}).date1904) return '<ExcelWorkbook xmlns=\"urn:schemas-microsoft-com:office:excel\"><Date1904/></ExcelWorkbook>';\n  return \"\";\n}\n/* TODO */\nfunction write_sty_xlml(wb, opts) /*:string*/{\n  /* Styles */\n  var styles /*:Array<string>*/ = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n  opts.cellXfs.forEach(function (xf, id) {\n    var payload /*:Array<string>*/ = [];\n    payload.push(writextag('NumberFormat', null, {\n      \"ss:Format\": escapexml(table_fmt[xf.numFmtId])\n    }));\n    var o = /*::(*/{\n      \"ss:ID\": \"s\" + (21 + id)\n    } /*:: :any)*/;\n    styles.push(writextag('Style', payload.join(\"\"), o));\n  });\n  return writextag(\"Styles\", styles.join(\"\"));\n}\nfunction write_name_xlml(n) {\n  return writextag(\"NamedRange\", null, {\n    \"ss:Name\": n.Name.slice(0, 6) == \"_xlnm.\" ? n.Name.slice(6) : n.Name,\n    \"ss:RefersTo\": \"=\" + a1_to_rc(n.Ref, {\n      r: 0,\n      c: 0\n    })\n  });\n}\nfunction write_names_xlml(wb /*::, opts*/) /*:string*/{\n  if (!((wb || {}).Workbook || {}).Names) return \"\";\n  /*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n  var names /*:Array<any>*/ = wb.Workbook.Names;\n  var out /*:Array<string>*/ = [];\n  for (var i = 0; i < names.length; ++i) {\n    var n = names[i];\n    if (n.Sheet != null) continue;\n    if (n.Name.match(/^_xlfn\\./)) continue;\n    out.push(write_name_xlml(n));\n  }\n  return writextag(\"Names\", out.join(\"\"));\n}\nfunction write_ws_xlml_names(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/) /*:string*/{\n  if (!ws) return \"\";\n  if (!((wb || {}).Workbook || {}).Names) return \"\";\n  /*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n  var names /*:Array<any>*/ = wb.Workbook.Names;\n  var out /*:Array<string>*/ = [];\n  for (var i = 0; i < names.length; ++i) {\n    var n = names[i];\n    if (n.Sheet != idx) continue;\n    /*switch(n.Name) {\n    \tcase \"_\": continue;\n    }*/\n    if (n.Name.match(/^_xlfn\\./)) continue;\n    out.push(write_name_xlml(n));\n  }\n  return out.join(\"\");\n}\n/* WorksheetOptions */\nfunction write_ws_xlml_wsopts(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/) /*:string*/{\n  if (!ws) return \"\";\n  var o /*:Array<string>*/ = [];\n  /* NOTE: spec technically allows any order, but stick with implied order */\n\n  /* FitToPage */\n  /* DoNotDisplayColHeaders */\n  /* DoNotDisplayRowHeaders */\n  /* ViewableRange */\n  /* Selection */\n  /* GridlineColor */\n  /* Name */\n  /* ExcelWorksheetType */\n  /* IntlMacro */\n  /* Unsynced */\n  /* Selected */\n  /* CodeName */\n\n  if (ws['!margins']) {\n    o.push(\"<PageSetup>\");\n    if (ws['!margins'].header) o.push(writextag(\"Header\", null, {\n      'x:Margin': ws['!margins'].header\n    }));\n    if (ws['!margins'].footer) o.push(writextag(\"Footer\", null, {\n      'x:Margin': ws['!margins'].footer\n    }));\n    o.push(writextag(\"PageMargins\", null, {\n      'x:Bottom': ws['!margins'].bottom || \"0.75\",\n      'x:Left': ws['!margins'].left || \"0.7\",\n      'x:Right': ws['!margins'].right || \"0.7\",\n      'x:Top': ws['!margins'].top || \"0.75\"\n    }));\n    o.push(\"</PageSetup>\");\n  }\n\n  /* PageSetup */\n  /* DisplayPageBreak */\n  /* TransitionExpressionEvaluation */\n  /* TransitionFormulaEntry */\n  /* Print */\n  /* Zoom */\n  /* PageLayoutZoom */\n  /* PageBreakZoom */\n  /* ShowPageBreakZoom */\n  /* DefaultRowHeight */\n  /* DefaultColumnWidth */\n  /* StandardWidth */\n\n  if (wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n    /* Visible */\n    if (wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\", {}));else {\n      /* Selected */\n      for (var i = 0; i < idx; ++i) if (wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n      if (i == idx) o.push(\"<Selected/>\");\n    }\n  }\n\n  /* LeftColumnVisible */\n\n  if (((((wb || {}).Workbook || {}).Views || [])[0] || {}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n  /* GridlineColorIndex */\n  /* DisplayFormulas */\n  /* DoNotDisplayGridlines */\n  /* DoNotDisplayHeadings */\n  /* DoNotDisplayOutline */\n  /* ApplyAutomaticOutlineStyles */\n  /* NoSummaryRowsBelowDetail */\n  /* NoSummaryColumnsRightDetail */\n  /* DoNotDisplayZeros */\n  /* ActiveRow */\n  /* ActiveColumn */\n  /* FilterOn */\n  /* RangeSelection */\n  /* TopRowVisible */\n  /* TopRowBottomPane */\n  /* LeftColumnRightPane */\n  /* ActivePane */\n  /* SplitHorizontal */\n  /* SplitVertical */\n  /* FreezePanes */\n  /* FrozenNoSplit */\n  /* TabColorIndex */\n  /* Panes */\n\n  /* NOTE: Password not supported in XLML Format */\n  if (ws['!protect']) {\n    o.push(writetag(\"ProtectContents\", \"True\"));\n    if (ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n    if (ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n    if (ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));else if (ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n    [[\"formatCells\", \"AllowFormatCells\"], [\"formatColumns\", \"AllowSizeCols\"], [\"formatRows\", \"AllowSizeRows\"], [\"insertColumns\", \"AllowInsertCols\"], [\"insertRows\", \"AllowInsertRows\"], [\"insertHyperlinks\", \"AllowInsertHyperlinks\"], [\"deleteColumns\", \"AllowDeleteCols\"], [\"deleteRows\", \"AllowDeleteRows\"], [\"sort\", \"AllowSort\"], [\"autoFilter\", \"AllowFilter\"], [\"pivotTables\", \"AllowUsePivotTables\"]].forEach(function (x) {\n      if (ws['!protect'][x[0]]) o.push(\"<\" + x[1] + \"/>\");\n    });\n  }\n  if (o.length == 0) return \"\";\n  return writextag(\"WorksheetOptions\", o.join(\"\"), {\n    xmlns: XLMLNS.x\n  });\n}\nfunction write_ws_xlml_comment(comments /*:Array<any>*/) /*:string*/{\n  /* TODO: test multiple comments */\n  return comments.map(function (c) {\n    // TODO: formatted text\n    var t = xlml_unfixstr(c.t || \"\");\n    var d = writextag(\"ss:Data\", t, {\n      \"xmlns\": \"http://www.w3.org/TR/REC-html40\"\n    });\n    var p = {};\n    if (c.a) p[\"ss:Author\"] = c.a;\n    if (!comments.hidden) p[\"ss:ShowAlways\"] = \"1\";\n    return writextag(\"Comment\", d, p);\n  }).join(\"\");\n}\nfunction write_ws_xlml_cell(cell, ref /*:string*/, ws, opts, idx /*:number*/, wb, addr) /*:string*/{\n  if (!cell || cell.v == undefined && cell.f == undefined) return \"\";\n  var attr = {};\n  if (cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n  if (cell.F && cell.F.slice(0, ref.length) == ref) {\n    var end = decode_cell(cell.F.slice(ref.length + 1));\n    attr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n  }\n  if (cell.l && cell.l.Target) {\n    attr[\"ss:HRef\"] = escapexml(cell.l.Target);\n    if (cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n  }\n  if (ws['!merges']) {\n    var marr = ws['!merges'];\n    for (var mi = 0; mi != marr.length; ++mi) {\n      if (marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n      if (marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n      if (marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n    }\n  }\n  var t = \"\",\n    p = \"\";\n  switch (cell.t) {\n    case 'z':\n      if (!opts.sheetStubs) return \"\";\n      break;\n    case 'n':\n      t = 'Number';\n      p = String(cell.v);\n      break;\n    case 'b':\n      t = 'Boolean';\n      p = cell.v ? \"1\" : \"0\";\n      break;\n    case 'e':\n      t = 'Error';\n      p = BErr[cell.v];\n      break;\n    case 'd':\n      t = 'DateTime';\n      p = new Date(cell.v).toISOString();\n      if (cell.z == null) cell.z = cell.z || table_fmt[14];\n      break;\n    case 's':\n      t = 'String';\n      p = escapexlml(cell.v || \"\");\n      break;\n  }\n  /* TODO: cell style */\n  var os = get_cell_style(opts.cellXfs, cell, opts);\n  attr[\"ss:StyleID\"] = \"s\" + (21 + os);\n  attr[\"ss:Index\"] = addr.c + 1;\n  var _v = cell.v != null ? p : \"\";\n  var m = cell.t == 'z' ? \"\" : '<Data ss:Type=\"' + t + '\">' + _v + '</Data>';\n  if ((cell.c || []).length > 0) m += write_ws_xlml_comment(cell.c);\n  return writextag(\"Cell\", m, attr);\n}\nfunction write_ws_xlml_row(R /*:number*/, row) /*:string*/{\n  var o = '<Row ss:Index=\"' + (R + 1) + '\"';\n  if (row) {\n    if (row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n    if (row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n    if (row.hidden) o += ' ss:Hidden=\"1\"';\n  }\n  return o + '>';\n}\n/* TODO */\nfunction write_ws_xlml_table(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/) /*:string*/{\n  if (!ws['!ref']) return \"\";\n  var range /*:Range*/ = safe_decode_range(ws['!ref']);\n  var marr /*:Array<Range>*/ = ws['!merges'] || [],\n    mi = 0;\n  var o /*:Array<string>*/ = [];\n  if (ws['!cols']) ws['!cols'].forEach(function (n, i) {\n    process_col(n);\n    var w = !!n.width;\n    var p = col_obj_w(i, n);\n    var k /*:any*/ = {\n      \"ss:Index\": i + 1\n    };\n    if (w) k['ss:Width'] = width2px(p.width);\n    if (n.hidden) k['ss:Hidden'] = \"1\";\n    o.push(writextag(\"Column\", null, k));\n  });\n  var dense = ws[\"!data\"] != null;\n  for (var R = range.s.r; R <= range.e.r; ++R) {\n    var row = [write_ws_xlml_row(R, (ws['!rows'] || [])[R])];\n    for (var C = range.s.c; C <= range.e.c; ++C) {\n      var skip = false;\n      for (mi = 0; mi != marr.length; ++mi) {\n        if (marr[mi].s.c > C) continue;\n        if (marr[mi].s.r > R) continue;\n        if (marr[mi].e.c < C) continue;\n        if (marr[mi].e.r < R) continue;\n        if (marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n        break;\n      }\n      if (skip) continue;\n      var addr = {\n        r: R,\n        c: C\n      };\n      var ref = encode_col(C) + encode_row(R),\n        cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n      row.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n    }\n    row.push(\"</Row>\");\n    if (row.length > 2) o.push(row.join(\"\"));\n  }\n  return o.join(\"\");\n}\nfunction write_ws_xlml(idx /*:number*/, opts, wb /*:Workbook*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  var s = wb.SheetNames[idx];\n  var ws = wb.Sheets[s];\n  var t /*:string*/ = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n  if (t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n  /* Table */\n  t = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n  if (t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n  /* WorksheetOptions */\n  o.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n  if (ws[\"!autofilter\"]) o.push('<AutoFilter x:Range=\"' + a1_to_rc(fix_range(ws[\"!autofilter\"].ref), {\n    r: 0,\n    c: 0\n  }) + '\" xmlns=\"urn:schemas-microsoft-com:office:excel\"></AutoFilter>');\n  return o.join(\"\");\n}\nfunction write_xlml(wb, opts) /*:string*/{\n  if (!opts) opts = {};\n  if (!wb.SSF) wb.SSF = dup(table_fmt);\n  if (wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    opts.revssf = evert_num(wb.SSF);\n    opts.revssf[wb.SSF[65535]] = 0;\n    opts.ssf = wb.SSF;\n    opts.cellXfs = [];\n    get_cell_style(opts.cellXfs, {}, {\n      revssf: {\n        \"General\": 0\n      }\n    });\n  }\n  var d /*:Array<string>*/ = [];\n  d.push(write_props_xlml(wb, opts));\n  d.push(write_wb_xlml(wb, opts));\n  d.push(\"\");\n  d.push(\"\");\n  for (var i = 0; i < wb.SheetNames.length; ++i) d.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\n    \"ss:Name\": escapexml(wb.SheetNames[i])\n  }));\n  d[2] = write_sty_xlml(wb, opts);\n  d[3] = write_names_xlml(wb, opts);\n  return XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n    'xmlns': XLMLNS.ss,\n    'xmlns:o': XLMLNS.o,\n    'xmlns:x': XLMLNS.x,\n    'xmlns:ss': XLMLNS.ss,\n    'xmlns:dt': XLMLNS.dt,\n    'xmlns:html': XLMLNS.html\n  });\n}\n/* [MS-OLEDS] 2.3.8 CompObjStream */\nfunction parse_compobj(obj /*:CFBEntry*/) {\n  var v = {};\n  var o = obj.content;\n  /*:: if(o == null) return; */\n\n  /* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n  o.l = 28;\n  v.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n  v.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n  if (o.length - o.l <= 4) return v;\n  var m /*:number*/ = o.read_shift(4);\n  if (m == 0 || m > 40) return v;\n  o.l -= 4;\n  v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n  if (o.length - o.l <= 4) return v;\n  m = o.read_shift(4);\n  if (m !== 0x71b239f4) return v;\n  v.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n  m = o.read_shift(4);\n  if (m == 0 || m > 40) return v;\n  o.l -= 4;\n  v.Reserved2 = o.read_shift(0, \"lpwstr\");\n}\n\n/*\n\tContinue logic for:\n\t- 2.4.58 Continue          0x003c\n\t- 2.4.59 ContinueBigName   0x043c\n\t- 2.4.60 ContinueFrt       0x0812\n\t- 2.4.61 ContinueFrt11     0x0875\n\t- 2.4.62 ContinueFrt12     0x087f\n*/\nvar CONTINUE_RT = [0x003c, 0x043c, 0x0812, 0x0875, 0x087f];\nfunction slurp(RecordType, R, blob, length /*:number*/, opts) /*:any*/{\n  var l = length;\n  var bufs = [];\n  var d = blob.slice(blob.l, blob.l + l);\n  if (opts && opts.enc && opts.enc.insitu && d.length > 0) switch (RecordType) {\n    case 0x0009:\n    case 0x0209:\n    case 0x0409:\n    case 0x0809 /* BOF */:\n    case 0x002F /* FilePass */:\n    case 0x0195 /* FileLock */:\n    case 0x00E1 /* InterfaceHdr */:\n    case 0x0196 /* RRDInfo */:\n    case 0x0138 /* RRDHead */:\n    case 0x0194 /* UsrExcl */:\n    case 0x000a /* EOF */:\n      break;\n    case 0x0085 /* BoundSheet8 */:\n      break;\n    default:\n      opts.enc.insitu(d);\n  }\n  bufs.push(d);\n  blob.l += l;\n  var nextrt = __readUInt16LE(blob, blob.l),\n    next = XLSRecordEnum[nextrt];\n  var start = 0;\n  while (next != null && CONTINUE_RT.indexOf(nextrt) > -1) {\n    l = __readUInt16LE(blob, blob.l + 2);\n    start = blob.l + 4;\n    if (nextrt == 0x0812 /* ContinueFrt */) start += 4;else if (nextrt == 0x0875 || nextrt == 0x087f) {\n      start += 12;\n    }\n    d = blob.slice(start, blob.l + 4 + l);\n    bufs.push(d);\n    blob.l += 4 + l;\n    next = XLSRecordEnum[nextrt = __readUInt16LE(blob, blob.l)];\n  }\n  var b = bconcat(bufs) /*:any*/;\n  prep_blob(b, 0);\n  var ll = 0;\n  b.lens = [];\n  for (var j = 0; j < bufs.length; ++j) {\n    b.lens.push(ll);\n    ll += bufs[j].length;\n  }\n  if (b.length < length) throw \"XLS Record 0x\" + RecordType.toString(16) + \" Truncated: \" + b.length + \" < \" + length;\n  return R.f(b, b.length, opts);\n}\nfunction safe_format_xf(p /*:any*/, opts /*:ParseOpts*/, date1904 /*:?boolean*/) {\n  if (p.t === 'z') return;\n  if (!p.XF) return;\n  var fmtid = 0;\n  try {\n    fmtid = p.z || p.XF.numFmtId || 0;\n    if (opts.cellNF && p.z == null) p.z = table_fmt[fmtid];\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (!opts || opts.cellText !== false) try {\n    if (p.t === 'e') {\n      p.w = p.w || BErr[p.v];\n    } else if (fmtid === 0 || fmtid == \"General\") {\n      if (p.t === 'n') {\n        if ((p.v | 0) === p.v) p.w = p.v.toString(10);else p.w = SSF_general_num(p.v);\n      } else p.w = SSF_general(p.v);\n    } else p.w = SSF_format(fmtid, p.v, {\n      date1904: !!date1904,\n      dateNF: opts && opts.dateNF\n    });\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (opts.cellDates && fmtid && p.t == 'n' && fmt_is_date(table_fmt[fmtid] || String(fmtid))) {\n    var _d = SSF_parse_date_code(p.v + (date1904 ? 1462 : 0));\n    if (_d) {\n      p.t = 'd';\n      p.v = new Date(Date.UTC(_d.y, _d.m - 1, _d.d, _d.H, _d.M, _d.S, _d.u));\n    }\n  }\n}\nfunction make_cell(val, ixfe, t) /*:Cell*/{\n  return {\n    v: val,\n    ixfe: ixfe,\n    t: t\n  } /*:any*/;\n}\n\n// 2.3.2\nfunction parse_workbook(blob, options /*:ParseOpts*/) /*:Workbook*/{\n  var wb = {\n    opts: {}\n  } /*:any*/;\n  var Sheets = {};\n  if (DENSE != null && options.dense == null) options.dense = DENSE;\n  var out /*:Worksheet*/ = {} /*:any*/;\n  if (options.dense) out[\"!data\"] = [];\n  var Directory = {};\n  var range /*:Range*/ = {} /*:any*/;\n  var last_formula = null;\n  var sst /*:SST*/ = [] /*:any*/;\n  var cur_sheet = \"\";\n  var Preamble = {};\n  var lastcell,\n    last_cell = \"\",\n    cc /*:Cell*/,\n    cmnt,\n    rngC,\n    rngR;\n  var sharedf = {};\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var temp_val /*:Cell*/;\n  var country;\n  var XFs = []; /* XF records */\n  var palette /*:Array<[number, number, number]>*/ = [];\n  var Workbook /*:WBWBProps*/ = {\n      Sheets: [],\n      WBProps: {\n        date1904: false\n      },\n      Views: [{}]\n    } /*:any*/,\n    wsprops = {};\n  var biff4w = false;\n  var get_rgb = function getrgb(icv /*:number*/) /*:[number, number, number]*/{\n    if (icv < 8) return XLSIcv[icv];\n    if (icv < 64) return palette[icv - 8] || XLSIcv[icv];\n    return XLSIcv[icv];\n  };\n  var process_cell_style = function pcs(line /*:any*/, options) {\n    var xfd = line.XF.data;\n    if (!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n    line.s = {} /*:any*/;\n    line.s.patternType = xfd.patternType;\n    var t;\n    if (t = rgb2Hex(get_rgb(xfd.icvFore))) {\n      line.s.fgColor = {\n        rgb: t\n      };\n    }\n    if (t = rgb2Hex(get_rgb(xfd.icvBack))) {\n      line.s.bgColor = {\n        rgb: t\n      };\n    }\n  };\n  var addcell = function addcell(cell /*:any*/, line /*:any*/, options /*:any*/) {\n    if (!biff4w && file_depth > 1) return;\n    if (options.sheetRows && cell.r >= options.sheetRows) return;\n    if (options.cellStyles && line.XF && line.XF.data) process_cell_style(line, options);\n    delete line.ixfe;\n    delete line.XF;\n    lastcell = cell;\n    last_cell = encode_cell(cell);\n    if (!range || !range.s || !range.e) range = {\n      s: {\n        r: 0,\n        c: 0\n      },\n      e: {\n        r: 0,\n        c: 0\n      }\n    };\n    if (cell.r < range.s.r) range.s.r = cell.r;\n    if (cell.c < range.s.c) range.s.c = cell.c;\n    if (cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n    if (cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n    if (options.cellFormula && line.f) {\n      for (var afi = 0; afi < arrayf.length; ++afi) {\n        if (arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n        if (arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n        line.F = encode_range(arrayf[afi][0]);\n        if (arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n        if (line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n        break;\n      }\n    }\n    {\n      if (options.dense) {\n        if (!out[\"!data\"][cell.r]) out[\"!data\"][cell.r] = [];\n        out[\"!data\"][cell.r][cell.c] = line;\n      } else out[last_cell] = line;\n    }\n  };\n  var opts = {\n    enc: false,\n    // encrypted\n    sbcch: 0,\n    // cch in the preceding SupBook\n    snames: [],\n    // sheetnames\n    sharedf: sharedf,\n    // shared formulae by address\n    arrayf: arrayf,\n    // array formulae array\n    rrtabid: [],\n    // RRTabId\n    lastuser: \"\",\n    // Last User from WriteAccess\n    biff: 8,\n    // BIFF version\n    codepage: 0,\n    // CP from CodePage record\n    winlocked: 0,\n    // fLockWn from WinProtect\n    cellStyles: !!options && !!options.cellStyles,\n    WTF: !!options && !!options.wtf\n  } /*:any*/;\n  if (options.password) opts.password = options.password;\n  var themes;\n  var merges /*:Array<Range>*/ = [];\n  var objects = [];\n  var colinfo /*:Array<ColInfo>*/ = [],\n    rowinfo /*:Array<RowInfo>*/ = [];\n  var seencol = false;\n  var supbooks = [] /*:any*/; // 1-indexed, will hold extern names\n  supbooks.SheetNames = opts.snames;\n  supbooks.sharedf = opts.sharedf;\n  supbooks.arrayf = opts.arrayf;\n  supbooks.names = [];\n  supbooks.XTI = [];\n  var last_RT = 0;\n  var file_depth = 0; /* TODO: make a real stack */\n  var BIFF2Fmt = 0,\n    BIFF2FmtTable /*:Array<string>*/ = [];\n  var FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n  var last_lbl /*:?DefinedName*/;\n\n  /* explicit override for some broken writers */\n  opts.codepage = 1200;\n  set_cp(1200);\n  var seen_codepage = false;\n  while (blob.l < blob.length - 1) {\n    var s = blob.l;\n    var RecordType = blob.read_shift(2);\n    if (RecordType === 0 && last_RT === 0x000a /* EOF */) break;\n    var length = blob.l === blob.length ? 0 : blob.read_shift(2);\n    var R = XLSRecordEnum[RecordType];\n    if (file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(RecordType) == -1 /* BOF */) break;\n    //console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n    //if(!R) console.log(blob.slice(blob.l, blob.l + length));\n    if (R && R.f) {\n      if (options.bookSheets) {\n        if (last_RT === 0x0085 /* BoundSheet8 */ && RecordType !== 0x0085 /* R.n !== 'BoundSheet8' */) break;\n      }\n      last_RT = RecordType;\n      if (R.r === 2 || R.r == 12) {\n        var rt = blob.read_shift(2);\n        length -= 2;\n        if (!opts.enc && rt !== RecordType && ((rt & 0xFF) << 8 | rt >> 8) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n        if (R.r == 12) {\n          blob.l += 10;\n          length -= 10;\n        } // skip FRT\n      }\n      //console.error(R,blob.l,length,blob.length);\n      var val /*:any*/ = {} /*:any*/;\n      if (RecordType === 0x000a /* EOF */) val = /*::(*/R.f(blob, length, opts) /*:: :any)*/;else val = /*::(*/slurp(RecordType, R, blob, length, opts) /*:: :any)*/;\n      /*:: val = (val:any); */\n      if (file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(last_RT) === -1 /* BOF */) continue;\n      switch (RecordType) {\n        case 0x0022 /* Date1904 */:\n          /*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n          wb.opts.Date1904 = Workbook.WBProps.date1904 = val;\n          break;\n        case 0x0086 /* WriteProtect */:\n          wb.opts.WriteProtect = true;\n          break;\n        case 0x002f /* FilePass */:\n          if (!opts.enc) blob.l = 0;\n          opts.enc = val;\n          if (!options.password) throw new Error(\"File is password-protected\");\n          if (val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n          if (!val.valid) throw new Error(\"Password is incorrect\");\n          break;\n        case 0x005c /* WriteAccess */:\n          opts.lastuser = val;\n          break;\n        case 0x0042 /* CodePage */:\n          var cpval = Number(val);\n          /* overrides based on test cases */\n          switch (cpval) {\n            case 0x5212:\n              cpval = 1200;\n              break;\n            case 0x8000:\n              cpval = 10000;\n              break;\n            case 0x8001:\n              cpval = 1252;\n              break;\n          }\n          set_cp(opts.codepage = cpval);\n          seen_codepage = true;\n          break;\n        case 0x013d /* RRTabId */:\n          opts.rrtabid = val;\n          break;\n        case 0x0019 /* WinProtect */:\n          opts.winlocked = val;\n          break;\n        case 0x01b7 /* RefreshAll */:\n          wb.opts[\"RefreshAll\"] = val;\n          break;\n        case 0x000c /* CalcCount */:\n          wb.opts[\"CalcCount\"] = val;\n          break;\n        case 0x0010 /* CalcDelta */:\n          wb.opts[\"CalcDelta\"] = val;\n          break;\n        case 0x0011 /* CalcIter */:\n          wb.opts[\"CalcIter\"] = val;\n          break;\n        case 0x000d /* CalcMode */:\n          wb.opts[\"CalcMode\"] = val;\n          break;\n        case 0x000e /* CalcPrecision */:\n          wb.opts[\"CalcPrecision\"] = val;\n          break;\n        case 0x005f /* CalcSaveRecalc */:\n          wb.opts[\"CalcSaveRecalc\"] = val;\n          break;\n        case 0x000f /* CalcRefMode */:\n          opts.CalcRefMode = val;\n          break;\n        // TODO: implement R1C1\n        case 0x08a3 /* ForceFullCalculation */:\n          wb.opts.FullCalc = val;\n          break;\n        case 0x0081 /* WsBool */:\n          if (val.fDialog) out[\"!type\"] = \"dialog\";\n          if (!val.fBelow) (out[\"!outline\"] || (out[\"!outline\"] = {})).above = true;\n          if (!val.fRight) (out[\"!outline\"] || (out[\"!outline\"] = {})).left = true;\n          break;\n        // TODO\n        case 0x0043: /* BIFF2XF */\n        case 0x0243: /* BIFF3XF */\n        case 0x0443: /* BIFF4XF */\n        case 0x00e0 /* XF */:\n          XFs.push(val);\n          break;\n        case 0x01ae /* SupBook */:\n          supbooks.push([val]);\n          supbooks[supbooks.length - 1].XTI = [];\n          break;\n        case 0x0023:\n        case 0x0223 /* ExternName */:\n          supbooks[supbooks.length - 1].push(val);\n          break;\n        case 0x0018:\n        case 0x0218 /* Lbl */:\n          last_lbl = {\n            Name: val.Name,\n            Ref: stringify_formula(val.rgce, range, null, supbooks, opts)\n          } /*:DefinedName*/;\n          if (val.itab > 0) last_lbl.Sheet = val.itab - 1;\n          supbooks.names.push(last_lbl);\n          if (!supbooks[0]) {\n            supbooks[0] = [];\n            supbooks[0].XTI = [];\n          }\n          supbooks[supbooks.length - 1].push(val);\n          if (val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0) if (val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d') FilterDatabases[val.itab - 1] = {\n            ref: encode_range(val.rgce[0][0][1][2])\n          };\n          break;\n        case 0x0016 /* ExternCount */:\n          opts.ExternCount = val;\n          break;\n        case 0x0017 /* ExternSheet */:\n          if (supbooks.length == 0) {\n            supbooks[0] = [];\n            supbooks[0].XTI = [];\n          }\n          supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n          supbooks.XTI = supbooks.XTI.concat(val);\n          break;\n        case 0x0894 /* NameCmt */:\n          /* TODO: search for correct name */\n          if (opts.biff < 8) break;\n          if (last_lbl != null) last_lbl.Comment = val[1];\n          break;\n        case 0x0012 /* Protect */:\n          out[\"!protect\"] = val;\n          break;\n        /* for sheet or book */\n        case 0x0013 /* Password */:\n          if (val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val);\n          break;\n        case 0x0085 /* BoundSheet8 */:\n          {\n            Directory[opts.biff == 4 ? opts.snames.length : val.pos] = val;\n            opts.snames.push(val.name);\n          }\n          break;\n        case 0x000a /* EOF */:\n          {\n            if (--file_depth ? !biff4w : biff4w) break;\n            if (range.e) {\n              if (range.e.r > 0 && range.e.c > 0) {\n                range.e.r--;\n                range.e.c--;\n                out[\"!ref\"] = encode_range(range);\n                if (options.sheetRows && options.sheetRows <= range.e.r) {\n                  var tmpri = range.e.r;\n                  range.e.r = options.sheetRows - 1;\n                  out[\"!fullref\"] = out[\"!ref\"];\n                  out[\"!ref\"] = encode_range(range);\n                  range.e.r = tmpri;\n                }\n                range.e.r++;\n                range.e.c++;\n              }\n              if (merges.length > 0) out[\"!merges\"] = merges;\n              if (objects.length > 0) out[\"!objects\"] = objects;\n              if (colinfo.length > 0) out[\"!cols\"] = colinfo;\n              if (rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n              Workbook.Sheets.push(wsprops);\n            }\n            if (cur_sheet === \"\") Preamble = out;else Sheets[cur_sheet] = out;\n            out = {} /*:any*/;\n            if (options.dense) out[\"!data\"] = [];\n          }\n          break;\n        case 0x0009:\n        case 0x0209:\n        case 0x0409:\n        case 0x0809 /* BOF */:\n          {\n            if (opts.biff === 8) opts.biff = {\n              0x0009: 2,\n              0x0209: 3,\n              0x0409: 4\n            }[RecordType] || {\n              0x0200: 2,\n              0x0300: 3,\n              0x0400: 4,\n              0x0500: 5,\n              0x0600: 8,\n              0x0002: 2,\n              0x0007: 2\n            }[val.BIFFVer] || 8;\n            opts.biffguess = val.BIFFVer == 0;\n            if (val.BIFFVer == 0 && val.dt == 0x1000) {\n              opts.biff = 5;\n              seen_codepage = true;\n              set_cp(opts.codepage = 28591);\n            }\n            if (opts.biff == 4 && val.dt & 0x100) biff4w = true;\n            if (opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n            if (file_depth++ && !biff4w) break;\n            out = {} /*:any*/;\n            if (options.dense) out[\"!data\"] = [];\n            if (opts.biff < 8 && !seen_codepage) {\n              seen_codepage = true;\n              set_cp(opts.codepage = options.codepage || 1252);\n            }\n            if (opts.biff == 4 && biff4w) {\n              cur_sheet = (Directory[opts.snames.indexOf(cur_sheet) + 1] || {\n                name: \"\"\n              }).name;\n            } else if (opts.biff < 5 || val.BIFFVer == 0 && val.dt == 0x1000) {\n              if (cur_sheet === \"\") cur_sheet = \"Sheet1\";\n              range = {\n                s: {\n                  r: 0,\n                  c: 0\n                },\n                e: {\n                  r: 0,\n                  c: 0\n                }\n              };\n              /* fake BoundSheet8 */\n              var fakebs8 = {\n                pos: blob.l - length,\n                name: cur_sheet\n              };\n              Directory[fakebs8.pos] = fakebs8;\n              opts.snames.push(cur_sheet);\n            } else cur_sheet = (Directory[s] || {\n              name: \"\"\n            }).name;\n            if (val.dt == 0x20) out[\"!type\"] = \"chart\";\n            if (val.dt == 0x40) out[\"!type\"] = \"macro\";\n            merges = [];\n            objects = [];\n            opts.arrayf = arrayf = [];\n            colinfo = [];\n            rowinfo = [];\n            seencol = false;\n            wsprops = {\n              Hidden: (Directory[s] || {\n                hs: 0\n              }).hs,\n              name: cur_sheet\n            };\n          }\n          break;\n        case 0x0203 /* Number */:\n        case 0x0003 /* BIFF2NUM */:\n        case 0x0002 /* BIFF2INT */:\n          {\n            if (out[\"!type\"] == \"chart\") if (options.dense ? (out[\"!data\"][val.r] || [])[val.c] : out[encode_col(val.c) + encode_row(val.r)]) ++val.c;\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe] || {},\n              v: val.val,\n              t: 'n'\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x0005:\n        case 0x0205 /* BoolErr */:\n          {\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe],\n              v: val.val,\n              t: val.t\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x027e /* RK */:\n          {\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe],\n              v: val.rknum,\n              t: 'n'\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x00bd /* MulRk */:\n          {\n            for (var j = val.c; j <= val.C; ++j) {\n              var ixfe = val.rkrec[j - val.c][0];\n              temp_val = {\n                ixfe: ixfe,\n                XF: XFs[ixfe],\n                v: val.rkrec[j - val.c][1],\n                t: 'n'\n              } /*:any*/;\n              if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell({\n                c: j,\n                r: val.r\n              }, temp_val, options);\n            }\n          }\n          break;\n        case 0x0006:\n        case 0x0206:\n        case 0x0406 /* Formula */:\n          {\n            if (val.val == 'String') {\n              last_formula = val;\n              break;\n            }\n            temp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n            temp_val.XF = XFs[temp_val.ixfe];\n            if (options.cellFormula) {\n              var _f = val.formula;\n              if (_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n                var _fr = _f[0][0][1][0],\n                  _fc = _f[0][0][1][1];\n                var _fe = encode_cell({\n                  r: _fr,\n                  c: _fc\n                });\n                if (sharedf[_fe]) temp_val.f = \"\" + stringify_formula(val.formula, range, val.cell, supbooks, opts);else temp_val.F = ((options.dense ? (out[\"!data\"][_fr] || [])[_fc] : out[_fe]) || {}).F;\n              } else temp_val.f = \"\" + stringify_formula(val.formula, range, val.cell, supbooks, opts);\n            }\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell(val.cell, temp_val, options);\n            last_formula = val;\n          }\n          break;\n        case 0x0007:\n        case 0x0207 /* String */:\n          {\n            if (last_formula) {\n              /* technically always true */\n              last_formula.val = val;\n              temp_val = make_cell(val, last_formula.cell.ixfe, 's');\n              temp_val.XF = XFs[temp_val.ixfe];\n              if (options.cellFormula) {\n                temp_val.f = \"\" + stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n              }\n              if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell(last_formula.cell, temp_val, options);\n              last_formula = null;\n            } else throw new Error(\"String record expects Formula\");\n          }\n          break;\n        case 0x0021:\n        case 0x0221 /* Array */:\n          {\n            arrayf.push(val);\n            var _arraystart = encode_cell(val[0].s);\n            cc = options.dense ? (out[\"!data\"][val[0].s.r] || [])[val[0].s.c] : out[_arraystart];\n            if (options.cellFormula && cc) {\n              if (!last_formula) break; /* technically unreachable */\n              if (!_arraystart || !cc) break;\n              cc.f = \"\" + stringify_formula(val[1], range, val[0], supbooks, opts);\n              cc.F = encode_range(val[0]);\n            }\n          }\n          break;\n        case 0x04bc /* ShrFmla */:\n          {\n            if (!options.cellFormula) break;\n            if (last_cell) {\n              /* TODO: capture range */\n              if (!last_formula) break; /* technically unreachable */\n              sharedf[encode_cell(last_formula.cell)] = val[0];\n              cc = options.dense ? (out[\"!data\"][last_formula.cell.r] || [])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n              (cc || {}).f = \"\" + stringify_formula(val[0], range, lastcell, supbooks, opts);\n            }\n          }\n          break;\n        case 0x00fd /* LabelSst */:\n          temp_val = make_cell(sst[val.isst].t, val.ixfe, 's');\n          if (sst[val.isst].h) temp_val.h = sst[val.isst].h;\n          temp_val.XF = XFs[temp_val.ixfe];\n          if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n          safe_format_xf(temp_val, options, wb.opts.Date1904);\n          addcell({\n            c: val.c,\n            r: val.r\n          }, temp_val, options);\n          break;\n        case 0x0201 /* Blank */:\n          if (options.sheetStubs) {\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe],\n              t: 'z'\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x00be /* MulBlank */:\n          if (options.sheetStubs) {\n            for (var _j = val.c; _j <= val.C; ++_j) {\n              var _ixfe = val.ixfe[_j - val.c];\n              temp_val = {\n                ixfe: _ixfe,\n                XF: XFs[_ixfe],\n                t: 'z'\n              } /*:any*/;\n              if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell({\n                c: _j,\n                r: val.r\n              }, temp_val, options);\n            }\n          }\n          break;\n        case 0x00d6 /* RString */:\n        case 0x0204 /* Label */:\n        case 0x0004 /* BIFF2STR */:\n          temp_val = make_cell(val.val, val.ixfe, 's');\n          temp_val.XF = XFs[temp_val.ixfe];\n          if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n          safe_format_xf(temp_val, options, wb.opts.Date1904);\n          addcell({\n            c: val.c,\n            r: val.r\n          }, temp_val, options);\n          break;\n        case 0x0000:\n        case 0x0200 /* Dimensions */:\n          {\n            if (file_depth === 1) range = val; /* TODO: stack */\n          }\n          break;\n        case 0x00fc /* SST */:\n          {\n            sst = val;\n          }\n          break;\n        case 0x041e /* Format */:\n          {\n            /* val = [id, fmt] */\n            if (opts.biff >= 3 && opts.biff <= 4) {\n              BIFF2FmtTable[BIFF2Fmt++] = val[1];\n              for (var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if (table_fmt[b4idx] == val[1]) break;\n              if (b4idx >= 163) SSF__load(val[1], BIFF2Fmt + 163);\n            } else SSF__load(val[1], val[0]);\n          }\n          break;\n        case 0x001e /* BIFF2FORMAT */:\n          {\n            BIFF2FmtTable[BIFF2Fmt++] = val;\n            for (var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if (table_fmt[b2idx] == val) break;\n            if (b2idx >= 163) SSF__load(val, BIFF2Fmt + 163);\n          }\n          break;\n        case 0x00e5 /* MergeCells */:\n          merges = merges.concat(val);\n          break;\n        case 0x005d /* Obj */:\n          objects[val.cmo[0]] = opts.lastobj = val;\n          break;\n        case 0x01b6 /* TxO */:\n          opts.lastobj.TxO = val;\n          break;\n        case 0x007f /* ImData */:\n          opts.lastobj.ImData = val;\n          break;\n        case 0x01b8 /* HLink */:\n          {\n            for (rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR) for (rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n              cc = options.dense ? (out[\"!data\"][rngR] || [])[rngC] : out[encode_cell({\n                c: rngC,\n                r: rngR\n              })];\n              if (cc) cc.l = val[1];\n            }\n          }\n          break;\n        case 0x0800 /* HLinkTooltip */:\n          {\n            for (rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR) for (rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n              cc = options.dense ? (out[\"!data\"][rngR] || [])[rngC] : out[encode_cell({\n                c: rngC,\n                r: rngR\n              })];\n              if (cc && cc.l) cc.l.Tooltip = val[1];\n            }\n          }\n          break;\n        case 0x001c /* Note */:\n          {\n            /* TODO: comment continuation (row == -1 / 0xFFFF) */\n            cc = options.dense ? (out[\"!data\"][val[0].r] || [])[val[0].c] : out[encode_cell(val[0])];\n            if (!cc) {\n              if (options.dense) {\n                if (!out[\"!data\"][val[0].r]) out[\"!data\"][val[0].r] = [];\n                cc = out[\"!data\"][val[0].r][val[0].c] = {\n                  t: \"z\"\n                } /*:any*/;\n              } else {\n                cc = out[encode_cell(val[0])] = {\n                  t: \"z\"\n                } /*:any*/;\n              }\n              range.e.r = Math.max(range.e.r, val[0].r);\n              range.s.r = Math.min(range.s.r, val[0].r);\n              range.e.c = Math.max(range.e.c, val[0].c);\n              range.s.c = Math.min(range.s.c, val[0].c);\n            }\n            if (!cc.c) cc.c = [];\n            if (opts.biff <= 5 && opts.biff >= 2) cmnt = {\n              a: \"SheetJ5\",\n              t: val[1]\n            };else {\n              var noteobj = objects[val[2]];\n              cmnt = {\n                a: val[1],\n                t: noteobj.TxO.t\n              };\n              if (val[3] != null && !(val[3] & 0x02)) cc.c.hidden = true;\n            }\n            cc.c.push(cmnt);\n          }\n          break;\n        case 0x087d /* XFExt */:\n          update_xfext(XFs[val.ixfe], val.ext);\n          break;\n        case 0x007d /* ColInfo */:\n          {\n            if (!opts.cellStyles) break;\n            while (val.e >= val.s) {\n              colinfo[val.e--] = {\n                width: val.w / 256,\n                level: val.level || 0,\n                hidden: !!(val.flags & 1)\n              };\n              if (!seencol) {\n                seencol = true;\n                find_mdw_colw(val.w / 256);\n              }\n              process_col(colinfo[val.e + 1]);\n            }\n          }\n          break;\n        case 0x0208 /* Row */:\n          {\n            var rowobj = {};\n            if (val.level != null) {\n              rowinfo[val.r] = rowobj;\n              rowobj.level = val.level;\n            }\n            if (val.hidden) {\n              rowinfo[val.r] = rowobj;\n              rowobj.hidden = true;\n            }\n            if (val.hpt) {\n              rowinfo[val.r] = rowobj;\n              rowobj.hpt = val.hpt;\n              rowobj.hpx = pt2px(val.hpt);\n            }\n          }\n          break;\n        case 0x0026 /* LeftMargin */:\n        case 0x0027 /* RightMargin */:\n        case 0x0028 /* TopMargin */:\n        case 0x0029 /* BottomMargin */:\n          if (!out['!margins']) default_margins(out['!margins'] = {});\n          out['!margins'][{\n            0x26: \"left\",\n            0x27: \"right\",\n            0x28: \"top\",\n            0x29: \"bottom\"\n          }[RecordType]] = val;\n          break;\n        case 0x00a1 /* Setup */:\n          // TODO\n          if (!out['!margins']) default_margins(out['!margins'] = {});\n          out['!margins'].header = val.header;\n          out['!margins'].footer = val.footer;\n          break;\n        case 0x023e /* Window2 */:\n          // TODO\n          // $FlowIgnore\n          if (val.RTL) Workbook.Views[0].RTL = true;\n          break;\n        case 0x0092 /* Palette */:\n          palette = val;\n          break;\n        case 0x0896 /* Theme */:\n          themes = val;\n          break;\n        case 0x008c /* Country */:\n          country = val;\n          break;\n        case 0x01ba /* CodeName */:\n          {\n            /*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n            if (!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";else wsprops.CodeName = val || wsprops.name;\n          }\n          break;\n      }\n    } else {\n      if (!R) console.error(\"Missing Info for XLS Record 0x\" + RecordType.toString(16));\n      blob.l += length;\n    }\n  }\n  wb.SheetNames = keys(Directory).sort(function (a, b) {\n    return Number(a) - Number(b);\n  }).map(function (x) {\n    return Directory[x].name;\n  });\n  if (!options.bookSheets) wb.Sheets = Sheets;\n  if (!wb.SheetNames.length && Preamble[\"!ref\"]) {\n    wb.SheetNames.push(\"Sheet1\");\n    /*jshint -W069 */\n    if (wb.Sheets) wb.Sheets[\"Sheet1\"] = Preamble;\n    /*jshint +W069 */\n  } else wb.Preamble = Preamble;\n  if (wb.Sheets) FilterDatabases.forEach(function (r, i) {\n    wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r;\n  });\n  wb.Strings = sst;\n  wb.SSF = dup(table_fmt);\n  if (opts.enc) wb.Encryption = opts.enc;\n  if (themes) wb.Themes = themes;\n  wb.Metadata = {};\n  if (country !== undefined) wb.Metadata.Country = country;\n  if (supbooks.names.length > 0) Workbook.Names = supbooks.names;\n  wb.Workbook = Workbook;\n  return wb;\n}\n\n/* TODO: split props*/\nvar PSCLSID = {\n  SI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n  DSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n  UDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n};\nfunction parse_xls_props(cfb /*:CFBContainer*/, props, o) {\n  /* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n  var DSI = CFB.find(cfb, '/!DocumentSummaryInformation');\n  if (DSI && DSI.size > 0) try {\n    var DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n    for (var d in DocSummary) props[d] = DocSummary[d];\n  } catch (e) {\n    if (o.WTF) throw e; /* empty */\n  }\n\n  /* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n  var SI = CFB.find(cfb, '/!SummaryInformation');\n  if (SI && SI.size > 0) try {\n    var Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n    for (var s in Summary) if (props[s] == null) props[s] = Summary[s];\n  } catch (e) {\n    if (o.WTF) throw e; /* empty */\n  }\n  if (props.HeadingPairs && props.TitlesOfParts) {\n    load_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n    delete props.HeadingPairs;\n    delete props.TitlesOfParts;\n  }\n}\nfunction write_xls_props(wb /*:Workbook*/, cfb /*:CFBContainer*/) {\n  var DSEntries = [],\n    SEntries = [],\n    CEntries = [];\n  var i = 0,\n    Keys;\n  var DocSummaryRE /*:{[key:string]:string}*/ = evert_key(DocSummaryPIDDSI, \"n\");\n  var SummaryRE /*:{[key:string]:string}*/ = evert_key(SummaryPIDSI, \"n\");\n  if (wb.Props) {\n    Keys = keys(wb.Props);\n    // $FlowIgnore\n    for (i = 0; i < Keys.length; ++i) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n  }\n  if (wb.Custprops) {\n    Keys = keys(wb.Custprops);\n    // $FlowIgnore\n    for (i = 0; i < Keys.length; ++i) if (!Object.prototype.hasOwnProperty.call(wb.Props || {}, Keys[i])) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n  }\n  var CEntries2 = [];\n  for (i = 0; i < CEntries.length; ++i) {\n    if (XLSPSSkip.indexOf(CEntries[i][0]) > -1 || PseudoPropsPairs.indexOf(CEntries[i][0]) > -1) continue;\n    if (CEntries[i][1] == null) continue;\n    CEntries2.push(CEntries[i]);\n  }\n  if (SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n  if (DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n}\nfunction parse_xlscfb(cfb /*:any*/, options /*:?ParseOpts*/) /*:Workbook*/{\n  if (!options) options = {};\n  fix_read_opts(options);\n  reset_cp();\n  if (options.codepage) set_ansi(options.codepage);\n  var CompObj /*:?CFBEntry*/, WB /*:?any*/;\n  if (cfb.FullPaths) {\n    if (CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n    CompObj = CFB.find(cfb, '!CompObj');\n    WB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n  } else {\n    switch (options.type) {\n      case 'base64':\n        cfb = s2a(Base64_decode(cfb));\n        break;\n      case 'binary':\n        cfb = s2a(cfb);\n        break;\n      case 'buffer':\n        break;\n      case 'array':\n        if (!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb);\n        break;\n    }\n    prep_blob(cfb, 0);\n    WB = {\n      content: cfb\n    } /*:any*/;\n  }\n  var /*::CompObjP, */WorkbookP /*:: :Workbook = XLSX.utils.book_new(); */;\n  var _data /*:?any*/;\n  if (CompObj) /*::CompObjP = */parse_compobj(CompObj);\n  if (options.bookProps && !options.bookSheets) WorkbookP = {} /*:any*/;else /*:: if(cfb instanceof CFBContainer) */{\n      var T = has_buf ? 'buffer' : 'array';\n      if (WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n      /* Quattro Pro 7-8 */else if ((_data = CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n      /* Quattro Pro 9 */else if ((_data = CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n      /* Works 4 for Mac */else if ((_data = CFB.find(cfb, 'MN0')) && _data.content) throw new Error(\"Unsupported Works 4 for Mac file\");else throw new Error(\"Cannot find Workbook stream\");\n      if (options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n    }\n  var props = {};\n  if (cfb.FullPaths) parse_xls_props( /*::((*/cfb /*:: :any):CFBContainer)*/, props, options);\n  WorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\n  if (options.bookFiles) WorkbookP.cfb = cfb;\n  /*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\n  return WorkbookP;\n}\nfunction write_xlscfb(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:CFBContainer*/{\n  var o = opts || {};\n  var cfb = CFB.utils.cfb_new({\n    root: \"R\"\n  });\n  var wbpath = \"/Workbook\";\n  switch (o.bookType || \"xls\") {\n    case \"xls\":\n      o.bookType = \"biff8\";\n    /* falls through */\n    case \"xla\":\n      if (!o.bookType) o.bookType = \"xla\";\n    /* falls through */\n    case \"biff8\":\n      wbpath = \"/Workbook\";\n      o.biff = 8;\n      break;\n    case \"biff5\":\n      wbpath = \"/Book\";\n      o.biff = 5;\n      break;\n    default:\n      throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n  }\n  CFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n  if (o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n  // TODO: SI, DSI, CO\n  if (o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {\n    type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"\n  }));\n  return cfb;\n}\n/* [MS-XLSB] 2.3 Record Enumeration */\nvar XLSBRecordEnum = {\n  0x0000: {\n    /* n:\"BrtRowHdr\", */f: parse_BrtRowHdr\n  },\n  0x0001: {\n    /* n:\"BrtCellBlank\", */f: parse_BrtCellBlank\n  },\n  0x0002: {\n    /* n:\"BrtCellRk\", */f: parse_BrtCellRk\n  },\n  0x0003: {\n    /* n:\"BrtCellError\", */f: parse_BrtCellError\n  },\n  0x0004: {\n    /* n:\"BrtCellBool\", */f: parse_BrtCellBool\n  },\n  0x0005: {\n    /* n:\"BrtCellReal\", */f: parse_BrtCellReal\n  },\n  0x0006: {\n    /* n:\"BrtCellSt\", */f: parse_BrtCellSt\n  },\n  0x0007: {\n    /* n:\"BrtCellIsst\", */f: parse_BrtCellIsst\n  },\n  0x0008: {\n    /* n:\"BrtFmlaString\", */f: parse_BrtFmlaString\n  },\n  0x0009: {\n    /* n:\"BrtFmlaNum\", */f: parse_BrtFmlaNum\n  },\n  0x000A: {\n    /* n:\"BrtFmlaBool\", */f: parse_BrtFmlaBool\n  },\n  0x000B: {\n    /* n:\"BrtFmlaError\", */f: parse_BrtFmlaError\n  },\n  0x000C: {\n    /* n:\"BrtShortBlank\", */f: parse_BrtShortBlank\n  },\n  0x000D: {\n    /* n:\"BrtShortRk\", */f: parse_BrtShortRk\n  },\n  0x000E: {\n    /* n:\"BrtShortError\", */f: parse_BrtShortError\n  },\n  0x000F: {\n    /* n:\"BrtShortBool\", */f: parse_BrtShortBool\n  },\n  0x0010: {\n    /* n:\"BrtShortReal\", */f: parse_BrtShortReal\n  },\n  0x0011: {\n    /* n:\"BrtShortSt\", */f: parse_BrtShortSt\n  },\n  0x0012: {\n    /* n:\"BrtShortIsst\", */f: parse_BrtShortIsst\n  },\n  0x0013: {\n    /* n:\"BrtSSTItem\", */f: parse_RichStr\n  },\n  0x0014: {/* n:\"BrtPCDIMissing\" */},\n  0x0015: {/* n:\"BrtPCDINumber\" */},\n  0x0016: {/* n:\"BrtPCDIBoolean\" */},\n  0x0017: {/* n:\"BrtPCDIError\" */},\n  0x0018: {/* n:\"BrtPCDIString\" */},\n  0x0019: {/* n:\"BrtPCDIDatetime\" */},\n  0x001A: {/* n:\"BrtPCDIIndex\" */},\n  0x001B: {/* n:\"BrtPCDIAMissing\" */},\n  0x001C: {/* n:\"BrtPCDIANumber\" */},\n  0x001D: {/* n:\"BrtPCDIABoolean\" */},\n  0x001E: {/* n:\"BrtPCDIAError\" */},\n  0x001F: {/* n:\"BrtPCDIAString\" */},\n  0x0020: {/* n:\"BrtPCDIADatetime\" */},\n  0x0021: {/* n:\"BrtPCRRecord\" */},\n  0x0022: {/* n:\"BrtPCRRecordDt\" */},\n  0x0023: {\n    /* n:\"BrtFRTBegin\", */T: 1\n  },\n  0x0024: {\n    /* n:\"BrtFRTEnd\", */T: -1\n  },\n  0x0025: {\n    /* n:\"BrtACBegin\", */T: 1\n  },\n  0x0026: {\n    /* n:\"BrtACEnd\", */T: -1\n  },\n  0x0027: {\n    /* n:\"BrtName\", */f: parse_BrtName\n  },\n  0x0028: {/* n:\"BrtIndexRowBlock\" */},\n  0x002A: {/* n:\"BrtIndexBlock\" */},\n  0x002B: {\n    /* n:\"BrtFont\", */f: parse_BrtFont\n  },\n  0x002C: {\n    /* n:\"BrtFmt\", */f: parse_BrtFmt\n  },\n  0x002D: {\n    /* n:\"BrtFill\", */f: parse_BrtFill\n  },\n  0x002E: {\n    /* n:\"BrtBorder\", */f: parse_BrtBorder\n  },\n  0x002F: {\n    /* n:\"BrtXF\", */f: parse_BrtXF\n  },\n  0x0030: {/* n:\"BrtStyle\" */},\n  0x0031: {\n    /* n:\"BrtCellMeta\", */f: parse_Int32LE\n  },\n  0x0032: {/* n:\"BrtValueMeta\" */},\n  0x0033: {\n    /* n:\"BrtMdb\" */f: parse_BrtMdb\n  },\n  0x0034: {\n    /* n:\"BrtBeginFmd\", */T: 1\n  },\n  0x0035: {\n    /* n:\"BrtEndFmd\", */T: -1\n  },\n  0x0036: {\n    /* n:\"BrtBeginMdx\", */T: 1\n  },\n  0x0037: {\n    /* n:\"BrtEndMdx\", */T: -1\n  },\n  0x0038: {\n    /* n:\"BrtBeginMdxTuple\", */T: 1\n  },\n  0x0039: {\n    /* n:\"BrtEndMdxTuple\", */T: -1\n  },\n  0x003A: {/* n:\"BrtMdxMbrIstr\" */},\n  0x003B: {/* n:\"BrtStr\" */},\n  0x003C: {\n    /* n:\"BrtColInfo\", */f: parse_ColInfo\n  },\n  0x003E: {\n    /* n:\"BrtCellRString\", */f: parse_BrtCellRString\n  },\n  0x003F: {\n    /* n:\"BrtCalcChainItem$\", */f: parse_BrtCalcChainItem$\n  },\n  0x0040: {\n    /* n:\"BrtDVal\", */f: parse_BrtDVal\n  },\n  0x0041: {/* n:\"BrtSxvcellNum\" */},\n  0x0042: {/* n:\"BrtSxvcellStr\" */},\n  0x0043: {/* n:\"BrtSxvcellBool\" */},\n  0x0044: {/* n:\"BrtSxvcellErr\" */},\n  0x0045: {/* n:\"BrtSxvcellDate\" */},\n  0x0046: {/* n:\"BrtSxvcellNil\" */},\n  0x0080: {/* n:\"BrtFileVersion\" */},\n  0x0081: {\n    /* n:\"BrtBeginSheet\", */T: 1\n  },\n  0x0082: {\n    /* n:\"BrtEndSheet\", */T: -1\n  },\n  0x0083: {\n    /* n:\"BrtBeginBook\", */T: 1,\n    f: parsenoop,\n    p: 0\n  },\n  0x0084: {\n    /* n:\"BrtEndBook\", */T: -1\n  },\n  0x0085: {\n    /* n:\"BrtBeginWsViews\", */T: 1\n  },\n  0x0086: {\n    /* n:\"BrtEndWsViews\", */T: -1\n  },\n  0x0087: {\n    /* n:\"BrtBeginBookViews\", */T: 1\n  },\n  0x0088: {\n    /* n:\"BrtEndBookViews\", */T: -1\n  },\n  0x0089: {\n    /* n:\"BrtBeginWsView\", */T: 1,\n    f: parse_BrtBeginWsView\n  },\n  0x008A: {\n    /* n:\"BrtEndWsView\", */T: -1\n  },\n  0x008B: {\n    /* n:\"BrtBeginCsViews\", */T: 1\n  },\n  0x008C: {\n    /* n:\"BrtEndCsViews\", */T: -1\n  },\n  0x008D: {\n    /* n:\"BrtBeginCsView\", */T: 1\n  },\n  0x008E: {\n    /* n:\"BrtEndCsView\", */T: -1\n  },\n  0x008F: {\n    /* n:\"BrtBeginBundleShs\", */T: 1\n  },\n  0x0090: {\n    /* n:\"BrtEndBundleShs\", */T: -1\n  },\n  0x0091: {\n    /* n:\"BrtBeginSheetData\", */T: 1\n  },\n  0x0092: {\n    /* n:\"BrtEndSheetData\", */T: -1\n  },\n  0x0093: {\n    /* n:\"BrtWsProp\", */f: parse_BrtWsProp\n  },\n  0x0094: {\n    /* n:\"BrtWsDim\", */f: parse_BrtWsDim,\n    p: 16\n  },\n  0x0097: {\n    /* n:\"BrtPane\", */f: parse_BrtPane\n  },\n  0x0098: {/* n:\"BrtSel\" */},\n  0x0099: {\n    /* n:\"BrtWbProp\", */f: parse_BrtWbProp\n  },\n  0x009A: {/* n:\"BrtWbFactoid\" */},\n  0x009B: {/* n:\"BrtFileRecover\" */},\n  0x009C: {\n    /* n:\"BrtBundleSh\", */f: parse_BrtBundleSh\n  },\n  0x009D: {/* n:\"BrtCalcProp\" */},\n  0x009E: {/* n:\"BrtBookView\" */},\n  0x009F: {\n    /* n:\"BrtBeginSst\", */T: 1,\n    f: parse_BrtBeginSst\n  },\n  0x00A0: {\n    /* n:\"BrtEndSst\", */T: -1\n  },\n  0x00A1: {\n    /* n:\"BrtBeginAFilter\", */T: 1,\n    f: parse_UncheckedRfX\n  },\n  0x00A2: {\n    /* n:\"BrtEndAFilter\", */T: -1\n  },\n  0x00A3: {\n    /* n:\"BrtBeginFilterColumn\", */T: 1\n  },\n  0x00A4: {\n    /* n:\"BrtEndFilterColumn\", */T: -1\n  },\n  0x00A5: {\n    /* n:\"BrtBeginFilters\", */T: 1\n  },\n  0x00A6: {\n    /* n:\"BrtEndFilters\", */T: -1\n  },\n  0x00A7: {/* n:\"BrtFilter\" */},\n  0x00A8: {/* n:\"BrtColorFilter\" */},\n  0x00A9: {/* n:\"BrtIconFilter\" */},\n  0x00AA: {/* n:\"BrtTop10Filter\" */},\n  0x00AB: {/* n:\"BrtDynamicFilter\" */},\n  0x00AC: {\n    /* n:\"BrtBeginCustomFilters\", */T: 1\n  },\n  0x00AD: {\n    /* n:\"BrtEndCustomFilters\", */T: -1\n  },\n  0x00AE: {/* n:\"BrtCustomFilter\" */},\n  0x00AF: {/* n:\"BrtAFilterDateGroupItem\" */},\n  0x00B0: {\n    /* n:\"BrtMergeCell\", */f: parse_BrtMergeCell\n  },\n  0x00B1: {\n    /* n:\"BrtBeginMergeCells\", */T: 1\n  },\n  0x00B2: {\n    /* n:\"BrtEndMergeCells\", */T: -1\n  },\n  0x00B3: {\n    /* n:\"BrtBeginPivotCacheDef\", */T: 1\n  },\n  0x00B4: {\n    /* n:\"BrtEndPivotCacheDef\", */T: -1\n  },\n  0x00B5: {\n    /* n:\"BrtBeginPCDFields\", */T: 1\n  },\n  0x00B6: {\n    /* n:\"BrtEndPCDFields\", */T: -1\n  },\n  0x00B7: {\n    /* n:\"BrtBeginPCDField\", */T: 1\n  },\n  0x00B8: {\n    /* n:\"BrtEndPCDField\", */T: -1\n  },\n  0x00B9: {\n    /* n:\"BrtBeginPCDSource\", */T: 1\n  },\n  0x00BA: {\n    /* n:\"BrtEndPCDSource\", */T: -1\n  },\n  0x00BB: {\n    /* n:\"BrtBeginPCDSRange\", */T: 1\n  },\n  0x00BC: {\n    /* n:\"BrtEndPCDSRange\", */T: -1\n  },\n  0x00BD: {\n    /* n:\"BrtBeginPCDFAtbl\", */T: 1\n  },\n  0x00BE: {\n    /* n:\"BrtEndPCDFAtbl\", */T: -1\n  },\n  0x00BF: {\n    /* n:\"BrtBeginPCDIRun\", */T: 1\n  },\n  0x00C0: {\n    /* n:\"BrtEndPCDIRun\", */T: -1\n  },\n  0x00C1: {\n    /* n:\"BrtBeginPivotCacheRecords\", */T: 1\n  },\n  0x00C2: {\n    /* n:\"BrtEndPivotCacheRecords\", */T: -1\n  },\n  0x00C3: {\n    /* n:\"BrtBeginPCDHierarchies\", */T: 1\n  },\n  0x00C4: {\n    /* n:\"BrtEndPCDHierarchies\", */T: -1\n  },\n  0x00C5: {\n    /* n:\"BrtBeginPCDHierarchy\", */T: 1\n  },\n  0x00C6: {\n    /* n:\"BrtEndPCDHierarchy\", */T: -1\n  },\n  0x00C7: {\n    /* n:\"BrtBeginPCDHFieldsUsage\", */T: 1\n  },\n  0x00C8: {\n    /* n:\"BrtEndPCDHFieldsUsage\", */T: -1\n  },\n  0x00C9: {\n    /* n:\"BrtBeginExtConnection\", */T: 1\n  },\n  0x00CA: {\n    /* n:\"BrtEndExtConnection\", */T: -1\n  },\n  0x00CB: {\n    /* n:\"BrtBeginECDbProps\", */T: 1\n  },\n  0x00CC: {\n    /* n:\"BrtEndECDbProps\", */T: -1\n  },\n  0x00CD: {\n    /* n:\"BrtBeginECOlapProps\", */T: 1\n  },\n  0x00CE: {\n    /* n:\"BrtEndECOlapProps\", */T: -1\n  },\n  0x00CF: {\n    /* n:\"BrtBeginPCDSConsol\", */T: 1\n  },\n  0x00D0: {\n    /* n:\"BrtEndPCDSConsol\", */T: -1\n  },\n  0x00D1: {\n    /* n:\"BrtBeginPCDSCPages\", */T: 1\n  },\n  0x00D2: {\n    /* n:\"BrtEndPCDSCPages\", */T: -1\n  },\n  0x00D3: {\n    /* n:\"BrtBeginPCDSCPage\", */T: 1\n  },\n  0x00D4: {\n    /* n:\"BrtEndPCDSCPage\", */T: -1\n  },\n  0x00D5: {\n    /* n:\"BrtBeginPCDSCPItem\", */T: 1\n  },\n  0x00D6: {\n    /* n:\"BrtEndPCDSCPItem\", */T: -1\n  },\n  0x00D7: {\n    /* n:\"BrtBeginPCDSCSets\", */T: 1\n  },\n  0x00D8: {\n    /* n:\"BrtEndPCDSCSets\", */T: -1\n  },\n  0x00D9: {\n    /* n:\"BrtBeginPCDSCSet\", */T: 1\n  },\n  0x00DA: {\n    /* n:\"BrtEndPCDSCSet\", */T: -1\n  },\n  0x00DB: {\n    /* n:\"BrtBeginPCDFGroup\", */T: 1\n  },\n  0x00DC: {\n    /* n:\"BrtEndPCDFGroup\", */T: -1\n  },\n  0x00DD: {\n    /* n:\"BrtBeginPCDFGItems\", */T: 1\n  },\n  0x00DE: {\n    /* n:\"BrtEndPCDFGItems\", */T: -1\n  },\n  0x00DF: {\n    /* n:\"BrtBeginPCDFGRange\", */T: 1\n  },\n  0x00E0: {\n    /* n:\"BrtEndPCDFGRange\", */T: -1\n  },\n  0x00E1: {\n    /* n:\"BrtBeginPCDFGDiscrete\", */T: 1\n  },\n  0x00E2: {\n    /* n:\"BrtEndPCDFGDiscrete\", */T: -1\n  },\n  0x00E3: {\n    /* n:\"BrtBeginPCDSDTupleCache\", */T: 1\n  },\n  0x00E4: {\n    /* n:\"BrtEndPCDSDTupleCache\", */T: -1\n  },\n  0x00E5: {\n    /* n:\"BrtBeginPCDSDTCEntries\", */T: 1\n  },\n  0x00E6: {\n    /* n:\"BrtEndPCDSDTCEntries\", */T: -1\n  },\n  0x00E7: {\n    /* n:\"BrtBeginPCDSDTCEMembers\", */T: 1\n  },\n  0x00E8: {\n    /* n:\"BrtEndPCDSDTCEMembers\", */T: -1\n  },\n  0x00E9: {\n    /* n:\"BrtBeginPCDSDTCEMember\", */T: 1\n  },\n  0x00EA: {\n    /* n:\"BrtEndPCDSDTCEMember\", */T: -1\n  },\n  0x00EB: {\n    /* n:\"BrtBeginPCDSDTCQueries\", */T: 1\n  },\n  0x00EC: {\n    /* n:\"BrtEndPCDSDTCQueries\", */T: -1\n  },\n  0x00ED: {\n    /* n:\"BrtBeginPCDSDTCQuery\", */T: 1\n  },\n  0x00EE: {\n    /* n:\"BrtEndPCDSDTCQuery\", */T: -1\n  },\n  0x00EF: {\n    /* n:\"BrtBeginPCDSDTCSets\", */T: 1\n  },\n  0x00F0: {\n    /* n:\"BrtEndPCDSDTCSets\", */T: -1\n  },\n  0x00F1: {\n    /* n:\"BrtBeginPCDSDTCSet\", */T: 1\n  },\n  0x00F2: {\n    /* n:\"BrtEndPCDSDTCSet\", */T: -1\n  },\n  0x00F3: {\n    /* n:\"BrtBeginPCDCalcItems\", */T: 1\n  },\n  0x00F4: {\n    /* n:\"BrtEndPCDCalcItems\", */T: -1\n  },\n  0x00F5: {\n    /* n:\"BrtBeginPCDCalcItem\", */T: 1\n  },\n  0x00F6: {\n    /* n:\"BrtEndPCDCalcItem\", */T: -1\n  },\n  0x00F7: {\n    /* n:\"BrtBeginPRule\", */T: 1\n  },\n  0x00F8: {\n    /* n:\"BrtEndPRule\", */T: -1\n  },\n  0x00F9: {\n    /* n:\"BrtBeginPRFilters\", */T: 1\n  },\n  0x00FA: {\n    /* n:\"BrtEndPRFilters\", */T: -1\n  },\n  0x00FB: {\n    /* n:\"BrtBeginPRFilter\", */T: 1\n  },\n  0x00FC: {\n    /* n:\"BrtEndPRFilter\", */T: -1\n  },\n  0x00FD: {\n    /* n:\"BrtBeginPNames\", */T: 1\n  },\n  0x00FE: {\n    /* n:\"BrtEndPNames\", */T: -1\n  },\n  0x00FF: {\n    /* n:\"BrtBeginPName\", */T: 1\n  },\n  0x0100: {\n    /* n:\"BrtEndPName\", */T: -1\n  },\n  0x0101: {\n    /* n:\"BrtBeginPNPairs\", */T: 1\n  },\n  0x0102: {\n    /* n:\"BrtEndPNPairs\", */T: -1\n  },\n  0x0103: {\n    /* n:\"BrtBeginPNPair\", */T: 1\n  },\n  0x0104: {\n    /* n:\"BrtEndPNPair\", */T: -1\n  },\n  0x0105: {\n    /* n:\"BrtBeginECWebProps\", */T: 1\n  },\n  0x0106: {\n    /* n:\"BrtEndECWebProps\", */T: -1\n  },\n  0x0107: {\n    /* n:\"BrtBeginEcWpTables\", */T: 1\n  },\n  0x0108: {\n    /* n:\"BrtEndECWPTables\", */T: -1\n  },\n  0x0109: {\n    /* n:\"BrtBeginECParams\", */T: 1\n  },\n  0x010A: {\n    /* n:\"BrtEndECParams\", */T: -1\n  },\n  0x010B: {\n    /* n:\"BrtBeginECParam\", */T: 1\n  },\n  0x010C: {\n    /* n:\"BrtEndECParam\", */T: -1\n  },\n  0x010D: {\n    /* n:\"BrtBeginPCDKPIs\", */T: 1\n  },\n  0x010E: {\n    /* n:\"BrtEndPCDKPIs\", */T: -1\n  },\n  0x010F: {\n    /* n:\"BrtBeginPCDKPI\", */T: 1\n  },\n  0x0110: {\n    /* n:\"BrtEndPCDKPI\", */T: -1\n  },\n  0x0111: {\n    /* n:\"BrtBeginDims\", */T: 1\n  },\n  0x0112: {\n    /* n:\"BrtEndDims\", */T: -1\n  },\n  0x0113: {\n    /* n:\"BrtBeginDim\", */T: 1\n  },\n  0x0114: {\n    /* n:\"BrtEndDim\", */T: -1\n  },\n  0x0115: {/* n:\"BrtIndexPartEnd\" */},\n  0x0116: {\n    /* n:\"BrtBeginStyleSheet\", */T: 1\n  },\n  0x0117: {\n    /* n:\"BrtEndStyleSheet\", */T: -1\n  },\n  0x0118: {\n    /* n:\"BrtBeginSXView\", */T: 1\n  },\n  0x0119: {\n    /* n:\"BrtEndSXVI\", */T: -1\n  },\n  0x011A: {\n    /* n:\"BrtBeginSXVI\", */T: 1\n  },\n  0x011B: {\n    /* n:\"BrtBeginSXVIs\", */T: 1\n  },\n  0x011C: {\n    /* n:\"BrtEndSXVIs\", */T: -1\n  },\n  0x011D: {\n    /* n:\"BrtBeginSXVD\", */T: 1\n  },\n  0x011E: {\n    /* n:\"BrtEndSXVD\", */T: -1\n  },\n  0x011F: {\n    /* n:\"BrtBeginSXVDs\", */T: 1\n  },\n  0x0120: {\n    /* n:\"BrtEndSXVDs\", */T: -1\n  },\n  0x0121: {\n    /* n:\"BrtBeginSXPI\", */T: 1\n  },\n  0x0122: {\n    /* n:\"BrtEndSXPI\", */T: -1\n  },\n  0x0123: {\n    /* n:\"BrtBeginSXPIs\", */T: 1\n  },\n  0x0124: {\n    /* n:\"BrtEndSXPIs\", */T: -1\n  },\n  0x0125: {\n    /* n:\"BrtBeginSXDI\", */T: 1\n  },\n  0x0126: {\n    /* n:\"BrtEndSXDI\", */T: -1\n  },\n  0x0127: {\n    /* n:\"BrtBeginSXDIs\", */T: 1\n  },\n  0x0128: {\n    /* n:\"BrtEndSXDIs\", */T: -1\n  },\n  0x0129: {\n    /* n:\"BrtBeginSXLI\", */T: 1\n  },\n  0x012A: {\n    /* n:\"BrtEndSXLI\", */T: -1\n  },\n  0x012B: {\n    /* n:\"BrtBeginSXLIRws\", */T: 1\n  },\n  0x012C: {\n    /* n:\"BrtEndSXLIRws\", */T: -1\n  },\n  0x012D: {\n    /* n:\"BrtBeginSXLICols\", */T: 1\n  },\n  0x012E: {\n    /* n:\"BrtEndSXLICols\", */T: -1\n  },\n  0x012F: {\n    /* n:\"BrtBeginSXFormat\", */T: 1\n  },\n  0x0130: {\n    /* n:\"BrtEndSXFormat\", */T: -1\n  },\n  0x0131: {\n    /* n:\"BrtBeginSXFormats\", */T: 1\n  },\n  0x0132: {\n    /* n:\"BrtEndSxFormats\", */T: -1\n  },\n  0x0133: {\n    /* n:\"BrtBeginSxSelect\", */T: 1\n  },\n  0x0134: {\n    /* n:\"BrtEndSxSelect\", */T: -1\n  },\n  0x0135: {\n    /* n:\"BrtBeginISXVDRws\", */T: 1\n  },\n  0x0136: {\n    /* n:\"BrtEndISXVDRws\", */T: -1\n  },\n  0x0137: {\n    /* n:\"BrtBeginISXVDCols\", */T: 1\n  },\n  0x0138: {\n    /* n:\"BrtEndISXVDCols\", */T: -1\n  },\n  0x0139: {\n    /* n:\"BrtEndSXLocation\", */T: -1\n  },\n  0x013A: {\n    /* n:\"BrtBeginSXLocation\", */T: 1\n  },\n  0x013B: {\n    /* n:\"BrtEndSXView\", */T: -1\n  },\n  0x013C: {\n    /* n:\"BrtBeginSXTHs\", */T: 1\n  },\n  0x013D: {\n    /* n:\"BrtEndSXTHs\", */T: -1\n  },\n  0x013E: {\n    /* n:\"BrtBeginSXTH\", */T: 1\n  },\n  0x013F: {\n    /* n:\"BrtEndSXTH\", */T: -1\n  },\n  0x0140: {\n    /* n:\"BrtBeginISXTHRws\", */T: 1\n  },\n  0x0141: {\n    /* n:\"BrtEndISXTHRws\", */T: -1\n  },\n  0x0142: {\n    /* n:\"BrtBeginISXTHCols\", */T: 1\n  },\n  0x0143: {\n    /* n:\"BrtEndISXTHCols\", */T: -1\n  },\n  0x0144: {\n    /* n:\"BrtBeginSXTDMPS\", */T: 1\n  },\n  0x0145: {\n    /* n:\"BrtEndSXTDMPs\", */T: -1\n  },\n  0x0146: {\n    /* n:\"BrtBeginSXTDMP\", */T: 1\n  },\n  0x0147: {\n    /* n:\"BrtEndSXTDMP\", */T: -1\n  },\n  0x0148: {\n    /* n:\"BrtBeginSXTHItems\", */T: 1\n  },\n  0x0149: {\n    /* n:\"BrtEndSXTHItems\", */T: -1\n  },\n  0x014A: {\n    /* n:\"BrtBeginSXTHItem\", */T: 1\n  },\n  0x014B: {\n    /* n:\"BrtEndSXTHItem\", */T: -1\n  },\n  0x014C: {\n    /* n:\"BrtBeginMetadata\", */T: 1\n  },\n  0x014D: {\n    /* n:\"BrtEndMetadata\", */T: -1\n  },\n  0x014E: {\n    /* n:\"BrtBeginEsmdtinfo\", */T: 1\n  },\n  0x014F: {\n    /* n:\"BrtMdtinfo\", */f: parse_BrtMdtinfo\n  },\n  0x0150: {\n    /* n:\"BrtEndEsmdtinfo\", */T: -1\n  },\n  0x0151: {\n    /* n:\"BrtBeginEsmdb\", */f: parse_BrtBeginEsmdb,\n    T: 1\n  },\n  0x0152: {\n    /* n:\"BrtEndEsmdb\", */T: -1\n  },\n  0x0153: {\n    /* n:\"BrtBeginEsfmd\", */T: 1\n  },\n  0x0154: {\n    /* n:\"BrtEndEsfmd\", */T: -1\n  },\n  0x0155: {\n    /* n:\"BrtBeginSingleCells\", */T: 1\n  },\n  0x0156: {\n    /* n:\"BrtEndSingleCells\", */T: -1\n  },\n  0x0157: {\n    /* n:\"BrtBeginList\", */T: 1\n  },\n  0x0158: {\n    /* n:\"BrtEndList\", */T: -1\n  },\n  0x0159: {\n    /* n:\"BrtBeginListCols\", */T: 1\n  },\n  0x015A: {\n    /* n:\"BrtEndListCols\", */T: -1\n  },\n  0x015B: {\n    /* n:\"BrtBeginListCol\", */T: 1\n  },\n  0x015C: {\n    /* n:\"BrtEndListCol\", */T: -1\n  },\n  0x015D: {\n    /* n:\"BrtBeginListXmlCPr\", */T: 1\n  },\n  0x015E: {\n    /* n:\"BrtEndListXmlCPr\", */T: -1\n  },\n  0x015F: {/* n:\"BrtListCCFmla\" */},\n  0x0160: {/* n:\"BrtListTrFmla\" */},\n  0x0161: {\n    /* n:\"BrtBeginExternals\", */T: 1\n  },\n  0x0162: {\n    /* n:\"BrtEndExternals\", */T: -1\n  },\n  0x0163: {\n    /* n:\"BrtSupBookSrc\", */f: parse_RelID\n  },\n  0x0165: {/* n:\"BrtSupSelf\" */},\n  0x0166: {/* n:\"BrtSupSame\" */},\n  0x0167: {/* n:\"BrtSupTabs\" */},\n  0x0168: {\n    /* n:\"BrtBeginSupBook\", */T: 1\n  },\n  0x0169: {/* n:\"BrtPlaceholderName\" */},\n  0x016A: {\n    /* n:\"BrtExternSheet\", */f: parse_ExternSheet\n  },\n  0x016B: {/* n:\"BrtExternTableStart\" */},\n  0x016C: {/* n:\"BrtExternTableEnd\" */},\n  0x016E: {/* n:\"BrtExternRowHdr\" */},\n  0x016F: {/* n:\"BrtExternCellBlank\" */},\n  0x0170: {/* n:\"BrtExternCellReal\" */},\n  0x0171: {/* n:\"BrtExternCellBool\" */},\n  0x0172: {/* n:\"BrtExternCellError\" */},\n  0x0173: {/* n:\"BrtExternCellString\" */},\n  0x0174: {\n    /* n:\"BrtBeginEsmdx\", */T: 1\n  },\n  0x0175: {\n    /* n:\"BrtEndEsmdx\", */T: -1\n  },\n  0x0176: {\n    /* n:\"BrtBeginMdxSet\", */T: 1\n  },\n  0x0177: {\n    /* n:\"BrtEndMdxSet\", */T: -1\n  },\n  0x0178: {\n    /* n:\"BrtBeginMdxMbrProp\", */T: 1\n  },\n  0x0179: {\n    /* n:\"BrtEndMdxMbrProp\", */T: -1\n  },\n  0x017A: {\n    /* n:\"BrtBeginMdxKPI\", */T: 1\n  },\n  0x017B: {\n    /* n:\"BrtEndMdxKPI\", */T: -1\n  },\n  0x017C: {\n    /* n:\"BrtBeginEsstr\", */T: 1\n  },\n  0x017D: {\n    /* n:\"BrtEndEsstr\", */T: -1\n  },\n  0x017E: {\n    /* n:\"BrtBeginPRFItem\", */T: 1\n  },\n  0x017F: {\n    /* n:\"BrtEndPRFItem\", */T: -1\n  },\n  0x0180: {\n    /* n:\"BrtBeginPivotCacheIDs\", */T: 1\n  },\n  0x0181: {\n    /* n:\"BrtEndPivotCacheIDs\", */T: -1\n  },\n  0x0182: {\n    /* n:\"BrtBeginPivotCacheID\", */T: 1\n  },\n  0x0183: {\n    /* n:\"BrtEndPivotCacheID\", */T: -1\n  },\n  0x0184: {\n    /* n:\"BrtBeginISXVIs\", */T: 1\n  },\n  0x0185: {\n    /* n:\"BrtEndISXVIs\", */T: -1\n  },\n  0x0186: {\n    /* n:\"BrtBeginColInfos\", */T: 1\n  },\n  0x0187: {\n    /* n:\"BrtEndColInfos\", */T: -1\n  },\n  0x0188: {\n    /* n:\"BrtBeginRwBrk\", */T: 1\n  },\n  0x0189: {\n    /* n:\"BrtEndRwBrk\", */T: -1\n  },\n  0x018A: {\n    /* n:\"BrtBeginColBrk\", */T: 1\n  },\n  0x018B: {\n    /* n:\"BrtEndColBrk\", */T: -1\n  },\n  0x018C: {/* n:\"BrtBrk\" */},\n  0x018D: {/* n:\"BrtUserBookView\" */},\n  0x018E: {/* n:\"BrtInfo\" */},\n  0x018F: {/* n:\"BrtCUsr\" */},\n  0x0190: {/* n:\"BrtUsr\" */},\n  0x0191: {\n    /* n:\"BrtBeginUsers\", */T: 1\n  },\n  0x0193: {/* n:\"BrtEOF\" */},\n  0x0194: {/* n:\"BrtUCR\" */},\n  0x0195: {/* n:\"BrtRRInsDel\" */},\n  0x0196: {/* n:\"BrtRREndInsDel\" */},\n  0x0197: {/* n:\"BrtRRMove\" */},\n  0x0198: {/* n:\"BrtRREndMove\" */},\n  0x0199: {/* n:\"BrtRRChgCell\" */},\n  0x019A: {/* n:\"BrtRREndChgCell\" */},\n  0x019B: {/* n:\"BrtRRHeader\" */},\n  0x019C: {/* n:\"BrtRRUserView\" */},\n  0x019D: {/* n:\"BrtRRRenSheet\" */},\n  0x019E: {/* n:\"BrtRRInsertSh\" */},\n  0x019F: {/* n:\"BrtRRDefName\" */},\n  0x01A0: {/* n:\"BrtRRNote\" */},\n  0x01A1: {/* n:\"BrtRRConflict\" */},\n  0x01A2: {/* n:\"BrtRRTQSIF\" */},\n  0x01A3: {/* n:\"BrtRRFormat\" */},\n  0x01A4: {/* n:\"BrtRREndFormat\" */},\n  0x01A5: {/* n:\"BrtRRAutoFmt\" */},\n  0x01A6: {\n    /* n:\"BrtBeginUserShViews\", */T: 1\n  },\n  0x01A7: {\n    /* n:\"BrtBeginUserShView\", */T: 1\n  },\n  0x01A8: {\n    /* n:\"BrtEndUserShView\", */T: -1\n  },\n  0x01A9: {\n    /* n:\"BrtEndUserShViews\", */T: -1\n  },\n  0x01AA: {\n    /* n:\"BrtArrFmla\", */f: parse_BrtArrFmla\n  },\n  0x01AB: {\n    /* n:\"BrtShrFmla\", */f: parse_BrtShrFmla\n  },\n  0x01AC: {/* n:\"BrtTable\" */},\n  0x01AD: {\n    /* n:\"BrtBeginExtConnections\", */T: 1\n  },\n  0x01AE: {\n    /* n:\"BrtEndExtConnections\", */T: -1\n  },\n  0x01AF: {\n    /* n:\"BrtBeginPCDCalcMems\", */T: 1\n  },\n  0x01B0: {\n    /* n:\"BrtEndPCDCalcMems\", */T: -1\n  },\n  0x01B1: {\n    /* n:\"BrtBeginPCDCalcMem\", */T: 1\n  },\n  0x01B2: {\n    /* n:\"BrtEndPCDCalcMem\", */T: -1\n  },\n  0x01B3: {\n    /* n:\"BrtBeginPCDHGLevels\", */T: 1\n  },\n  0x01B4: {\n    /* n:\"BrtEndPCDHGLevels\", */T: -1\n  },\n  0x01B5: {\n    /* n:\"BrtBeginPCDHGLevel\", */T: 1\n  },\n  0x01B6: {\n    /* n:\"BrtEndPCDHGLevel\", */T: -1\n  },\n  0x01B7: {\n    /* n:\"BrtBeginPCDHGLGroups\", */T: 1\n  },\n  0x01B8: {\n    /* n:\"BrtEndPCDHGLGroups\", */T: -1\n  },\n  0x01B9: {\n    /* n:\"BrtBeginPCDHGLGroup\", */T: 1\n  },\n  0x01BA: {\n    /* n:\"BrtEndPCDHGLGroup\", */T: -1\n  },\n  0x01BB: {\n    /* n:\"BrtBeginPCDHGLGMembers\", */T: 1\n  },\n  0x01BC: {\n    /* n:\"BrtEndPCDHGLGMembers\", */T: -1\n  },\n  0x01BD: {\n    /* n:\"BrtBeginPCDHGLGMember\", */T: 1\n  },\n  0x01BE: {\n    /* n:\"BrtEndPCDHGLGMember\", */T: -1\n  },\n  0x01BF: {\n    /* n:\"BrtBeginQSI\", */T: 1\n  },\n  0x01C0: {\n    /* n:\"BrtEndQSI\", */T: -1\n  },\n  0x01C1: {\n    /* n:\"BrtBeginQSIR\", */T: 1\n  },\n  0x01C2: {\n    /* n:\"BrtEndQSIR\", */T: -1\n  },\n  0x01C3: {\n    /* n:\"BrtBeginDeletedNames\", */T: 1\n  },\n  0x01C4: {\n    /* n:\"BrtEndDeletedNames\", */T: -1\n  },\n  0x01C5: {\n    /* n:\"BrtBeginDeletedName\", */T: 1\n  },\n  0x01C6: {\n    /* n:\"BrtEndDeletedName\", */T: -1\n  },\n  0x01C7: {\n    /* n:\"BrtBeginQSIFs\", */T: 1\n  },\n  0x01C8: {\n    /* n:\"BrtEndQSIFs\", */T: -1\n  },\n  0x01C9: {\n    /* n:\"BrtBeginQSIF\", */T: 1\n  },\n  0x01CA: {\n    /* n:\"BrtEndQSIF\", */T: -1\n  },\n  0x01CB: {\n    /* n:\"BrtBeginAutoSortScope\", */T: 1\n  },\n  0x01CC: {\n    /* n:\"BrtEndAutoSortScope\", */T: -1\n  },\n  0x01CD: {\n    /* n:\"BrtBeginConditionalFormatting\", */T: 1\n  },\n  0x01CE: {\n    /* n:\"BrtEndConditionalFormatting\", */T: -1\n  },\n  0x01CF: {\n    /* n:\"BrtBeginCFRule\", */T: 1\n  },\n  0x01D0: {\n    /* n:\"BrtEndCFRule\", */T: -1\n  },\n  0x01D1: {\n    /* n:\"BrtBeginIconSet\", */T: 1\n  },\n  0x01D2: {\n    /* n:\"BrtEndIconSet\", */T: -1\n  },\n  0x01D3: {\n    /* n:\"BrtBeginDatabar\", */T: 1\n  },\n  0x01D4: {\n    /* n:\"BrtEndDatabar\", */T: -1\n  },\n  0x01D5: {\n    /* n:\"BrtBeginColorScale\", */T: 1\n  },\n  0x01D6: {\n    /* n:\"BrtEndColorScale\", */T: -1\n  },\n  0x01D7: {/* n:\"BrtCFVO\" */},\n  0x01D8: {/* n:\"BrtExternValueMeta\" */},\n  0x01D9: {\n    /* n:\"BrtBeginColorPalette\", */T: 1\n  },\n  0x01DA: {\n    /* n:\"BrtEndColorPalette\", */T: -1\n  },\n  0x01DB: {/* n:\"BrtIndexedColor\" */},\n  0x01DC: {\n    /* n:\"BrtMargins\", */f: parse_BrtMargins\n  },\n  0x01DD: {/* n:\"BrtPrintOptions\" */},\n  0x01DE: {/* n:\"BrtPageSetup\" */},\n  0x01DF: {\n    /* n:\"BrtBeginHeaderFooter\", */T: 1\n  },\n  0x01E0: {\n    /* n:\"BrtEndHeaderFooter\", */T: -1\n  },\n  0x01E1: {\n    /* n:\"BrtBeginSXCrtFormat\", */T: 1\n  },\n  0x01E2: {\n    /* n:\"BrtEndSXCrtFormat\", */T: -1\n  },\n  0x01E3: {\n    /* n:\"BrtBeginSXCrtFormats\", */T: 1\n  },\n  0x01E4: {\n    /* n:\"BrtEndSXCrtFormats\", */T: -1\n  },\n  0x01E5: {\n    /* n:\"BrtWsFmtInfo\", */f: parse_BrtWsFmtInfo\n  },\n  0x01E6: {\n    /* n:\"BrtBeginMgs\", */T: 1\n  },\n  0x01E7: {\n    /* n:\"BrtEndMGs\", */T: -1\n  },\n  0x01E8: {\n    /* n:\"BrtBeginMGMaps\", */T: 1\n  },\n  0x01E9: {\n    /* n:\"BrtEndMGMaps\", */T: -1\n  },\n  0x01EA: {\n    /* n:\"BrtBeginMG\", */T: 1\n  },\n  0x01EB: {\n    /* n:\"BrtEndMG\", */T: -1\n  },\n  0x01EC: {\n    /* n:\"BrtBeginMap\", */T: 1\n  },\n  0x01ED: {\n    /* n:\"BrtEndMap\", */T: -1\n  },\n  0x01EE: {\n    /* n:\"BrtHLink\", */f: parse_BrtHLink\n  },\n  0x01EF: {\n    /* n:\"BrtBeginDCon\", */T: 1\n  },\n  0x01F0: {\n    /* n:\"BrtEndDCon\", */T: -1\n  },\n  0x01F1: {\n    /* n:\"BrtBeginDRefs\", */T: 1\n  },\n  0x01F2: {\n    /* n:\"BrtEndDRefs\", */T: -1\n  },\n  0x01F3: {/* n:\"BrtDRef\" */},\n  0x01F4: {\n    /* n:\"BrtBeginScenMan\", */T: 1\n  },\n  0x01F5: {\n    /* n:\"BrtEndScenMan\", */T: -1\n  },\n  0x01F6: {\n    /* n:\"BrtBeginSct\", */T: 1\n  },\n  0x01F7: {\n    /* n:\"BrtEndSct\", */T: -1\n  },\n  0x01F8: {/* n:\"BrtSlc\" */},\n  0x01F9: {\n    /* n:\"BrtBeginDXFs\", */T: 1\n  },\n  0x01FA: {\n    /* n:\"BrtEndDXFs\", */T: -1\n  },\n  0x01FB: {/* n:\"BrtDXF\" */},\n  0x01FC: {\n    /* n:\"BrtBeginTableStyles\", */T: 1\n  },\n  0x01FD: {\n    /* n:\"BrtEndTableStyles\", */T: -1\n  },\n  0x01FE: {\n    /* n:\"BrtBeginTableStyle\", */T: 1\n  },\n  0x01FF: {\n    /* n:\"BrtEndTableStyle\", */T: -1\n  },\n  0x0200: {/* n:\"BrtTableStyleElement\" */},\n  0x0201: {/* n:\"BrtTableStyleClient\" */},\n  0x0202: {\n    /* n:\"BrtBeginVolDeps\", */T: 1\n  },\n  0x0203: {\n    /* n:\"BrtEndVolDeps\", */T: -1\n  },\n  0x0204: {\n    /* n:\"BrtBeginVolType\", */T: 1\n  },\n  0x0205: {\n    /* n:\"BrtEndVolType\", */T: -1\n  },\n  0x0206: {\n    /* n:\"BrtBeginVolMain\", */T: 1\n  },\n  0x0207: {\n    /* n:\"BrtEndVolMain\", */T: -1\n  },\n  0x0208: {\n    /* n:\"BrtBeginVolTopic\", */T: 1\n  },\n  0x0209: {\n    /* n:\"BrtEndVolTopic\", */T: -1\n  },\n  0x020A: {/* n:\"BrtVolSubtopic\" */},\n  0x020B: {/* n:\"BrtVolRef\" */},\n  0x020C: {/* n:\"BrtVolNum\" */},\n  0x020D: {/* n:\"BrtVolErr\" */},\n  0x020E: {/* n:\"BrtVolStr\" */},\n  0x020F: {/* n:\"BrtVolBool\" */},\n  0x0210: {\n    /* n:\"BrtBeginCalcChain$\", */T: 1\n  },\n  0x0211: {\n    /* n:\"BrtEndCalcChain$\", */T: -1\n  },\n  0x0212: {\n    /* n:\"BrtBeginSortState\", */T: 1\n  },\n  0x0213: {\n    /* n:\"BrtEndSortState\", */T: -1\n  },\n  0x0214: {\n    /* n:\"BrtBeginSortCond\", */T: 1\n  },\n  0x0215: {\n    /* n:\"BrtEndSortCond\", */T: -1\n  },\n  0x0216: {/* n:\"BrtBookProtection\" */},\n  0x0217: {/* n:\"BrtSheetProtection\" */},\n  0x0218: {/* n:\"BrtRangeProtection\" */},\n  0x0219: {/* n:\"BrtPhoneticInfo\" */},\n  0x021A: {\n    /* n:\"BrtBeginECTxtWiz\", */T: 1\n  },\n  0x021B: {\n    /* n:\"BrtEndECTxtWiz\", */T: -1\n  },\n  0x021C: {\n    /* n:\"BrtBeginECTWFldInfoLst\", */T: 1\n  },\n  0x021D: {\n    /* n:\"BrtEndECTWFldInfoLst\", */T: -1\n  },\n  0x021E: {\n    /* n:\"BrtBeginECTwFldInfo\", */T: 1\n  },\n  0x0224: {/* n:\"BrtFileSharing\" */},\n  0x0225: {/* n:\"BrtOleSize\" */},\n  0x0226: {\n    /* n:\"BrtDrawing\", */f: parse_RelID\n  },\n  0x0227: {\n    /* n:\"BrtLegacyDrawing\", */f: parse_XLNullableWideString\n  },\n  0x0228: {/* n:\"BrtLegacyDrawingHF\" */},\n  0x0229: {/* n:\"BrtWebOpt\" */},\n  0x022A: {\n    /* n:\"BrtBeginWebPubItems\", */T: 1\n  },\n  0x022B: {\n    /* n:\"BrtEndWebPubItems\", */T: -1\n  },\n  0x022C: {\n    /* n:\"BrtBeginWebPubItem\", */T: 1\n  },\n  0x022D: {\n    /* n:\"BrtEndWebPubItem\", */T: -1\n  },\n  0x022E: {\n    /* n:\"BrtBeginSXCondFmt\", */T: 1\n  },\n  0x022F: {\n    /* n:\"BrtEndSXCondFmt\", */T: -1\n  },\n  0x0230: {\n    /* n:\"BrtBeginSXCondFmts\", */T: 1\n  },\n  0x0231: {\n    /* n:\"BrtEndSXCondFmts\", */T: -1\n  },\n  0x0232: {/* n:\"BrtBkHim\" */},\n  0x0234: {/* n:\"BrtColor\" */},\n  0x0235: {\n    /* n:\"BrtBeginIndexedColors\", */T: 1\n  },\n  0x0236: {\n    /* n:\"BrtEndIndexedColors\", */T: -1\n  },\n  0x0239: {\n    /* n:\"BrtBeginMRUColors\", */T: 1\n  },\n  0x023A: {\n    /* n:\"BrtEndMRUColors\", */T: -1\n  },\n  0x023C: {/* n:\"BrtMRUColor\" */},\n  0x023D: {\n    /* n:\"BrtBeginDVals\", */T: 1\n  },\n  0x023E: {\n    /* n:\"BrtEndDVals\", */T: -1\n  },\n  0x0241: {/* n:\"BrtSupNameStart\" */},\n  0x0242: {/* n:\"BrtSupNameValueStart\" */},\n  0x0243: {/* n:\"BrtSupNameValueEnd\" */},\n  0x0244: {/* n:\"BrtSupNameNum\" */},\n  0x0245: {/* n:\"BrtSupNameErr\" */},\n  0x0246: {/* n:\"BrtSupNameSt\" */},\n  0x0247: {/* n:\"BrtSupNameNil\" */},\n  0x0248: {/* n:\"BrtSupNameBool\" */},\n  0x0249: {/* n:\"BrtSupNameFmla\" */},\n  0x024A: {/* n:\"BrtSupNameBits\" */},\n  0x024B: {/* n:\"BrtSupNameEnd\" */},\n  0x024C: {\n    /* n:\"BrtEndSupBook\", */T: -1\n  },\n  0x024D: {/* n:\"BrtCellSmartTagProperty\" */},\n  0x024E: {\n    /* n:\"BrtBeginCellSmartTag\", */T: 1\n  },\n  0x024F: {\n    /* n:\"BrtEndCellSmartTag\", */T: -1\n  },\n  0x0250: {\n    /* n:\"BrtBeginCellSmartTags\", */T: 1\n  },\n  0x0251: {\n    /* n:\"BrtEndCellSmartTags\", */T: -1\n  },\n  0x0252: {\n    /* n:\"BrtBeginSmartTags\", */T: 1\n  },\n  0x0253: {\n    /* n:\"BrtEndSmartTags\", */T: -1\n  },\n  0x0254: {/* n:\"BrtSmartTagType\" */},\n  0x0255: {\n    /* n:\"BrtBeginSmartTagTypes\", */T: 1\n  },\n  0x0256: {\n    /* n:\"BrtEndSmartTagTypes\", */T: -1\n  },\n  0x0257: {\n    /* n:\"BrtBeginSXFilters\", */T: 1\n  },\n  0x0258: {\n    /* n:\"BrtEndSXFilters\", */T: -1\n  },\n  0x0259: {\n    /* n:\"BrtBeginSXFILTER\", */T: 1\n  },\n  0x025A: {\n    /* n:\"BrtEndSXFilter\", */T: -1\n  },\n  0x025B: {\n    /* n:\"BrtBeginFills\", */T: 1\n  },\n  0x025C: {\n    /* n:\"BrtEndFills\", */T: -1\n  },\n  0x025D: {\n    /* n:\"BrtBeginCellWatches\", */T: 1\n  },\n  0x025E: {\n    /* n:\"BrtEndCellWatches\", */T: -1\n  },\n  0x025F: {/* n:\"BrtCellWatch\" */},\n  0x0260: {\n    /* n:\"BrtBeginCRErrs\", */T: 1\n  },\n  0x0261: {\n    /* n:\"BrtEndCRErrs\", */T: -1\n  },\n  0x0262: {/* n:\"BrtCrashRecErr\" */},\n  0x0263: {\n    /* n:\"BrtBeginFonts\", */T: 1\n  },\n  0x0264: {\n    /* n:\"BrtEndFonts\", */T: -1\n  },\n  0x0265: {\n    /* n:\"BrtBeginBorders\", */T: 1\n  },\n  0x0266: {\n    /* n:\"BrtEndBorders\", */T: -1\n  },\n  0x0267: {\n    /* n:\"BrtBeginFmts\", */T: 1\n  },\n  0x0268: {\n    /* n:\"BrtEndFmts\", */T: -1\n  },\n  0x0269: {\n    /* n:\"BrtBeginCellXFs\", */T: 1\n  },\n  0x026A: {\n    /* n:\"BrtEndCellXFs\", */T: -1\n  },\n  0x026B: {\n    /* n:\"BrtBeginStyles\", */T: 1\n  },\n  0x026C: {\n    /* n:\"BrtEndStyles\", */T: -1\n  },\n  0x0271: {/* n:\"BrtBigName\" */},\n  0x0272: {\n    /* n:\"BrtBeginCellStyleXFs\", */T: 1\n  },\n  0x0273: {\n    /* n:\"BrtEndCellStyleXFs\", */T: -1\n  },\n  0x0274: {\n    /* n:\"BrtBeginComments\", */T: 1\n  },\n  0x0275: {\n    /* n:\"BrtEndComments\", */T: -1\n  },\n  0x0276: {\n    /* n:\"BrtBeginCommentAuthors\", */T: 1\n  },\n  0x0277: {\n    /* n:\"BrtEndCommentAuthors\", */T: -1\n  },\n  0x0278: {\n    /* n:\"BrtCommentAuthor\", */f: parse_BrtCommentAuthor\n  },\n  0x0279: {\n    /* n:\"BrtBeginCommentList\", */T: 1\n  },\n  0x027A: {\n    /* n:\"BrtEndCommentList\", */T: -1\n  },\n  0x027B: {\n    /* n:\"BrtBeginComment\", */T: 1,\n    f: parse_BrtBeginComment\n  },\n  0x027C: {\n    /* n:\"BrtEndComment\", */T: -1\n  },\n  0x027D: {\n    /* n:\"BrtCommentText\", */f: parse_BrtCommentText\n  },\n  0x027E: {\n    /* n:\"BrtBeginOleObjects\", */T: 1\n  },\n  0x027F: {/* n:\"BrtOleObject\" */},\n  0x0280: {\n    /* n:\"BrtEndOleObjects\", */T: -1\n  },\n  0x0281: {\n    /* n:\"BrtBeginSxrules\", */T: 1\n  },\n  0x0282: {\n    /* n:\"BrtEndSxRules\", */T: -1\n  },\n  0x0283: {\n    /* n:\"BrtBeginActiveXControls\", */T: 1\n  },\n  0x0284: {/* n:\"BrtActiveX\" */},\n  0x0285: {\n    /* n:\"BrtEndActiveXControls\", */T: -1\n  },\n  0x0286: {\n    /* n:\"BrtBeginPCDSDTCEMembersSortBy\", */T: 1\n  },\n  0x0288: {\n    /* n:\"BrtBeginCellIgnoreECs\", */T: 1\n  },\n  0x0289: {/* n:\"BrtCellIgnoreEC\" */},\n  0x028A: {\n    /* n:\"BrtEndCellIgnoreECs\", */T: -1\n  },\n  0x028B: {\n    /* n:\"BrtCsProp\", */f: parse_BrtCsProp\n  },\n  0x028C: {/* n:\"BrtCsPageSetup\" */},\n  0x028D: {\n    /* n:\"BrtBeginUserCsViews\", */T: 1\n  },\n  0x028E: {\n    /* n:\"BrtEndUserCsViews\", */T: -1\n  },\n  0x028F: {\n    /* n:\"BrtBeginUserCsView\", */T: 1\n  },\n  0x0290: {\n    /* n:\"BrtEndUserCsView\", */T: -1\n  },\n  0x0291: {\n    /* n:\"BrtBeginPcdSFCIEntries\", */T: 1\n  },\n  0x0292: {\n    /* n:\"BrtEndPCDSFCIEntries\", */T: -1\n  },\n  0x0293: {/* n:\"BrtPCDSFCIEntry\" */},\n  0x0294: {\n    /* n:\"BrtBeginListParts\", */T: 1\n  },\n  0x0295: {/* n:\"BrtListPart\" */},\n  0x0296: {\n    /* n:\"BrtEndListParts\", */T: -1\n  },\n  0x0297: {/* n:\"BrtSheetCalcProp\" */},\n  0x0298: {\n    /* n:\"BrtBeginFnGroup\", */T: 1\n  },\n  0x0299: {/* n:\"BrtFnGroup\" */},\n  0x029A: {\n    /* n:\"BrtEndFnGroup\", */T: -1\n  },\n  0x029B: {/* n:\"BrtSupAddin\" */},\n  0x029C: {/* n:\"BrtSXTDMPOrder\" */},\n  0x029D: {/* n:\"BrtCsProtection\" */},\n  0x029F: {\n    /* n:\"BrtBeginWsSortMap\", */T: 1\n  },\n  0x02A0: {\n    /* n:\"BrtEndWsSortMap\", */T: -1\n  },\n  0x02A1: {\n    /* n:\"BrtBeginRRSort\", */T: 1\n  },\n  0x02A2: {\n    /* n:\"BrtEndRRSort\", */T: -1\n  },\n  0x02A3: {/* n:\"BrtRRSortItem\" */},\n  0x02A4: {/* n:\"BrtFileSharingIso\" */},\n  0x02A5: {/* n:\"BrtBookProtectionIso\" */},\n  0x02A6: {/* n:\"BrtSheetProtectionIso\" */},\n  0x02A7: {/* n:\"BrtCsProtectionIso\" */},\n  0x02A8: {/* n:\"BrtRangeProtectionIso\" */},\n  0x02A9: {/* n:\"BrtDValList\" */},\n  0x0400: {/* n:\"BrtRwDescent\" */},\n  0x0401: {/* n:\"BrtKnownFonts\" */},\n  0x0402: {\n    /* n:\"BrtBeginSXTupleSet\", */T: 1\n  },\n  0x0403: {\n    /* n:\"BrtEndSXTupleSet\", */T: -1\n  },\n  0x0404: {\n    /* n:\"BrtBeginSXTupleSetHeader\", */T: 1\n  },\n  0x0405: {\n    /* n:\"BrtEndSXTupleSetHeader\", */T: -1\n  },\n  0x0406: {/* n:\"BrtSXTupleSetHeaderItem\" */},\n  0x0407: {\n    /* n:\"BrtBeginSXTupleSetData\", */T: 1\n  },\n  0x0408: {\n    /* n:\"BrtEndSXTupleSetData\", */T: -1\n  },\n  0x0409: {\n    /* n:\"BrtBeginSXTupleSetRow\", */T: 1\n  },\n  0x040A: {\n    /* n:\"BrtEndSXTupleSetRow\", */T: -1\n  },\n  0x040B: {/* n:\"BrtSXTupleSetRowItem\" */},\n  0x040C: {/* n:\"BrtNameExt\" */},\n  0x040D: {/* n:\"BrtPCDH14\" */},\n  0x040E: {\n    /* n:\"BrtBeginPCDCalcMem14\", */T: 1\n  },\n  0x040F: {\n    /* n:\"BrtEndPCDCalcMem14\", */T: -1\n  },\n  0x0410: {/* n:\"BrtSXTH14\" */},\n  0x0411: {\n    /* n:\"BrtBeginSparklineGroup\", */T: 1\n  },\n  0x0412: {\n    /* n:\"BrtEndSparklineGroup\", */T: -1\n  },\n  0x0413: {/* n:\"BrtSparkline\" */},\n  0x0414: {/* n:\"BrtSXDI14\" */},\n  0x0415: {/* n:\"BrtWsFmtInfoEx14\" */},\n  0x0416: {\n    /* n:\"BrtBeginConditionalFormatting14\", */T: 1\n  },\n  0x0417: {\n    /* n:\"BrtEndConditionalFormatting14\", */T: -1\n  },\n  0x0418: {\n    /* n:\"BrtBeginCFRule14\", */T: 1\n  },\n  0x0419: {\n    /* n:\"BrtEndCFRule14\", */T: -1\n  },\n  0x041A: {/* n:\"BrtCFVO14\" */},\n  0x041B: {\n    /* n:\"BrtBeginDatabar14\", */T: 1\n  },\n  0x041C: {\n    /* n:\"BrtBeginIconSet14\", */T: 1\n  },\n  0x041D: {\n    /* n:\"BrtDVal14\", */f: parse_BrtDVal14\n  },\n  0x041E: {\n    /* n:\"BrtBeginDVals14\", */T: 1\n  },\n  0x041F: {/* n:\"BrtColor14\" */},\n  0x0420: {\n    /* n:\"BrtBeginSparklines\", */T: 1\n  },\n  0x0421: {\n    /* n:\"BrtEndSparklines\", */T: -1\n  },\n  0x0422: {\n    /* n:\"BrtBeginSparklineGroups\", */T: 1\n  },\n  0x0423: {\n    /* n:\"BrtEndSparklineGroups\", */T: -1\n  },\n  0x0425: {/* n:\"BrtSXVD14\" */},\n  0x0426: {\n    /* n:\"BrtBeginSXView14\", */T: 1\n  },\n  0x0427: {\n    /* n:\"BrtEndSXView14\", */T: -1\n  },\n  0x0428: {\n    /* n:\"BrtBeginSXView16\", */T: 1\n  },\n  0x0429: {\n    /* n:\"BrtEndSXView16\", */T: -1\n  },\n  0x042A: {\n    /* n:\"BrtBeginPCD14\", */T: 1\n  },\n  0x042B: {\n    /* n:\"BrtEndPCD14\", */T: -1\n  },\n  0x042C: {\n    /* n:\"BrtBeginExtConn14\", */T: 1\n  },\n  0x042D: {\n    /* n:\"BrtEndExtConn14\", */T: -1\n  },\n  0x042E: {\n    /* n:\"BrtBeginSlicerCacheIDs\", */T: 1\n  },\n  0x042F: {\n    /* n:\"BrtEndSlicerCacheIDs\", */T: -1\n  },\n  0x0430: {\n    /* n:\"BrtBeginSlicerCacheID\", */T: 1\n  },\n  0x0431: {\n    /* n:\"BrtEndSlicerCacheID\", */T: -1\n  },\n  0x0433: {\n    /* n:\"BrtBeginSlicerCache\", */T: 1\n  },\n  0x0434: {\n    /* n:\"BrtEndSlicerCache\", */T: -1\n  },\n  0x0435: {\n    /* n:\"BrtBeginSlicerCacheDef\", */T: 1\n  },\n  0x0436: {\n    /* n:\"BrtEndSlicerCacheDef\", */T: -1\n  },\n  0x0437: {\n    /* n:\"BrtBeginSlicersEx\", */T: 1\n  },\n  0x0438: {\n    /* n:\"BrtEndSlicersEx\", */T: -1\n  },\n  0x0439: {\n    /* n:\"BrtBeginSlicerEx\", */T: 1\n  },\n  0x043A: {\n    /* n:\"BrtEndSlicerEx\", */T: -1\n  },\n  0x043B: {\n    /* n:\"BrtBeginSlicer\", */T: 1\n  },\n  0x043C: {\n    /* n:\"BrtEndSlicer\", */T: -1\n  },\n  0x043D: {/* n:\"BrtSlicerCachePivotTables\" */},\n  0x043E: {\n    /* n:\"BrtBeginSlicerCacheOlapImpl\", */T: 1\n  },\n  0x043F: {\n    /* n:\"BrtEndSlicerCacheOlapImpl\", */T: -1\n  },\n  0x0440: {\n    /* n:\"BrtBeginSlicerCacheLevelsData\", */T: 1\n  },\n  0x0441: {\n    /* n:\"BrtEndSlicerCacheLevelsData\", */T: -1\n  },\n  0x0442: {\n    /* n:\"BrtBeginSlicerCacheLevelData\", */T: 1\n  },\n  0x0443: {\n    /* n:\"BrtEndSlicerCacheLevelData\", */T: -1\n  },\n  0x0444: {\n    /* n:\"BrtBeginSlicerCacheSiRanges\", */T: 1\n  },\n  0x0445: {\n    /* n:\"BrtEndSlicerCacheSiRanges\", */T: -1\n  },\n  0x0446: {\n    /* n:\"BrtBeginSlicerCacheSiRange\", */T: 1\n  },\n  0x0447: {\n    /* n:\"BrtEndSlicerCacheSiRange\", */T: -1\n  },\n  0x0448: {/* n:\"BrtSlicerCacheOlapItem\" */},\n  0x0449: {\n    /* n:\"BrtBeginSlicerCacheSelections\", */T: 1\n  },\n  0x044A: {/* n:\"BrtSlicerCacheSelection\" */},\n  0x044B: {\n    /* n:\"BrtEndSlicerCacheSelections\", */T: -1\n  },\n  0x044C: {\n    /* n:\"BrtBeginSlicerCacheNative\", */T: 1\n  },\n  0x044D: {\n    /* n:\"BrtEndSlicerCacheNative\", */T: -1\n  },\n  0x044E: {/* n:\"BrtSlicerCacheNativeItem\" */},\n  0x044F: {/* n:\"BrtRangeProtection14\" */},\n  0x0450: {/* n:\"BrtRangeProtectionIso14\" */},\n  0x0451: {/* n:\"BrtCellIgnoreEC14\" */},\n  0x0457: {/* n:\"BrtList14\" */},\n  0x0458: {/* n:\"BrtCFIcon\" */},\n  0x0459: {\n    /* n:\"BrtBeginSlicerCachesPivotCacheIDs\", */T: 1\n  },\n  0x045A: {\n    /* n:\"BrtEndSlicerCachesPivotCacheIDs\", */T: -1\n  },\n  0x045B: {\n    /* n:\"BrtBeginSlicers\", */T: 1\n  },\n  0x045C: {\n    /* n:\"BrtEndSlicers\", */T: -1\n  },\n  0x045D: {/* n:\"BrtWbProp14\" */},\n  0x045E: {\n    /* n:\"BrtBeginSXEdit\", */T: 1\n  },\n  0x045F: {\n    /* n:\"BrtEndSXEdit\", */T: -1\n  },\n  0x0460: {\n    /* n:\"BrtBeginSXEdits\", */T: 1\n  },\n  0x0461: {\n    /* n:\"BrtEndSXEdits\", */T: -1\n  },\n  0x0462: {\n    /* n:\"BrtBeginSXChange\", */T: 1\n  },\n  0x0463: {\n    /* n:\"BrtEndSXChange\", */T: -1\n  },\n  0x0464: {\n    /* n:\"BrtBeginSXChanges\", */T: 1\n  },\n  0x0465: {\n    /* n:\"BrtEndSXChanges\", */T: -1\n  },\n  0x0466: {/* n:\"BrtSXTupleItems\" */},\n  0x0468: {\n    /* n:\"BrtBeginSlicerStyle\", */T: 1\n  },\n  0x0469: {\n    /* n:\"BrtEndSlicerStyle\", */T: -1\n  },\n  0x046A: {/* n:\"BrtSlicerStyleElement\" */},\n  0x046B: {\n    /* n:\"BrtBeginStyleSheetExt14\", */T: 1\n  },\n  0x046C: {\n    /* n:\"BrtEndStyleSheetExt14\", */T: -1\n  },\n  0x046D: {\n    /* n:\"BrtBeginSlicerCachesPivotCacheID\", */T: 1\n  },\n  0x046E: {\n    /* n:\"BrtEndSlicerCachesPivotCacheID\", */T: -1\n  },\n  0x046F: {\n    /* n:\"BrtBeginConditionalFormattings\", */T: 1\n  },\n  0x0470: {\n    /* n:\"BrtEndConditionalFormattings\", */T: -1\n  },\n  0x0471: {\n    /* n:\"BrtBeginPCDCalcMemExt\", */T: 1\n  },\n  0x0472: {\n    /* n:\"BrtEndPCDCalcMemExt\", */T: -1\n  },\n  0x0473: {\n    /* n:\"BrtBeginPCDCalcMemsExt\", */T: 1\n  },\n  0x0474: {\n    /* n:\"BrtEndPCDCalcMemsExt\", */T: -1\n  },\n  0x0475: {/* n:\"BrtPCDField14\" */},\n  0x0476: {\n    /* n:\"BrtBeginSlicerStyles\", */T: 1\n  },\n  0x0477: {\n    /* n:\"BrtEndSlicerStyles\", */T: -1\n  },\n  0x0478: {\n    /* n:\"BrtBeginSlicerStyleElements\", */T: 1\n  },\n  0x0479: {\n    /* n:\"BrtEndSlicerStyleElements\", */T: -1\n  },\n  0x047A: {/* n:\"BrtCFRuleExt\" */},\n  0x047B: {\n    /* n:\"BrtBeginSXCondFmt14\", */T: 1\n  },\n  0x047C: {\n    /* n:\"BrtEndSXCondFmt14\", */T: -1\n  },\n  0x047D: {\n    /* n:\"BrtBeginSXCondFmts14\", */T: 1\n  },\n  0x047E: {\n    /* n:\"BrtEndSXCondFmts14\", */T: -1\n  },\n  0x0480: {\n    /* n:\"BrtBeginSortCond14\", */T: 1\n  },\n  0x0481: {\n    /* n:\"BrtEndSortCond14\", */T: -1\n  },\n  0x0482: {\n    /* n:\"BrtEndDVals14\", */T: -1\n  },\n  0x0483: {\n    /* n:\"BrtEndIconSet14\", */T: -1\n  },\n  0x0484: {\n    /* n:\"BrtEndDatabar14\", */T: -1\n  },\n  0x0485: {\n    /* n:\"BrtBeginColorScale14\", */T: 1\n  },\n  0x0486: {\n    /* n:\"BrtEndColorScale14\", */T: -1\n  },\n  0x0487: {\n    /* n:\"BrtBeginSxrules14\", */T: 1\n  },\n  0x0488: {\n    /* n:\"BrtEndSxrules14\", */T: -1\n  },\n  0x0489: {\n    /* n:\"BrtBeginPRule14\", */T: 1\n  },\n  0x048A: {\n    /* n:\"BrtEndPRule14\", */T: -1\n  },\n  0x048B: {\n    /* n:\"BrtBeginPRFilters14\", */T: 1\n  },\n  0x048C: {\n    /* n:\"BrtEndPRFilters14\", */T: -1\n  },\n  0x048D: {\n    /* n:\"BrtBeginPRFilter14\", */T: 1\n  },\n  0x048E: {\n    /* n:\"BrtEndPRFilter14\", */T: -1\n  },\n  0x048F: {\n    /* n:\"BrtBeginPRFItem14\", */T: 1\n  },\n  0x0490: {\n    /* n:\"BrtEndPRFItem14\", */T: -1\n  },\n  0x0491: {\n    /* n:\"BrtBeginCellIgnoreECs14\", */T: 1\n  },\n  0x0492: {\n    /* n:\"BrtEndCellIgnoreECs14\", */T: -1\n  },\n  0x0493: {/* n:\"BrtDxf14\" */},\n  0x0494: {\n    /* n:\"BrtBeginDxF14s\", */T: 1\n  },\n  0x0495: {\n    /* n:\"BrtEndDxf14s\", */T: -1\n  },\n  0x0499: {/* n:\"BrtFilter14\" */},\n  0x049A: {\n    /* n:\"BrtBeginCustomFilters14\", */T: 1\n  },\n  0x049C: {/* n:\"BrtCustomFilter14\" */},\n  0x049D: {/* n:\"BrtIconFilter14\" */},\n  0x049E: {/* n:\"BrtPivotCacheConnectionName\" */},\n  0x0800: {\n    /* n:\"BrtBeginDecoupledPivotCacheIDs\", */T: 1\n  },\n  0x0801: {\n    /* n:\"BrtEndDecoupledPivotCacheIDs\", */T: -1\n  },\n  0x0802: {/* n:\"BrtDecoupledPivotCacheID\" */},\n  0x0803: {\n    /* n:\"BrtBeginPivotTableRefs\", */T: 1\n  },\n  0x0804: {\n    /* n:\"BrtEndPivotTableRefs\", */T: -1\n  },\n  0x0805: {/* n:\"BrtPivotTableRef\" */},\n  0x0806: {/* n:\"BrtSlicerCacheBookPivotTables\" */},\n  0x0807: {\n    /* n:\"BrtBeginSxvcells\", */T: 1\n  },\n  0x0808: {\n    /* n:\"BrtEndSxvcells\", */T: -1\n  },\n  0x0809: {\n    /* n:\"BrtBeginSxRow\", */T: 1\n  },\n  0x080A: {\n    /* n:\"BrtEndSxRow\", */T: -1\n  },\n  0x080C: {/* n:\"BrtPcdCalcMem15\" */},\n  0x0813: {/* n:\"BrtQsi15\" */},\n  0x0814: {\n    /* n:\"BrtBeginWebExtensions\", */T: 1\n  },\n  0x0815: {\n    /* n:\"BrtEndWebExtensions\", */T: -1\n  },\n  0x0816: {/* n:\"BrtWebExtension\" */},\n  0x0817: {/* n:\"BrtAbsPath15\" */},\n  0x0818: {\n    /* n:\"BrtBeginPivotTableUISettings\", */T: 1\n  },\n  0x0819: {\n    /* n:\"BrtEndPivotTableUISettings\", */T: -1\n  },\n  0x081B: {/* n:\"BrtTableSlicerCacheIDs\" */},\n  0x081C: {/* n:\"BrtTableSlicerCacheID\" */},\n  0x081D: {\n    /* n:\"BrtBeginTableSlicerCache\", */T: 1\n  },\n  0x081E: {\n    /* n:\"BrtEndTableSlicerCache\", */T: -1\n  },\n  0x081F: {/* n:\"BrtSxFilter15\" */},\n  0x0820: {\n    /* n:\"BrtBeginTimelineCachePivotCacheIDs\", */T: 1\n  },\n  0x0821: {\n    /* n:\"BrtEndTimelineCachePivotCacheIDs\", */T: -1\n  },\n  0x0822: {/* n:\"BrtTimelineCachePivotCacheID\" */},\n  0x0823: {\n    /* n:\"BrtBeginTimelineCacheIDs\", */T: 1\n  },\n  0x0824: {\n    /* n:\"BrtEndTimelineCacheIDs\", */T: -1\n  },\n  0x0825: {\n    /* n:\"BrtBeginTimelineCacheID\", */T: 1\n  },\n  0x0826: {\n    /* n:\"BrtEndTimelineCacheID\", */T: -1\n  },\n  0x0827: {\n    /* n:\"BrtBeginTimelinesEx\", */T: 1\n  },\n  0x0828: {\n    /* n:\"BrtEndTimelinesEx\", */T: -1\n  },\n  0x0829: {\n    /* n:\"BrtBeginTimelineEx\", */T: 1\n  },\n  0x082A: {\n    /* n:\"BrtEndTimelineEx\", */T: -1\n  },\n  0x082B: {/* n:\"BrtWorkBookPr15\" */},\n  0x082C: {/* n:\"BrtPCDH15\" */},\n  0x082D: {\n    /* n:\"BrtBeginTimelineStyle\", */T: 1\n  },\n  0x082E: {\n    /* n:\"BrtEndTimelineStyle\", */T: -1\n  },\n  0x082F: {/* n:\"BrtTimelineStyleElement\" */},\n  0x0830: {\n    /* n:\"BrtBeginTimelineStylesheetExt15\", */T: 1\n  },\n  0x0831: {\n    /* n:\"BrtEndTimelineStylesheetExt15\", */T: -1\n  },\n  0x0832: {\n    /* n:\"BrtBeginTimelineStyles\", */T: 1\n  },\n  0x0833: {\n    /* n:\"BrtEndTimelineStyles\", */T: -1\n  },\n  0x0834: {\n    /* n:\"BrtBeginTimelineStyleElements\", */T: 1\n  },\n  0x0835: {\n    /* n:\"BrtEndTimelineStyleElements\", */T: -1\n  },\n  0x0836: {/* n:\"BrtDxf15\" */},\n  0x0837: {\n    /* n:\"BrtBeginDxfs15\", */T: 1\n  },\n  0x0838: {\n    /* n:\"BrtEndDxfs15\", */T: -1\n  },\n  0x0839: {/* n:\"BrtSlicerCacheHideItemsWithNoData\" */},\n  0x083A: {\n    /* n:\"BrtBeginItemUniqueNames\", */T: 1\n  },\n  0x083B: {\n    /* n:\"BrtEndItemUniqueNames\", */T: -1\n  },\n  0x083C: {/* n:\"BrtItemUniqueName\" */},\n  0x083D: {\n    /* n:\"BrtBeginExtConn15\", */T: 1\n  },\n  0x083E: {\n    /* n:\"BrtEndExtConn15\", */T: -1\n  },\n  0x083F: {\n    /* n:\"BrtBeginOledbPr15\", */T: 1\n  },\n  0x0840: {\n    /* n:\"BrtEndOledbPr15\", */T: -1\n  },\n  0x0841: {\n    /* n:\"BrtBeginDataFeedPr15\", */T: 1\n  },\n  0x0842: {\n    /* n:\"BrtEndDataFeedPr15\", */T: -1\n  },\n  0x0843: {/* n:\"BrtTextPr15\" */},\n  0x0844: {/* n:\"BrtRangePr15\" */},\n  0x0845: {/* n:\"BrtDbCommand15\" */},\n  0x0846: {\n    /* n:\"BrtBeginDbTables15\", */T: 1\n  },\n  0x0847: {\n    /* n:\"BrtEndDbTables15\", */T: -1\n  },\n  0x0848: {/* n:\"BrtDbTable15\" */},\n  0x0849: {\n    /* n:\"BrtBeginDataModel\", */T: 1\n  },\n  0x084A: {\n    /* n:\"BrtEndDataModel\", */T: -1\n  },\n  0x084B: {\n    /* n:\"BrtBeginModelTables\", */T: 1\n  },\n  0x084C: {\n    /* n:\"BrtEndModelTables\", */T: -1\n  },\n  0x084D: {/* n:\"BrtModelTable\" */},\n  0x084E: {\n    /* n:\"BrtBeginModelRelationships\", */T: 1\n  },\n  0x084F: {\n    /* n:\"BrtEndModelRelationships\", */T: -1\n  },\n  0x0850: {/* n:\"BrtModelRelationship\" */},\n  0x0851: {\n    /* n:\"BrtBeginECTxtWiz15\", */T: 1\n  },\n  0x0852: {\n    /* n:\"BrtEndECTxtWiz15\", */T: -1\n  },\n  0x0853: {\n    /* n:\"BrtBeginECTWFldInfoLst15\", */T: 1\n  },\n  0x0854: {\n    /* n:\"BrtEndECTWFldInfoLst15\", */T: -1\n  },\n  0x0855: {\n    /* n:\"BrtBeginECTWFldInfo15\", */T: 1\n  },\n  0x0856: {/* n:\"BrtFieldListActiveItem\" */},\n  0x0857: {/* n:\"BrtPivotCacheIdVersion\" */},\n  0x0858: {/* n:\"BrtSXDI15\" */},\n  0x0859: {\n    /* n:\"BrtBeginModelTimeGroupings\", */T: 1\n  },\n  0x085A: {\n    /* n:\"BrtEndModelTimeGroupings\", */T: -1\n  },\n  0x085B: {\n    /* n:\"BrtBeginModelTimeGrouping\", */T: 1\n  },\n  0x085C: {\n    /* n:\"BrtEndModelTimeGrouping\", */T: -1\n  },\n  0x085D: {/* n:\"BrtModelTimeGroupingCalcCol\" */},\n  0x0C00: {/* n:\"BrtUid\" */},\n  0x0C01: {/* n:\"BrtRevisionPtr\" */},\n  0x1000: {\n    /* n:\"BrtBeginDynamicArrayPr\", */T: 1\n  },\n  0x1001: {\n    /* n:\"BrtEndDynamicArrayPr\", */T: -1\n  },\n  0x138A: {\n    /* n:\"BrtBeginRichValueBlock\", */T: 1\n  },\n  0x138B: {\n    /* n:\"BrtEndRichValueBlock\", */T: -1\n  },\n  0x13D9: {\n    /* n:\"BrtBeginRichFilters\", */T: 1\n  },\n  0x13DA: {\n    /* n:\"BrtEndRichFilters\", */T: -1\n  },\n  0x13DB: {/* n:\"BrtRichFilter\" */},\n  0x13DC: {\n    /* n:\"BrtBeginRichFilterColumn\", */T: 1\n  },\n  0x13DD: {\n    /* n:\"BrtEndRichFilterColumn\", */T: -1\n  },\n  0x13DE: {\n    /* n:\"BrtBeginCustomRichFilters\", */T: 1\n  },\n  0x13DF: {\n    /* n:\"BrtEndCustomRichFilters\", */T: -1\n  },\n  0x13E0: {/* n:\"BrtCustomRichFilter\" */},\n  0x13E1: {/* n:\"BrtTop10RichFilter\" */},\n  0x13E2: {/* n:\"BrtDynamicRichFilter\" */},\n  0x13E4: {\n    /* n:\"BrtBeginRichSortCondition\", */T: 1\n  },\n  0x13E5: {\n    /* n:\"BrtEndRichSortCondition\", */T: -1\n  },\n  0x13E6: {/* n:\"BrtRichFilterDateGroupItem\" */},\n  0x13E7: {\n    /* n:\"BrtBeginCalcFeatures\", */T: 1\n  },\n  0x13E8: {\n    /* n:\"BrtEndCalcFeatures\", */T: -1\n  },\n  0x13E9: {/* n:\"BrtCalcFeature\" */},\n  0x13EB: {/* n:\"BrtExternalLinksPr\" */},\n  0xFFFF: {\n    n: \"\"\n  }\n};\n\n/* [MS-XLS] 2.3 Record Enumeration (and other sources) */\nvar XLSRecordEnum = {\n  /* [MS-XLS] 2.3 Record Enumeration 2021-08-17 */\n  0x0006: {\n    /* n:\"Formula\", */f: parse_Formula\n  },\n  0x000a: {\n    /* n:\"EOF\", */f: parsenoop2\n  },\n  0x000c: {\n    /* n:\"CalcCount\", */f: parseuint16\n  },\n  //\n  0x000d: {\n    /* n:\"CalcMode\", */f: parseuint16\n  },\n  //\n  0x000e: {\n    /* n:\"CalcPrecision\", */f: parsebool\n  },\n  //\n  0x000f: {\n    /* n:\"CalcRefMode\", */f: parsebool\n  },\n  //\n  0x0010: {\n    /* n:\"CalcDelta\", */f: parse_Xnum\n  },\n  //\n  0x0011: {\n    /* n:\"CalcIter\", */f: parsebool\n  },\n  //\n  0x0012: {\n    /* n:\"Protect\", */f: parsebool\n  },\n  0x0013: {\n    /* n:\"Password\", */f: parseuint16\n  },\n  0x0014: {\n    /* n:\"Header\", */f: parse_XLHeaderFooter\n  },\n  0x0015: {\n    /* n:\"Footer\", */f: parse_XLHeaderFooter\n  },\n  0x0017: {\n    /* n:\"ExternSheet\", */f: parse_ExternSheet\n  },\n  0x0018: {\n    /* n:\"Lbl\", */f: parse_Lbl\n  },\n  0x0019: {\n    /* n:\"WinProtect\", */f: parsebool\n  },\n  0x001a: {/* n:\"VerticalPageBreaks\", */},\n  0x001b: {/* n:\"HorizontalPageBreaks\", */},\n  0x001c: {\n    /* n:\"Note\", */f: parse_Note\n  },\n  0x001d: {/* n:\"Selection\", */},\n  0x0022: {\n    /* n:\"Date1904\", */f: parsebool\n  },\n  0x0023: {\n    /* n:\"ExternName\", */f: parse_ExternName\n  },\n  0x0026: {\n    /* n:\"LeftMargin\", */f: parse_Xnum\n  },\n  // *\n  0x0027: {\n    /* n:\"RightMargin\", */f: parse_Xnum\n  },\n  // *\n  0x0028: {\n    /* n:\"TopMargin\", */f: parse_Xnum\n  },\n  // *\n  0x0029: {\n    /* n:\"BottomMargin\", */f: parse_Xnum\n  },\n  // *\n  0x002a: {\n    /* n:\"PrintRowCol\", */f: parsebool\n  },\n  0x002b: {\n    /* n:\"PrintGrid\", */f: parsebool\n  },\n  0x002f: {\n    /* n:\"FilePass\", */f: parse_FilePass\n  },\n  0x0031: {\n    /* n:\"Font\", */f: parse_Font\n  },\n  0x0033: {\n    /* n:\"PrintSize\", */f: parseuint16\n  },\n  0x003c: {/* n:\"Continue\", */},\n  0x003d: {\n    /* n:\"Window1\", */f: parse_Window1\n  },\n  0x0040: {\n    /* n:\"Backup\", */f: parsebool\n  },\n  0x0041: {\n    /* n:\"Pane\", */f: parse_Pane\n  },\n  0x0042: {\n    /* n:\"CodePage\", */f: parseuint16\n  },\n  0x004d: {/* n:\"Pls\", */},\n  0x0050: {/* n:\"DCon\", */},\n  0x0051: {/* n:\"DConRef\", */},\n  0x0052: {/* n:\"DConName\", */},\n  0x0055: {\n    /* n:\"DefColWidth\", */f: parseuint16\n  },\n  0x0059: {/* n:\"XCT\", */},\n  0x005a: {/* n:\"CRN\", */},\n  0x005b: {/* n:\"FileSharing\", */},\n  0x005c: {\n    /* n:\"WriteAccess\", */f: parse_WriteAccess\n  },\n  0x005d: {\n    /* n:\"Obj\", */f: parse_Obj\n  },\n  0x005e: {/* n:\"Uncalced\", */},\n  0x005f: {\n    /* n:\"CalcSaveRecalc\", */f: parsebool\n  },\n  //\n  0x0060: {/* n:\"Template\", */},\n  0x0061: {/* n:\"Intl\", */},\n  0x0063: {\n    /* n:\"ObjProtect\", */f: parsebool\n  },\n  0x007d: {\n    /* n:\"ColInfo\", */f: parse_ColInfo\n  },\n  0x0080: {\n    /* n:\"Guts\", */f: parse_Guts\n  },\n  0x0081: {\n    /* n:\"WsBool\", */f: parse_WsBool\n  },\n  0x0082: {\n    /* n:\"GridSet\", */f: parseuint16\n  },\n  0x0083: {\n    /* n:\"HCenter\", */f: parsebool\n  },\n  0x0084: {\n    /* n:\"VCenter\", */f: parsebool\n  },\n  0x0085: {\n    /* n:\"BoundSheet8\", */f: parse_BoundSheet8\n  },\n  0x0086: {/* n:\"WriteProtect\", */},\n  0x008c: {\n    /* n:\"Country\", */f: parse_Country\n  },\n  0x008d: {\n    /* n:\"HideObj\", */f: parseuint16\n  },\n  0x0090: {/* n:\"Sort\", */},\n  0x0092: {\n    /* n:\"Palette\", */f: parse_Palette\n  },\n  0x0097: {/* n:\"Sync\", */},\n  0x0098: {/* n:\"LPr\", */},\n  0x0099: {/* n:\"DxGCol\", */},\n  0x009a: {/* n:\"FnGroupName\", */},\n  0x009b: {/* n:\"FilterMode\", */},\n  0x009c: {\n    /* n:\"BuiltInFnGroupCount\", */f: parseuint16\n  },\n  0x009d: {/* n:\"AutoFilterInfo\", */},\n  0x009e: {/* n:\"AutoFilter\", */},\n  0x00a0: {\n    /* n:\"Scl\", */f: parse_Scl\n  },\n  0x00a1: {\n    /* n:\"Setup\", */f: parse_Setup\n  },\n  0x00ae: {/* n:\"ScenMan\", */},\n  0x00af: {/* n:\"SCENARIO\", */},\n  0x00b0: {/* n:\"SxView\", */},\n  0x00b1: {/* n:\"Sxvd\", */},\n  0x00b2: {/* n:\"SXVI\", */},\n  0x00b4: {/* n:\"SxIvd\", */},\n  0x00b5: {/* n:\"SXLI\", */},\n  0x00b6: {/* n:\"SXPI\", */},\n  0x00b8: {/* n:\"DocRoute\", */},\n  0x00b9: {/* n:\"RecipName\", */},\n  0x00bd: {\n    /* n:\"MulRk\", */f: parse_MulRk\n  },\n  0x00be: {\n    /* n:\"MulBlank\", */f: parse_MulBlank\n  },\n  0x00c1: {\n    /* n:\"Mms\", */f: parsenoop2\n  },\n  0x00c5: {/* n:\"SXDI\", */},\n  0x00c6: {/* n:\"SXDB\", */},\n  0x00c7: {/* n:\"SXFDB\", */},\n  0x00c8: {/* n:\"SXDBB\", */},\n  0x00c9: {/* n:\"SXNum\", */},\n  0x00ca: {\n    /* n:\"SxBool\", */f: parsebool\n  },\n  0x00cb: {/* n:\"SxErr\", */},\n  0x00cc: {/* n:\"SXInt\", */},\n  0x00cd: {/* n:\"SXString\", */},\n  0x00ce: {/* n:\"SXDtr\", */},\n  0x00cf: {/* n:\"SxNil\", */},\n  0x00d0: {/* n:\"SXTbl\", */},\n  0x00d1: {/* n:\"SXTBRGIITM\", */},\n  0x00d2: {/* n:\"SxTbpg\", */},\n  0x00d3: {/* n:\"ObProj\", */},\n  0x00d5: {/* n:\"SXStreamID\", */},\n  0x00d7: {/* n:\"DBCell\", */},\n  0x00d8: {/* n:\"SXRng\", */},\n  0x00d9: {/* n:\"SxIsxoper\", */},\n  0x00da: {\n    /* n:\"BookBool\", */f: parseuint16\n  },\n  0x00dc: {/* n:\"DbOrParamQry\", */},\n  0x00dd: {\n    /* n:\"ScenarioProtect\", */f: parsebool\n  },\n  0x00de: {/* n:\"OleObjectSize\", */},\n  0x00e0: {\n    /* n:\"XF\", */f: parse_XF\n  },\n  0x00e1: {\n    /* n:\"InterfaceHdr\", */f: parse_InterfaceHdr\n  },\n  0x00e2: {\n    /* n:\"InterfaceEnd\", */f: parsenoop2\n  },\n  0x00e3: {/* n:\"SXVS\", */},\n  0x00e5: {\n    /* n:\"MergeCells\", */f: parse_MergeCells\n  },\n  0x00e9: {/* n:\"BkHim\", */},\n  0x00eb: {/* n:\"MsoDrawingGroup\", */},\n  0x00ec: {/* n:\"MsoDrawing\", */},\n  0x00ed: {/* n:\"MsoDrawingSelection\", */},\n  0x00ef: {/* n:\"PhoneticInfo\", */},\n  0x00f0: {/* n:\"SxRule\", */},\n  0x00f1: {/* n:\"SXEx\", */},\n  0x00f2: {/* n:\"SxFilt\", */},\n  0x00f4: {/* n:\"SxDXF\", */},\n  0x00f5: {/* n:\"SxItm\", */},\n  0x00f6: {/* n:\"SxName\", */},\n  0x00f7: {/* n:\"SxSelect\", */},\n  0x00f8: {/* n:\"SXPair\", */},\n  0x00f9: {/* n:\"SxFmla\", */},\n  0x00fb: {/* n:\"SxFormat\", */},\n  0x00fc: {\n    /* n:\"SST\", */f: parse_SST\n  },\n  0x00fd: {\n    /* n:\"LabelSst\", */f: parse_LabelSst\n  },\n  0x00ff: {\n    /* n:\"ExtSST\", */f: parse_ExtSST\n  },\n  0x0100: {/* n:\"SXVDEx\", */},\n  0x0103: {/* n:\"SXFormula\", */},\n  0x0122: {/* n:\"SXDBEx\", */},\n  0x0137: {/* n:\"RRDInsDel\", */},\n  0x0138: {/* n:\"RRDHead\", */},\n  0x013b: {/* n:\"RRDChgCell\", */},\n  0x013d: {\n    /* n:\"RRTabId\", */f: parseuint16a\n  },\n  0x013e: {/* n:\"RRDRenSheet\", */},\n  0x013f: {/* n:\"RRSort\", */},\n  0x0140: {/* n:\"RRDMove\", */},\n  0x014a: {/* n:\"RRFormat\", */},\n  0x014b: {/* n:\"RRAutoFmt\", */},\n  0x014d: {/* n:\"RRInsertSh\", */},\n  0x014e: {/* n:\"RRDMoveBegin\", */},\n  0x014f: {/* n:\"RRDMoveEnd\", */},\n  0x0150: {/* n:\"RRDInsDelBegin\", */},\n  0x0151: {/* n:\"RRDInsDelEnd\", */},\n  0x0152: {/* n:\"RRDConflict\", */},\n  0x0153: {/* n:\"RRDDefName\", */},\n  0x0154: {/* n:\"RRDRstEtxp\", */},\n  0x015f: {/* n:\"LRng\", */},\n  0x0160: {\n    /* n:\"UsesELFs\", */f: parsebool\n  },\n  0x0161: {\n    /* n:\"DSF\", */f: parsenoop2\n  },\n  0x0191: {/* n:\"CUsr\", */},\n  0x0192: {/* n:\"CbUsr\", */},\n  0x0193: {/* n:\"UsrInfo\", */},\n  0x0194: {/* n:\"UsrExcl\", */},\n  0x0195: {/* n:\"FileLock\", */},\n  0x0196: {/* n:\"RRDInfo\", */},\n  0x0197: {/* n:\"BCUsrs\", */},\n  0x0198: {/* n:\"UsrChk\", */},\n  0x01a9: {/* n:\"UserBView\", */},\n  0x01aa: {/* n:\"UserSViewBegin\", */},\n  0x01ab: {/* n:\"UserSViewEnd\", */},\n  0x01ac: {/* n:\"RRDUserView\", */},\n  0x01ad: {/* n:\"Qsi\", */},\n  0x01ae: {\n    /* n:\"SupBook\", */f: parse_SupBook\n  },\n  0x01af: {\n    /* n:\"Prot4Rev\", */f: parsebool\n  },\n  0x01b0: {/* n:\"CondFmt\", */},\n  0x01b1: {/* n:\"CF\", */},\n  0x01b2: {/* n:\"DVal\", */},\n  0x01b5: {/* n:\"DConBin\", */},\n  0x01b6: {\n    /* n:\"TxO\", */f: parse_TxO\n  },\n  0x01b7: {\n    /* n:\"RefreshAll\", */f: parsebool\n  },\n  //\n  0x01b8: {\n    /* n:\"HLink\", */f: parse_HLink\n  },\n  0x01b9: {/* n:\"Lel\", */},\n  0x01ba: {\n    /* n:\"CodeName\", */f: parse_XLUnicodeString\n  },\n  0x01bb: {/* n:\"SXFDBType\", */},\n  0x01bc: {\n    /* n:\"Prot4RevPass\", */f: parseuint16\n  },\n  0x01bd: {/* n:\"ObNoMacros\", */},\n  0x01be: {/* n:\"Dv\", */},\n  0x01c0: {\n    /* n:\"Excel9File\", */f: parsenoop2\n  },\n  0x01c1: {\n    /* n:\"RecalcId\", */f: parse_RecalcId,\n    r: 2\n  },\n  0x01c2: {\n    /* n:\"EntExU2\", */f: parsenoop2\n  },\n  0x0200: {\n    /* n:\"Dimensions\", */f: parse_Dimensions\n  },\n  0x0201: {\n    /* n:\"Blank\", */f: parse_Blank\n  },\n  0x0203: {\n    /* n:\"Number\", */f: parse_Number\n  },\n  0x0204: {\n    /* n:\"Label\", */f: parse_Label\n  },\n  0x0205: {\n    /* n:\"BoolErr\", */f: parse_BoolErr\n  },\n  0x0207: {\n    /* n:\"String\", */f: parse_String\n  },\n  0x0208: {\n    /* n:\"Row\", */f: parse_Row\n  },\n  0x020b: {/* n:\"Index\", */},\n  0x0221: {\n    /* n:\"Array\", */f: parse_Array\n  },\n  0x0225: {\n    /* n:\"DefaultRowHeight\", */f: parse_DefaultRowHeight\n  },\n  0x0236: {/* n:\"Table\", */},\n  0x023e: {\n    /* n:\"Window2\", */f: parse_Window2\n  },\n  0x027e: {\n    /* n:\"RK\", */f: parse_RK\n  },\n  0x0293: {/* n:\"Style\", */},\n  0x0418: {/* n:\"BigName\", */},\n  0x041e: {\n    /* n:\"Format\", */f: parse_Format\n  },\n  0x043c: {/* n:\"ContinueBigName\", */},\n  0x04bc: {\n    /* n:\"ShrFmla\", */f: parse_ShrFmla\n  },\n  0x0800: {\n    /* n:\"HLinkTooltip\", */f: parse_HLinkTooltip\n  },\n  0x0801: {/* n:\"WebPub\", */},\n  0x0802: {/* n:\"QsiSXTag\", */},\n  0x0803: {/* n:\"DBQueryExt\", */},\n  0x0804: {/* n:\"ExtString\", */},\n  0x0805: {/* n:\"TxtQry\", */},\n  0x0806: {/* n:\"Qsir\", */},\n  0x0807: {/* n:\"Qsif\", */},\n  0x0808: {/* n:\"RRDTQSIF\", */},\n  0x0809: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  0x080a: {/* n:\"OleDbConn\", */},\n  0x080b: {/* n:\"WOpt\", */},\n  0x080c: {/* n:\"SXViewEx\", */},\n  0x080d: {/* n:\"SXTH\", */},\n  0x080e: {/* n:\"SXPIEx\", */},\n  0x080f: {/* n:\"SXVDTEx\", */},\n  0x0810: {/* n:\"SXViewEx9\", */},\n  0x0812: {/* n:\"ContinueFrt\", */},\n  0x0813: {/* n:\"RealTimeData\", */},\n  0x0850: {/* n:\"ChartFrtInfo\", */},\n  0x0851: {/* n:\"FrtWrapper\", */},\n  0x0852: {/* n:\"StartBlock\", */},\n  0x0853: {/* n:\"EndBlock\", */},\n  0x0854: {/* n:\"StartObject\", */},\n  0x0855: {/* n:\"EndObject\", */},\n  0x0856: {/* n:\"CatLab\", */},\n  0x0857: {/* n:\"YMult\", */},\n  0x0858: {/* n:\"SXViewLink\", */},\n  0x0859: {/* n:\"PivotChartBits\", */},\n  0x085a: {/* n:\"FrtFontList\", */},\n  0x0862: {/* n:\"SheetExt\", */},\n  0x0863: {\n    /* n:\"BookExt\", */r: 12\n  },\n  0x0864: {/* n:\"SXAddl\", */},\n  0x0865: {/* n:\"CrErr\", */},\n  0x0866: {/* n:\"HFPicture\", */},\n  0x0867: {\n    /* n:\"FeatHdr\", */f: parsenoop2\n  },\n  0x0868: {/* n:\"Feat\", */},\n  0x086a: {/* n:\"DataLabExt\", */},\n  0x086b: {/* n:\"DataLabExtContents\", */},\n  0x086c: {/* n:\"CellWatch\", */},\n  0x0871: {/* n:\"FeatHdr11\", */},\n  0x0872: {/* n:\"Feature11\", */},\n  0x0874: {/* n:\"DropDownObjIds\", */},\n  0x0875: {/* n:\"ContinueFrt11\", */},\n  0x0876: {/* n:\"DConn\", */},\n  0x0877: {/* n:\"List12\", */},\n  0x0878: {/* n:\"Feature12\", */},\n  0x0879: {/* n:\"CondFmt12\", */},\n  0x087a: {/* n:\"CF12\", */},\n  0x087b: {/* n:\"CFEx\", */},\n  0x087c: {\n    /* n:\"XFCRC\", */f: parse_XFCRC,\n    r: 12\n  },\n  0x087d: {\n    /* n:\"XFExt\", */f: parse_XFExt,\n    r: 12\n  },\n  0x087e: {/* n:\"AutoFilter12\", */},\n  0x087f: {/* n:\"ContinueFrt12\", */},\n  0x0884: {/* n:\"MDTInfo\", */},\n  0x0885: {/* n:\"MDXStr\", */},\n  0x0886: {/* n:\"MDXTuple\", */},\n  0x0887: {/* n:\"MDXSet\", */},\n  0x0888: {/* n:\"MDXProp\", */},\n  0x0889: {/* n:\"MDXKPI\", */},\n  0x088a: {/* n:\"MDB\", */},\n  0x088b: {/* n:\"PLV\", */},\n  0x088c: {\n    /* n:\"Compat12\", */f: parsebool,\n    r: 12\n  },\n  0x088d: {/* n:\"DXF\", */},\n  0x088e: {\n    /* n:\"TableStyles\", */r: 12\n  },\n  0x088f: {/* n:\"TableStyle\", */},\n  0x0890: {/* n:\"TableStyleElement\", */},\n  0x0892: {/* n:\"StyleExt\", */},\n  0x0893: {/* n:\"NamePublish\", */},\n  0x0894: {\n    /* n:\"NameCmt\", */f: parse_NameCmt,\n    r: 12\n  },\n  0x0895: {/* n:\"SortData\", */},\n  0x0896: {\n    /* n:\"Theme\", */f: parse_Theme,\n    r: 12\n  },\n  0x0897: {/* n:\"GUIDTypeLib\", */},\n  0x0898: {/* n:\"FnGrp12\", */},\n  0x0899: {/* n:\"NameFnGrp12\", */},\n  0x089a: {\n    /* n:\"MTRSettings\", */f: parse_MTRSettings,\n    r: 12\n  },\n  0x089b: {\n    /* n:\"CompressPictures\", */f: parsenoop2\n  },\n  0x089c: {/* n:\"HeaderFooter\", */},\n  0x089d: {/* n:\"CrtLayout12\", */},\n  0x089e: {/* n:\"CrtMlFrt\", */},\n  0x089f: {/* n:\"CrtMlFrtContinue\", */},\n  0x08a3: {\n    /* n:\"ForceFullCalculation\", */f: parse_ForceFullCalculation\n  },\n  0x08a4: {/* n:\"ShapePropsStream\", */},\n  0x08a5: {/* n:\"TextPropsStream\", */},\n  0x08a6: {/* n:\"RichTextStream\", */},\n  0x08a7: {/* n:\"CrtLayout12A\", */},\n  0x1001: {/* n:\"Units\", */},\n  0x1002: {/* n:\"Chart\", */},\n  0x1003: {/* n:\"Series\", */},\n  0x1006: {/* n:\"DataFormat\", */},\n  0x1007: {/* n:\"LineFormat\", */},\n  0x1009: {/* n:\"MarkerFormat\", */},\n  0x100a: {/* n:\"AreaFormat\", */},\n  0x100b: {/* n:\"PieFormat\", */},\n  0x100c: {/* n:\"AttachedLabel\", */},\n  0x100d: {/* n:\"SeriesText\", */},\n  0x1014: {/* n:\"ChartFormat\", */},\n  0x1015: {/* n:\"Legend\", */},\n  0x1016: {/* n:\"SeriesList\", */},\n  0x1017: {/* n:\"Bar\", */},\n  0x1018: {/* n:\"Line\", */},\n  0x1019: {/* n:\"Pie\", */},\n  0x101a: {/* n:\"Area\", */},\n  0x101b: {/* n:\"Scatter\", */},\n  0x101c: {/* n:\"CrtLine\", */},\n  0x101d: {/* n:\"Axis\", */},\n  0x101e: {/* n:\"Tick\", */},\n  0x101f: {/* n:\"ValueRange\", */},\n  0x1020: {/* n:\"CatSerRange\", */},\n  0x1021: {/* n:\"AxisLine\", */},\n  0x1022: {/* n:\"CrtLink\", */},\n  0x1024: {/* n:\"DefaultText\", */},\n  0x1025: {/* n:\"Text\", */},\n  0x1026: {\n    /* n:\"FontX\", */f: parseuint16\n  },\n  0x1027: {/* n:\"ObjectLink\", */},\n  0x1032: {/* n:\"Frame\", */},\n  0x1033: {/* n:\"Begin\", */},\n  0x1034: {/* n:\"End\", */},\n  0x1035: {/* n:\"PlotArea\", */},\n  0x103a: {/* n:\"Chart3d\", */},\n  0x103c: {/* n:\"PicF\", */},\n  0x103d: {/* n:\"DropBar\", */},\n  0x103e: {/* n:\"Radar\", */},\n  0x103f: {/* n:\"Surf\", */},\n  0x1040: {/* n:\"RadarArea\", */},\n  0x1041: {/* n:\"AxisParent\", */},\n  0x1043: {/* n:\"LegendException\", */},\n  0x1044: {\n    /* n:\"ShtProps\", */f: parse_ShtProps\n  },\n  0x1045: {/* n:\"SerToCrt\", */},\n  0x1046: {/* n:\"AxesUsed\", */},\n  0x1048: {/* n:\"SBaseRef\", */},\n  0x104a: {/* n:\"SerParent\", */},\n  0x104b: {/* n:\"SerAuxTrend\", */},\n  0x104e: {/* n:\"IFmtRecord\", */},\n  0x104f: {/* n:\"Pos\", */},\n  0x1050: {/* n:\"AlRuns\", */},\n  0x1051: {/* n:\"BRAI\", */},\n  0x105b: {/* n:\"SerAuxErrBar\", */},\n  0x105c: {\n    /* n:\"ClrtClient\", */f: parse_ClrtClient\n  },\n  0x105d: {/* n:\"SerFmt\", */},\n  0x105f: {/* n:\"Chart3DBarShape\", */},\n  0x1060: {/* n:\"Fbi\", */},\n  0x1061: {/* n:\"BopPop\", */},\n  0x1062: {/* n:\"AxcExt\", */},\n  0x1063: {/* n:\"Dat\", */},\n  0x1064: {/* n:\"PlotGrowth\", */},\n  0x1065: {/* n:\"SIIndex\", */},\n  0x1066: {/* n:\"GelFrame\", */},\n  0x1067: {/* n:\"BopPopCustom\", */},\n  0x1068: {/* n:\"Fbi2\", */},\n  0x0000: {\n    /* n:\"Dimensions\", */f: parse_Dimensions\n  },\n  0x0001: {/* n:\"BIFF2BLANK\", */},\n  0x0002: {\n    /* n:\"BIFF2INT\", */f: parse_BIFF2INT\n  },\n  0x0003: {\n    /* n:\"BIFF2NUM\", */f: parse_BIFF2NUM\n  },\n  0x0004: {\n    /* n:\"BIFF2STR\", */f: parse_BIFF2STR\n  },\n  0x0005: {\n    /* n:\"BIFF2BOOLERR\", */f: parse_BIFF2BOOLERR\n  },\n  0x0007: {\n    /* n:\"String\", */f: parse_BIFF2STRING\n  },\n  0x0008: {/* n:\"BIFF2ROW\", */},\n  0x0009: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  0x000b: {/* n:\"Index\", */},\n  0x0016: {\n    /* n:\"ExternCount\", */f: parseuint16\n  },\n  0x001e: {\n    /* n:\"BIFF2FORMAT\", */f: parse_BIFF2Format\n  },\n  0x001f: {/* n:\"BIFF2FMTCNT\", */},\n  /* 16-bit cnt of BIFF2FORMAT records */\n  0x0020: {/* n:\"BIFF2COLINFO\", */},\n  0x0021: {\n    /* n:\"Array\", */f: parse_Array\n  },\n  0x0024: {/* n:\"COLWIDTH\", */},\n  0x0025: {\n    /* n:\"DefaultRowHeight\", */f: parse_DefaultRowHeight\n  },\n  // 0x002c ??\n  // 0x002d ??\n  // 0x002e ??\n  // 0x0030 FONTCOUNT: number of fonts\n  0x0032: {\n    /* n:\"BIFF2FONTXTRA\", */f: parse_BIFF2FONTXTRA\n  },\n  // 0x0035: INFOOPTS\n  // 0x0036: TABLE (BIFF2 only)\n  // 0x0037: TABLE2 (BIFF2 only)\n  // 0x0038: WNDESK\n  // 0x0039 ??\n  // 0x003a: BEGINPREF\n  // 0x003b: ENDPREF\n  0x003e: {/* n:\"BIFF2WINDOW2\", */},\n  // 0x003f ??\n  // 0x0046: SHOWSCROLL\n  // 0x0047: SHOWFORMULA\n  // 0x0048: STATUSBAR\n  // 0x0049: SHORTMENUS\n  // 0x004A:\n  // 0x004B:\n  // 0x004C:\n  // 0x004E:\n  // 0x004F:\n  // 0x0058: TOOLBAR (BIFF3)\n\n  /* - - - */\n  0x0034: {/* n:\"DDEObjName\", */},\n  0x0043: {\n    /* n:\"BIFF2XF\", */f: parse_BIFF2XF\n  },\n  0x0044: {\n    /* n:\"BIFF2XFINDEX\", */f: parseuint16\n  },\n  0x0045: {/* n:\"BIFF2FONTCLR\", */},\n  0x0056: {/* n:\"BIFF4FMTCNT\", */},\n  /* 16-bit cnt, similar to BIFF2 */\n  0x007e: {/* n:\"RK\", */},\n  /* Not necessarily same as 0x027e */\n  0x007f: {\n    /* n:\"ImData\", */f: parse_ImData\n  },\n  0x0087: {/* n:\"Addin\", */},\n  0x0088: {/* n:\"Edg\", */},\n  0x0089: {/* n:\"Pub\", */},\n  // 0x8A\n  // 0x8B LH: alternate menu key flag (BIFF3/4)\n  // 0x8E\n  0x008F: {\n    /* n:\"BIFF4SheetInfo\", */f: parse_BIFF4SheetInfo\n  },\n  0x0091: {/* n:\"Sub\", */},\n  // 0x93 STYLE\n  0x0094: {/* n:\"LHRecord\", */},\n  0x0095: {/* n:\"LHNGraph\", */},\n  0x0096: {/* n:\"Sound\", */},\n  // 0xA2 FNPROTO: function prototypes (BIFF4)\n  // 0xA3\n  // 0xA8\n  0x00a9: {/* n:\"CoordList\", */},\n  0x00ab: {/* n:\"GCW\", */},\n  0x00bc: {/* n:\"ShrFmla\", */},\n  /* Not necessarily same as 0x04bc */\n  0x00bf: {/* n:\"ToolbarHdr\", */},\n  0x00c0: {/* n:\"ToolbarEnd\", */},\n  0x00c2: {/* n:\"AddMenu\", */},\n  0x00c3: {/* n:\"DelMenu\", */},\n  0x00d6: {\n    /* n:\"RString\", */f: parse_RString\n  },\n  0x00df: {/* n:\"UDDesc\", */},\n  0x00ea: {/* n:\"TabIdConf\", */},\n  0x0162: {/* n:\"XL5Modify\", */},\n  0x01a5: {/* n:\"FileSharing2\", */},\n  0x0206: {\n    /* n:\"Formula\", */f: parse_Formula\n  },\n  0x0209: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  0x0218: {\n    /* n:\"Lbl\", */f: parse_Lbl\n  },\n  0x0223: {\n    /* n:\"ExternName\", */f: parse_ExternName\n  },\n  0x0231: {/* n:\"Font\", */},\n  0x0243: {\n    /* n:\"BIFF3XF\", */f: parse_BIFF3XF\n  },\n  0x0406: {\n    /* n:\"Formula\", */f: parse_Formula\n  },\n  0x0409: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  0x0443: {\n    /* n:\"BIFF4XF\", */f: parse_BIFF4XF\n  },\n  0x086d: {/* n:\"FeatInfo\", */},\n  0x0873: {/* n:\"FeatInfo11\", */},\n  0x0881: {/* n:\"SXAddl12\", */},\n  0x08c0: {/* n:\"AutoWebPub\", */},\n  0x08c1: {/* n:\"ListObj\", */},\n  0x08c2: {/* n:\"ListField\", */},\n  0x08c3: {/* n:\"ListDV\", */},\n  0x08c4: {/* n:\"ListCondFmt\", */},\n  0x08c5: {/* n:\"ListCF\", */},\n  0x08c6: {/* n:\"FMQry\", */},\n  0x08c7: {/* n:\"FMSQry\", */},\n  0x08c8: {/* n:\"PLV\", */},\n  0x08c9: {/* n:\"LnExt\", */},\n  0x08ca: {/* n:\"MkrExt\", */},\n  0x08cb: {/* n:\"CrtCoopt\", */},\n  0x08d6: {\n    /* n:\"FRTArchId$\", */r: 12\n  },\n  /* --- multiplan 4 records --- */\n  0x0065: {/* n:\"\", */},\n  // one per window\n  0x0066: {/* n:\"\", */},\n  // calc settings\n  0x0069: {/* n:\"\", */},\n  // print header\n  0x006a: {/* n:\"\", */},\n  // print footer\n  0x006b: {/* n:\"\", */},\n  // print settings\n  0x006d: {/* n:\"\", */},\n  // one per window\n  0x0070: {/* n:\"\", */},\n  // includes default col width\n  0x0072: {/* n:\"\", */},\n  // includes selected cell\n\n  0x7262: {}\n};\nfunction write_biff_rec(ba /*:BufArray*/, type /*:number*/, payload, length /*:?number*/) /*:void*/{\n  var t /*:number*/ = type;\n  if (isNaN(t)) return;\n  var len = length || (payload || []).length || 0;\n  var o = ba.next(4);\n  o.write_shift(2, t);\n  o.write_shift(2, len);\n  if ( /*:: len != null &&*/len > 0 && is_buf(payload)) ba.push(payload);\n}\nfunction write_biff_continue(ba /*:BufArray*/, type /*:number*/, payload, length /*:?number*/) /*:void*/{\n  var len = length || (payload || []).length || 0;\n  if (len <= 8224) return write_biff_rec(ba, type, payload, len);\n  var t = type;\n  if (isNaN(t)) return;\n  var parts = payload.parts || [],\n    sidx = 0;\n  var i = 0,\n    w = 0;\n  while (w + (parts[sidx] || 8224) <= 8224) {\n    w += parts[sidx] || 8224;\n    sidx++;\n  }\n  var o = ba.next(4);\n  o.write_shift(2, t);\n  o.write_shift(2, w);\n  ba.push(payload.slice(i, i + w));\n  i += w;\n  while (i < len) {\n    o = ba.next(4);\n    o.write_shift(2, 0x3c); // TODO: figure out correct continue type\n    w = 0;\n    while (w + (parts[sidx] || 8224) <= 8224) {\n      w += parts[sidx] || 8224;\n      sidx++;\n    }\n    o.write_shift(2, w);\n    ba.push(payload.slice(i, i + w));\n    i += w;\n  }\n}\nfunction write_BIFF2BERR(r /*:number*/, c /*:number*/, val, t /*:?string*/) {\n  var out = new_buf(9);\n  write_BIFF2Cell(out, r, c);\n  write_Bes(val, t || 'b', out);\n  return out;\n}\n\n/* TODO: codepage, large strings */\nfunction write_BIFF2LABEL(r /*:number*/, c /*:number*/, val) {\n  var out = new_buf(8 + 2 * val.length);\n  write_BIFF2Cell(out, r, c);\n  out.write_shift(1, val.length);\n  out.write_shift(val.length, val, 'sbcs');\n  return out.l < out.length ? out.slice(0, out.l) : out;\n}\nfunction write_comments_biff2(ba /*:BufArray*/, comments /*:Array<[Comment[], number, number]>*/) {\n  comments.forEach(function (data) {\n    var text = data[0].map(function (cc) {\n      return cc.t;\n    }).join(\"\");\n    // TODO: should '\\n' be translated to '\\r' to correct for Excel 5.0 bug when exporting to BIFF2/3 ?\n    if (text.length <= 2048) return write_biff_rec(ba, 0x001C, write_NOTE_BIFF2(text, data[1], data[2]));\n    write_biff_rec(ba, 0x001C, write_NOTE_BIFF2(text.slice(0, 2048), data[1], data[2], text.length));\n    for (var i = 2048; i < text.length; i += 2048) write_biff_rec(ba, 0x001C, write_NOTE_BIFF2(text.slice(i, Math.min(i + 2048, text.length)), -1, -1, Math.min(2048, text.length - i)));\n  });\n}\n\n/* TODO: BIFF3/4 use different records -- see comments*/\nfunction write_ws_biff2_cell(ba /*:BufArray*/, cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, date1904 /*:boolean*/) {\n  var ifmt = 0;\n  if (cell.z != null) {\n    ifmt = opts._BIFF2FmtTable.indexOf(cell.z);\n    if (ifmt == -1) {\n      opts._BIFF2FmtTable.push(cell.z);\n      ifmt = opts._BIFF2FmtTable.length - 1;\n    }\n  }\n  var ixfe = 0;\n  if (cell.z != null) {\n    for (; ixfe < opts.cellXfs.length; ++ixfe) if (opts.cellXfs[ixfe].numFmtId == ifmt) break;\n    if (ixfe == opts.cellXfs.length) opts.cellXfs.push({\n      numFmtId: ifmt\n    });\n  }\n  if (cell.v != null) switch (cell.t) {\n    case 'd':\n    case 'n':\n      var v = cell.t == 'd' ? datenum(parseDate(cell.v, date1904), date1904) : cell.v;\n      if (opts.biff == 2 && v == (v | 0) && v >= 0 && v < 65536)\n        // 0x027E (RK) in BIFF3/4\n        write_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v, ixfe, ifmt));else if (isNaN(v))\n        // 0x0205 in BIFF3/4\n        write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, 0x24, \"e\")); // #NUM!\n      else if (!isFinite(v))\n        // 0x0205 in BIFF3/4\n        write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, 0x07, \"e\")); // #DIV/0!\n      else\n        // 0x0203 in BIFF3/4\n        write_biff_rec(ba, 0x0003, write_BIFF2NUM(R, C, v, ixfe, ifmt));\n      return;\n    case 'b':\n    case 'e':\n      // 0x0205 in BIFF3/4\n      write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t));\n      return;\n    /* TODO: codepage, sst */\n    case 's':\n    case 'str':\n      // 0x0204 in BIFF3/4\n      write_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, cell.v == null ? \"\" : String(cell.v).slice(0, 255)));\n      return;\n  }\n  // 0x0201 in BIFF3/4\n  write_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n}\nfunction write_ws_biff2(ba /*:BufArray*/, ws /*:Worksheet*/, idx /*:number*/, opts, wb /*:Workbook*/) {\n  var dense = ws[\"!data\"] != null;\n  var range = safe_decode_range(ws['!ref'] || \"A1\"),\n    rr = \"\",\n    cols /*:Array<string>*/ = [];\n  if (range.e.c > 0xFF || range.e.r > 0x3FFF) {\n    if (opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n    range.e.c = Math.min(range.e.c, 0xFF);\n    range.e.r = Math.min(range.e.c, 0x3FFF);\n  }\n  var date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n  var row = [],\n    comments = [];\n  /* TODO: 0x0000 / 0x0200 dimensions? */\n  for (var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n  for (var R = range.s.r; R <= range.e.r; ++R) {\n    if (dense) row = ws[\"!data\"][R] || [];\n    rr = encode_row(R);\n    for (C = range.s.c; C <= range.e.c; ++C) {\n      var cell = dense ? row[C] : ws[cols[C] + rr];\n      if (!cell) continue;\n      /* write cell */\n      write_ws_biff2_cell(ba, cell, R, C, opts, date1904);\n      if (cell.c) comments.push([cell.c, R, C]);\n    }\n  }\n\n  /* ... 0x12 0x19 0x13 (Password) */\n  write_comments_biff2(ba, comments);\n  /* 0x3d (Window1) ... */\n}\n\n/* Based on test files */\nfunction write_biff2_buf(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n  var o = opts || {};\n  var ba = buf_array();\n  var idx = 0;\n  for (var i = 0; i < wb.SheetNames.length; ++i) if (wb.SheetNames[i] == o.sheet) idx = i;\n  if (idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n  write_biff_rec(ba, o.biff == 4 ? 0x0409 : o.biff == 3 ? 0x0209 : 0x0009, write_BOF(wb, 0x10, o));\n  if (((wb.Workbook || {}).WBProps || {}).date1904) write_biff_rec(ba, 0x0022, writebool(true));\n  o.cellXfs = [{\n    numFmtId: 0\n  }];\n  o._BIFF2FmtTable /*:Array<string>*/ = [\"General\"];\n  o._Fonts = [];\n  var body = buf_array();\n  write_ws_biff2(body, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n  o._BIFF2FmtTable.forEach(function (f) {\n    if (o.biff <= 3) write_biff_rec(ba, 0x001E, write_BIFF2Format(f));else write_biff_rec(ba, 0x041E, write_BIFF4Format(f));\n  });\n  o.cellXfs.forEach(function (xf) {\n    switch (o.biff) {\n      case 2:\n        write_biff_rec(ba, 0x0043, write_BIFF2XF(xf));\n        break;\n      case 3:\n        write_biff_rec(ba, 0x0243, write_BIFF3XF(xf));\n        break;\n      case 4:\n        write_biff_rec(ba, 0x0443, write_BIFF4XF(xf));\n        break;\n    }\n  });\n  delete o._BIFF2FmtTable;\n  delete o.cellXfs;\n  delete o._Fonts;\n  ba.push(body.end());\n  write_biff_rec(ba, 0x000A);\n  return ba.end();\n}\nvar b8oid = 1,\n  b8ocnts /*:Array<[number, number, number]>*/ = [];\nfunction write_MsoDrawingGroup() {\n  var buf = new_buf(82 + 8 * b8ocnts.length);\n  /* [MS-ODRAW] 2.2.12 OfficeArtDggContainer */\n  buf.write_shift(2, 0x0F);\n  buf.write_shift(2, 0xF000);\n  buf.write_shift(4, 74 + 8 * b8ocnts.length);\n  /* 2.2.48 OfficeArtFDGGBlock */\n  {\n    buf.write_shift(2, 0);\n    buf.write_shift(2, 0xF006);\n    buf.write_shift(4, 16 + 8 * b8ocnts.length);\n    /* 2.2.47 OfficeArtFDGG */\n    {\n      buf.write_shift(4, b8oid);\n      buf.write_shift(4, b8ocnts.length + 1);\n      var acc = 0;\n      for (var i = 0; i < b8ocnts.length; ++i) acc += b8ocnts[i] && b8ocnts[i][1] || 0;\n      buf.write_shift(4, acc);\n      buf.write_shift(4, b8ocnts.length);\n    }\n    /* 2.2.46 OfficeArtIDCL + */\n    b8ocnts.forEach(function (b8) {\n      buf.write_shift(4, b8[0]);\n      buf.write_shift(4, b8[2]);\n    });\n  }\n  /* 2.2.9 OfficeArtFOPT */\n  {\n    buf.write_shift(2, 0x33); // 0x03 | (3 << 4)\n    buf.write_shift(2, 0xF00B);\n    buf.write_shift(4, 0x12); // 3 * 6\n    /* 2.3.21.15 Text Boolean Properties */\n    buf.write_shift(2, 0xBF);\n    buf.write_shift(4, 0x00080008);\n    /* 2.3.7.2 fillColor */\n    buf.write_shift(2, 0x0181);\n    buf.write_shift(4, 0x08000041);\n    /* 2.3.8.1 lineColor */\n    buf.write_shift(2, 0x01C0);\n    buf.write_shift(4, 0x08000040);\n  }\n  /* 2.2.45 OfficeArtSplitMenuColorContainer */\n  {\n    buf.write_shift(2, 0x40);\n    buf.write_shift(2, 0xF11E);\n    buf.write_shift(4, 16);\n    buf.write_shift(4, 0x0800000D);\n    buf.write_shift(4, 0x0800000C);\n    buf.write_shift(4, 0x08000017);\n    buf.write_shift(4, 0x100000F7);\n  }\n  return buf;\n}\nfunction write_comments_biff8(ba /*:BufArray*/, comments /*:Array<[Comment[], number, number]>*/) {\n  var notes /*:Array<RawData>*/ = [],\n    sz = 0,\n    pl = buf_array(),\n    baseid = b8oid;\n  var _oasc;\n  comments.forEach(function (c, ci) {\n    var author = \"\";\n    var text = c[0].map(function (t) {\n      if (t.a && !author) author = t.a;\n      return t.t;\n    }).join(\"\");\n    ++b8oid;\n\n    /* 2.2.14 OfficeArtSpContainer */\n    {\n      var oasc = new_buf(0x96);\n      oasc.write_shift(2, 0x0F);\n      oasc.write_shift(2, 0xF004);\n      oasc.write_shift(4, 0x96);\n      /* 2.2.40 OfficeArtFSP */\n      {\n        oasc.write_shift(2, 0xca2); // 0x02 | (0xca << 4)\n        oasc.write_shift(2, 0xF00A);\n        oasc.write_shift(4, 8);\n        oasc.write_shift(4, b8oid);\n        oasc.write_shift(4, 0xA00);\n      }\n      /* 2.2.9 OfficeArtFOPT */\n      {\n        oasc.write_shift(2, 0xE3); // 0x03 | (14 << 4)\n        oasc.write_shift(2, 0xF00B);\n        oasc.write_shift(4, 0x54); // 14 * 6\n        /* 2.3.21.1 ITxid */\n        oasc.write_shift(2, 0x80);\n        oasc.write_shift(4, 0);\n        /* 2.3.21.12 txdir */\n        oasc.write_shift(2, 0x8B);\n        oasc.write_shift(4, 0x02);\n        /* 2.3.21.15 Text Boolean Properties */\n        oasc.write_shift(2, 0xBF);\n        oasc.write_shift(4, 0x00080008);\n        /* 2.3.6.30 cxk */\n        oasc.write_shift(2, 0x0158);\n        oasc.l += 4;\n        /* 2.3.7.2 fillColor */\n        oasc.write_shift(2, 0x0181);\n        oasc.write_shift(4, 0x08000050);\n        /* 2.3.7.4 fillBackColor */\n        oasc.write_shift(2, 0x0183);\n        oasc.write_shift(4, 0x08000050);\n        /* 2.3.7.6 fillCrMod */\n        oasc.write_shift(2, 0x0185);\n        oasc.write_shift(4, 0x100000F4);\n        /* 2.3.7.43 Fill Style Boolean Properties */\n        oasc.write_shift(2, 0x01BF);\n        oasc.write_shift(4, 0x00100010);\n        /* 2.3.8.1 lineColor */\n        oasc.write_shift(2, 0x01C0);\n        oasc.write_shift(4, 0x08000051);\n        /* 2.3.8.4 lineCrMod */\n        oasc.write_shift(2, 0x01C3);\n        oasc.write_shift(4, 0x100000F4);\n        /* 2.3.13.2 shadowColor */\n        oasc.write_shift(2, 0x0201);\n        oasc.write_shift(4, 0x08000051);\n        /* 2.3.13.4 shadowCrMod */\n        oasc.write_shift(2, 0x0203);\n        oasc.write_shift(4, 0x100000F4);\n        /* 2.3.13.23 Shadow Style Boolean Properties */\n        oasc.write_shift(2, 0x023F);\n        oasc.write_shift(4, 0x00030001);\n        /* 2.3.4.44 Group Shape Boolean Properties */\n        oasc.write_shift(2, 0x03BF);\n        oasc.write_shift(4, 0x00020000 | (c[0].hidden ? 2 : 0));\n      }\n      /* [MS-XLS] 2.5.193 OfficeArtClientAnchorSheet */\n      {\n        oasc.l += 2;\n        oasc.write_shift(2, 0xF010);\n        oasc.write_shift(4, 0x12);\n        oasc.write_shift(2, 0x3); // do not move or size with cells\n        oasc.write_shift(2, c[2] + 2);\n        oasc.l += 2;\n        oasc.write_shift(2, c[1] + 1);\n        oasc.l += 2;\n        oasc.write_shift(2, c[2] + 4);\n        oasc.l += 2;\n        oasc.write_shift(2, c[1] + 5);\n        oasc.l += 2;\n      }\n      /* [MS-XLS] 2.5.194 OfficeArtClientData */\n      {\n        oasc.l += 2;\n        oasc.write_shift(2, 0xF011);\n        oasc.l += 4;\n      }\n      oasc.l = 0x96;\n      if (ci == 0) /* write_biff_rec(pl, 0x003C, oasc); */_oasc = oasc;else write_biff_rec(pl, 0x00EC, oasc);\n    }\n    sz += 0x96;\n\n    /* [MS-XLS] 2.4.181 Obj */\n    {\n      var obj = new_buf(52); // 22 + 26 + 4\n      /* [MS-XLS] 2.5.143 FtCmo */\n      obj.write_shift(2, 0x15);\n      obj.write_shift(2, 0x12);\n      obj.write_shift(2, 0x19);\n      obj.write_shift(2, b8oid);\n      obj.write_shift(2, 0);\n      obj.l = 22;\n      /* [MS-XLS] 2.5.149 FtNts */\n      obj.write_shift(2, 0x0D);\n      obj.write_shift(2, 0x16);\n      obj.write_shift(4, 0x62726272);\n      obj.write_shift(4, 0x95374305);\n      obj.write_shift(4, 0x80301328);\n      obj.write_shift(4, 0x69696904 + b8oid * 256);\n      obj.write_shift(2, 0);\n      obj.write_shift(4, 0);\n      // reserved\n      obj.l += 4;\n      write_biff_rec(pl, 0x005D, obj);\n    }\n\n    /* [MS-XLS] 2.5.195 OfficeArtClientTextbox */\n    {\n      var oact = new_buf(8);\n      oact.l += 2;\n      oact.write_shift(2, 0xF00D);\n      oact.l += 4;\n      write_biff_rec(pl, 0x00EC, oact);\n    }\n    sz += 8;\n\n    /* [MS-XLS] 2.4.329 TxO */\n    {\n      var txo = new_buf(18);\n      txo.write_shift(2, 0x12);\n      txo.l += 8;\n      txo.write_shift(2, text.length);\n      txo.write_shift(2, 0x10);\n      txo.l += 4;\n      write_biff_rec(pl, 0x01b6, txo);\n      /* text continue record TODO: switch to wide strings */\n      {\n        var cont = new_buf(1 + text.length);\n        cont.write_shift(1, 0);\n        cont.write_shift(text.length, text, \"sbcs\");\n        write_biff_rec(pl, 0x003C, cont);\n      }\n      /* formatting continue records */\n      {\n        var conf = new_buf(0x10);\n        conf.l += 8;\n        conf.write_shift(2, text.length);\n        conf.l += 6;\n        write_biff_rec(pl, 0x003C, conf);\n      }\n    }\n\n    /* 2.4.179 Note */\n    {\n      var notesh = new_buf(12 + author.length);\n      notesh.write_shift(2, c[1]);\n      notesh.write_shift(2, c[2]);\n      notesh.write_shift(2, 0 | (c[0].hidden ? 0 : 2));\n      notesh.write_shift(2, b8oid);\n      notesh.write_shift(2, author.length);\n      notesh.write_shift(1, 0);\n      notesh.write_shift(author.length, author, \"sbcs\");\n      notesh.l++;\n      notes.push(notesh);\n    }\n  });\n  /* [MS-ODRAW] 2.2.13 OfficeArtDgContainer */\n  {\n    var hdr = new_buf(80);\n    hdr.write_shift(2, 0x0F);\n    hdr.write_shift(2, 0xF002);\n    hdr.write_shift(4, sz + hdr.length - 8);\n    /* [MS-ODRAW] 2.2.49 OfficeArtFDG */\n    {\n      hdr.write_shift(2, 0x10);\n      hdr.write_shift(2, 0xF008);\n      hdr.write_shift(4, 0x08);\n      hdr.write_shift(4, comments.length + 1);\n      hdr.write_shift(4, b8oid);\n    }\n    /* [MS-ODRAW] 2.2.16 OfficeArtSpgrContainer */\n    {\n      hdr.write_shift(2, 0x0f);\n      hdr.write_shift(2, 0xF003);\n      hdr.write_shift(4, sz + 0x30);\n      /* [MS-ODRAW] 2.2.14 OfficeArtSpContainer */\n      {\n        hdr.write_shift(2, 0x0f);\n        hdr.write_shift(2, 0xF004);\n        hdr.write_shift(4, 0x28);\n        /* [MS-ODRAW] 2.2.38 OfficeArtFSPGR */\n        {\n          hdr.write_shift(2, 0x01);\n          hdr.write_shift(2, 0xF009);\n          hdr.write_shift(4, 0x10);\n          hdr.l += 16;\n        }\n        /* [MS-ODRAW] 2.2.40 OfficeArtFSP */\n        {\n          hdr.write_shift(2, 0x02);\n          hdr.write_shift(2, 0xF00A);\n          hdr.write_shift(4, 0x08);\n          hdr.write_shift(4, baseid);\n          hdr.write_shift(4, 0x05);\n        }\n      }\n    }\n    write_biff_rec(ba, 0x00EC, /* hdr */_oasc ? bconcat([hdr, _oasc]) : hdr);\n  }\n  ba.push(pl.end());\n  notes.forEach(function (n) {\n    write_biff_rec(ba, 0x001C, n);\n  });\n  b8ocnts.push([baseid, comments.length + 1, b8oid]);\n  ++b8oid;\n}\nfunction write_FONTS_biff8(ba, data, opts) {\n  write_biff_rec(ba, 0x0031 /* Font */, write_Font({\n    sz: 12,\n    color: {\n      theme: 1\n    },\n    name: \"Arial\",\n    family: 2,\n    scheme: \"minor\"\n  }, opts));\n}\nfunction write_FMTS_biff8(ba, NF /*:?SSFTable*/, opts) {\n  if (!NF) return;\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    /*:: if(!NF) return; */\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) write_biff_rec(ba, 0x041E /* Format */, write_Format(i, NF[i], opts));\n  });\n}\nfunction write_FEAT(ba, ws) {\n  /* [MS-XLS] 2.4.112 */\n  var o = new_buf(19);\n  o.write_shift(4, 0x867);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(2, 3);\n  o.write_shift(1, 1);\n  o.write_shift(4, 0);\n  write_biff_rec(ba, 0x0867 /* FeatHdr */, o);\n  /* [MS-XLS] 2.4.111 */\n  o = new_buf(39);\n  o.write_shift(4, 0x868);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(2, 3);\n  o.write_shift(1, 0);\n  o.write_shift(4, 0);\n  o.write_shift(2, 1);\n  o.write_shift(4, 4);\n  o.write_shift(2, 0);\n  write_Ref8U(safe_decode_range(ws['!ref'] || \"A1\"), o);\n  o.write_shift(4, 4);\n  write_biff_rec(ba, 0x0868 /* Feat */, o);\n}\nfunction write_CELLXFS_biff8(ba, opts) {\n  for (var i = 0; i < 16; ++i) write_biff_rec(ba, 0x00e0 /* XF */, write_XF({\n    numFmtId: 0,\n    style: true\n  }, 0, opts));\n  opts.cellXfs.forEach(function (c) {\n    write_biff_rec(ba, 0x00e0 /* XF */, write_XF(c, 0, opts));\n  });\n}\nfunction write_ws_biff8_hlinks(ba /*:BufArray*/, ws) {\n  for (var R = 0; R < ws['!links'].length; ++R) {\n    var HL = ws['!links'][R];\n    write_biff_rec(ba, 0x01b8 /* HLink */, write_HLink(HL));\n    if (HL[1].Tooltip) write_biff_rec(ba, 0x0800 /* HLinkTooltip */, write_HLinkTooltip(HL));\n  }\n  delete ws['!links'];\n}\nfunction write_ws_cols_biff8(ba, cols) {\n  if (!cols) return;\n  var cnt = 0;\n  cols.forEach(function (col, idx) {\n    if (++cnt <= 256 && col) {\n      write_biff_rec(ba, 0x007d /* ColInfo */, write_ColInfo(col_obj_w(idx, col), idx));\n    }\n  });\n}\nfunction write_ws_biff8_cell(ba /*:BufArray*/, cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, date1904 /*:boolean*/) {\n  var os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n  if (cell.v == null && !cell.bf) {\n    write_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n    return;\n  }\n  if (cell.bf) write_biff_rec(ba, 0x0006 /* Formula */, write_Formula(cell, R, C, opts, os));else switch (cell.t) {\n    case 'd':\n    case 'n':\n      var v = cell.t == 'd' ? datenum(parseDate(cell.v, date1904), date1904) : cell.v;\n      if (isNaN(v)) write_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, 0x24, os, opts, \"e\")); // #NUM!\n      else if (!isFinite(v)) write_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, 0x07, os, opts, \"e\")); // #DIV/0!\n      /* TODO: emit RK as appropriate */else write_biff_rec(ba, 0x0203 /* Number */, write_Number(R, C, v, os, opts));\n      break;\n    case 'b':\n    case 'e':\n      write_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, cell.v, os, opts, cell.t));\n      break;\n    /* TODO: codepage, sst */\n    case 's':\n    case 'str':\n      if (opts.bookSST) {\n        var isst = get_sst_id(opts.Strings, cell.v == null ? \"\" : String(cell.v), opts.revStrings);\n        write_biff_rec(ba, 0x00fd /* LabelSst */, write_LabelSst(R, C, isst, os, opts));\n      } else write_biff_rec(ba, 0x0204 /* Label */, write_Label(R, C, (cell.v == null ? \"\" : String(cell.v)).slice(0, 255), os, opts));\n      break;\n    default:\n      write_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n  }\n}\n\n/* [MS-XLS] 2.1.7.20.5 */\nfunction write_ws_biff8(idx /*:number*/, opts, wb /*:Workbook*/) {\n  var ba = buf_array();\n  var s = wb.SheetNames[idx],\n    ws = wb.Sheets[s] || {};\n  var _WB /*:WBWBProps*/ = (wb || {}).Workbook || {} /*:any*/;\n  var _sheet /*:WBWSProp*/ = (_WB.Sheets || [])[idx] || {} /*:any*/;\n  var dense = ws[\"!data\"] != null;\n  var b8 = opts.biff == 8;\n  var ref /*:string*/,\n    rr = \"\",\n    cols /*:Array<string>*/ = [];\n  var range = safe_decode_range(ws['!ref'] || \"A1\");\n  var MAX_ROWS = b8 ? 65536 : 16384;\n  if (range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n    if (opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n    range.e.c = Math.min(range.e.c, 0xFF);\n    range.e.r = Math.min(range.e.c, MAX_ROWS - 1);\n  }\n  write_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n  /* [Uncalced] Index */\n  write_biff_rec(ba, 0x000d /* CalcMode */, writeuint16(1));\n  write_biff_rec(ba, 0x000c /* CalcCount */, writeuint16(100));\n  write_biff_rec(ba, 0x000f /* CalcRefMode */, writebool(true));\n  write_biff_rec(ba, 0x0011 /* CalcIter */, writebool(false));\n  write_biff_rec(ba, 0x0010 /* CalcDelta */, write_Xnum(0.001));\n  write_biff_rec(ba, 0x005f /* CalcSaveRecalc */, writebool(true));\n  write_biff_rec(ba, 0x002a /* PrintRowCol */, writebool(false));\n  write_biff_rec(ba, 0x002b /* PrintGrid */, writebool(false));\n  write_biff_rec(ba, 0x0082 /* GridSet */, writeuint16(1));\n  write_biff_rec(ba, 0x0080 /* Guts */, write_Guts([0, 0]));\n  /* DefaultRowHeight WsBool [Sync] [LPr] [HorizontalPageBreaks] [VerticalPageBreaks] */\n  /* Header (string) */\n  /* Footer (string) */\n  write_biff_rec(ba, 0x0083 /* HCenter */, writebool(false));\n  write_biff_rec(ba, 0x0084 /* VCenter */, writebool(false));\n  /* ... */\n  if (b8) write_ws_cols_biff8(ba, ws[\"!cols\"]);\n  /* ... */\n  write_biff_rec(ba, 0x0200 /* Dimensions */, write_Dimensions(range, opts));\n  /* ... */\n\n  var date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n  if (b8) ws['!links'] = [];\n  for (var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n  var comments = [];\n  var row = [];\n  for (var R = range.s.r; R <= range.e.r; ++R) {\n    if (dense) row = ws[\"!data\"][R] || [];\n    rr = encode_row(R);\n    for (C = range.s.c; C <= range.e.c; ++C) {\n      ref = cols[C] + rr;\n      var cell = dense ? row[C] : ws[ref];\n      if (!cell) continue;\n      /* write cell */\n      write_ws_biff8_cell(ba, cell, R, C, opts, date1904);\n      if (b8 && cell.l) ws['!links'].push([ref, cell.l]);\n      if (cell.c) comments.push([cell.c, R, C]);\n    }\n  }\n  var cname /*:string*/ = _sheet.CodeName || _sheet.name || s;\n  /* ... */\n  if (b8) write_comments_biff8(ba, comments);else write_comments_biff2(ba, comments);\n  /* ... */\n  if (b8) write_biff_rec(ba, 0x023e /* Window2 */, write_Window2((_WB.Views || [])[0]));\n  /* ... */\n  if (b8 && (ws['!merges'] || []).length) write_biff_rec(ba, 0x00e5 /* MergeCells */, write_MergeCells(ws['!merges']));\n  /* [LRng] *QUERYTABLE [PHONETICINFO] CONDFMTS */\n  if (b8) write_ws_biff8_hlinks(ba, ws);\n  /* [DVAL] */\n  write_biff_rec(ba, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n  /* *WebPub *CellWatch [SheetExt] */\n  if (b8) write_FEAT(ba, ws);\n  /* *FEAT11 *RECORD12 */\n  write_biff_rec(ba, 0x000a /* EOF */);\n  return ba.end();\n}\n\n/* [MS-XLS] 2.1.7.20.3 */\nfunction write_biff8_global(wb /*:Workbook*/, bufs, opts /*:WriteOpts*/) {\n  var A = buf_array();\n  var _WB /*:WBWBProps*/ = (wb || {}).Workbook || {} /*:any*/;\n  var _sheets /*:Array<WBWSProp>*/ = _WB.Sheets || [];\n  var _wb /*:WBProps*/ = /*::((*/_WB.WBProps || {/*::CodeName:\"ThisWorkbook\"*/} /*:: ):any)*/;\n  var b8 = opts.biff == 8,\n    b5 = opts.biff == 5;\n  write_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n  if (opts.bookType == \"xla\") write_biff_rec(A, 0x0087 /* Addin */);\n  write_biff_rec(A, 0x00e1 /* InterfaceHdr */, b8 ? writeuint16(0x04b0) : null);\n  write_biff_rec(A, 0x00c1 /* Mms */, writezeroes(2));\n  if (b5) write_biff_rec(A, 0x00bf /* ToolbarHdr */);\n  if (b5) write_biff_rec(A, 0x00c0 /* ToolbarEnd */);\n  write_biff_rec(A, 0x00e2 /* InterfaceEnd */);\n  write_biff_rec(A, 0x005c /* WriteAccess */, write_WriteAccess(\"SheetJS\", opts));\n  /* [FileSharing] */\n  write_biff_rec(A, 0x0042 /* CodePage */, writeuint16(b8 ? 0x04b0 : 0x04E4));\n  /* *2047 Lel */\n  if (b8) write_biff_rec(A, 0x0161 /* DSF */, writeuint16(0));\n  if (b8) write_biff_rec(A, 0x01c0 /* Excel9File */);\n  write_biff_rec(A, 0x013d /* RRTabId */, write_RRTabId(wb.SheetNames.length));\n  if (b8 && wb.vbaraw) write_biff_rec(A, 0x00d3 /* ObProj */);\n  /* [ObNoMacros] */\n  if (b8 && wb.vbaraw) {\n    var cname /*:string*/ = _wb.CodeName || \"ThisWorkbook\";\n    write_biff_rec(A, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n  }\n  write_biff_rec(A, 0x009c /* BuiltInFnGroupCount */, writeuint16(0x11));\n  /* *FnGroupName *FnGrp12 */\n  /* *Lbl */\n  /* [OleObjectSize] */\n  write_biff_rec(A, 0x0019 /* WinProtect */, writebool(false));\n  write_biff_rec(A, 0x0012 /* Protect */, writebool(false));\n  write_biff_rec(A, 0x0013 /* Password */, writeuint16(0));\n  if (b8) write_biff_rec(A, 0x01af /* Prot4Rev */, writebool(false));\n  if (b8) write_biff_rec(A, 0x01bc /* Prot4RevPass */, writeuint16(0));\n  write_biff_rec(A, 0x003d /* Window1 */, write_Window1(opts));\n  write_biff_rec(A, 0x0040 /* Backup */, writebool(false));\n  write_biff_rec(A, 0x008d /* HideObj */, writeuint16(0));\n  write_biff_rec(A, 0x0022 /* Date1904 */, writebool(safe1904(wb) == \"true\"));\n  write_biff_rec(A, 0x000e /* CalcPrecision */, writebool(true));\n  if (b8) write_biff_rec(A, 0x01b7 /* RefreshAll */, writebool(false));\n  write_biff_rec(A, 0x00DA /* BookBool */, writeuint16(0));\n  /* ... */\n  write_FONTS_biff8(A, wb, opts);\n  write_FMTS_biff8(A, wb.SSF, opts);\n  write_CELLXFS_biff8(A, opts);\n  /* ... */\n  if (b8) write_biff_rec(A, 0x0160 /* UsesELFs */, writebool(false));\n  var a = A.end();\n  var C = buf_array();\n  /* METADATA [MTRSettings] [ForceFullCalculation] */\n  if (b8) write_biff_rec(C, 0x008C /* Country */, write_Country());\n  /* *SUPBOOK *LBL *RTD [RecalcId] *HFPicture */\n\n  /* BIFF8: MsoDrawingGroup [*Continue] */\n  if (b8 && b8ocnts.length) write_biff_rec(C, 0x00EB /* MsoDrawingGroup */, write_MsoDrawingGroup());\n  /* BIFF8: [SST *Continue] ExtSST */\n  if (b8 && opts.Strings) write_biff_continue(C, 0x00FC /* SST */, write_SST(opts.Strings, opts));\n\n  /* *WebPub [WOpt] [CrErr] [BookExt] *FeatHdr *DConn [THEME] [CompressPictures] [Compat12] [GUIDTypeLib] */\n  write_biff_rec(C, 0x000A /* EOF */);\n  var c = C.end();\n  var B = buf_array();\n  var blen = 0,\n    j = 0;\n  for (j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n  var start = a.length + blen + c.length;\n  for (j = 0; j < wb.SheetNames.length; ++j) {\n    var _sheet /*:WBWSProp*/ = _sheets[j] || {} /*:any*/;\n    write_biff_rec(B, 0x0085 /* BoundSheet8 */, write_BoundSheet8({\n      pos: start,\n      hs: _sheet.Hidden || 0,\n      dt: 0,\n      name: wb.SheetNames[j]\n    }, opts));\n    start += bufs[j].length;\n  }\n  /* 1*BoundSheet8 */\n  var b = B.end();\n  if (blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n  var out = [];\n  if (a.length) out.push(a);\n  if (b.length) out.push(b);\n  if (c.length) out.push(c);\n  return bconcat(out);\n}\n\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\nfunction write_biff8_buf(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n  var o = opts || {};\n  var bufs = [];\n  if (wb && !wb.SSF) {\n    wb.SSF = dup(table_fmt);\n  }\n  if (wb && wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    o.revssf = evert_num(wb.SSF);\n    o.revssf[wb.SSF[65535]] = 0;\n    o.ssf = wb.SSF;\n  }\n  b8oid = 1;\n  b8ocnts = [];\n  o.Strings = /*::((*/[] /*:: :any):SST)*/;\n  o.Strings.Count = 0;\n  o.Strings.Unique = 0;\n  fix_write_opts(o);\n  o.cellXfs = [];\n  get_cell_style(o.cellXfs, {}, {\n    revssf: {\n      \"General\": 0\n    }\n  });\n  if (!wb.Props) wb.Props = {};\n  for (var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n  bufs.unshift(write_biff8_global(wb, bufs, o));\n  return bconcat(bufs);\n}\nfunction write_biff_buf(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n  for (var i = 0; i <= wb.SheetNames.length; ++i) {\n    var ws = wb.Sheets[wb.SheetNames[i]];\n    if (!ws || !ws[\"!ref\"]) continue;\n    var range = decode_range(ws[\"!ref\"]);\n    if (range.e.c > 255) {\n      // note: 255 is IV\n      if (typeof console != \"undefined\" && console.error) console.error(\"Worksheet '\" + wb.SheetNames[i] + \"' extends beyond column IV (255).  Data may be lost.\");\n    }\n  }\n  var o = opts || {};\n  switch (o.biff || 2) {\n    case 8:\n    case 5:\n      return write_biff8_buf(wb, opts);\n    case 4:\n    case 3:\n    case 2:\n      return write_biff2_buf(wb, opts);\n  }\n  throw new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n}\n/* note: browser DOM element cannot see mso- style attrs, must parse */\nfunction html_to_sheet(str /*:string*/, _opts) /*:Workbook*/{\n  var opts = _opts || {};\n  var dense = opts.dense != null ? opts.dense : DENSE;\n  var ws /*:Worksheet*/ = {} /*:any*/;\n  if (dense) ws[\"!data\"] = [];\n  str = str_remove_ng(str, \"<!--\", \"-->\");\n  var mtch /*:any*/ = str.match(/<table/i);\n  if (!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n  var mtch2 /*:any*/ = str.match(/<\\/table/i);\n  var i /*:number*/ = mtch.index,\n    j /*:number*/ = mtch2 && mtch2.index || str.length;\n  var rows = split_regex(str.slice(i, j), /(:?<tr[^<>]*>)/i, \"<tr>\");\n  var R = -1,\n    C = 0,\n    RS = 0,\n    CS = 0;\n  var range /*:Range*/ = {\n    s: {\n      r: 10000000,\n      c: 10000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var merges /*:Array<Range>*/ = [];\n  for (i = 0; i < rows.length; ++i) {\n    var row = rows[i].trim();\n    var hd = row.slice(0, 3).toLowerCase();\n    if (hd == \"<tr\") {\n      ++R;\n      if (opts.sheetRows && opts.sheetRows <= R) {\n        --R;\n        break;\n      }\n      C = 0;\n      continue;\n    }\n    if (hd != \"<td\" && hd != \"<th\") continue;\n    var cells = row.split(/<\\/t[dh]>/i);\n    for (j = 0; j < cells.length; ++j) {\n      var cell = cells[j].trim();\n      if (!cell.match(/<t[dh]/i)) continue;\n      var m = cell,\n        cc = 0;\n      /* TODO: parse styles etc */\n      while (m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc + 1);\n      for (var midx = 0; midx < merges.length; ++midx) {\n        var _merge /*:Range*/ = merges[midx];\n        if (_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) {\n          C = _merge.e.c + 1;\n          midx = -1;\n        }\n      }\n      var tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n      CS = tag.colspan ? +tag.colspan : 1;\n      if ((RS = +tag.rowspan) > 1 || CS > 1) merges.push({\n        s: {\n          r: R,\n          c: C\n        },\n        e: {\n          r: R + (RS || 1) - 1,\n          c: C + CS - 1\n        }\n      });\n      var _t /*:string*/ = tag.t || tag[\"data-t\"] || \"\";\n      /* TODO: generate stub cells */\n      if (!m.length) {\n        C += CS;\n        continue;\n      }\n      m = htmldecode(m);\n      if (range.s.r > R) range.s.r = R;\n      if (range.e.r < R) range.e.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.c < C) range.e.c = C;\n      if (!m.length) {\n        C += CS;\n        continue;\n      }\n      var o /*:Cell*/ = {\n        t: 's',\n        v: m\n      };\n      if (opts.raw || !m.trim().length || _t == 's') {} else if (m === 'TRUE') o = {\n        t: 'b',\n        v: true\n      };else if (m === 'FALSE') o = {\n        t: 'b',\n        v: false\n      };else if (!isNaN(fuzzynum(m))) o = {\n        t: 'n',\n        v: fuzzynum(m)\n      };else if (!isNaN(fuzzydate(m).getDate())) {\n        o = {\n          t: 'd',\n          v: parseDate(m)\n        } /*:any*/;\n        if (opts.UTC === false) o.v = utc_to_local(o.v);\n        if (!opts.cellDates) o = {\n          t: 'n',\n          v: datenum(o.v)\n        } /*:any*/;\n        o.z = opts.dateNF || table_fmt[14];\n      }\n      if (o.cellText !== false) o.w = m;\n      if (dense) {\n        if (!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n        ws[\"!data\"][R][C] = o;\n      } else ws[encode_cell({\n        r: R,\n        c: C\n      })] = o;\n      C += CS;\n    }\n  }\n  ws['!ref'] = encode_range(range);\n  if (merges.length) ws[\"!merges\"] = merges;\n  return ws;\n}\nfunction make_html_row(ws /*:Worksheet*/, r /*:Range*/, R /*:number*/, o /*:Sheet2HTMLOpts*/) /*:string*/{\n  var M /*:Array<Range>*/ = ws['!merges'] || [];\n  var oo /*:Array<string>*/ = [];\n  var sp = {} /*:any*/;\n  var dense = ws[\"!data\"] != null;\n  for (var C = r.s.c; C <= r.e.c; ++C) {\n    var RS = 0,\n      CS = 0;\n    for (var j = 0; j < M.length; ++j) {\n      if (M[j].s.r > R || M[j].s.c > C) continue;\n      if (M[j].e.r < R || M[j].e.c < C) continue;\n      if (M[j].s.r < R || M[j].s.c < C) {\n        RS = -1;\n        break;\n      }\n      RS = M[j].e.r - M[j].s.r + 1;\n      CS = M[j].e.c - M[j].s.c + 1;\n      break;\n    }\n    if (RS < 0) continue;\n    var coord = encode_col(C) + encode_row(R);\n    var cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[coord];\n    /* TODO: html entities */\n    var w = cell && cell.v != null && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n    sp = {} /*:any*/;\n    if (RS > 1) sp.rowspan = RS;\n    if (CS > 1) sp.colspan = CS;\n    if (o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';else if (cell) {\n      sp[\"data-t\"] = cell && cell.t || 'z';\n      // note: data-v is unaffected by the timezone interpretation\n      if (cell.v != null) sp[\"data-v\"] = escapehtml(cell.v instanceof Date ? cell.v.toISOString() : cell.v);\n      if (cell.z != null) sp[\"data-z\"] = cell.z;\n      if (cell.l && (cell.l.Target || \"#\").charAt(0) != \"#\") w = '<a href=\"' + escapehtml(cell.l.Target) + '\">' + w + '</a>';\n    }\n    sp.id = (o.id || \"sjs\") + \"-\" + coord;\n    oo.push(writextag('td', w, sp));\n  }\n  var preamble = \"<tr>\";\n  return preamble + oo.join(\"\") + \"</tr>\";\n}\nvar HTML_BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\nvar HTML_END = '</body></html>';\nfunction html_to_workbook(str /*:string*/, opts) /*:Workbook*/{\n  var mtch = str_match_xml_ig(str, \"table\");\n  if (!mtch || mtch.length == 0) throw new Error(\"Invalid HTML: could not find <table>\");\n  if (mtch.length == 1) {\n    var w = sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);\n    w.bookType = \"html\";\n    return w;\n  }\n  var wb = book_new();\n  mtch.forEach(function (s, idx) {\n    book_append_sheet(wb, html_to_sheet(s, opts), \"Sheet\" + (idx + 1));\n  });\n  wb.bookType = \"html\";\n  return wb;\n}\nfunction make_html_preamble(ws /*:Worksheet*/, R /*:Range*/, o /*:Sheet2HTMLOpts*/) /*:string*/{\n  var out /*:Array<string>*/ = [];\n  return out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n}\nfunction sheet_to_html(ws /*:Worksheet*/, opts /*:?Sheet2HTMLOpts*/ /*, wb:?Workbook*/) /*:string*/{\n  var o = opts || {};\n  var header = o.header != null ? o.header : HTML_BEGIN;\n  var footer = o.footer != null ? o.footer : HTML_END;\n  var out /*:Array<string>*/ = [header];\n  var r = decode_range(ws['!ref'] || \"A1\");\n  out.push(make_html_preamble(ws, r, o));\n  if (ws[\"!ref\"]) for (var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n  out.push(\"</table>\" + footer);\n  return out.join(\"\");\n}\nfunction sheet_add_dom(ws /*:Worksheet*/, table /*:HTMLElement*/, _opts /*:?any*/) /*:Worksheet*/{\n  var rows /*:HTMLCollection<HTMLTableRowElement>*/ = table.rows;\n  if (!rows) {\n    /* not an HTML TABLE */\n    throw \"Unsupported origin when \" + table.tagName + \" is not a TABLE\";\n  }\n  var opts = _opts || {};\n  var dense = ws[\"!data\"] != null;\n  var or_R = 0,\n    or_C = 0;\n  if (opts.origin != null) {\n    if (typeof opts.origin == 'number') or_R = opts.origin;else {\n      var _origin /*:CellAddress*/ = typeof opts.origin == \"string\" ? decode_cell(opts.origin) : opts.origin;\n      or_R = _origin.r;\n      or_C = _origin.c;\n    }\n  }\n  var sheetRows = Math.min(opts.sheetRows || 10000000, rows.length);\n  var range /*:Range*/ = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: or_R,\n      c: or_C\n    }\n  };\n  if (ws[\"!ref\"]) {\n    var _range /*:Range*/ = decode_range(ws[\"!ref\"]);\n    range.s.r = Math.min(range.s.r, _range.s.r);\n    range.s.c = Math.min(range.s.c, _range.s.c);\n    range.e.r = Math.max(range.e.r, _range.e.r);\n    range.e.c = Math.max(range.e.c, _range.e.c);\n    if (or_R == -1) range.e.r = or_R = _range.e.r + 1;\n  }\n  var merges /*:Array<Range>*/ = [],\n    midx = 0;\n  var rowinfo /*:Array<RowInfo>*/ = ws[\"!rows\"] || (ws[\"!rows\"] = []);\n  var _R = 0,\n    R = 0,\n    _C = 0,\n    C = 0,\n    RS = 0,\n    CS = 0;\n  if (!ws[\"!cols\"]) ws['!cols'] = [];\n  for (; _R < rows.length && R < sheetRows; ++_R) {\n    var row /*:HTMLTableRowElement*/ = rows[_R];\n    if (is_dom_element_hidden(row)) {\n      if (opts.display) continue;\n      rowinfo[R] = {\n        hidden: true\n      };\n    }\n    var elts /*:HTMLCollection<HTMLTableCellElement>*/ = row.cells;\n    for (_C = C = 0; _C < elts.length; ++_C) {\n      var elt /*:HTMLTableCellElement*/ = elts[_C];\n      if (opts.display && is_dom_element_hidden(elt)) continue;\n      var v /*:?string*/ = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);\n      var z /*:?string*/ = elt.getAttribute('data-z') || elt.getAttribute('z');\n      for (midx = 0; midx < merges.length; ++midx) {\n        var m /*:Range*/ = merges[midx];\n        if (m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) {\n          C = m.e.c + 1 - or_C;\n          midx = -1;\n        }\n      }\n      /* TODO: figure out how to extract nonstandard mso- style */\n      CS = +elt.getAttribute(\"colspan\") || 1;\n      if ((RS = +elt.getAttribute(\"rowspan\") || 1) > 1 || CS > 1) merges.push({\n        s: {\n          r: R + or_R,\n          c: C + or_C\n        },\n        e: {\n          r: R + or_R + (RS || 1) - 1,\n          c: C + or_C + (CS || 1) - 1\n        }\n      });\n      var o /*:Cell*/ = {\n        t: 's',\n        v: v\n      };\n      var _t /*:string*/ = elt.getAttribute(\"data-t\") || elt.getAttribute(\"t\") || \"\";\n      if (v != null) {\n        if (v.length == 0) o.t = _t || 'z';else if (opts.raw || v.trim().length == 0 || _t == \"s\") {} else if (v === 'TRUE') o = {\n          t: 'b',\n          v: true\n        };else if (v === 'FALSE') o = {\n          t: 'b',\n          v: false\n        };else if (!isNaN(fuzzynum(v))) o = {\n          t: 'n',\n          v: fuzzynum(v)\n        };else if (!isNaN(fuzzydate(v).getDate())) {\n          o = {\n            t: 'd',\n            v: parseDate(v)\n          } /*:any*/;\n          if (opts.UTC) o.v = local_to_utc(o.v);\n          if (!opts.cellDates) o = {\n            t: 'n',\n            v: datenum(o.v)\n          } /*:any*/;\n          o.z = opts.dateNF || table_fmt[14];\n        }\n      }\n      if (o.z === undefined && z != null) o.z = z;\n      /* The first link is used.  Links are assumed to be fully specified.\n       * TODO: The right way to process relative links is to make a new <a> */\n      var l = \"\",\n        Aelts = elt.getElementsByTagName(\"A\");\n      if (Aelts && Aelts.length) for (var Aelti = 0; Aelti < Aelts.length; ++Aelti) if (Aelts[Aelti].hasAttribute(\"href\")) {\n        l = Aelts[Aelti].getAttribute(\"href\");\n        if (l.charAt(0) != \"#\") break;\n      }\n      if (l && l.charAt(0) != \"#\" && l.slice(0, 11).toLowerCase() != 'javascript:') o.l = {\n        Target: l\n      };\n      if (dense) {\n        if (!ws[\"!data\"][R + or_R]) ws[\"!data\"][R + or_R] = [];\n        ws[\"!data\"][R + or_R][C + or_C] = o;\n      } else ws[encode_cell({\n        c: C + or_C,\n        r: R + or_R\n      })] = o;\n      if (range.e.c < C + or_C) range.e.c = C + or_C;\n      C += CS;\n    }\n    ++R;\n  }\n  if (merges.length) ws['!merges'] = (ws[\"!merges\"] || []).concat(merges);\n  range.e.r = Math.max(range.e.r, R - 1 + or_R);\n  ws['!ref'] = encode_range(range);\n  if (R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length - _R + R - 1 + or_R, range)); // We can count the real number of rows to parse but we don't to improve the performance\n  return ws;\n}\nfunction parse_dom_table(table /*:HTMLElement*/, _opts /*:?any*/) /*:Worksheet*/{\n  var opts = _opts || {};\n  var ws /*:Worksheet*/ = {} /*:any*/;\n  if (opts.dense) ws[\"!data\"] = [];\n  return sheet_add_dom(ws, table, _opts);\n}\nfunction table_to_book(table /*:HTMLElement*/, opts /*:?any*/) /*:Workbook*/{\n  var o = sheet_to_workbook(parse_dom_table(table, opts), opts);\n  //o.bookType = \"dom\"; // TODO: define a type for this\n  return o;\n}\nfunction is_dom_element_hidden(element /*:HTMLElement*/) /*:boolean*/{\n  var display /*:string*/ = '';\n  var get_computed_style /*:?function*/ = get_get_computed_style_function(element);\n  if (get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n  if (!display) display = element.style && element.style.display;\n  return display === 'none';\n}\n\n/* global getComputedStyle */\nfunction get_get_computed_style_function(element /*:HTMLElement*/) /*:?function*/{\n  // The proper getComputedStyle implementation is the one defined in the element window\n  if (element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n  // If it is not available, try to get one from the global namespace\n  if (typeof getComputedStyle === 'function') return getComputedStyle;\n  return null;\n}\n/* OpenDocument */\nfunction parse_text_p(text /*:string*/ /*::, tag*/) /*:Array<any>*/{\n  /* 6.1.2 White Space Characters */\n  var fixed = text.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \").replace(/<text:s\\/>/g, \" \").replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function ($$, $1) {\n    return Array(parseInt($1, 10) + 1).join(\" \");\n  }).replace(/<text:tab[^<>]*\\/>/g, \"\\t\").replace(/<text:line-break\\/>/g, \"\\n\");\n  var v = unescapexml(fixed.replace(/<[^<>]*>/g, \"\"));\n  return [v];\n}\n\n/* Note: ODS can stick styles in content.xml or styles.xml, FODS blurs lines */\nfunction parse_ods_styles(d /*:string*/, _opts, _nfm) {\n  var number_format_map = _nfm || {};\n  var str = xlml_normalize(d);\n  xlmlregex.lastIndex = 0;\n  str = remove_doctype(str_remove_ng(str, \"<!--\", \"-->\"));\n  var Rn,\n    NFtag,\n    NF = \"\",\n    tNF = \"\",\n    y,\n    etpos = 0,\n    tidx = -1,\n    infmt = false,\n    payload = \"\";\n  while (Rn = xlmlregex.exec(str)) {\n    switch (Rn[3] = Rn[3].replace(/_[\\s\\S]*$/, \"\")) {\n      /* Number Format Definitions */\n      case 'number-style': // <number:number-style> 16.29.2\n      case 'currency-style': // <number:currency-style> 16.29.8\n      case 'percentage-style': // <number:percentage-style> 16.29.10\n      case 'date-style': // <number:date-style> 16.29.11\n      case 'time-style': // <number:time-style> 16.29.19\n      case 'text-style':\n        // <number:text-style> 16.29.26\n        if (Rn[1] === '/') {\n          infmt = false;\n          if (NFtag['truncate-on-overflow'] == \"false\") {\n            if (NF.match(/h/)) NF = NF.replace(/h+/, \"[$&]\");else if (NF.match(/m/)) NF = NF.replace(/m+/, \"[$&]\");else if (NF.match(/s/)) NF = NF.replace(/s+/, \"[$&]\");\n          }\n          number_format_map[NFtag.name] = NF;\n          NF = \"\";\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          infmt = true;\n          NF = \"\";\n          NFtag = parsexmltag(Rn[0], false);\n        }\n        break;\n\n      // LibreOffice bug https://bugs.documentfoundation.org/show_bug.cgi?id=149484\n      case 'boolean-style':\n        // <number:boolean-style> 16.29.24\n        if (Rn[1] === '/') {\n          infmt = false;\n          number_format_map[NFtag.name] = \"General\";\n          NF = \"\";\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          infmt = true;\n          NF = \"\";\n          NFtag = parsexmltag(Rn[0], false);\n        }\n        break;\n\n      /* Number Format Elements */\n      case 'boolean':\n        // <number:boolean> 16.29.25\n        NF += \"General\"; // ODF spec is unfortunately underspecified here\n        break;\n      case 'text':\n        // <number:text> 16.29.27\n        if (Rn[1] === '/') {\n          payload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);\n          // NOTE: Excel has a different interpretation of \"%%\" and friends\n          if (payload == \"%\" && NFtag[0] == '<number:percentage-style') NF += \"%\";else NF += '\"' + payload.replace(/\"/g, '\"\"') + '\"';\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          tidx = xlmlregex.lastIndex;\n        }\n        break;\n      case 'day':\n        {\n          // <number:day> 16.29.12\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"d\";\n              break;\n            case \"long\":\n              NF += \"dd\";\n              break;\n            default:\n              NF += \"dd\";\n              break;\n            // TODO: error condition\n          }\n        }\n        break;\n      case 'day-of-week':\n        {\n          // <number:day-of-week> 16.29.16\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"ddd\";\n              break;\n            case \"long\":\n              NF += \"dddd\";\n              break;\n            default:\n              NF += \"ddd\";\n              break;\n          }\n        }\n        break;\n      case 'era':\n        {\n          // <number:era> 16.29.15 TODO: proper mapping\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"ee\";\n              break;\n            case \"long\":\n              NF += \"eeee\";\n              break;\n            default:\n              NF += \"eeee\";\n              break;\n            // TODO: error condition\n          }\n        }\n        break;\n      case 'hours':\n        {\n          // <number:hours> 16.29.20\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"h\";\n              break;\n            case \"long\":\n              NF += \"hh\";\n              break;\n            default:\n              NF += \"hh\";\n              break;\n            // TODO: error condition\n          }\n        }\n        break;\n      case 'minutes':\n        {\n          // <number:minutes> 16.29.21\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"m\";\n              break;\n            case \"long\":\n              NF += \"mm\";\n              break;\n            default:\n              NF += \"mm\";\n              break;\n            // TODO: error condition\n          }\n        }\n        break;\n      case 'month':\n        {\n          // <number:month> 16.29.13\n          y = parsexmltag(Rn[0], false);\n          if (y[\"textual\"]) NF += \"mm\";\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"m\";\n              break;\n            case \"long\":\n              NF += \"mm\";\n              break;\n            default:\n              NF += \"m\";\n              break;\n          }\n        }\n        break;\n      case 'seconds':\n        {\n          // <number:seconds> 16.29.22\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"s\";\n              break;\n            case \"long\":\n              NF += \"ss\";\n              break;\n            default:\n              NF += \"ss\";\n              break;\n            // TODO: error condition\n          }\n          if (y[\"decimal-places\"]) NF += \".\" + fill(\"0\", +y[\"decimal-places\"]);\n        }\n        break;\n      case 'year':\n        {\n          // <number:year> 16.29.14\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"yy\";\n              break;\n            case \"long\":\n              NF += \"yyyy\";\n              break;\n            default:\n              NF += \"yy\";\n              break;\n            // TODO: error condition\n          }\n        }\n        break;\n      case 'am-pm':\n        // <number:am-pm> 16.29.23\n        NF += \"AM/PM\"; // LO autocorrects A/P -> AM/PM\n        break;\n      case 'week-of-year': // <number:week-of-year> 16.29.17\n      case 'quarter':\n        // <number:quarter> 16.29.18\n        console.error(\"Excel does not support ODS format token \" + Rn[3]);\n        break;\n      case 'fill-character':\n        // <number:fill-character> 16.29.5\n        if (Rn[1] === '/') {\n          payload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);\n          // NOTE: Excel has a different interpretation of \"%%\" and friends\n          NF += '\"' + payload.replace(/\"/g, '\"\"') + '\"*';\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          tidx = xlmlregex.lastIndex;\n        }\n        break;\n      case 'scientific-number':\n        // <number:scientific-number> 16.29.6\n        // TODO: find a mapping for all parameters\n        y = parsexmltag(Rn[0], false);\n        NF += \"0.\" + fill(\"0\", +y[\"min-decimal-places\"] || +y[\"decimal-places\"] || 2) + fill(\"?\", +y[\"decimal-places\"] - +y[\"min-decimal-places\"] || 0) + \"E\" + (parsexmlbool(y[\"forced-exponent-sign\"]) ? \"+\" : \"\") + fill(\"0\", +y[\"min-exponent-digits\"] || 2);\n        break;\n      case 'fraction':\n        // <number:fraction> 16.29.7\n        // TODO: find a mapping for all parameters\n        y = parsexmltag(Rn[0], false);\n        if (!+y[\"min-integer-digits\"]) NF += \"#\";else NF += fill(\"0\", +y[\"min-integer-digits\"]);\n        NF += \" \";\n        NF += fill(\"?\", +y[\"min-numerator-digits\"] || 1);\n        NF += \"/\";\n        if (+y[\"denominator-value\"]) NF += y[\"denominator-value\"];else NF += fill(\"?\", +y[\"min-denominator-digits\"] || 1);\n        break;\n      case 'currency-symbol':\n        // <number:currency-symbol> 16.29.9\n        // TODO: localization with [$-...]\n        if (Rn[1] === '/') {\n          NF += '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"';\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          tidx = xlmlregex.lastIndex;\n        } else NF += \"$\";\n        break;\n      case 'text-properties':\n        // <style:text-properties> 16.29.29\n        y = parsexmltag(Rn[0], false);\n        switch ((y[\"color\"] || \"\").toLowerCase().replace(\"#\", \"\")) {\n          case \"ff0000\":\n          case \"red\":\n            NF = \"[Red]\" + NF;\n            break;\n        }\n        break;\n      case 'text-content':\n        // <number:text-content> 16.29.28\n        NF += \"@\";\n        break;\n      case 'map':\n        // <style:map> 16.3\n        // TODO: handle more complex maps\n        y = parsexmltag(Rn[0], false);\n        if (unescapexml(y[\"condition\"]) == \"value()>=0\") NF = number_format_map[y[\"apply-style-name\"]] + \";\" + NF;else console.error(\"ODS number format may be incorrect: \" + y[\"condition\"]);\n        break;\n      case 'number':\n        // <number:number> 16.29.3\n        // TODO: handle all the attributes\n        if (Rn[1] === '/') break;\n        y = parsexmltag(Rn[0], false);\n        tNF = \"\";\n        tNF += fill(\"0\", +y[\"min-integer-digits\"] || 1);\n        if (parsexmlbool(y[\"grouping\"])) tNF = commaify(fill(\"#\", Math.max(0, 4 - tNF.length)) + tNF);\n        if (+y[\"min-decimal-places\"] || +y[\"decimal-places\"]) tNF += \".\";\n        if (+y[\"min-decimal-places\"]) tNF += fill(\"0\", +y[\"min-decimal-places\"] || 1);\n        if (+y[\"decimal-places\"] - (+y[\"min-decimal-places\"] || 0)) tNF += fill(\"0\", +y[\"decimal-places\"] - (+y[\"min-decimal-places\"] || 0)); // TODO: should this be \"#\" ?\n        NF += tNF;\n        break;\n      case 'embedded-text':\n        // <number:embedded-text> 16.29.4\n        // TODO: verify interplay with grouping et al\n        if (Rn[1] === '/') {\n          if (etpos == 0) NF += '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"';else NF = NF.slice(0, etpos) + '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"' + NF.slice(etpos);\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          tidx = xlmlregex.lastIndex;\n          etpos = -+parsexmltag(Rn[0], false)[\"position\"] || 0;\n        }\n        break;\n    }\n  }\n  return number_format_map;\n}\nfunction parse_content_xml(d /*:string*/, _opts, _nfm) /*:Workbook*/{\n  var opts = _opts || {};\n  if (DENSE != null && opts.dense == null) opts.dense = DENSE;\n  var str = xlml_normalize(d);\n  var state /*:Array<any>*/ = [],\n    tmp;\n  var tag /*:: = {}*/;\n  var nfidx,\n    NF = \"\",\n    pidx = 0;\n  var sheetag /*:: = {name:\"\", '名称':\"\"}*/;\n  var rowtag /*:: = {'行号':\"\"}*/;\n  var Sheets = {},\n    SheetNames /*:Array<string>*/ = [];\n  var ws = {} /*:any*/;\n  if (opts.dense) ws[\"!data\"] = [];\n  var Rn, q /*:: :any = ({t:\"\", v:null, z:null, w:\"\",c:[],}:any)*/;\n  var ctag = {\n    value: \"\"\n  } /*:any*/;\n  var textp = \"\",\n    textpidx = 0,\n    textptag /*:: = {}*/,\n    oldtextp = \"\",\n    oldtextpidx = 0;\n  var textR = [],\n    oldtextR = [];\n  var R = -1,\n    C = -1,\n    range = {\n      s: {\n        r: 1000000,\n        c: 10000000\n      },\n      e: {\n        r: 0,\n        c: 0\n      }\n    };\n  var row_ol = 0;\n  var number_format_map = _nfm || {},\n    styles = {};\n  var merges /*:Array<Range>*/ = [],\n    mrange = {},\n    mR = 0,\n    mC = 0;\n  var rowinfo /*:Array<RowInfo>*/ = [],\n    rowpeat = 1,\n    colpeat = 1;\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var WB = {\n    Names: [],\n    WBProps: {}\n  };\n  var atag = {} /*:any*/;\n  var _Ref /*:[string, string]*/ = [\"\", \"\"];\n  var comments /*:Array<Comment>*/ = [],\n    comment /*:Comment*/ = {} /*:any*/;\n  var creator = \"\",\n    creatoridx = 0;\n  var isstub = false,\n    intable = false;\n  var i = 0;\n  xlmlregex.lastIndex = 0;\n  str = remove_doctype(str_remove_ng(str, \"<!--\", \"-->\"));\n  while (Rn = xlmlregex.exec(str)) switch (Rn[3] = Rn[3].replace(/_[\\s\\S]*$/, \"\")) {\n    case 'table':\n    case '工作表':\n      // 9.1.2 <table:table>\n      if (Rn[1] === '/') {\n        if (range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);else ws['!ref'] = \"A1:A1\";\n        if (opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n          ws['!fullref'] = ws['!ref'];\n          range.e.r = opts.sheetRows - 1;\n          ws['!ref'] = encode_range(range);\n        }\n        if (merges.length) ws['!merges'] = merges;\n        if (rowinfo.length) ws[\"!rows\"] = rowinfo;\n        sheetag.name = sheetag['名称'] || sheetag.name;\n        if (typeof JSON !== 'undefined') JSON.stringify(sheetag);\n        SheetNames.push(sheetag.name);\n        Sheets[sheetag.name] = ws;\n        intable = false;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        sheetag = parsexmltag(Rn[0], false);\n        R = C = -1;\n        range.s.r = range.s.c = 10000000;\n        range.e.r = range.e.c = 0;\n        ws = {} /*:any*/;\n        if (opts.dense) ws[\"!data\"] = [];\n        merges = [];\n        rowinfo = [];\n        intable = true;\n      }\n      break;\n    case 'table-row-group':\n      // 9.1.9 <table:table-row-group>\n      if (Rn[1] === \"/\") --row_ol;else ++row_ol;\n      break;\n    case 'table-row':\n    case '行':\n      // 9.1.3 <table:table-row>\n      if (Rn[1] === '/') {\n        R += rowpeat;\n        rowpeat = 1;\n        break;\n      }\n      rowtag = parsexmltag(Rn[0], false);\n      if (rowtag['行号']) R = rowtag['行号'] - 1;else if (R == -1) R = 0;\n      rowpeat = +rowtag['number-rows-repeated'] || 1;\n      /* TODO: remove magic */\n      if (rowpeat < 10) for (i = 0; i < rowpeat; ++i) if (row_ol > 0) rowinfo[R + i] = {\n        level: row_ol\n      };\n      C = -1;\n      break;\n    case 'covered-table-cell':\n      // 9.1.5 <table:covered-table-cell>\n      if (Rn[1] !== '/') ++C;\n      if (opts.sheetStubs) {\n        if (opts.dense) {\n          if (!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n          ws[\"!data\"][R][C] = {\n            t: 'z'\n          };\n        } else ws[encode_cell({\n          r: R,\n          c: C\n        })] = {\n          t: 'z'\n        };\n      }\n      textp = \"\";\n      textR = [];\n      break;\n    /* stub */\n    case 'table-cell':\n    case '数据':\n      if (Rn[0].charAt(Rn[0].length - 2) === '/') {\n        ++C;\n        ctag = parsexmltag(Rn[0], false);\n        colpeat = parseInt(ctag['number-columns-repeated'] || \"1\", 10);\n        q = {\n          t: 'z',\n          v: null /*:: , z:null, w:\"\",c:[]*/\n        } /*:any*/;\n        if (ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n        if (ctag[\"style-name\"] && styles[ctag[\"style-name\"]]) q.z = styles[ctag[\"style-name\"]];\n        if ((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n          q.t = \"s\";\n          q.v = unescapexml(ctag['string-value'] || \"\");\n          if (opts.dense) {\n            if (!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n            ws[\"!data\"][R][C] = q;\n          } else {\n            ws[encode_col(C) + encode_row(R)] = q;\n          }\n        }\n        C += colpeat - 1;\n      } else if (Rn[1] !== '/') {\n        ++C;\n        textp = oldtextp = \"\";\n        textpidx = oldtextpidx = 0;\n        textR = [];\n        oldtextR = [];\n        colpeat = 1;\n        var rptR = rowpeat ? R + rowpeat - 1 : R;\n        if (C > range.e.c) range.e.c = C;\n        if (C < range.s.c) range.s.c = C;\n        if (R < range.s.r) range.s.r = R;\n        if (rptR > range.e.r) range.e.r = rptR;\n        ctag = parsexmltag(Rn[0], false);\n        comments = [];\n        comment = {} /*:any*/;\n        q = {\n          t: ctag['数据类型'] || ctag['value-type'],\n          v: null /*:: , z:null, w:\"\",c:[]*/\n        } /*:any*/;\n        if (ctag[\"style-name\"] && styles[ctag[\"style-name\"]]) q.z = styles[ctag[\"style-name\"]];\n        if (opts.cellFormula) {\n          if (ctag.formula) ctag.formula = unescapexml(ctag.formula);\n          if (ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n            mR = parseInt(ctag['number-matrix-rows-spanned'], 10) || 0;\n            mC = parseInt(ctag['number-matrix-columns-spanned'], 10) || 0;\n            mrange = {\n              s: {\n                r: R,\n                c: C\n              },\n              e: {\n                r: R + mR - 1,\n                c: C + mC - 1\n              }\n            };\n            q.F = encode_range(mrange);\n            arrayf.push([mrange, q.F]);\n          }\n          if (ctag.formula) q.f = ods_to_csf_formula(ctag.formula);else for (i = 0; i < arrayf.length; ++i) if (R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r) if (C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c) q.F = arrayf[i][1];\n        }\n        if (ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n          mR = parseInt(ctag['number-rows-spanned'], 10) || 0;\n          mC = parseInt(ctag['number-columns-spanned'], 10) || 0;\n          mrange = {\n            s: {\n              r: R,\n              c: C\n            },\n            e: {\n              r: R + mR - 1,\n              c: C + mC - 1\n            }\n          };\n          merges.push(mrange);\n        }\n\n        /* 19.675.2 table:number-columns-repeated */\n        if (ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n        /* 19.385 office:value-type TODO: verify ODS and UOS */\n        switch (q.t) {\n          case 'boolean':\n            q.t = 'b';\n            q.v = parsexmlbool(ctag['boolean-value']) || +ctag['boolean-value'] >= 1;\n            break;\n          case 'float':\n            q.t = 'n';\n            q.v = parseFloat(ctag.value);\n            if (opts.cellDates && q.z && fmt_is_date(q.z)) {\n              q.v = numdate(q.v + (WB.WBProps.date1904 ? 1462 : 0));\n              q.t = typeof q.v == \"number\" ? 'n' : 'd';\n            }\n            break;\n          case 'percentage':\n            q.t = 'n';\n            q.v = parseFloat(ctag.value);\n            break;\n          case 'currency':\n            q.t = 'n';\n            q.v = parseFloat(ctag.value);\n            break;\n          case 'date':\n            q.t = 'd';\n            q.v = parseDate(ctag['date-value'], WB.WBProps.date1904);\n            if (!opts.cellDates) {\n              q.t = 'n';\n              q.v = datenum(q.v, WB.WBProps.date1904);\n            }\n            if (!q.z) q.z = 'm/d/yy';\n            break;\n          /* NOTE: for `time`, Excel ODS export incorrectly uses durations relative to 1900 epoch even if 1904 is specified */\n          case 'time':\n            q.t = 'n';\n            q.v = parse_isodur(ctag['time-value']) / 86400;\n            if (opts.cellDates) {\n              q.v = numdate(q.v);\n              q.t = typeof q.v == \"number\" ? 'n' : 'd';\n            }\n            if (!q.z) q.z = 'HH:MM:SS';\n            break;\n          case 'number':\n            q.t = 'n';\n            q.v = parseFloat(ctag['数据数值']);\n            break;\n          default:\n            if (q.t === 'string' || q.t === 'text' || !q.t) {\n              q.t = 's';\n              if (ctag['string-value'] != null) {\n                textp = unescapexml(ctag['string-value']);\n                textR = [];\n              }\n            } else throw new Error('Unsupported value type ' + q.t);\n        }\n      } else {\n        isstub = false;\n        if (q.t === 's') {\n          q.v = textp || '';\n          if (textR.length) q.R = textR;\n          isstub = textpidx == 0;\n        }\n        if (atag.Target) q.l = atag;\n        if (comments.length > 0) {\n          q.c = comments;\n          comments = [];\n        }\n        if (textp && opts.cellText !== false) q.w = textp;\n        if (isstub) {\n          q.t = \"z\";\n          delete q.v;\n        }\n        if (!isstub || opts.sheetStubs) {\n          if (!(opts.sheetRows && opts.sheetRows <= R)) {\n            for (var rpt = 0; rpt < rowpeat; ++rpt) {\n              colpeat = parseInt(ctag['number-columns-repeated'] || \"1\", 10);\n              if (opts.dense) {\n                if (!ws[\"!data\"][R + rpt]) ws[\"!data\"][R + rpt] = [];\n                ws[\"!data\"][R + rpt][C] = rpt == 0 ? q : dup(q);\n                while (--colpeat > 0) ws[\"!data\"][R + rpt][C + colpeat] = dup(q);\n              } else {\n                ws[encode_cell({\n                  r: R + rpt,\n                  c: C\n                })] = q;\n                while (--colpeat > 0) ws[encode_cell({\n                  r: R + rpt,\n                  c: C + colpeat\n                })] = dup(q);\n              }\n              if (range.e.c <= C) range.e.c = C;\n            }\n          }\n        }\n        colpeat = parseInt(ctag['number-columns-repeated'] || \"1\", 10);\n        C += colpeat - 1;\n        colpeat = 0;\n        q = {/*:: t:\"\", v:null, z:null, w:\"\",c:[]*/};\n        textp = \"\";\n        textR = [];\n      }\n      atag = {} /*:any*/;\n      break;\n    // 9.1.4 <table:table-cell>\n\n    /* pure state */\n    case 'document': // TODO: <office:document> is the root for FODS\n    case 'document-content':\n    case '电子表格文档': // 3.1.3.2 <office:document-content>\n    case 'spreadsheet':\n    case '主体': // 3.7 <office:spreadsheet>\n    case 'scripts': // 3.12 <office:scripts>\n    case 'styles': // TODO <office:styles>\n    case 'font-face-decls': // 3.14 <office:font-face-decls>\n    case 'master-styles':\n      // 3.15.4 <office:master-styles> -- relevant for FODS\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n      break;\n    case 'annotation':\n      // 14.1 <office:annotation>\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n        comment.t = textp;\n        if (textR.length) /*::(*/comment /*:: :any)*/.R = textR;\n        comment.a = creator;\n        comments.push(comment);\n        textp = oldtextp;\n        textpidx = oldtextpidx;\n        textR = oldtextR;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        state.push([Rn[3], false]);\n        var annotag = parsexmltag(Rn[0], true);\n        /* office:display TODO: check if there is a global override */\n        if (!(annotag[\"display\"] && parsexmlbool(annotag[\"display\"]))) comments.hidden = true;\n        oldtextp = textp;\n        oldtextpidx = textpidx;\n        oldtextR = textR;\n        textp = \"\";\n        textpidx = 0;\n        textR = [];\n      }\n      creator = \"\";\n      creatoridx = 0;\n      break;\n    case 'creator':\n      // 4.3.2.7 <dc:creator>\n      if (Rn[1] === '/') {\n        creator = str.slice(creatoridx, Rn.index);\n      } else creatoridx = Rn.index + Rn[0].length;\n      break;\n\n    /* ignore state */\n    case 'meta':\n    case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n    case 'settings': // TODO: <office:settings>\n    case 'config-item-set': // TODO: <office:config-item-set>\n    case 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n    case 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n    case 'config-item-map-named': // TODO: <office:config-item-map-entry>\n    case 'shapes': // 9.2.8 <table:shapes>\n    case 'frame': // 10.4.2 <draw:frame>\n    case 'text-box': // 10.4.3 <draw:text-box>\n    case 'image': // 10.4.4 <draw:image>\n    case 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n    case 'list-style': // 16.30 <text:list-style>\n    case 'form': // 13.13 <form:form>\n    case 'dde-links': // 9.8 <table:dde-links>\n    case 'event-listeners': // TODO\n    case 'chart':\n      // TODO\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], false]);\n      textp = \"\";\n      textpidx = 0;\n      textR = [];\n      break;\n    case 'scientific-number': // <number:scientific-number>\n    case 'currency-symbol': // <number:currency-symbol>\n    case 'fill-character':\n      // 16.29.5 <number:fill-character>\n      break;\n    case 'text-style': // 16.27.25 <number:text-style>\n    case 'boolean-style': // 16.27.23 <number:boolean-style>\n    case 'number-style': // 16.27.2 <number:number-style>\n    case 'currency-style': // 16.29.8 <number:currency-style>\n    case 'percentage-style': // 16.27.9 <number:percentage-style>\n    case 'date-style': // 16.27.10 <number:date-style>\n    case 'time-style':\n      // 16.27.18 <number:time-style>\n      if (Rn[1] === '/') {\n        var xlmlidx = xlmlregex.lastIndex;\n        parse_ods_styles(str.slice(nfidx, xlmlregex.lastIndex), _opts, number_format_map);\n        xlmlregex.lastIndex = xlmlidx;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        nfidx = xlmlregex.lastIndex - Rn[0].length;\n      }\n      break;\n    case 'script':\n      break;\n    // 3.13 <office:script>\n    case 'libraries':\n      break;\n    // TODO: <ooo:libraries>\n    case 'automatic-styles':\n      break;\n    // 3.15.3 <office:automatic-styles>\n\n    case 'default-style': // TODO: <style:default-style>\n    case 'page-layout':\n      break;\n    // TODO: <style:page-layout>\n    case 'style':\n      {\n        // 16.2 <style:style>\n        var styletag = parsexmltag(Rn[0], false);\n        if (styletag[\"family\"] == \"table-cell\" && number_format_map[styletag[\"data-style-name\"]]) styles[styletag[\"name\"]] = number_format_map[styletag[\"data-style-name\"]];\n      }\n      break;\n    case 'map':\n      break;\n    // 16.3 <style:map>\n    case 'font-face':\n      break;\n    // 16.21 <style:font-face>\n\n    case 'paragraph-properties':\n      break;\n    // 17.6 <style:paragraph-properties>\n    case 'table-properties':\n      break;\n    // 17.15 <style:table-properties>\n    case 'table-column-properties':\n      break;\n    // 17.16 <style:table-column-properties>\n    case 'table-row-properties':\n      break;\n    // 17.17 <style:table-row-properties>\n    case 'table-cell-properties':\n      break;\n    // 17.18 <style:table-cell-properties>\n\n    case 'number':\n      // 16.27.3 <number:number>\n      break;\n    case 'fraction':\n      break;\n    // TODO 16.27.6 <number:fraction>\n\n    case 'day': // 16.27.11 <number:day>\n    case 'month': // 16.27.12 <number:month>\n    case 'year': // 16.27.13 <number:year>\n    case 'era': // 16.27.14 <number:era>\n    case 'day-of-week': // 16.27.15 <number:day-of-week>\n    case 'week-of-year': // 16.27.16 <number:week-of-year>\n    case 'quarter': // 16.27.17 <number:quarter>\n    case 'hours': // 16.27.19 <number:hours>\n    case 'minutes': // 16.27.20 <number:minutes>\n    case 'seconds': // 16.27.21 <number:seconds>\n    case 'am-pm':\n      // 16.27.22 <number:am-pm>\n      break;\n    case 'boolean':\n      break;\n    // 16.27.24 <number:boolean>\n    case 'text':\n      // 16.27.26 <number:text>\n      if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") switch (state[state.length - 1][0]) {\n        case 'number-style':\n        case 'date-style':\n        case 'time-style':\n          NF += str.slice(pidx, Rn.index);\n          break;\n      } else pidx = Rn.index + Rn[0].length;\n      break;\n    case 'named-range':\n      // 9.4.12 <table:named-range>\n      tag = parsexmltag(Rn[0], false);\n      _Ref = ods_to_csf_3D(tag['cell-range-address']);\n      var nrange = {\n        Name: tag.name,\n        Ref: _Ref[0] + '!' + _Ref[1]\n      } /*:any*/;\n      if (intable) nrange.Sheet = SheetNames.length;\n      WB.Names.push(nrange);\n      break;\n    case 'text-content':\n      break;\n    // 16.27.27 <number:text-content>\n    case 'text-properties':\n      break;\n    // 16.27.27 <style:text-properties>\n    case 'embedded-text':\n      break;\n    // 16.27.4 <number:embedded-text>\n\n    case 'body':\n    case '电子表格':\n      break;\n    // 3.3 16.9.6 19.726.3\n\n    case 'forms':\n      break;\n    // 12.25.2 13.2\n    case 'table-column':\n      break;\n    // 9.1.6 <table:table-column>\n    case 'table-header-rows':\n      break;\n    // 9.1.7 <table:table-header-rows>\n    case 'table-rows':\n      break;\n    // 9.1.12 <table:table-rows>\n    /* TODO: outline levels */\n    case 'table-column-group':\n      break;\n    // 9.1.10 <table:table-column-group>\n    case 'table-header-columns':\n      break;\n    // 9.1.11 <table:table-header-columns>\n    case 'table-columns':\n      break;\n    // 9.1.12 <table:table-columns>\n\n    case 'null-date':\n      // 9.4.2 <table:null-date>\n      tag = parsexmltag(Rn[0], false);\n      switch (tag[\"date-value\"]) {\n        case \"1904-01-01\":\n          WB.WBProps.date1904 = true;\n          break;\n      }\n      break;\n    case 'graphic-properties':\n      break;\n    // 17.21 <style:graphic-properties>\n    case 'calculation-settings':\n      break;\n    // 9.4.1 <table:calculation-settings>\n    case 'named-expressions':\n      break;\n    // 9.4.11 <table:named-expressions>\n    case 'label-range':\n      break;\n    // 9.4.9 <table:label-range>\n    case 'label-ranges':\n      break;\n    // 9.4.10 <table:label-ranges>\n    case 'named-expression':\n      break;\n    // 9.4.13 <table:named-expression>\n    case 'sort':\n      break;\n    // 9.4.19 <table:sort>\n    case 'sort-by':\n      break;\n    // 9.4.20 <table:sort-by>\n    case 'sort-groups':\n      break;\n    // 9.4.22 <table:sort-groups>\n\n    case 'tab':\n      break;\n    // 6.1.4 <text:tab>\n    case 'line-break':\n      break;\n    // 6.1.5 <text:line-break>\n    case 'span':\n      break;\n    // 6.1.7 <text:span>\n    case 'p':\n    case '文本串':\n      // 5.1.3 <text:p>\n      if (['master-styles'].indexOf(state[state.length - 1][0]) > -1) break;\n      if (Rn[1] === '/' && (!ctag || !ctag['string-value'])) {\n        var ptp = parse_text_p(str.slice(textpidx, Rn.index), textptag);\n        textp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n      } else if (Rn[0].slice(-2) == \"/>\") {\n        /* TODO: is self-closing 文本串 valid? */\n        textp += \"\\n\";\n      } else {\n        textptag = parsexmltag(Rn[0], false);\n        textpidx = Rn.index + Rn[0].length;\n      }\n      break;\n    // <text:p>\n    case 's':\n      break;\n    // <text:s>\n\n    case 'database-range':\n      // 9.4.15 <table:database-range>\n      if (Rn[1] === '/') break;\n      try {\n        _Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n        Sheets[_Ref[0]]['!autofilter'] = {\n          ref: _Ref[1]\n        };\n      } catch (e) {/* empty */}\n      break;\n    case 'date':\n      break;\n    // <*:date>\n\n    case 'object':\n      break;\n    // 10.4.6.2 <draw:object>\n    case 'title':\n    case '标题':\n      break;\n    // <*:title> OR <uof:标题>\n    case 'desc':\n      break;\n    // <*:desc>\n    case 'binary-data':\n      break;\n    // 10.4.5 TODO: b64 blob\n\n    /* 9.2 Advanced Tables */\n    case 'table-source':\n      break;\n    // 9.2.6\n    case 'scenario':\n      break;\n    // 9.2.6\n\n    case 'iteration':\n      break;\n    // 9.4.3 <table:iteration>\n    case 'content-validations':\n      break;\n    // 9.4.4 <table:\n    case 'content-validation':\n      break;\n    // 9.4.5 <table:\n    case 'help-message':\n      break;\n    // 9.4.6 <table:\n    case 'error-message':\n      break;\n    // 9.4.7 <table:\n    case 'database-ranges':\n      break;\n    // 9.4.14 <table:database-ranges>\n\n    /* 9.5 Filters */\n    case 'filter':\n      break;\n    // 9.5.2 <table:filter>\n    case 'filter-and':\n      break;\n    // 9.5.3 <table:filter-and>\n    case 'filter-or':\n      break;\n    // 9.5.4 <table:filter-or>\n    case 'filter-condition':\n      break;\n    // 9.5.5 <table:filter-condition>\n    case 'filter-set-item':\n      break;\n    // 9.5.6 <table:filter-condition>\n\n    case 'list-level-style-bullet':\n      break;\n    // 16.31 <text:\n    case 'list-level-style-number':\n      break;\n    // 16.32 <text:\n    case 'list-level-properties':\n      break;\n    // 17.19 <style:\n\n    /* 7.3 Document Fields */\n    case 'sender-firstname': // 7.3.6.2\n    case 'sender-lastname': // 7.3.6.3\n    case 'sender-initials': // 7.3.6.4\n    case 'sender-title': // 7.3.6.5\n    case 'sender-position': // 7.3.6.6\n    case 'sender-email': // 7.3.6.7\n    case 'sender-phone-private': // 7.3.6.8\n    case 'sender-fax': // 7.3.6.9\n    case 'sender-company': // 7.3.6.10\n    case 'sender-phone-work': // 7.3.6.11\n    case 'sender-street': // 7.3.6.12\n    case 'sender-city': // 7.3.6.13\n    case 'sender-postal-code': // 7.3.6.14\n    case 'sender-country': // 7.3.6.15\n    case 'sender-state-or-province': // 7.3.6.16\n    case 'author-name': // 7.3.7.1\n    case 'author-initials': // 7.3.7.2\n    case 'chapter': // 7.3.8\n    case 'file-name': // 7.3.9\n    case 'template-name': // 7.3.9\n    case 'sheet-name':\n      // 7.3.9\n      break;\n    case 'event-listener':\n      break;\n    /* TODO: FODS Properties */\n    case 'initial-creator':\n    case 'creation-date':\n    case 'print-date':\n    case 'generator':\n    case 'document-statistic':\n    case 'user-defined':\n    case 'editing-duration':\n    case 'editing-cycles':\n      break;\n\n    /* TODO: FODS Config */\n    case 'config-item':\n      break;\n\n    /* TODO: style tokens */\n    case 'page-number':\n      break;\n    // TODO <text:page-number>\n    case 'page-count':\n      break;\n    // TODO <text:page-count>\n    case 'time':\n      break;\n    // TODO <text:time>\n\n    /* 9.3 Advanced Table Cells */\n    case 'cell-range-source':\n      break;\n    // 9.3.1 <table:\n    case 'detective':\n      break;\n    // 9.3.2 <table:\n    case 'operation':\n      break;\n    // 9.3.3 <table:\n    case 'highlighted-range':\n      break;\n    // 9.3.4 <table:\n\n    /* 9.6 Data Pilot Tables <table: */\n    case 'data-pilot-table': // 9.6.3\n    case 'source-cell-range': // 9.6.5\n    case 'source-service': // 9.6.6\n    case 'data-pilot-field': // 9.6.7\n    case 'data-pilot-level': // 9.6.8\n    case 'data-pilot-subtotals': // 9.6.9\n    case 'data-pilot-subtotal': // 9.6.10\n    case 'data-pilot-members': // 9.6.11\n    case 'data-pilot-member': // 9.6.12\n    case 'data-pilot-display-info': // 9.6.13\n    case 'data-pilot-sort-info': // 9.6.14\n    case 'data-pilot-layout-info': // 9.6.15\n    case 'data-pilot-field-reference': // 9.6.16\n    case 'data-pilot-groups': // 9.6.17\n    case 'data-pilot-group': // 9.6.18\n    case 'data-pilot-group-member':\n      // 9.6.19\n      break;\n\n    /* 10.3 Drawing Shapes */\n    case 'rect':\n      // 10.3.2\n      break;\n\n    /* 14.6 DDE Connections */\n    case 'dde-connection-decls': // 14.6.2 <text:\n    case 'dde-connection-decl': // 14.6.3 <text:\n    case 'dde-link': // 14.6.4 <table:\n    case 'dde-source':\n      // 14.6.5 <office:\n      break;\n    case 'properties':\n      break;\n    // 13.7 <form:properties>\n    case 'property':\n      break;\n    // 13.8 <form:property>\n\n    case 'a':\n      // 6.1.8 hyperlink\n      if (Rn[1] !== '/') {\n        atag = parsexmltag(Rn[0], false);\n        if (!atag.href) break;\n        atag.Target = unescapexml(atag.href);\n        delete atag.href;\n        if (atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n          _Ref = ods_to_csf_3D(atag.Target.slice(1));\n          atag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n        } else if (atag.Target.match(/^\\.\\.[\\\\\\/]/)) atag.Target = atag.Target.slice(3);\n      }\n      break;\n\n    /* non-standard */\n    case 'table-protection':\n      break;\n    case 'data-pilot-grand-total':\n      break;\n    // <table:\n    case 'office-document-common-attrs':\n      break;\n    // bare\n    default:\n      switch (Rn[2]) {\n        case 'dc:': // TODO: properties\n        case 'calcext:': // ignore undocumented extensions\n        case 'loext:': // ignore undocumented extensions\n        case 'ooo:': // ignore undocumented extensions\n        case 'chartooo:': // ignore undocumented extensions\n        case 'draw:': // TODO: drawing\n        case 'style:': // TODO: styles\n        case 'chart:': // TODO: charts\n        case 'form:': // TODO: forms\n        case 'uof:': // TODO: uof\n        case '表:': // TODO: uof\n        case '字:':\n          // TODO: uof\n          break;\n        default:\n          if (opts.WTF) throw new Error(Rn);\n      }\n  }\n  var out /*:Workbook*/ = {\n    Sheets: Sheets,\n    SheetNames: SheetNames,\n    Workbook: WB\n  } /*:any*/;\n  if (opts.bookSheets) delete /*::(*/out /*:: :any)*/.Sheets;\n  return out;\n}\nfunction parse_ods(zip /*:ZIPFile*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  opts = opts || {} /*:any*/;\n  if (safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n  var styles = getzipstr(zip, 'styles.xml');\n  var Styles = styles && parse_ods_styles(utf8read(styles), opts);\n  var content = getzipstr(zip, 'content.xml');\n  if (!content) throw new Error(\"Missing content.xml in ODS / UOF file\");\n  var wb = parse_content_xml(utf8read(content), opts, Styles);\n  if (safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n  wb.bookType = \"ods\";\n  return wb;\n}\nfunction parse_fods(data /*:string*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  var wb = parse_content_xml(data, opts);\n  wb.bookType = \"fods\";\n  return wb;\n}\n\n/* OpenDocument */\nvar write_styles_ods /*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */function () {\n  var master_styles = ['<office:master-styles>', '<style:master-page style:name=\"mp1\" style:page-layout-name=\"mp1\">', '<style:header/>', '<style:header-left style:display=\"false\"/>', '<style:footer/>', '<style:footer-left style:display=\"false\"/>', '</style:master-page>', '</office:master-styles>'].join(\"\");\n  var payload = '<office:document-styles ' + wxt_helper({\n    'xmlns:office': \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n    'xmlns:table': \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n    'xmlns:style': \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n    'xmlns:text': \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n    'xmlns:draw': \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n    'xmlns:fo': \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n    'xmlns:xlink': \"http://www.w3.org/1999/xlink\",\n    'xmlns:dc': \"http://purl.org/dc/elements/1.1/\",\n    'xmlns:number': \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n    'xmlns:svg': \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n    'xmlns:of': \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n    'office:version': \"1.2\"\n  }) + '>' + master_styles + '</office:document-styles>';\n  return function wso( /*::wb, opts*/\n  ) {\n    return XML_HEADER + payload;\n  };\n}();\n\n// TODO: find out if anyone actually read the spec.  LO has some wild errors\nfunction write_number_format_ods(nf /*:string*/, nfidx /*:string*/) /*:string*/{\n  var type = \"number\",\n    payload = \"\",\n    nopts = {\n      \"style:name\": nfidx\n    },\n    c = \"\",\n    i = 0;\n  nf = nf.replace(/\"[$]\"/g, \"$\");\n  /* TODO: replace with an actual parser based on a real grammar */\n  j: {\n    // TODO: support style maps\n    if (nf.indexOf(\";\") > -1) {\n      console.error(\"Unsupported ODS Style Map exported.  Using first branch of \" + nf);\n      nf = nf.slice(0, nf.indexOf(\";\"));\n    }\n    if (nf == \"@\") {\n      type = \"text\";\n      payload = \"<number:text-content/>\";\n      break j;\n    }\n\n    /* currency flag */\n    if (nf.indexOf(/\\$/) > -1) {\n      type = \"currency\";\n    }\n\n    /* opening string literal */\n    if (nf[i] == '\"') {\n      c = \"\";\n      while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n      --i;\n      if (nf[i + 1] == \"*\") {\n        i++;\n        payload += '<number:fill-character>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:fill-character>';\n      } else {\n        payload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n      }\n      nf = nf.slice(i + 1);\n      i = 0;\n    }\n\n    /* fractions */\n    var t = nf.match(/# (\\?+)\\/(\\?+)/);\n    if (t) {\n      payload += writextag(\"number:fraction\", null, {\n        \"number:min-integer-digits\": 0,\n        \"number:min-numerator-digits\": t[1].length,\n        \"number:max-denominator-value\": Math.max(+t[1].replace(/./g, \"9\"), +t[2].replace(/./g, \"9\"))\n      });\n      break j;\n    }\n    if (t = nf.match(/# (\\?+)\\/(\\d+)/)) {\n      payload += writextag(\"number:fraction\", null, {\n        \"number:min-integer-digits\": 0,\n        \"number:min-numerator-digits\": t[1].length,\n        \"number:denominator-value\": +t[2]\n      });\n      break j;\n    }\n\n    /* percentages */\n    if (t = nf.match(/\\b(\\d+)(|\\.\\d+)%/)) {\n      type = \"percentage\";\n      payload += writextag(\"number:number\", null, {\n        \"number:decimal-places\": t[2] && t.length - 1 || 0,\n        \"number:min-decimal-places\": t[2] && t.length - 1 || 0,\n        \"number:min-integer-digits\": t[1].length\n      }) + \"<number:text>%</number:text>\";\n      break j;\n    }\n\n    /* datetime */\n    var has_time = false;\n    if ([\"y\", \"m\", \"d\"].indexOf(nf[0]) > -1) {\n      type = \"date\";\n      k: for (; i < nf.length; ++i) switch (c = nf[i].toLowerCase()) {\n        case \"h\":\n        case \"s\":\n          has_time = true;\n          --i;\n          break k;\n        case \"m\":\n          l: for (var h = i + 1; h < nf.length; ++h) switch (nf[h]) {\n            case \"y\":\n            case \"d\":\n              break l;\n            case \"h\":\n            case \"s\":\n              has_time = true;\n              --i;\n              break k;\n          }\n        /* falls through */\n        case \"y\":\n        case \"d\":\n          while ((nf[++i] || \"\").toLowerCase() == c[0]) c += c[0];\n          --i;\n          switch (c) {\n            case \"y\":\n            case \"yy\":\n              payload += \"<number:year/>\";\n              break;\n            case \"yyy\":\n            case \"yyyy\":\n              payload += '<number:year number:style=\"long\"/>';\n              break;\n            case \"mmmmm\":\n              console.error(\"ODS has no equivalent of format |mmmmm|\");\n            /* falls through */\n            case \"m\":\n            case \"mm\":\n            case \"mmm\":\n            case \"mmmm\":\n              payload += '<number:month number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\" number:textual=\"' + (c.length >= 3 ? \"true\" : \"false\") + '\"/>';\n              break;\n            case \"d\":\n            case \"dd\":\n              payload += '<number:day number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>';\n              break;\n            case \"ddd\":\n            case \"dddd\":\n              payload += '<number:day-of-week number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>';\n              break;\n          }\n          break;\n        case '\"':\n          while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n          --i;\n          payload += '<number:text>' + escapexml(c.slice(1).replace(/\"\"/g, '\"')) + '</number:text>';\n          break;\n        case '\\\\':\n          c = nf[++i];\n          payload += '<number:text>' + escapexml(c) + '</number:text>';\n          break;\n        case '/':\n        case ':':\n          payload += '<number:text>' + escapexml(c) + '</number:text>';\n          break;\n        default:\n          console.error(\"unrecognized character \" + c + \" in ODF format \" + nf);\n      }\n      if (!has_time) break j;\n      nf = nf.slice(i + 1);\n      i = 0;\n    }\n    if (nf.match(/^\\[?[hms]/)) {\n      if (type == \"number\") type = \"time\";\n      if (nf.match(/\\[/)) {\n        nf = nf.replace(/[\\[\\]]/g, \"\");\n        nopts['number:truncate-on-overflow'] = \"false\";\n      }\n      for (; i < nf.length; ++i) switch (c = nf[i].toLowerCase()) {\n        case \"h\":\n        case \"m\":\n        case \"s\":\n          while ((nf[++i] || \"\").toLowerCase() == c[0]) c += c[0];\n          --i;\n          switch (c) {\n            case \"h\":\n            case \"hh\":\n              payload += '<number:hours number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>';\n              break;\n            case \"m\":\n            case \"mm\":\n              payload += '<number:minutes number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>';\n              break;\n            case \"s\":\n            case \"ss\":\n              if (nf[i + 1] == \".\") do {\n                c += nf[i + 1];\n                ++i;\n              } while (nf[i + 1] == \"0\");\n              payload += '<number:seconds number:style=\"' + (c.match(\"ss\") ? \"long\" : \"short\") + '\"' + (c.match(/\\./) ? ' number:decimal-places=\"' + (c.match(/0+/) || [\"\"])[0].length + '\"' : \"\") + '/>';\n              break;\n          }\n          break;\n        case '\"':\n          while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n          --i;\n          payload += '<number:text>' + escapexml(c.slice(1).replace(/\"\"/g, '\"')) + '</number:text>';\n          break;\n        case '/':\n        case ':':\n          payload += '<number:text>' + escapexml(c) + '</number:text>';\n          break;\n        case \"a\":\n          if (nf.slice(i, i + 3).toLowerCase() == \"a/p\") {\n            payload += '<number:am-pm/>';\n            i += 2;\n            break;\n          } // Note: ODF does not support A/P\n          if (nf.slice(i, i + 5).toLowerCase() == \"am/pm\") {\n            payload += '<number:am-pm/>';\n            i += 4;\n            break;\n          }\n        /* falls through */\n        default:\n          console.error(\"unrecognized character \" + c + \" in ODF format \" + nf);\n      }\n      break j;\n    }\n\n    /* currency flag */\n    if (nf.indexOf(/\\$/) > -1) {\n      type = \"currency\";\n    }\n\n    /* should be in a char loop */\n    if (nf[0] == \"$\") {\n      payload += '<number:currency-symbol number:language=\"en\" number:country=\"US\">$</number:currency-symbol>';\n      nf = nf.slice(1);\n      i = 0;\n    }\n    i = 0;\n    if (nf[i] == '\"') {\n      while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n      --i;\n      if (nf[i + 1] == \"*\") {\n        i++;\n        payload += '<number:fill-character>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:fill-character>';\n      } else {\n        payload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n      }\n      nf = nf.slice(i + 1);\n      i = 0;\n    }\n\n    /* number TODO: interstitial text e.g. 000)000-0000 */\n    var np = nf.match(/([#0][0#,]*)(\\.[0#]*|)(E[+]?0*|)/i);\n    if (!np || !np[0]) console.error(\"Could not find numeric part of \" + nf);else {\n      var base = np[1].replace(/,/g, \"\");\n      payload += '<number:' + (np[3] ? \"scientific-\" : \"\") + 'number' + ' number:min-integer-digits=\"' + (base.indexOf(\"0\") == -1 ? \"0\" : base.length - base.indexOf(\"0\")) + '\"' + (np[0].indexOf(\",\") > -1 ? ' number:grouping=\"true\"' : \"\") + (np[2] && ' number:decimal-places=\"' + (np[2].length - 1) + '\"' || ' number:decimal-places=\"0\"') + (np[3] && np[3].indexOf(\"+\") > -1 ? ' number:forced-exponent-sign=\"true\"' : \"\") + (np[3] ? ' number:min-exponent-digits=\"' + np[3].match(/0+/)[0].length + '\"' : \"\") + '>' + /* TODO: interstitial text placeholders */\n      '</number:' + (np[3] ? \"scientific-\" : \"\") + 'number>';\n      i = np.index + np[0].length;\n    }\n\n    /* residual text */\n    if (nf[i] == '\"') {\n      c = \"\";\n      while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n      --i;\n      payload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n    }\n  }\n  if (!payload) {\n    console.error(\"Could not generate ODS number format for |\" + nf + \"|\");\n    return \"\";\n  }\n  return writextag(\"number:\" + type + \"-style\", payload, nopts);\n}\nfunction write_names_ods(Names, SheetNames, idx) {\n  //var scoped = Names.filter(function(name) { return name.Sheet == (idx == -1 ? null : idx); });\n  var scoped = [];\n  for (var namei = 0; namei < Names.length; ++namei) {\n    var name = Names[namei];\n    if (!name) continue;\n    if (name.Sheet == (idx == -1 ? null : idx)) scoped.push(name);\n  }\n  if (!scoped.length) return \"\";\n  return \"      <table:named-expressions>\\n\" + scoped.map(function (name) {\n    var odsref = (idx == -1 ? \"$\" : \"\") + csf_to_ods_3D(name.Ref);\n    return \"        \" + writextag(\"table:named-range\", null, {\n      \"table:name\": name.Name,\n      \"table:cell-range-address\": odsref,\n      \"table:base-cell-address\": odsref.replace(/[\\.][^\\.]*$/, \".$A$1\")\n    });\n  }).join(\"\\n\") + \"\\n      </table:named-expressions>\\n\";\n}\nvar write_content_ods /*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */function () {\n  /* 6.1.2 White Space Characters */\n  var write_text_p = function (text /*:string*/, span) /*:string*/{\n    return escapexml(text).replace(/  +/g, function ($$) {\n      return '<text:s text:c=\"' + $$.length + '\"/>';\n    }).replace(/\\t/g, \"<text:tab/>\").replace(/\\n/g, span ? \"<text:line-break/>\" : \"</text:p><text:p>\").replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n  };\n  var null_cell_xml = '          <table:table-cell />\\n';\n  var write_ws = function (ws, wb /*:Workbook*/, i /*:number*/, opts, nfs, date1904) /*:string*/{\n    /* Section 9 Tables */\n    var o /*:Array<string>*/ = [];\n    o.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\" table:style-name=\"ta1\">\\n');\n    var R = 0,\n      C = 0,\n      range = decode_range(ws['!ref'] || \"A1\");\n    var marr /*:Array<Range>*/ = ws['!merges'] || [],\n      mi = 0;\n    var dense = ws[\"!data\"] != null;\n    if (ws[\"!cols\"]) {\n      for (C = 0; C <= range.e.c; ++C) o.push('        <table:table-column' + (ws[\"!cols\"][C] ? ' table:style-name=\"co' + ws[\"!cols\"][C].ods + '\"' : '') + '></table:table-column>\\n');\n    }\n    var H = \"\",\n      ROWS = ws[\"!rows\"] || [];\n    for (R = 0; R < range.s.r; ++R) {\n      H = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n      o.push('        <table:table-row' + H + '></table:table-row>\\n');\n    }\n    for (; R <= range.e.r; ++R) {\n      H = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n      o.push('        <table:table-row' + H + '>\\n');\n      for (C = 0; C < range.s.c; ++C) o.push(null_cell_xml);\n      for (; C <= range.e.c; ++C) {\n        var skip = false,\n          ct = {},\n          textp = \"\";\n        for (mi = 0; mi != marr.length; ++mi) {\n          if (marr[mi].s.c > C) continue;\n          if (marr[mi].s.r > R) continue;\n          if (marr[mi].e.c < C) continue;\n          if (marr[mi].e.r < R) continue;\n          if (marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n          ct['table:number-columns-spanned'] = marr[mi].e.c - marr[mi].s.c + 1;\n          ct['table:number-rows-spanned'] = marr[mi].e.r - marr[mi].s.r + 1;\n          break;\n        }\n        if (skip) {\n          o.push('          <table:covered-table-cell/>\\n');\n          continue;\n        }\n        var ref = encode_cell({\n            r: R,\n            c: C\n          }),\n          cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n        if (cell && cell.f) {\n          ct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n          if (cell.F) {\n            if (cell.F.slice(0, ref.length) == ref) {\n              var _Fref = decode_range(cell.F);\n              ct['table:number-matrix-columns-spanned'] = _Fref.e.c - _Fref.s.c + 1;\n              ct['table:number-matrix-rows-spanned'] = _Fref.e.r - _Fref.s.r + 1;\n            }\n          }\n        }\n        if (!cell) {\n          o.push(null_cell_xml);\n          continue;\n        }\n        switch (cell.t) {\n          case 'b':\n            textp = cell.v ? 'TRUE' : 'FALSE';\n            ct['office:value-type'] = \"boolean\";\n            ct['office:boolean-value'] = cell.v ? 'true' : 'false';\n            break;\n          case 'n':\n            textp = cell.w || String(cell.v || 0);\n            ct['office:value-type'] = \"float\";\n            ct['office:value'] = cell.v || 0;\n            break;\n          case 's':\n          case 'str':\n            textp = cell.v == null ? \"\" : cell.v;\n            ct['office:value-type'] = \"string\";\n            break;\n          case 'd':\n            textp = cell.w || parseDate(cell.v, date1904).toISOString();\n            ct['office:value-type'] = \"date\";\n            ct['office:date-value'] = parseDate(cell.v, date1904).toISOString();\n            ct['table:style-name'] = \"ce1\";\n            break;\n          //case 'e': // TODO: translate to ODS errors\n          default:\n            o.push(null_cell_xml);\n            continue;\n          // TODO: empty cell with comments\n        }\n        var text_p = write_text_p(textp);\n        if (cell.l && cell.l.Target) {\n          var _tgt = cell.l.Target;\n          _tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n          // TODO: choose correct parent path format based on link delimiters\n          if (_tgt.charAt(0) != \"#\" && !_tgt.match(/^\\w+:/)) _tgt = '../' + _tgt;\n          text_p = writextag('text:a', text_p, {\n            'xlink:href': _tgt.replace(/&/g, \"&amp;\")\n          });\n        }\n        if (nfs[cell.z]) ct[\"table:style-name\"] = \"ce\" + nfs[cell.z].slice(1);\n        var payload = writextag('text:p', text_p, {});\n        if (cell.c) {\n          var acreator = \"\",\n            apayload = \"\",\n            aprops = {};\n          for (var ci = 0; ci < cell.c.length; ++ci) {\n            if (!acreator && cell.c[ci].a) acreator = cell.c[ci].a;\n            apayload += \"<text:p>\" + write_text_p(cell.c[ci].t) + \"</text:p>\";\n          }\n          if (!cell.c.hidden) aprops[\"office:display\"] = true;\n          payload = writextag('office:annotation', apayload, aprops) + payload;\n        }\n        o.push('          ' + writextag('table:table-cell', payload, ct) + '\\n');\n      }\n      o.push('        </table:table-row>\\n');\n    }\n    if ((wb.Workbook || {}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, i));\n    o.push('      </table:table>\\n');\n    return o.join(\"\");\n  };\n  var write_automatic_styles_ods = function (o /*:Array<string>*/, wb) {\n    o.push(' <office:automatic-styles>\\n');\n\n    /* column styles */\n    var cidx = 0;\n    wb.SheetNames.map(function (n) {\n      return wb.Sheets[n];\n    }).forEach(function (ws) {\n      if (!ws) return;\n      if (ws[\"!cols\"]) {\n        for (var C = 0; C < ws[\"!cols\"].length; ++C) if (ws[\"!cols\"][C]) {\n          var colobj = ws[\"!cols\"][C];\n          if (colobj.width == null && colobj.wpx == null && colobj.wch == null) continue;\n          process_col(colobj);\n          colobj.ods = cidx;\n          var w = ws[\"!cols\"][C].wpx + \"px\";\n          o.push('  <style:style style:name=\"co' + cidx + '\" style:family=\"table-column\">\\n');\n          o.push('   <style:table-column-properties fo:break-before=\"auto\" style:column-width=\"' + w + '\"/>\\n');\n          o.push('  </style:style>\\n');\n          ++cidx;\n        }\n      }\n    });\n\n    /* row styles */\n    var ridx = 0;\n    wb.SheetNames.map(function (n) {\n      return wb.Sheets[n];\n    }).forEach(function (ws) {\n      if (!ws) return;\n      if (ws[\"!rows\"]) {\n        for (var R = 0; R < ws[\"!rows\"].length; ++R) if (ws[\"!rows\"][R]) {\n          ws[\"!rows\"][R].ods = ridx;\n          var h = ws[\"!rows\"][R].hpx + \"px\";\n          o.push('  <style:style style:name=\"ro' + ridx + '\" style:family=\"table-row\">\\n');\n          o.push('   <style:table-row-properties fo:break-before=\"auto\" style:row-height=\"' + h + '\"/>\\n');\n          o.push('  </style:style>\\n');\n          ++ridx;\n        }\n      }\n    });\n\n    /* table */\n    o.push('  <style:style style:name=\"ta1\" style:family=\"table\" style:master-page-name=\"mp1\">\\n');\n    o.push('   <style:table-properties table:display=\"true\" style:writing-mode=\"lr-tb\"/>\\n');\n    o.push('  </style:style>\\n');\n    o.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n    o.push('   <number:month number:style=\"long\"/>\\n');\n    o.push('   <number:text>/</number:text>\\n');\n    o.push('   <number:day number:style=\"long\"/>\\n');\n    o.push('   <number:text>/</number:text>\\n');\n    o.push('   <number:year/>\\n');\n    o.push('  </number:date-style>\\n');\n\n    /* number formats, table cells, text */\n    var nfs = {};\n    var nfi = 69;\n    wb.SheetNames.map(function (n) {\n      return wb.Sheets[n];\n    }).forEach(function (ws) {\n      if (!ws) return;\n      var dense = ws[\"!data\"] != null;\n      if (!ws[\"!ref\"]) return;\n      var range = decode_range(ws[\"!ref\"]);\n      for (var R = 0; R <= range.e.r; ++R) for (var C = 0; C <= range.e.c; ++C) {\n        var c = dense ? (ws[\"!data\"][R] || [])[C] : ws[encode_cell({\n          r: R,\n          c: C\n        })];\n        if (!c || !c.z || c.z.toLowerCase() == \"general\") continue;\n        if (!nfs[c.z]) {\n          var out = write_number_format_ods(c.z, \"N\" + nfi);\n          if (out) {\n            nfs[c.z] = \"N\" + nfi;\n            ++nfi;\n            o.push(out + \"\\n\");\n          }\n        }\n      }\n    });\n    o.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n    keys(nfs).forEach(function (nf) {\n      o.push('<style:style style:name=\"ce' + nfs[nf].slice(1) + '\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"' + nfs[nf] + '\"/>\\n');\n    });\n\n    /* page-layout */\n\n    o.push(' </office:automatic-styles>\\n');\n    return nfs;\n  };\n  return function wcx(wb, opts) {\n    var o = [XML_HEADER];\n    /* 3.1.3.2 */\n    var attr = wxt_helper({\n      'xmlns:office': \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n      'xmlns:table': \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n      'xmlns:style': \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n      'xmlns:text': \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n      'xmlns:draw': \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n      'xmlns:fo': \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n      'xmlns:xlink': \"http://www.w3.org/1999/xlink\",\n      'xmlns:dc': \"http://purl.org/dc/elements/1.1/\",\n      'xmlns:meta': \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n      'xmlns:number': \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n      'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n      'xmlns:svg': \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n      'xmlns:chart': \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n      'xmlns:dr3d': \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n      'xmlns:math': \"http://www.w3.org/1998/Math/MathML\",\n      'xmlns:form': \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n      'xmlns:script': \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n      'xmlns:ooo': \"http://openoffice.org/2004/office\",\n      'xmlns:ooow': \"http://openoffice.org/2004/writer\",\n      'xmlns:oooc': \"http://openoffice.org/2004/calc\",\n      'xmlns:dom': \"http://www.w3.org/2001/xml-events\",\n      'xmlns:xforms': \"http://www.w3.org/2002/xforms\",\n      'xmlns:xsd': \"http://www.w3.org/2001/XMLSchema\",\n      'xmlns:xsi': \"http://www.w3.org/2001/XMLSchema-instance\",\n      'xmlns:sheet': \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n      'xmlns:rpt': \"http://openoffice.org/2005/report\",\n      'xmlns:of': \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n      'xmlns:xhtml': \"http://www.w3.org/1999/xhtml\",\n      'xmlns:grddl': \"http://www.w3.org/2003/g/data-view#\",\n      'xmlns:tableooo': \"http://openoffice.org/2009/table\",\n      'xmlns:drawooo': \"http://openoffice.org/2010/draw\",\n      'xmlns:calcext': \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n      'xmlns:loext': \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n      'xmlns:field': \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n      'xmlns:formx': \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n      'xmlns:css3t': \"http://www.w3.org/TR/css3-text/\",\n      'office:version': \"1.2\"\n    });\n    var fods = wxt_helper({\n      'xmlns:config': \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n      'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n    });\n    if (opts.bookType == \"fods\") {\n      o.push('<office:document' + attr + fods + '>\\n');\n      o.push(write_meta_ods().replace(/<office:document-meta[^<>]*?>/, \"\").replace(/<\\/office:document-meta>/, \"\") + \"\\n\");\n      // TODO: settings (equiv of settings.xml for ODS)\n    } else o.push('<office:document-content' + attr + '>\\n');\n    // o.push('  <office:scripts/>\\n');\n    var nfs = write_automatic_styles_ods(o, wb);\n    o.push('  <office:body>\\n');\n    o.push('    <office:spreadsheet>\\n');\n    if (((wb.Workbook || {}).WBProps || {}).date1904) o.push('      <table:calculation-settings table:case-sensitive=\"false\" table:search-criteria-must-apply-to-whole-cell=\"true\" table:use-wildcards=\"true\" table:use-regular-expressions=\"false\" table:automatic-find-labels=\"false\">\\n        <table:null-date table:date-value=\"1904-01-01\"/>\\n      </table:calculation-settings>\\n');\n    for (var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts, nfs, ((wb.Workbook || {}).WBProps || {}).date1904));\n    if ((wb.Workbook || {}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, -1));\n    o.push('    </office:spreadsheet>\\n');\n    o.push('  </office:body>\\n');\n    if (opts.bookType == \"fods\") o.push('</office:document>');else o.push('</office:document-content>');\n    return o.join(\"\");\n  };\n}();\nfunction write_ods(wb /*:any*/, opts /*:any*/) {\n  if (opts.bookType == \"fods\") return write_content_ods(wb, opts);\n  var zip = zip_new();\n  var f = \"\";\n  var manifest /*:Array<Array<string> >*/ = [];\n  var rdf /*:Array<[string, string]>*/ = [];\n\n  /* Part 3 Section 3.3 MIME Media Type */\n  f = \"mimetype\";\n  zip_add_file(zip, f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n  /* Part 1 Section 2.2 Documents */\n  f = \"content.xml\";\n  zip_add_file(zip, f, write_content_ods(wb, opts));\n  manifest.push([f, \"text/xml\"]);\n  rdf.push([f, \"ContentFile\"]);\n\n  /* TODO: these are hard-coded styles to satiate excel */\n  f = \"styles.xml\";\n  zip_add_file(zip, f, write_styles_ods(wb, opts));\n  manifest.push([f, \"text/xml\"]);\n  rdf.push([f, \"StylesFile\"]);\n\n  /* TODO: this is hard-coded to satiate excel */\n  f = \"meta.xml\";\n  zip_add_file(zip, f, XML_HEADER + write_meta_ods( /*::wb, opts*/));\n  manifest.push([f, \"text/xml\"]);\n  rdf.push([f, \"MetadataFile\"]);\n\n  /* Part 3 Section 6 Metadata Manifest File */\n  f = \"manifest.rdf\";\n  zip_add_file(zip, f, write_rdf(rdf /*, opts*/));\n  manifest.push([f, \"application/rdf+xml\"]);\n\n  /* Part 3 Section 4 Manifest File */\n  f = \"META-INF/manifest.xml\";\n  zip_add_file(zip, f, write_manifest(manifest /*, opts*/));\n  return zip;\n}\n\n/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */\nvar subarray = function () {\n  try {\n    if (typeof Uint8Array == \"undefined\") return \"slice\";\n    if (typeof Uint8Array.prototype.subarray == \"undefined\") return \"slice\";\n    if (typeof Buffer !== \"undefined\") {\n      if (typeof Buffer.prototype.subarray == \"undefined\") return \"slice\";\n      if ((typeof Buffer.from == \"function\" ? Buffer.from([72, 62]) : new Buffer([72, 62])) instanceof Uint8Array) return \"subarray\";\n      return \"slice\";\n    }\n    return \"subarray\";\n  } catch (e) {\n    return \"slice\";\n  }\n}();\nfunction u8_to_dataview(array) {\n  return new DataView(array.buffer, array.byteOffset, array.byteLength);\n}\nfunction u8str(u8) {\n  return typeof TextDecoder != \"undefined\" ? new TextDecoder().decode(u8) : utf8read(a2s(u8));\n}\nfunction stru8(str) {\n  return typeof TextEncoder != \"undefined\" ? new TextEncoder().encode(str) : s2a(utf8write(str));\n}\nfunction u8concat(u8a) {\n  var len = 0;\n  for (var i = 0; i < u8a.length; ++i) len += u8a[i].length;\n  var out = new Uint8Array(len);\n  var off = 0;\n  for (i = 0; i < u8a.length; ++i) {\n    var u8 = u8a[i],\n      L = u8.length;\n    if (L < 250) {\n      for (var j = 0; j < L; ++j) out[off++] = u8[j];\n    } else {\n      out.set(u8, off);\n      off += L;\n    }\n  }\n  return out;\n}\nfunction popcnt(x) {\n  x -= x >> 1 & 1431655765;\n  x = (x & 858993459) + (x >> 2 & 858993459);\n  return (x + (x >> 4) & 252645135) * 16843009 >>> 24;\n}\nfunction readDecimal128LE(buf, offset) {\n  var exp = (buf[offset + 15] & 127) << 7 | buf[offset + 14] >> 1;\n  var mantissa = buf[offset + 14] & 1;\n  for (var j = offset + 13; j >= offset; --j) mantissa = mantissa * 256 + buf[j];\n  return (buf[offset + 15] & 128 ? -mantissa : mantissa) * Math.pow(10, exp - 6176);\n}\nfunction writeDecimal128LE(buf, offset, value) {\n  var exp = Math.floor(value == 0 ? 0 : Math.LOG10E * Math.log(Math.abs(value))) + 6176 - 16;\n  var mantissa = value / Math.pow(10, exp - 6176);\n  buf[offset + 15] |= exp >> 7;\n  buf[offset + 14] |= (exp & 127) << 1;\n  for (var i = 0; mantissa >= 1; ++i, mantissa /= 256) buf[offset + i] = mantissa & 255;\n  buf[offset + 15] |= value >= 0 ? 0 : 128;\n}\nfunction parse_varint49(buf, ptr) {\n  var l = ptr.l;\n  var usz = buf[l] & 127;\n  varint: if (buf[l++] >= 128) {\n    usz |= (buf[l] & 127) << 7;\n    if (buf[l++] < 128) break varint;\n    usz |= (buf[l] & 127) << 14;\n    if (buf[l++] < 128) break varint;\n    usz |= (buf[l] & 127) << 21;\n    if (buf[l++] < 128) break varint;\n    usz += (buf[l] & 127) * Math.pow(2, 28);\n    ++l;\n    if (buf[l++] < 128) break varint;\n    usz += (buf[l] & 127) * Math.pow(2, 35);\n    ++l;\n    if (buf[l++] < 128) break varint;\n    usz += (buf[l] & 127) * Math.pow(2, 42);\n    ++l;\n    if (buf[l++] < 128) break varint;\n  }\n  ptr.l = l;\n  return usz;\n}\nfunction write_varint49(v) {\n  var usz = new Uint8Array(7);\n  usz[0] = v & 127;\n  var L = 1;\n  sz: if (v > 127) {\n    usz[L - 1] |= 128;\n    usz[L] = v >> 7 & 127;\n    ++L;\n    if (v <= 16383) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v >> 14 & 127;\n    ++L;\n    if (v <= 2097151) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v >> 21 & 127;\n    ++L;\n    if (v <= 268435455) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v / 256 >>> 21 & 127;\n    ++L;\n    if (v <= 34359738367) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v / 65536 >>> 21 & 127;\n    ++L;\n    if (v <= 4398046511103) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v / 16777216 >>> 21 & 127;\n    ++L;\n  }\n  return usz[subarray](0, L);\n}\nfunction parse_packed_varints(buf) {\n  var ptr = {\n    l: 0\n  };\n  var out = [];\n  while (ptr.l < buf.length) out.push(parse_varint49(buf, ptr));\n  return out;\n}\nfunction write_packed_varints(nums) {\n  return u8concat(nums.map(function (x) {\n    return write_varint49(x);\n  }));\n}\nfunction varint_to_i32(buf) {\n  var l = 0,\n    i32 = buf[l] & 127;\n  if (buf[l++] < 128) return i32;\n  i32 |= (buf[l] & 127) << 7;\n  if (buf[l++] < 128) return i32;\n  i32 |= (buf[l] & 127) << 14;\n  if (buf[l++] < 128) return i32;\n  i32 |= (buf[l] & 127) << 21;\n  if (buf[l++] < 128) return i32;\n  i32 |= (buf[l] & 15) << 28;\n  return i32;\n}\nfunction varint_to_u64(buf) {\n  var l = 0,\n    lo = buf[l] & 127,\n    hi = 0;\n  varint: if (buf[l++] >= 128) {\n    lo |= (buf[l] & 127) << 7;\n    if (buf[l++] < 128) break varint;\n    lo |= (buf[l] & 127) << 14;\n    if (buf[l++] < 128) break varint;\n    lo |= (buf[l] & 127) << 21;\n    if (buf[l++] < 128) break varint;\n    lo |= (buf[l] & 127) << 28;\n    hi = buf[l] >> 4 & 7;\n    if (buf[l++] < 128) break varint;\n    hi |= (buf[l] & 127) << 3;\n    if (buf[l++] < 128) break varint;\n    hi |= (buf[l] & 127) << 10;\n    if (buf[l++] < 128) break varint;\n    hi |= (buf[l] & 127) << 17;\n    if (buf[l++] < 128) break varint;\n    hi |= (buf[l] & 127) << 24;\n    if (buf[l++] < 128) break varint;\n    hi |= (buf[l] & 127) << 31;\n  }\n  return [lo >>> 0, hi >>> 0];\n}\nfunction parse_shallow(buf) {\n  var out = [],\n    ptr = {\n      l: 0\n    };\n  while (ptr.l < buf.length) {\n    var off = ptr.l;\n    var num = parse_varint49(buf, ptr);\n    var type = num & 7;\n    num = num / 8 | 0;\n    var data;\n    var l = ptr.l;\n    switch (type) {\n      case 0:\n        {\n          while (buf[l++] >= 128);\n          data = buf[subarray](ptr.l, l);\n          ptr.l = l;\n        }\n        break;\n      case 1:\n        {\n          data = buf[subarray](l, l + 8);\n          ptr.l = l + 8;\n        }\n        break;\n      case 2:\n        {\n          var len = parse_varint49(buf, ptr);\n          data = buf[subarray](ptr.l, ptr.l + len);\n          ptr.l += len;\n        }\n        break;\n      case 5:\n        {\n          data = buf[subarray](l, l + 4);\n          ptr.l = l + 4;\n        }\n        break;\n      default:\n        throw new Error(\"PB Type \".concat(type, \" for Field \").concat(num, \" at offset \").concat(off));\n    }\n    var v = {\n      data: data,\n      type: type\n    };\n    if (out[num] == null) out[num] = [];\n    out[num].push(v);\n  }\n  return out;\n}\nfunction write_shallow(proto) {\n  var out = [];\n  proto.forEach(function (field, idx) {\n    if (idx == 0) return;\n    field.forEach(function (item) {\n      if (!item.data) return;\n      out.push(write_varint49(idx * 8 + item.type));\n      if (item.type == 2) out.push(write_varint49(item.data.length));\n      out.push(item.data);\n    });\n  });\n  return u8concat(out);\n}\nfunction mappa(data, cb) {\n  return (data == null ? void 0 : data.map(function (d) {\n    return cb(d.data);\n  })) || [];\n}\nfunction parse_iwa_file(buf) {\n  var _a;\n  var out = [],\n    ptr = {\n      l: 0\n    };\n  while (ptr.l < buf.length) {\n    var len = parse_varint49(buf, ptr);\n    var ai = parse_shallow(buf[subarray](ptr.l, ptr.l + len));\n    ptr.l += len;\n    var res = {\n      id: varint_to_i32(ai[1][0].data),\n      messages: []\n    };\n    ai[2].forEach(function (b) {\n      var mi = parse_shallow(b.data);\n      var fl = varint_to_i32(mi[3][0].data);\n      res.messages.push({\n        meta: mi,\n        data: buf[subarray](ptr.l, ptr.l + fl)\n      });\n      ptr.l += fl;\n    });\n    if ((_a = ai[3]) == null ? void 0 : _a[0]) res.merge = varint_to_i32(ai[3][0].data) >>> 0 > 0;\n    out.push(res);\n  }\n  return out;\n}\nfunction write_iwa_file(ias) {\n  var bufs = [];\n  ias.forEach(function (ia) {\n    var ai = [[], [{\n      data: write_varint49(ia.id),\n      type: 0\n    }], []];\n    if (ia.merge != null) ai[3] = [{\n      data: write_varint49(+!!ia.merge),\n      type: 0\n    }];\n    var midata = [];\n    ia.messages.forEach(function (mi) {\n      midata.push(mi.data);\n      mi.meta[3] = [{\n        type: 0,\n        data: write_varint49(mi.data.length)\n      }];\n      ai[2].push({\n        data: write_shallow(mi.meta),\n        type: 2\n      });\n    });\n    var aipayload = write_shallow(ai);\n    bufs.push(write_varint49(aipayload.length));\n    bufs.push(aipayload);\n    midata.forEach(function (mid) {\n      return bufs.push(mid);\n    });\n  });\n  return u8concat(bufs);\n}\nfunction parse_snappy_chunk(type, buf) {\n  if (type != 0) throw new Error(\"Unexpected Snappy chunk type \".concat(type));\n  var ptr = {\n    l: 0\n  };\n  var usz = parse_varint49(buf, ptr);\n  var chunks = [];\n  var l = ptr.l;\n  while (l < buf.length) {\n    var tag = buf[l] & 3;\n    if (tag == 0) {\n      var len = buf[l++] >> 2;\n      if (len < 60) ++len;else {\n        var c = len - 59;\n        len = buf[l];\n        if (c > 1) len |= buf[l + 1] << 8;\n        if (c > 2) len |= buf[l + 2] << 16;\n        if (c > 3) len |= buf[l + 3] << 24;\n        len >>>= 0;\n        len++;\n        l += c;\n      }\n      chunks.push(buf[subarray](l, l + len));\n      l += len;\n      continue;\n    } else {\n      var offset = 0,\n        length = 0;\n      if (tag == 1) {\n        length = (buf[l] >> 2 & 7) + 4;\n        offset = (buf[l++] & 224) << 3;\n        offset |= buf[l++];\n      } else {\n        length = (buf[l++] >> 2) + 1;\n        if (tag == 2) {\n          offset = buf[l] | buf[l + 1] << 8;\n          l += 2;\n        } else {\n          offset = (buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16 | buf[l + 3] << 24) >>> 0;\n          l += 4;\n        }\n      }\n      if (offset == 0) throw new Error(\"Invalid offset 0\");\n      var j = chunks.length - 1,\n        off = offset;\n      while (j >= 0 && off >= chunks[j].length) {\n        off -= chunks[j].length;\n        --j;\n      }\n      if (j < 0) {\n        if (off == 0) off = chunks[j = 0].length;else throw new Error(\"Invalid offset beyond length\");\n      }\n      if (length < off) chunks.push(chunks[j][subarray](chunks[j].length - off, chunks[j].length - off + length));else {\n        if (off > 0) {\n          chunks.push(chunks[j][subarray](chunks[j].length - off));\n          length -= off;\n        }\n        ++j;\n        while (length >= chunks[j].length) {\n          chunks.push(chunks[j]);\n          length -= chunks[j].length;\n          ++j;\n        }\n        if (length) chunks.push(chunks[j][subarray](0, length));\n      }\n      if (chunks.length > 25) chunks = [u8concat(chunks)];\n    }\n  }\n  var clen = 0;\n  for (var u8i = 0; u8i < chunks.length; ++u8i) clen += chunks[u8i].length;\n  if (clen != usz) throw new Error(\"Unexpected length: \".concat(clen, \" != \").concat(usz));\n  return chunks;\n}\nfunction decompress_iwa_file(buf) {\n  if (Array.isArray(buf)) buf = new Uint8Array(buf);\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var t = buf[l++];\n    var len = buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16;\n    l += 3;\n    out.push.apply(out, parse_snappy_chunk(t, buf[subarray](l, l + len)));\n    l += len;\n  }\n  if (l !== buf.length) throw new Error(\"data is not a valid framed stream!\");\n  return out.length == 1 ? out[0] : u8concat(out);\n}\nfunction compress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var c = Math.min(buf.length - l, 268435455);\n    var frame = new Uint8Array(4);\n    out.push(frame);\n    var usz = write_varint49(c);\n    var L = usz.length;\n    out.push(usz);\n    if (c <= 60) {\n      L++;\n      out.push(new Uint8Array([c - 1 << 2]));\n    } else if (c <= 256) {\n      L += 2;\n      out.push(new Uint8Array([240, c - 1 & 255]));\n    } else if (c <= 65536) {\n      L += 3;\n      out.push(new Uint8Array([244, c - 1 & 255, c - 1 >> 8 & 255]));\n    } else if (c <= 16777216) {\n      L += 4;\n      out.push(new Uint8Array([248, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255]));\n    } else if (c <= 4294967296) {\n      L += 5;\n      out.push(new Uint8Array([252, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255, c - 1 >>> 24 & 255]));\n    }\n    out.push(buf[subarray](l, l + c));\n    L += c;\n    frame[0] = 0;\n    frame[1] = L & 255;\n    frame[2] = L >> 8 & 255;\n    frame[3] = L >> 16 & 255;\n    l += c;\n  }\n  return u8concat(out);\n}\nvar numbers_lut_new = function () {\n  return {\n    sst: [],\n    rsst: [],\n    ofmt: [],\n    nfmt: [],\n    fmla: [],\n    ferr: [],\n    cmnt: []\n  };\n};\nfunction numbers_format_cell(cell, t, flags, ofmt, nfmt) {\n  var _a, _b, _c, _d;\n  var ctype = t & 255,\n    ver = t >> 8;\n  var fmt = ver >= 5 ? nfmt : ofmt;\n  dur: if (flags & (ver > 4 ? 8 : 4) && cell.t == \"n\" && ctype == 7) {\n    var dstyle = ((_a = fmt[7]) == null ? void 0 : _a[0]) ? varint_to_i32(fmt[7][0].data) : -1;\n    if (dstyle == -1) break dur;\n    var dmin = ((_b = fmt[15]) == null ? void 0 : _b[0]) ? varint_to_i32(fmt[15][0].data) : -1;\n    var dmax = ((_c = fmt[16]) == null ? void 0 : _c[0]) ? varint_to_i32(fmt[16][0].data) : -1;\n    var auto = ((_d = fmt[40]) == null ? void 0 : _d[0]) ? varint_to_i32(fmt[40][0].data) : -1;\n    var d = cell.v,\n      dd = d;\n    autodur: if (auto) {\n      if (d == 0) {\n        dmin = dmax = 2;\n        break autodur;\n      }\n      if (d >= 604800) dmin = 1;else if (d >= 86400) dmin = 2;else if (d >= 3600) dmin = 4;else if (d >= 60) dmin = 8;else if (d >= 1) dmin = 16;else dmin = 32;\n      if (Math.floor(d) != d) dmax = 32;else if (d % 60) dmax = 16;else if (d % 3600) dmax = 8;else if (d % 86400) dmax = 4;else if (d % 604800) dmax = 2;\n      if (dmax < dmin) dmax = dmin;\n    }\n    if (dmin == -1 || dmax == -1) break dur;\n    var dstr = [],\n      zstr = [];\n    if (dmin == 1) {\n      dd = d / 604800;\n      if (dmax == 1) {\n        zstr.push('d\"d\"');\n      } else {\n        dd |= 0;\n        d -= 604800 * dd;\n      }\n      dstr.push(dd + (dstyle == 2 ? \" week\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"w\" : \"\"));\n    }\n    if (dmin <= 2 && dmax >= 2) {\n      dd = d / 86400;\n      if (dmax > 2) {\n        dd |= 0;\n        d -= 86400 * dd;\n      }\n      zstr.push('d\"d\"');\n      dstr.push(dd + (dstyle == 2 ? \" day\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"d\" : \"\"));\n    }\n    if (dmin <= 4 && dmax >= 4) {\n      dd = d / 3600;\n      if (dmax > 4) {\n        dd |= 0;\n        d -= 3600 * dd;\n      }\n      zstr.push((dmin >= 4 ? \"[h]\" : \"h\") + '\"h\"');\n      dstr.push(dd + (dstyle == 2 ? \" hour\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"h\" : \"\"));\n    }\n    if (dmin <= 8 && dmax >= 8) {\n      dd = d / 60;\n      if (dmax > 8) {\n        dd |= 0;\n        d -= 60 * dd;\n      }\n      zstr.push((dmin >= 8 ? \"[m]\" : \"m\") + '\"m\"');\n      if (dstyle == 0) dstr.push((dmin == 8 && dmax == 8 || dd >= 10 ? \"\" : \"0\") + dd);else dstr.push(dd + (dstyle == 2 ? \" minute\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"m\" : \"\"));\n    }\n    if (dmin <= 16 && dmax >= 16) {\n      dd = d;\n      if (dmax > 16) {\n        dd |= 0;\n        d -= dd;\n      }\n      zstr.push((dmin >= 16 ? \"[s]\" : \"s\") + '\"s\"');\n      if (dstyle == 0) dstr.push((dmax == 16 && dmin == 16 || dd >= 10 ? \"\" : \"0\") + dd);else dstr.push(dd + (dstyle == 2 ? \" second\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"s\" : \"\"));\n    }\n    if (dmax >= 32) {\n      dd = Math.round(1e3 * d);\n      if (dmin < 32) zstr.push('.000\"ms\"');\n      if (dstyle == 0) dstr.push((dd >= 100 ? \"\" : dd >= 10 ? \"0\" : \"00\") + dd);else dstr.push(dd + (dstyle == 2 ? \" millisecond\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"ms\" : \"\"));\n    }\n    cell.w = dstr.join(dstyle == 0 ? \":\" : \" \");\n    cell.z = zstr.join(dstyle == 0 ? '\":\"' : \" \");\n    if (dstyle == 0) cell.w = cell.w.replace(/:(\\d\\d\\d)$/, \".$1\");\n  }\n}\nfunction parse_old_storage(buf, lut, v, opts) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var ridx = -1,\n    sidx = -1,\n    zidx = -1,\n    ieee = NaN,\n    dc = 0,\n    dt = new Date(Date.UTC(2001, 0, 1));\n  var doff = v > 1 ? 12 : 8;\n  if (flags & 2) {\n    zidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(flags & (v > 1 ? 3468 : 396)) * 4;\n  if (flags & 512) {\n    ridx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(flags & (v > 1 ? 12288 : 4096)) * 4;\n  if (flags & 16) {\n    sidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (flags & 32) {\n    ieee = dv.getFloat64(doff, true);\n    doff += 8;\n  }\n  if (flags & 64) {\n    dt.setTime(dt.getTime() + (dc = dv.getFloat64(doff, true)) * 1e3);\n    doff += 8;\n  }\n  if (v > 1) {\n    flags = dv.getUint32(8, true) >>> 16;\n    if (flags & 255) {\n      if (zidx == -1) zidx = dv.getUint32(doff, true);\n      doff += 4;\n    }\n  }\n  var ret;\n  var t = buf[v >= 4 ? 1 : 2];\n  switch (t) {\n    case 0:\n      return void 0;\n    case 2:\n      ret = {\n        t: \"n\",\n        v: ieee\n      };\n      break;\n    case 3:\n      ret = {\n        t: \"s\",\n        v: lut.sst[sidx]\n      };\n      break;\n    case 5:\n      {\n        if (opts == null ? void 0 : opts.cellDates) ret = {\n          t: \"d\",\n          v: dt\n        };else ret = {\n          t: \"n\",\n          v: dc / 86400 + 35430,\n          z: table_fmt[14]\n        };\n      }\n      break;\n    case 6:\n      ret = {\n        t: \"b\",\n        v: ieee > 0\n      };\n      break;\n    case 7:\n      ret = {\n        t: \"n\",\n        v: ieee\n      };\n      break;\n    case 8:\n      ret = {\n        t: \"e\",\n        v: 0\n      };\n      break;\n    case 9:\n      {\n        if (ridx > -1) {\n          var rts = lut.rsst[ridx];\n          ret = {\n            t: \"s\",\n            v: rts.v\n          };\n          if (rts.l) ret.l = {\n            Target: rts.l\n          };\n        } else throw new Error(\"Unsupported cell type \".concat(buf[subarray](0, 4)));\n      }\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[subarray](0, 4)));\n  }\n  if (zidx > -1) numbers_format_cell(ret, t | v << 8, flags, lut.ofmt[zidx], lut.nfmt[zidx]);\n  if (t == 7) ret.v /= 86400;\n  return ret;\n}\nfunction parse_new_storage(buf, lut, opts) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var fields = dv.getUint32(8, true);\n  var doff = 12;\n  var ridx = -1,\n    sidx = -1,\n    zidx = -1,\n    d128 = NaN,\n    ieee = NaN,\n    dc = 0,\n    dt = new Date(Date.UTC(2001, 0, 1)),\n    eidx = -1,\n    fidx = -1;\n  if (fields & 1) {\n    d128 = readDecimal128LE(buf, doff);\n    doff += 16;\n  }\n  if (fields & 2) {\n    ieee = dv.getFloat64(doff, true);\n    doff += 8;\n  }\n  if (fields & 4) {\n    dt.setTime(dt.getTime() + (dc = dv.getFloat64(doff, true)) * 1e3);\n    doff += 8;\n  }\n  if (fields & 8) {\n    sidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (fields & 16) {\n    ridx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(fields & 480) * 4;\n  if (fields & 512) {\n    fidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(fields & 1024) * 4;\n  if (fields & 2048) {\n    eidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  var ret;\n  var t = buf[1];\n  switch (t) {\n    case 0:\n      ret = {\n        t: \"z\"\n      };\n      break;\n    case 2:\n      ret = {\n        t: \"n\",\n        v: d128\n      };\n      break;\n    case 3:\n      ret = {\n        t: \"s\",\n        v: lut.sst[sidx]\n      };\n      break;\n    case 5:\n      {\n        if (opts == null ? void 0 : opts.cellDates) ret = {\n          t: \"d\",\n          v: dt\n        };else ret = {\n          t: \"n\",\n          v: dc / 86400 + 35430,\n          z: table_fmt[14]\n        };\n      }\n      break;\n    case 6:\n      ret = {\n        t: \"b\",\n        v: ieee > 0\n      };\n      break;\n    case 7:\n      ret = {\n        t: \"n\",\n        v: ieee\n      };\n      break;\n    case 8:\n      ret = {\n        t: \"e\",\n        v: 0\n      };\n      break;\n    case 9:\n      {\n        if (ridx > -1) {\n          var rts = lut.rsst[ridx];\n          ret = {\n            t: \"s\",\n            v: rts.v\n          };\n          if (rts.l) ret.l = {\n            Target: rts.l\n          };\n        } else throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(fields & 31, \" : \").concat(buf[subarray](0, 4)));\n      }\n      break;\n    case 10:\n      ret = {\n        t: \"n\",\n        v: d128\n      };\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(fields & 31, \" : \").concat(buf[subarray](0, 4)));\n  }\n  doff += popcnt(fields & 4096) * 4;\n  if (fields & 516096) {\n    if (zidx == -1) zidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (fields & 524288) {\n    var cmntidx = dv.getUint32(doff, true);\n    doff += 4;\n    if (lut.cmnt[cmntidx]) ret.c = iwa_to_s5s_comment(lut.cmnt[cmntidx]);\n  }\n  if (zidx > -1) numbers_format_cell(ret, t | 5 << 8, fields >> 13, lut.ofmt[zidx], lut.nfmt[zidx]);\n  if (t == 7) ret.v /= 86400;\n  return ret;\n}\nfunction write_new_storage(cell, lut) {\n  var out = new Uint8Array(32),\n    dv = u8_to_dataview(out),\n    l = 12,\n    fields = 0;\n  out[0] = 5;\n  switch (cell.t) {\n    case \"n\":\n      if (cell.z && fmt_is_date(cell.z)) {\n        out[1] = 5;\n        dv.setFloat64(l, (numdate(cell.v + 1462).getTime() - Date.UTC(2001, 0, 1)) / 1e3, true);\n        fields |= 4;\n        l += 8;\n        break;\n      } else {\n        out[1] = 2;\n        writeDecimal128LE(out, l, cell.v);\n        fields |= 1;\n        l += 16;\n      }\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      fields |= 2;\n      l += 8;\n      break;\n    case \"s\":\n      {\n        var s = cell.v == null ? \"\" : String(cell.v);\n        if (cell.l) {\n          var irsst = lut.rsst.findIndex(function (v) {\n            var _a;\n            return v.v == s && v.l == ((_a = cell.l) == null ? void 0 : _a.Target);\n          });\n          if (irsst == -1) lut.rsst[irsst = lut.rsst.length] = {\n            v: s,\n            l: cell.l.Target\n          };\n          out[1] = 9;\n          dv.setUint32(l, irsst, true);\n          fields |= 16;\n          l += 4;\n        } else {\n          var isst = lut.sst.indexOf(s);\n          if (isst == -1) lut.sst[isst = lut.sst.length] = s;\n          out[1] = 3;\n          dv.setUint32(l, isst, true);\n          fields |= 8;\n          l += 4;\n        }\n      }\n      break;\n    case \"d\":\n      out[1] = 5;\n      dv.setFloat64(l, (cell.v.getTime() - Date.UTC(2001, 0, 1)) / 1e3, true);\n      fields |= 4;\n      l += 8;\n      break;\n    case \"z\":\n      out[1] = 0;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  if (cell.c) {\n    lut.cmnt.push(s5s_to_iwa_comment(cell.c));\n    dv.setUint32(l, lut.cmnt.length - 1, true);\n    fields |= 524288;\n    l += 4;\n  }\n  dv.setUint32(8, fields, true);\n  return out[subarray](0, l);\n}\nfunction write_old_storage(cell, lut) {\n  var out = new Uint8Array(32),\n    dv = u8_to_dataview(out),\n    l = 12,\n    fields = 0,\n    s = \"\";\n  out[0] = 4;\n  switch (cell.t) {\n    case \"n\":\n      break;\n    case \"b\":\n      break;\n    case \"s\":\n      {\n        s = cell.v == null ? \"\" : String(cell.v);\n        if (cell.l) {\n          var irsst = lut.rsst.findIndex(function (v) {\n            var _a;\n            return v.v == s && v.l == ((_a = cell.l) == null ? void 0 : _a.Target);\n          });\n          if (irsst == -1) lut.rsst[irsst = lut.rsst.length] = {\n            v: s,\n            l: cell.l.Target\n          };\n          out[1] = 9;\n          dv.setUint32(l, irsst, true);\n          fields |= 512;\n          l += 4;\n        } else {}\n      }\n      break;\n    case \"d\":\n      break;\n    case \"e\":\n      break;\n    case \"z\":\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  if (cell.c) {\n    dv.setUint32(l, lut.cmnt.length - 1, true);\n    fields |= 4096;\n    l += 4;\n  }\n  switch (cell.t) {\n    case \"n\":\n      out[1] = 2;\n      dv.setFloat64(l, cell.v, true);\n      fields |= 32;\n      l += 8;\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      fields |= 32;\n      l += 8;\n      break;\n    case \"s\":\n      {\n        s = cell.v == null ? \"\" : String(cell.v);\n        if (cell.l) {} else {\n          var isst = lut.sst.indexOf(s);\n          if (isst == -1) lut.sst[isst = lut.sst.length] = s;\n          out[1] = 3;\n          dv.setUint32(l, isst, true);\n          fields |= 16;\n          l += 4;\n        }\n      }\n      break;\n    case \"d\":\n      out[1] = 5;\n      dv.setFloat64(l, (cell.v.getTime() - Date.UTC(2001, 0, 1)) / 1e3, true);\n      fields |= 64;\n      l += 8;\n      break;\n    case \"z\":\n      out[1] = 0;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(8, fields, true);\n  return out[subarray](0, l);\n}\nfunction parse_cell_storage(buf, lut, opts) {\n  switch (buf[0]) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n      return parse_old_storage(buf, lut, buf[0], opts);\n    case 5:\n      return parse_new_storage(buf, lut, opts);\n    default:\n      throw new Error(\"Unsupported payload version \".concat(buf[0]));\n  }\n}\nfunction parse_TSP_Reference(buf) {\n  var pb = parse_shallow(buf);\n  return varint_to_i32(pb[1][0].data);\n}\nfunction write_TSP_Reference(idx) {\n  return write_shallow([[], [{\n    type: 0,\n    data: write_varint49(idx)\n  }]]);\n}\nfunction numbers_add_oref(iwa, ref) {\n  var _a;\n  var orefs = ((_a = iwa.messages[0].meta[5]) == null ? void 0 : _a[0]) ? parse_packed_varints(iwa.messages[0].meta[5][0].data) : [];\n  var orefidx = orefs.indexOf(ref);\n  if (orefidx == -1) {\n    orefs.push(ref);\n    iwa.messages[0].meta[5] = [{\n      type: 2,\n      data: write_packed_varints(orefs)\n    }];\n  }\n}\nfunction numbers_del_oref(iwa, ref) {\n  var _a;\n  var orefs = ((_a = iwa.messages[0].meta[5]) == null ? void 0 : _a[0]) ? parse_packed_varints(iwa.messages[0].meta[5][0].data) : [];\n  iwa.messages[0].meta[5] = [{\n    type: 2,\n    data: write_packed_varints(orefs.filter(function (r) {\n      return r != ref;\n    }))\n  }];\n}\nfunction parse_TST_TableDataList(M, root) {\n  var pb = parse_shallow(root.data);\n  var type = varint_to_i32(pb[1][0].data);\n  var entries = pb[3];\n  var data = [];\n  (entries || []).forEach(function (entry) {\n    var _a, _b;\n    var le = parse_shallow(entry.data);\n    if (!le[1]) return;\n    var key = varint_to_i32(le[1][0].data) >>> 0;\n    switch (type) {\n      case 1:\n        data[key] = u8str(le[3][0].data);\n        break;\n      case 8:\n        {\n          var rt = M[parse_TSP_Reference(le[9][0].data)][0];\n          var rtp = parse_shallow(rt.data);\n          var rtpref = M[parse_TSP_Reference(rtp[1][0].data)][0];\n          var mtype = varint_to_i32(rtpref.meta[1][0].data);\n          if (mtype != 2001) throw new Error(\"2000 unexpected reference to \".concat(mtype));\n          var tswpsa = parse_shallow(rtpref.data);\n          var richtext = {\n            v: tswpsa[3].map(function (x) {\n              return u8str(x.data);\n            }).join(\"\")\n          };\n          data[key] = richtext;\n          sfields: if ((_a = tswpsa == null ? void 0 : tswpsa[11]) == null ? void 0 : _a[0]) {\n            var smartfields = (_b = parse_shallow(tswpsa[11][0].data)) == null ? void 0 : _b[1];\n            if (!smartfields) break sfields;\n            smartfields.forEach(function (sf) {\n              var _a2, _b2, _c;\n              var attr = parse_shallow(sf.data);\n              if ((_a2 = attr[2]) == null ? void 0 : _a2[0]) {\n                var obj = M[parse_TSP_Reference((_b2 = attr[2]) == null ? void 0 : _b2[0].data)][0];\n                var objtype = varint_to_i32(obj.meta[1][0].data);\n                switch (objtype) {\n                  case 2032:\n                    var hlink = parse_shallow(obj.data);\n                    if (((_c = hlink == null ? void 0 : hlink[2]) == null ? void 0 : _c[0]) && !richtext.l) richtext.l = u8str(hlink[2][0].data);\n                    break;\n                  case 2039:\n                    break;\n                  default:\n                    console.log(\"unrecognized ObjectAttribute type \".concat(objtype));\n                }\n              }\n            });\n          }\n        }\n        break;\n      case 2:\n        data[key] = parse_shallow(le[6][0].data);\n        break;\n      case 3:\n        data[key] = parse_shallow(le[5][0].data);\n        break;\n      case 10:\n        {\n          var cs = M[parse_TSP_Reference(le[10][0].data)][0];\n          data[key] = parse_TSD_CommentStorageArchive(M, cs.data);\n        }\n        break;\n      default:\n        throw type;\n    }\n  });\n  return data;\n}\nfunction parse_TST_TileRowInfo(u8, type) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n  var pb = parse_shallow(u8);\n  var R = varint_to_i32(pb[1][0].data) >>> 0;\n  var cnt = varint_to_i32(pb[2][0].data) >>> 0;\n  var wide_offsets = ((_b = (_a = pb[8]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) && varint_to_i32(pb[8][0].data) > 0 || false;\n  var used_storage_u8, used_storage;\n  if (((_d = (_c = pb[7]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && type != 0) {\n    used_storage_u8 = (_f = (_e = pb[7]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data;\n    used_storage = (_h = (_g = pb[6]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data;\n  } else if (((_j = (_i = pb[4]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) && type != 1) {\n    used_storage_u8 = (_l = (_k = pb[4]) == null ? void 0 : _k[0]) == null ? void 0 : _l.data;\n    used_storage = (_n = (_m = pb[3]) == null ? void 0 : _m[0]) == null ? void 0 : _n.data;\n  } else throw \"NUMBERS Tile missing \".concat(type, \" cell storage\");\n  var width = wide_offsets ? 4 : 1;\n  var used_storage_offsets = u8_to_dataview(used_storage_u8);\n  var offsets = [];\n  for (var C = 0; C < used_storage_u8.length / 2; ++C) {\n    var off = used_storage_offsets.getUint16(C * 2, true);\n    if (off < 65535) offsets.push([C, off]);\n  }\n  if (offsets.length != cnt) throw \"Expected \".concat(cnt, \" cells, found \").concat(offsets.length);\n  var cells = [];\n  for (C = 0; C < offsets.length - 1; ++C) cells[offsets[C][0]] = used_storage[subarray](offsets[C][1] * width, offsets[C + 1][1] * width);\n  if (offsets.length >= 1) cells[offsets[offsets.length - 1][0]] = used_storage[subarray](offsets[offsets.length - 1][1] * width);\n  return {\n    R: R,\n    cells: cells\n  };\n}\nfunction parse_TST_Tile(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var storage = -1;\n  if ((_a = pb == null ? void 0 : pb[7]) == null ? void 0 : _a[0]) {\n    if (varint_to_i32(pb[7][0].data) >>> 0) storage = 1;else storage = 0;\n  }\n  var ri = mappa(pb[5], function (u8) {\n    return parse_TST_TileRowInfo(u8, storage);\n  });\n  return {\n    nrows: varint_to_i32(pb[4][0].data) >>> 0,\n    data: ri.reduce(function (acc, x) {\n      if (!acc[x.R]) acc[x.R] = [];\n      x.cells.forEach(function (cell, C) {\n        if (acc[x.R][C]) throw new Error(\"Duplicate cell r=\".concat(x.R, \" c=\").concat(C));\n        acc[x.R][C] = cell;\n      });\n      return acc;\n    }, [])\n  };\n}\nfunction parse_TSD_CommentStorageArchive(M, data) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n  var out = {\n    t: \"\",\n    a: \"\"\n  };\n  var csp = parse_shallow(data);\n  if ((_b = (_a = csp == null ? void 0 : csp[1]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) out.t = u8str((_d = (_c = csp == null ? void 0 : csp[1]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) || \"\";\n  if ((_f = (_e = csp == null ? void 0 : csp[3]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data) {\n    var as = M[parse_TSP_Reference((_h = (_g = csp == null ? void 0 : csp[3]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data)][0];\n    var asp = parse_shallow(as.data);\n    if ((_j = (_i = asp[1]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) out.a = u8str(asp[1][0].data);\n  }\n  if (csp == null ? void 0 : csp[4]) {\n    out.replies = [];\n    csp[4].forEach(function (pi) {\n      var cs = M[parse_TSP_Reference(pi.data)][0];\n      out.replies.push(parse_TSD_CommentStorageArchive(M, cs.data));\n    });\n  }\n  return out;\n}\nfunction iwa_to_s5s_comment(iwa) {\n  var out = [];\n  out.push({\n    t: iwa.t || \"\",\n    a: iwa.a,\n    T: iwa.replies && iwa.replies.length > 0\n  });\n  if (iwa.replies) iwa.replies.forEach(function (reply) {\n    out.push({\n      t: reply.t || \"\",\n      a: reply.a,\n      T: true\n    });\n  });\n  return out;\n}\nfunction s5s_to_iwa_comment(s5s) {\n  var out = {\n    a: \"\",\n    t: \"\",\n    replies: []\n  };\n  for (var i = 0; i < s5s.length; ++i) {\n    if (i == 0) {\n      out.a = s5s[i].a;\n      out.t = s5s[i].t;\n    } else {\n      out.replies.push({\n        a: s5s[i].a,\n        t: s5s[i].t\n      });\n    }\n  }\n  return out;\n}\nfunction parse_TST_TableModelArchive(M, root, ws, opts) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n  var pb = parse_shallow(root.data);\n  var range = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  range.e.r = (varint_to_i32(pb[6][0].data) >>> 0) - 1;\n  if (range.e.r < 0) throw new Error(\"Invalid row varint \".concat(pb[6][0].data));\n  range.e.c = (varint_to_i32(pb[7][0].data) >>> 0) - 1;\n  if (range.e.c < 0) throw new Error(\"Invalid col varint \".concat(pb[7][0].data));\n  ws[\"!ref\"] = encode_range(range);\n  var dense = ws[\"!data\"] != null,\n    dws = ws;\n  var store = parse_shallow(pb[4][0].data);\n  var lut = numbers_lut_new();\n  if ((_a = store[4]) == null ? void 0 : _a[0]) lut.sst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[4][0].data)][0]);\n  if ((_b = store[6]) == null ? void 0 : _b[0]) lut.fmla = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[6][0].data)][0]);\n  if ((_c = store[11]) == null ? void 0 : _c[0]) lut.ofmt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[11][0].data)][0]);\n  if ((_d = store[12]) == null ? void 0 : _d[0]) lut.ferr = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[12][0].data)][0]);\n  if ((_e = store[17]) == null ? void 0 : _e[0]) lut.rsst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[17][0].data)][0]);\n  if ((_f = store[19]) == null ? void 0 : _f[0]) lut.cmnt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[19][0].data)][0]);\n  if ((_g = store[22]) == null ? void 0 : _g[0]) lut.nfmt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[22][0].data)][0]);\n  var tile = parse_shallow(store[3][0].data);\n  var _R = 0;\n  if (!((_h = store[9]) == null ? void 0 : _h[0])) throw \"NUMBERS file missing row tree\";\n  var rtt = parse_shallow(store[9][0].data)[1].map(function (p) {\n    return parse_shallow(p.data);\n  });\n  rtt.forEach(function (kv) {\n    _R = varint_to_i32(kv[1][0].data);\n    var tidx = varint_to_i32(kv[2][0].data);\n    var t = tile[1][tidx];\n    if (!t) throw \"NUMBERS missing tile \" + tidx;\n    var tl = parse_shallow(t.data);\n    var ref2 = M[parse_TSP_Reference(tl[2][0].data)][0];\n    var mtype2 = varint_to_i32(ref2.meta[1][0].data);\n    if (mtype2 != 6002) throw new Error(\"6001 unexpected reference to \".concat(mtype2));\n    var _tile = parse_TST_Tile(M, ref2);\n    _tile.data.forEach(function (row, R) {\n      row.forEach(function (buf, C) {\n        var res = parse_cell_storage(buf, lut, opts);\n        if (res) {\n          if (dense) {\n            if (!dws[\"!data\"][_R + R]) dws[\"!data\"][_R + R] = [];\n            dws[\"!data\"][_R + R][C] = res;\n          } else {\n            ws[encode_col(C) + encode_row(_R + R)] = res;\n          }\n        }\n      });\n    });\n    _R += _tile.nrows;\n  });\n  if ((_i = store[13]) == null ? void 0 : _i[0]) {\n    var ref = M[parse_TSP_Reference(store[13][0].data)][0];\n    var mtype = varint_to_i32(ref.meta[1][0].data);\n    if (mtype != 6144) throw new Error(\"Expected merge type 6144, found \".concat(mtype));\n    ws[\"!merges\"] = (_j = parse_shallow(ref.data)) == null ? void 0 : _j[1].map(function (pi) {\n      var merge = parse_shallow(pi.data);\n      var origin = u8_to_dataview(parse_shallow(merge[1][0].data)[1][0].data),\n        size = u8_to_dataview(parse_shallow(merge[2][0].data)[1][0].data);\n      return {\n        s: {\n          r: origin.getUint16(0, true),\n          c: origin.getUint16(2, true)\n        },\n        e: {\n          r: origin.getUint16(0, true) + size.getUint16(0, true) - 1,\n          c: origin.getUint16(2, true) + size.getUint16(2, true) - 1\n        }\n      };\n    });\n  }\n}\nfunction parse_TST_TableInfoArchive(M, root, opts) {\n  var pb = parse_shallow(root.data);\n  var out = {\n    \"!ref\": \"A1\"\n  };\n  if (opts == null ? void 0 : opts.dense) out[\"!data\"] = [];\n  var tableref = M[parse_TSP_Reference(pb[2][0].data)];\n  var mtype = varint_to_i32(tableref[0].meta[1][0].data);\n  if (mtype != 6001) throw new Error(\"6000 unexpected reference to \".concat(mtype));\n  parse_TST_TableModelArchive(M, tableref[0], out, opts);\n  return out;\n}\nfunction parse_TN_SheetArchive(M, root, opts) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var out = {\n    name: ((_a = pb[1]) == null ? void 0 : _a[0]) ? u8str(pb[1][0].data) : \"\",\n    sheets: []\n  };\n  var shapeoffs = mappa(pb[2], parse_TSP_Reference);\n  shapeoffs.forEach(function (off) {\n    M[off].forEach(function (m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 6e3) out.sheets.push(parse_TST_TableInfoArchive(M, m, opts));\n    });\n  });\n  return out;\n}\nfunction parse_TN_DocumentArchive(M, root, opts) {\n  var _a;\n  var out = book_new();\n  out.Workbook = {\n    WBProps: {\n      date1904: true\n    }\n  };\n  var pb = parse_shallow(root.data);\n  if ((_a = pb[2]) == null ? void 0 : _a[0]) throw new Error(\"Keynote presentations are not supported\");\n  var sheetoffs = mappa(pb[1], parse_TSP_Reference);\n  sheetoffs.forEach(function (off) {\n    M[off].forEach(function (m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 2) {\n        var root2 = parse_TN_SheetArchive(M, m, opts);\n        root2.sheets.forEach(function (sheet, idx) {\n          book_append_sheet(out, sheet, idx == 0 ? root2.name : root2.name + \"_\" + idx, true);\n        });\n      }\n    });\n  });\n  if (out.SheetNames.length == 0) throw new Error(\"Empty NUMBERS file\");\n  out.bookType = \"numbers\";\n  return out;\n}\nfunction parse_numbers_iwa(cfb, opts) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  var M = {},\n    indices = [];\n  cfb.FullPaths.forEach(function (p) {\n    if (p.match(/\\.iwpv2/)) throw new Error(\"Unsupported password protection\");\n  });\n  cfb.FileIndex.forEach(function (s) {\n    if (!s.name.match(/\\.iwa$/)) return;\n    if (s.content[0] != 0) return;\n    var o;\n    try {\n      o = decompress_iwa_file(s.content);\n    } catch (e) {\n      return console.log(\"?? \" + s.content.length + \" \" + (e.message || e));\n    }\n    var packets;\n    try {\n      packets = parse_iwa_file(o);\n    } catch (e) {\n      return console.log(\"## \" + (e.message || e));\n    }\n    packets.forEach(function (packet) {\n      M[packet.id] = packet.messages;\n      indices.push(packet.id);\n    });\n  });\n  if (!indices.length) throw new Error(\"File has no messages\");\n  if (((_c = (_b = (_a = M == null ? void 0 : M[1]) == null ? void 0 : _a[0].meta) == null ? void 0 : _b[1]) == null ? void 0 : _c[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1e4) throw new Error(\"Pages documents are not supported\");\n  var docroot = ((_g = (_f = (_e = (_d = M == null ? void 0 : M[1]) == null ? void 0 : _d[0]) == null ? void 0 : _e.meta) == null ? void 0 : _f[1]) == null ? void 0 : _g[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1 && M[1][0];\n  if (!docroot) indices.forEach(function (idx) {\n    M[idx].forEach(function (iwam) {\n      var mtype = varint_to_i32(iwam.meta[1][0].data) >>> 0;\n      if (mtype == 1) {\n        if (!docroot) docroot = iwam;else throw new Error(\"Document has multiple roots\");\n      }\n    });\n  });\n  if (!docroot) throw new Error(\"Cannot find Document root\");\n  return parse_TN_DocumentArchive(M, docroot, opts);\n}\nfunction write_TST_TileRowInfo(data, lut, wide) {\n  var _a, _b, _c;\n  var tri = [[], [{\n    type: 0,\n    data: write_varint49(0)\n  }], [{\n    type: 0,\n    data: write_varint49(0)\n  }], [{\n    type: 2,\n    data: new Uint8Array([])\n  }], [{\n    type: 2,\n    data: new Uint8Array(Array.from({\n      length: 510\n    }, function () {\n      return 255;\n    }))\n  }], [{\n    type: 0,\n    data: write_varint49(5)\n  }], [{\n    type: 2,\n    data: new Uint8Array([])\n  }], [{\n    type: 2,\n    data: new Uint8Array(Array.from({\n      length: 510\n    }, function () {\n      return 255;\n    }))\n  }], [{\n    type: 0,\n    data: write_varint49(1)\n  }]];\n  if (!((_a = tri[6]) == null ? void 0 : _a[0]) || !((_b = tri[7]) == null ? void 0 : _b[0])) throw \"Mutation only works on post-BNC storages!\";\n  var cnt = 0;\n  if (tri[7][0].data.length < 2 * data.length) {\n    var new_7 = new Uint8Array(2 * data.length);\n    new_7.set(tri[7][0].data);\n    tri[7][0].data = new_7;\n  }\n  if (tri[4][0].data.length < 2 * data.length) {\n    var new_4 = new Uint8Array(2 * data.length);\n    new_4.set(tri[4][0].data);\n    tri[4][0].data = new_4;\n  }\n  var dv = u8_to_dataview(tri[7][0].data),\n    last_offset = 0,\n    cell_storage = [];\n  var _dv = u8_to_dataview(tri[4][0].data),\n    _last_offset = 0,\n    _cell_storage = [];\n  var width = wide ? 4 : 1;\n  for (var C = 0; C < data.length; ++C) {\n    if (data[C] == null || data[C].t == \"z\" && !((_c = data[C].c) == null ? void 0 : _c.length) || data[C].t == \"e\") {\n      dv.setUint16(C * 2, 65535, true);\n      _dv.setUint16(C * 2, 65535);\n      continue;\n    }\n    dv.setUint16(C * 2, last_offset / width, true);\n    _dv.setUint16(C * 2, _last_offset / width, true);\n    var celload, _celload;\n    switch (data[C].t) {\n      case \"d\":\n        if (data[C].v instanceof Date) {\n          celload = write_new_storage(data[C], lut);\n          _celload = write_old_storage(data[C], lut);\n          break;\n        }\n        celload = write_new_storage(data[C], lut);\n        _celload = write_old_storage(data[C], lut);\n        break;\n      case \"s\":\n      case \"n\":\n      case \"b\":\n      case \"z\":\n        celload = write_new_storage(data[C], lut);\n        _celload = write_old_storage(data[C], lut);\n        break;\n      default:\n        throw new Error(\"Unsupported value \" + data[C]);\n    }\n    cell_storage.push(celload);\n    last_offset += celload.length;\n    {\n      _cell_storage.push(_celload);\n      _last_offset += _celload.length;\n    }\n    ++cnt;\n  }\n  tri[2][0].data = write_varint49(cnt);\n  tri[5][0].data = write_varint49(5);\n  for (; C < tri[7][0].data.length / 2; ++C) {\n    dv.setUint16(C * 2, 65535, true);\n    _dv.setUint16(C * 2, 65535, true);\n  }\n  tri[6][0].data = u8concat(cell_storage);\n  tri[3][0].data = u8concat(_cell_storage);\n  tri[8] = [{\n    type: 0,\n    data: write_varint49(wide ? 1 : 0)\n  }];\n  return tri;\n}\nfunction write_iwam(type, payload) {\n  return {\n    meta: [[], [{\n      type: 0,\n      data: write_varint49(type)\n    }]],\n    data: payload\n  };\n}\nfunction get_unique_msgid(dep, dependents) {\n  if (!dependents.last) dependents.last = 927262;\n  for (var i = dependents.last; i < 2e6; ++i) if (!dependents[i]) {\n    dependents[dependents.last = i] = dep;\n    return i;\n  }\n  throw new Error(\"Too many messages\");\n}\nfunction build_numbers_deps(cfb) {\n  var dependents = {};\n  var indices = [];\n  cfb.FileIndex.map(function (fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function (row) {\n    var fi = row[0],\n      fp = row[1];\n    if (fi.type != 2) return;\n    if (!fi.name.match(/\\.iwa/)) return;\n    if (fi.content[0] != 0) return;\n    parse_iwa_file(decompress_iwa_file(fi.content)).forEach(function (packet) {\n      indices.push(packet.id);\n      dependents[packet.id] = {\n        deps: [],\n        location: fp,\n        type: varint_to_i32(packet.messages[0].meta[1][0].data)\n      };\n    });\n  });\n  cfb.FileIndex.forEach(function (fi) {\n    if (!fi.name.match(/\\.iwa/)) return;\n    if (fi.content[0] != 0) return;\n    parse_iwa_file(decompress_iwa_file(fi.content)).forEach(function (ia) {\n      ia.messages.forEach(function (mess) {\n        [5, 6].forEach(function (f) {\n          if (!mess.meta[f]) return;\n          mess.meta[f].forEach(function (x) {\n            dependents[ia.id].deps.push(varint_to_i32(x.data));\n          });\n        });\n      });\n    });\n  });\n  return dependents;\n}\nfunction write_TSP_Color_RGB(r, g, b) {\n  return write_shallow([[], [{\n    type: 0,\n    data: write_varint49(1)\n  }], [], [{\n    type: 5,\n    data: new Uint8Array(Float32Array.from([r / 255]).buffer)\n  }], [{\n    type: 5,\n    data: new Uint8Array(Float32Array.from([g / 255]).buffer)\n  }], [{\n    type: 5,\n    data: new Uint8Array(Float32Array.from([b / 255]).buffer)\n  }], [{\n    type: 5,\n    data: new Uint8Array(Float32Array.from([1]).buffer)\n  }], [], [], [], [], [], [{\n    type: 0,\n    data: write_varint49(1)\n  }]]);\n}\nfunction get_author_color(n) {\n  switch (n) {\n    case 0:\n      return write_TSP_Color_RGB(99, 222, 171);\n    case 1:\n      return write_TSP_Color_RGB(162, 197, 240);\n    case 2:\n      return write_TSP_Color_RGB(255, 189, 189);\n  }\n  return write_TSP_Color_RGB(Math.random() * 255, Math.random() * 255, Math.random() * 255);\n}\nfunction write_numbers_iwa(wb, opts) {\n  if (!opts || !opts.numbers) throw new Error(\"Must pass a `numbers` option -- check the README\");\n  var cfb = CFB.read(opts.numbers, {\n    type: \"base64\"\n  });\n  var deps = build_numbers_deps(cfb);\n  var docroot = numbers_iwa_find(cfb, deps, 1);\n  if (docroot == null) throw \"Could not find message \".concat(1, \" in Numbers template\");\n  var sheetrefs = mappa(parse_shallow(docroot.messages[0].data)[1], parse_TSP_Reference);\n  if (sheetrefs.length > 1) throw new Error(\"Template NUMBERS file must have exactly one sheet\");\n  wb.SheetNames.forEach(function (name, idx) {\n    if (idx >= 1) {\n      numbers_add_ws(cfb, deps, idx + 1);\n      docroot = numbers_iwa_find(cfb, deps, 1);\n      sheetrefs = mappa(parse_shallow(docroot.messages[0].data)[1], parse_TSP_Reference);\n    }\n    write_numbers_ws(cfb, deps, wb.Sheets[name], name, idx, sheetrefs[idx]);\n  });\n  return cfb;\n}\nfunction numbers_iwa_doit(cfb, deps, id, cb) {\n  var entry = CFB.find(cfb, deps[id].location);\n  if (!entry) throw \"Could not find \".concat(deps[id].location, \" in Numbers template\");\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var ainfo = x.find(function (packet) {\n    return packet.id == id;\n  });\n  cb(ainfo, x);\n  entry.content = compress_iwa_file(write_iwa_file(x));\n  entry.size = entry.content.length;\n}\nfunction numbers_iwa_find(cfb, deps, id) {\n  var entry = CFB.find(cfb, deps[id].location);\n  if (!entry) throw \"Could not find \".concat(deps[id].location, \" in Numbers template\");\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var ainfo = x.find(function (packet) {\n    return packet.id == id;\n  });\n  return ainfo;\n}\nfunction numbers_add_meta(mlist, newid, newloc) {\n  mlist[3].push({\n    type: 2,\n    data: write_shallow([[], [{\n      type: 0,\n      data: write_varint49(newid)\n    }], [{\n      type: 2,\n      data: stru8(newloc.replace(/-[\\s\\S]*$/, \"\"))\n    }], [{\n      type: 2,\n      data: stru8(newloc)\n    }], [{\n      type: 2,\n      data: new Uint8Array([2, 0, 0])\n    }], [{\n      type: 2,\n      data: new Uint8Array([2, 0, 0])\n    }], [], [], [], [], [{\n      type: 0,\n      data: write_varint49(0)\n    }], [], [{\n      type: 0,\n      data: write_varint49(0)\n    }]])\n  });\n  mlist[1] = [{\n    type: 0,\n    data: write_varint49(Math.max(newid + 1, varint_to_i32(mlist[1][0].data)))\n  }];\n}\nfunction numbers_add_msg(cfb, type, msg, path, deps, id) {\n  if (!id) id = get_unique_msgid({\n    deps: [],\n    location: \"\",\n    type: type\n  }, deps);\n  var loc = \"\".concat(path, \"-\").concat(id, \".iwa\");\n  deps[id].location = \"Root Entry\" + loc;\n  CFB.utils.cfb_add(cfb, loc, compress_iwa_file(write_iwa_file([{\n    id: id,\n    messages: [write_iwam(type, write_shallow(msg))]\n  }])));\n  var newloc = loc.replace(/^[\\/]/, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  numbers_iwa_doit(cfb, deps, 2, function (ai) {\n    var mlist = parse_shallow(ai.messages[0].data);\n    numbers_add_meta(mlist, id || 0, newloc);\n    ai.messages[0].data = write_shallow(mlist);\n  });\n  return id;\n}\nfunction numbers_meta_add_dep(mlist, deps, id, dep) {\n  var loc = deps[id].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  var parentidx = mlist[3].findIndex(function (m) {\n    var _a, _b;\n    var mm = parse_shallow(m.data);\n    if ((_a = mm[3]) == null ? void 0 : _a[0]) return u8str(mm[3][0].data) == loc;\n    if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc) return true;\n    return false;\n  });\n  var parent = parse_shallow(mlist[3][parentidx].data);\n  if (!parent[6]) parent[6] = [];\n  (Array.isArray(dep) ? dep : [dep]).forEach(function (dep2) {\n    parent[6].push({\n      type: 2,\n      data: write_shallow([[], [{\n        type: 0,\n        data: write_varint49(dep2)\n      }]])\n    });\n  });\n  mlist[3][parentidx].data = write_shallow(parent);\n}\nfunction numbers_meta_del_dep(mlist, deps, id, dep) {\n  var loc = deps[id].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  var parentidx = mlist[3].findIndex(function (m) {\n    var _a, _b;\n    var mm = parse_shallow(m.data);\n    if ((_a = mm[3]) == null ? void 0 : _a[0]) return u8str(mm[3][0].data) == loc;\n    if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc) return true;\n    return false;\n  });\n  var parent = parse_shallow(mlist[3][parentidx].data);\n  if (!parent[6]) parent[6] = [];\n  parent[6] = parent[6].filter(function (m) {\n    return varint_to_i32(parse_shallow(m.data)[1][0].data) != dep;\n  });\n  mlist[3][parentidx].data = write_shallow(parent);\n}\nfunction numbers_add_ws(cfb, deps, wsidx) {\n  var sheetref = -1,\n    newsheetref = -1;\n  var remap = {};\n  numbers_iwa_doit(cfb, deps, 1, function (docroot, arch) {\n    var doc = parse_shallow(docroot.messages[0].data);\n    sheetref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[1][0].data);\n    newsheetref = get_unique_msgid({\n      deps: [1],\n      location: deps[sheetref].location,\n      type: 2\n    }, deps);\n    remap[sheetref] = newsheetref;\n    numbers_add_oref(docroot, newsheetref);\n    doc[1].push({\n      type: 2,\n      data: write_TSP_Reference(newsheetref)\n    });\n    var sheet = numbers_iwa_find(cfb, deps, sheetref);\n    sheet.id = newsheetref;\n    if (deps[1].location == deps[newsheetref].location) arch.push(sheet);else numbers_iwa_doit(cfb, deps, newsheetref, function (_, x) {\n      return x.push(sheet);\n    });\n    docroot.messages[0].data = write_shallow(doc);\n  });\n  var tiaref = -1;\n  numbers_iwa_doit(cfb, deps, newsheetref, function (sheetroot, arch) {\n    var sa = parse_shallow(sheetroot.messages[0].data);\n    for (var i = 3; i <= 69; ++i) delete sa[i];\n    var drawables = mappa(sa[2], parse_TSP_Reference);\n    drawables.forEach(function (n) {\n      return numbers_del_oref(sheetroot, n);\n    });\n    tiaref = get_unique_msgid({\n      deps: [newsheetref],\n      location: deps[drawables[0]].location,\n      type: deps[drawables[0]].type\n    }, deps);\n    numbers_add_oref(sheetroot, tiaref);\n    remap[drawables[0]] = tiaref;\n    sa[2] = [{\n      type: 2,\n      data: write_TSP_Reference(tiaref)\n    }];\n    var tia = numbers_iwa_find(cfb, deps, drawables[0]);\n    tia.id = tiaref;\n    if (deps[drawables[0]].location == deps[newsheetref].location) arch.push(tia);else {\n      numbers_iwa_doit(cfb, deps, 2, function (ai) {\n        var mlist = parse_shallow(ai.messages[0].data);\n        numbers_meta_add_dep(mlist, deps, newsheetref, tiaref);\n        ai.messages[0].data = write_shallow(mlist);\n      });\n      numbers_iwa_doit(cfb, deps, tiaref, function (_, x) {\n        return x.push(tia);\n      });\n    }\n    sheetroot.messages[0].data = write_shallow(sa);\n  });\n  var tmaref = -1;\n  numbers_iwa_doit(cfb, deps, tiaref, function (tiaroot, arch) {\n    var tia = parse_shallow(tiaroot.messages[0].data);\n    var da = parse_shallow(tia[1][0].data);\n    for (var i = 3; i <= 69; ++i) delete da[i];\n    var dap = parse_TSP_Reference(da[2][0].data);\n    da[2][0].data = write_TSP_Reference(remap[dap]);\n    tia[1][0].data = write_shallow(da);\n    var oldtmaref = parse_TSP_Reference(tia[2][0].data);\n    numbers_del_oref(tiaroot, oldtmaref);\n    tmaref = get_unique_msgid({\n      deps: [tiaref],\n      location: deps[oldtmaref].location,\n      type: deps[oldtmaref].type\n    }, deps);\n    numbers_add_oref(tiaroot, tmaref);\n    remap[oldtmaref] = tmaref;\n    tia[2][0].data = write_TSP_Reference(tmaref);\n    var tma = numbers_iwa_find(cfb, deps, oldtmaref);\n    tma.id = tmaref;\n    if (deps[tiaref].location == deps[tmaref].location) arch.push(tma);else numbers_iwa_doit(cfb, deps, tmaref, function (_, x) {\n      return x.push(tma);\n    });\n    tiaroot.messages[0].data = write_shallow(tia);\n  });\n  numbers_iwa_doit(cfb, deps, tmaref, function (tmaroot, arch) {\n    var _a, _b;\n    var tma = parse_shallow(tmaroot.messages[0].data);\n    var uuid = u8str(tma[1][0].data),\n      new_uuid = uuid.replace(/-[A-Z0-9]*/, \"-\".concat((\"0000\" + wsidx.toString(16)).slice(-4)));\n    tma[1][0].data = stru8(new_uuid);\n    [12, 13, 29, 31, 32, 33, 39, 44, 47, 81, 82, 84].forEach(function (n) {\n      return delete tma[n];\n    });\n    if (tma[45]) {\n      var srrta = parse_shallow(tma[45][0].data);\n      var ref = parse_TSP_Reference(srrta[1][0].data);\n      numbers_del_oref(tmaroot, ref);\n      delete tma[45];\n    }\n    if (tma[70]) {\n      var hsoa = parse_shallow(tma[70][0].data);\n      (_a = hsoa[2]) == null ? void 0 : _a.forEach(function (item) {\n        var hsa = parse_shallow(item.data);\n        [2, 3].map(function (n) {\n          return hsa[n][0];\n        }).forEach(function (hseadata) {\n          var hsea = parse_shallow(hseadata.data);\n          if (!hsea[8]) return;\n          var ref2 = parse_TSP_Reference(hsea[8][0].data);\n          numbers_del_oref(tmaroot, ref2);\n        });\n      });\n      delete tma[70];\n    }\n    [46, 30, 34, 35, 36, 38, 48, 49, 60, 61, 62, 63, 64, 71, 72, 73, 74, 75, 85, 86, 87, 88, 89].forEach(function (n) {\n      if (!tma[n]) return;\n      var ref2 = parse_TSP_Reference(tma[n][0].data);\n      delete tma[n];\n      numbers_del_oref(tmaroot, ref2);\n    });\n    var store = parse_shallow(tma[4][0].data);\n    {\n      [2, 4, 5, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22].forEach(function (n) {\n        var _a2;\n        if (!((_a2 = store[n]) == null ? void 0 : _a2[0])) return;\n        var oldref = parse_TSP_Reference(store[n][0].data);\n        var newref = get_unique_msgid({\n          deps: [tmaref],\n          location: deps[oldref].location,\n          type: deps[oldref].type\n        }, deps);\n        numbers_del_oref(tmaroot, oldref);\n        numbers_add_oref(tmaroot, newref);\n        remap[oldref] = newref;\n        var msg = numbers_iwa_find(cfb, deps, oldref);\n        msg.id = newref;\n        if (deps[oldref].location == deps[tmaref].location) arch.push(msg);else {\n          deps[newref].location = deps[oldref].location.replace(oldref.toString(), newref.toString());\n          if (deps[newref].location == deps[oldref].location) deps[newref].location = deps[newref].location.replace(/\\.iwa/, \"-\".concat(newref, \".iwa\"));\n          CFB.utils.cfb_add(cfb, deps[newref].location, compress_iwa_file(write_iwa_file([msg])));\n          var newloc = deps[newref].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n          numbers_iwa_doit(cfb, deps, 2, function (ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            numbers_add_meta(mlist, newref, newloc);\n            numbers_meta_add_dep(mlist, deps, tmaref, newref);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n        }\n        store[n][0].data = write_TSP_Reference(newref);\n      });\n      var row_headers = parse_shallow(store[1][0].data);\n      {\n        (_b = row_headers[2]) == null ? void 0 : _b.forEach(function (tspref) {\n          var oldref = parse_TSP_Reference(tspref.data);\n          var newref = get_unique_msgid({\n            deps: [tmaref],\n            location: deps[oldref].location,\n            type: deps[oldref].type\n          }, deps);\n          numbers_del_oref(tmaroot, oldref);\n          numbers_add_oref(tmaroot, newref);\n          remap[oldref] = newref;\n          var msg = numbers_iwa_find(cfb, deps, oldref);\n          msg.id = newref;\n          if (deps[oldref].location == deps[tmaref].location) {\n            arch.push(msg);\n          } else {\n            deps[newref].location = deps[oldref].location.replace(oldref.toString(), newref.toString());\n            if (deps[newref].location == deps[oldref].location) deps[newref].location = deps[newref].location.replace(/\\.iwa/, \"-\".concat(newref, \".iwa\"));\n            CFB.utils.cfb_add(cfb, deps[newref].location, compress_iwa_file(write_iwa_file([msg])));\n            var newloc = deps[newref].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n            numbers_iwa_doit(cfb, deps, 2, function (ai) {\n              var mlist = parse_shallow(ai.messages[0].data);\n              numbers_add_meta(mlist, newref, newloc);\n              numbers_meta_add_dep(mlist, deps, tmaref, newref);\n              ai.messages[0].data = write_shallow(mlist);\n            });\n          }\n          tspref.data = write_TSP_Reference(newref);\n        });\n      }\n      store[1][0].data = write_shallow(row_headers);\n      var tiles = parse_shallow(store[3][0].data);\n      {\n        tiles[1].forEach(function (t) {\n          var tst = parse_shallow(t.data);\n          var oldtileref = parse_TSP_Reference(tst[2][0].data);\n          var newtileref = remap[oldtileref];\n          if (!remap[oldtileref]) {\n            newtileref = get_unique_msgid({\n              deps: [tmaref],\n              location: \"\",\n              type: deps[oldtileref].type\n            }, deps);\n            deps[newtileref].location = \"Root Entry/Index/Tables/Tile-\".concat(newtileref, \".iwa\");\n            remap[oldtileref] = newtileref;\n            var oldtile = numbers_iwa_find(cfb, deps, oldtileref);\n            oldtile.id = newtileref;\n            numbers_del_oref(tmaroot, oldtileref);\n            numbers_add_oref(tmaroot, newtileref);\n            CFB.utils.cfb_add(cfb, \"/Index/Tables/Tile-\".concat(newtileref, \".iwa\"), compress_iwa_file(write_iwa_file([oldtile])));\n            numbers_iwa_doit(cfb, deps, 2, function (ai) {\n              var mlist = parse_shallow(ai.messages[0].data);\n              mlist[3].push({\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 0,\n                  data: write_varint49(newtileref)\n                }], [{\n                  type: 2,\n                  data: stru8(\"Tables/Tile\")\n                }], [{\n                  type: 2,\n                  data: stru8(\"Tables/Tile-\".concat(newtileref))\n                }], [{\n                  type: 2,\n                  data: new Uint8Array([2, 0, 0])\n                }], [{\n                  type: 2,\n                  data: new Uint8Array([2, 0, 0])\n                }], [], [], [], [], [{\n                  type: 0,\n                  data: write_varint49(0)\n                }], [], [{\n                  type: 0,\n                  data: write_varint49(0)\n                }]])\n              });\n              mlist[1] = [{\n                type: 0,\n                data: write_varint49(Math.max(newtileref + 1, varint_to_i32(mlist[1][0].data)))\n              }];\n              numbers_meta_add_dep(mlist, deps, tmaref, newtileref);\n              ai.messages[0].data = write_shallow(mlist);\n            });\n          }\n          tst[2][0].data = write_TSP_Reference(newtileref);\n          t.data = write_shallow(tst);\n        });\n      }\n      store[3][0].data = write_shallow(tiles);\n    }\n    tma[4][0].data = write_shallow(store);\n    tmaroot.messages[0].data = write_shallow(tma);\n  });\n}\nfunction write_numbers_ws(cfb, deps, ws, wsname, sheetidx, rootref) {\n  var drawables = [];\n  numbers_iwa_doit(cfb, deps, rootref, function (docroot) {\n    var sheetref = parse_shallow(docroot.messages[0].data);\n    {\n      sheetref[1] = [{\n        type: 2,\n        data: stru8(wsname)\n      }];\n      drawables = mappa(sheetref[2], parse_TSP_Reference);\n    }\n    docroot.messages[0].data = write_shallow(sheetref);\n  });\n  var tia = numbers_iwa_find(cfb, deps, drawables[0]);\n  var tmaref = parse_TSP_Reference(parse_shallow(tia.messages[0].data)[2][0].data);\n  numbers_iwa_doit(cfb, deps, tmaref, function (docroot, x) {\n    return write_numbers_tma(cfb, deps, ws, docroot, x, tmaref);\n  });\n}\nvar USE_WIDE_ROWS = true;\nfunction write_numbers_tma(cfb, deps, ws, tmaroot, tmafile, tmaref) {\n  if (!ws[\"!ref\"]) throw new Error(\"Cannot export empty sheet to NUMBERS\");\n  var range = decode_range(ws[\"!ref\"]);\n  range.s.r = range.s.c = 0;\n  var trunc = false;\n  if (range.e.c > 999) {\n    trunc = true;\n    range.e.c = 999;\n  }\n  if (range.e.r > 999999) {\n    trunc = true;\n    range.e.r = 999999;\n  }\n  if (trunc) console.error(\"Truncating to \".concat(encode_range(range)));\n  var data = [];\n  if (ws[\"!data\"]) data = ws[\"!data\"];else {\n    var colstr = [];\n    for (var _C = 0; _C <= range.e.c; ++_C) colstr[_C] = encode_col(_C);\n    for (var R_ = 0; R_ <= range.e.r; ++R_) {\n      data[R_] = [];\n      var _R = \"\" + (R_ + 1);\n      for (_C = 0; _C <= range.e.c; ++_C) {\n        var _cell = ws[colstr[_C] + _R];\n        if (!_cell) continue;\n        data[R_][_C] = _cell;\n      }\n    }\n  }\n  var LUT = {\n    cmnt: [{\n      a: \"~54ee77S~\",\n      t: \"... the people who are crazy enough to think they can change the world, are the ones who do.\"\n    }],\n    ferr: [],\n    fmla: [],\n    nfmt: [],\n    ofmt: [],\n    rsst: [{\n      v: \"~54ee77S~\",\n      l: \"https://sheetjs.com/\"\n    }],\n    sst: [\"~Sh33tJ5~\"]\n  };\n  var pb = parse_shallow(tmaroot.messages[0].data);\n  {\n    pb[6][0].data = write_varint49(range.e.r + 1);\n    pb[7][0].data = write_varint49(range.e.c + 1);\n    delete pb[46];\n    var store = parse_shallow(pb[4][0].data);\n    {\n      var row_header_ref = parse_TSP_Reference(parse_shallow(store[1][0].data)[2][0].data);\n      numbers_iwa_doit(cfb, deps, row_header_ref, function (rowhead, _x) {\n        var _a;\n        var base_bucket = parse_shallow(rowhead.messages[0].data);\n        if ((_a = base_bucket == null ? void 0 : base_bucket[2]) == null ? void 0 : _a[0]) for (var R2 = 0; R2 < data.length; ++R2) {\n          var _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(R2);\n          _bucket[4][0].data = write_varint49(data[R2].length);\n          base_bucket[2][R2] = {\n            type: base_bucket[2][0].type,\n            data: write_shallow(_bucket)\n          };\n        }\n        rowhead.messages[0].data = write_shallow(base_bucket);\n      });\n      var col_header_ref = parse_TSP_Reference(store[2][0].data);\n      numbers_iwa_doit(cfb, deps, col_header_ref, function (colhead, _x) {\n        var base_bucket = parse_shallow(colhead.messages[0].data);\n        for (var C = 0; C <= range.e.c; ++C) {\n          var _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(C);\n          _bucket[4][0].data = write_varint49(range.e.r + 1);\n          base_bucket[2][C] = {\n            type: base_bucket[2][0].type,\n            data: write_shallow(_bucket)\n          };\n        }\n        colhead.messages[0].data = write_shallow(base_bucket);\n      });\n      var rbtree = parse_shallow(store[9][0].data);\n      rbtree[1] = [];\n      var tilestore = parse_shallow(store[3][0].data);\n      {\n        var tstride = 256;\n        tilestore[2] = [{\n          type: 0,\n          data: write_varint49(tstride)\n        }];\n        var tileref = parse_TSP_Reference(parse_shallow(tilestore[1][0].data)[2][0].data);\n        var save_token = function () {\n          var metadata = numbers_iwa_find(cfb, deps, 2);\n          var mlist = parse_shallow(metadata.messages[0].data);\n          var mlst = mlist[3].filter(function (m) {\n            return varint_to_i32(parse_shallow(m.data)[1][0].data) == tileref;\n          });\n          return (mlst == null ? void 0 : mlst.length) ? varint_to_i32(parse_shallow(mlst[0].data)[12][0].data) : 0;\n        }();\n        {\n          CFB.utils.cfb_del(cfb, deps[tileref].location);\n          numbers_iwa_doit(cfb, deps, 2, function (ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            mlist[3] = mlist[3].filter(function (m) {\n              return varint_to_i32(parse_shallow(m.data)[1][0].data) != tileref;\n            });\n            numbers_meta_del_dep(mlist, deps, tmaref, tileref);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n          numbers_del_oref(tmaroot, tileref);\n        }\n        tilestore[1] = [];\n        var ntiles = Math.ceil((range.e.r + 1) / tstride);\n        for (var tidx = 0; tidx < ntiles; ++tidx) {\n          var newtileid = get_unique_msgid({\n            deps: [],\n            location: \"\",\n            type: 6002\n          }, deps);\n          deps[newtileid].location = \"Root Entry/Index/Tables/Tile-\".concat(newtileid, \".iwa\");\n          var tiledata = [[], [{\n            type: 0,\n            data: write_varint49(0)\n          }], [{\n            type: 0,\n            data: write_varint49(Math.min(range.e.r + 1, (tidx + 1) * tstride))\n          }], [{\n            type: 0,\n            data: write_varint49(0)\n          }], [{\n            type: 0,\n            data: write_varint49(Math.min((tidx + 1) * tstride, range.e.r + 1) - tidx * tstride)\n          }], [], [{\n            type: 0,\n            data: write_varint49(5)\n          }], [{\n            type: 0,\n            data: write_varint49(1)\n          }], [{\n            type: 0,\n            data: write_varint49(USE_WIDE_ROWS ? 1 : 0)\n          }]];\n          for (var R = tidx * tstride; R <= Math.min(range.e.r, (tidx + 1) * tstride - 1); ++R) {\n            var tilerow = write_TST_TileRowInfo(data[R], LUT, USE_WIDE_ROWS);\n            tilerow[1][0].data = write_varint49(R - tidx * tstride);\n            tiledata[5].push({\n              data: write_shallow(tilerow),\n              type: 2\n            });\n          }\n          tilestore[1].push({\n            type: 2,\n            data: write_shallow([[], [{\n              type: 0,\n              data: write_varint49(tidx)\n            }], [{\n              type: 2,\n              data: write_TSP_Reference(newtileid)\n            }]])\n          });\n          var newtile = {\n            id: newtileid,\n            messages: [write_iwam(6002, write_shallow(tiledata))]\n          };\n          var tilecontent = compress_iwa_file(write_iwa_file([newtile]));\n          CFB.utils.cfb_add(cfb, \"/Index/Tables/Tile-\".concat(newtileid, \".iwa\"), tilecontent);\n          numbers_iwa_doit(cfb, deps, 2, function (ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            mlist[3].push({\n              type: 2,\n              data: write_shallow([[], [{\n                type: 0,\n                data: write_varint49(newtileid)\n              }], [{\n                type: 2,\n                data: stru8(\"Tables/Tile\")\n              }], [{\n                type: 2,\n                data: stru8(\"Tables/Tile-\".concat(newtileid))\n              }], [{\n                type: 2,\n                data: new Uint8Array([2, 0, 0])\n              }], [{\n                type: 2,\n                data: new Uint8Array([2, 0, 0])\n              }], [], [], [], [], [{\n                type: 0,\n                data: write_varint49(0)\n              }], [], [{\n                type: 0,\n                data: write_varint49(save_token)\n              }]])\n            });\n            mlist[1] = [{\n              type: 0,\n              data: write_varint49(Math.max(newtileid + 1, varint_to_i32(mlist[1][0].data)))\n            }];\n            numbers_meta_add_dep(mlist, deps, tmaref, newtileid);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n          numbers_add_oref(tmaroot, newtileid);\n          rbtree[1].push({\n            type: 2,\n            data: write_shallow([[], [{\n              type: 0,\n              data: write_varint49(tidx * tstride)\n            }], [{\n              type: 0,\n              data: write_varint49(tidx)\n            }]])\n          });\n        }\n      }\n      store[3][0].data = write_shallow(tilestore);\n      store[9][0].data = write_shallow(rbtree);\n      store[10] = [{\n        type: 2,\n        data: new Uint8Array([])\n      }];\n      if (ws[\"!merges\"]) {\n        var mergeid = get_unique_msgid({\n          type: 6144,\n          deps: [tmaref],\n          location: deps[tmaref].location\n        }, deps);\n        tmafile.push({\n          id: mergeid,\n          messages: [write_iwam(6144, write_shallow([[], ws[\"!merges\"].map(function (m) {\n            return {\n              type: 2,\n              data: write_shallow([[], [{\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 5,\n                  data: new Uint8Array(new Uint16Array([m.s.r, m.s.c]).buffer)\n                }]])\n              }], [{\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 5,\n                  data: new Uint8Array(new Uint16Array([m.e.r - m.s.r + 1, m.e.c - m.s.c + 1]).buffer)\n                }]])\n              }]])\n            };\n          })]))]\n        });\n        store[13] = [{\n          type: 2,\n          data: write_TSP_Reference(mergeid)\n        }];\n        numbers_iwa_doit(cfb, deps, 2, function (ai) {\n          var mlist = parse_shallow(ai.messages[0].data);\n          numbers_meta_add_dep(mlist, deps, tmaref, mergeid);\n          ai.messages[0].data = write_shallow(mlist);\n        });\n        numbers_add_oref(tmaroot, mergeid);\n      } else delete store[13];\n      var sstref = parse_TSP_Reference(store[4][0].data);\n      numbers_iwa_doit(cfb, deps, sstref, function (sstroot) {\n        var sstdata = parse_shallow(sstroot.messages[0].data);\n        {\n          sstdata[3] = [];\n          LUT.sst.forEach(function (str, i) {\n            if (i == 0) return;\n            sstdata[3].push({\n              type: 2,\n              data: write_shallow([[], [{\n                type: 0,\n                data: write_varint49(i)\n              }], [{\n                type: 0,\n                data: write_varint49(1)\n              }], [{\n                type: 2,\n                data: stru8(str)\n              }]])\n            });\n          });\n        }\n        sstroot.messages[0].data = write_shallow(sstdata);\n      });\n      var rsstref = parse_TSP_Reference(store[17][0].data);\n      numbers_iwa_doit(cfb, deps, rsstref, function (rsstroot) {\n        var rsstdata = parse_shallow(rsstroot.messages[0].data);\n        rsstdata[3] = [];\n        var style_indices = [904980, 903835, 903815, 903845];\n        LUT.rsst.forEach(function (rsst, i) {\n          if (i == 0) return;\n          var tswpsa = [[], [{\n            type: 0,\n            data: new Uint8Array([5])\n          }], [], [{\n            type: 2,\n            data: stru8(rsst.v)\n          }]];\n          tswpsa[10] = [{\n            type: 0,\n            data: new Uint8Array([1])\n          }];\n          tswpsa[19] = [{\n            type: 2,\n            data: new Uint8Array([10, 6, 8, 0, 18, 2, 101, 110])\n          }];\n          tswpsa[5] = [{\n            type: 2,\n            data: new Uint8Array([10, 8, 8, 0, 18, 4, 8, 155, 149, 55])\n          }];\n          tswpsa[2] = [{\n            type: 2,\n            data: new Uint8Array([8, 148, 158, 55])\n          }];\n          tswpsa[6] = [{\n            type: 2,\n            data: new Uint8Array([10, 6, 8, 0, 16, 0, 24, 0])\n          }];\n          tswpsa[7] = [{\n            type: 2,\n            data: new Uint8Array([10, 8, 8, 0, 18, 4, 8, 135, 149, 55])\n          }];\n          tswpsa[8] = [{\n            type: 2,\n            data: new Uint8Array([10, 8, 8, 0, 18, 4, 8, 165, 149, 55])\n          }];\n          tswpsa[14] = [{\n            type: 2,\n            data: new Uint8Array([10, 6, 8, 0, 16, 0, 24, 0])\n          }];\n          tswpsa[24] = [{\n            type: 2,\n            data: new Uint8Array([10, 6, 8, 0, 16, 0, 24, 0])\n          }];\n          var tswpsaid = get_unique_msgid({\n            deps: [],\n            location: \"\",\n            type: 2001\n          }, deps);\n          var tswpsarefs = [];\n          if (rsst.l) {\n            var newhlinkid = numbers_add_msg(cfb, 2032, [[], [], [{\n              type: 2,\n              data: stru8(rsst.l)\n            }]], \"/Index/Tables/DataList\", deps);\n            tswpsa[11] = [];\n            var smartfield = [[], []];\n            if (!smartfield[1]) smartfield[1] = [];\n            smartfield[1].push({\n              type: 2,\n              data: write_shallow([[], [{\n                type: 0,\n                data: write_varint49(0)\n              }], [{\n                type: 2,\n                data: write_TSP_Reference(newhlinkid)\n              }]])\n            });\n            tswpsa[11][0] = {\n              type: 2,\n              data: write_shallow(smartfield)\n            };\n            tswpsarefs.push(newhlinkid);\n          }\n          numbers_add_msg(cfb, 2001, tswpsa, \"/Index/Tables/DataList\", deps, tswpsaid);\n          numbers_iwa_doit(cfb, deps, tswpsaid, function (iwa) {\n            style_indices.forEach(function (ref) {\n              return numbers_add_oref(iwa, ref);\n            });\n            tswpsarefs.forEach(function (ref) {\n              return numbers_add_oref(iwa, ref);\n            });\n          });\n          var rtpaid = numbers_add_msg(cfb, 6218, [[], [{\n            type: 2,\n            data: write_TSP_Reference(tswpsaid)\n          }], [], [{\n            type: 2,\n            data: new Uint8Array([13, 255, 255, 255, 0, 18, 10, 16, 255, 255, 1, 24, 255, 255, 255, 255, 7])\n          }]], \"/Index/Tables/DataList\", deps);\n          numbers_iwa_doit(cfb, deps, rtpaid, function (iwa) {\n            return numbers_add_oref(iwa, tswpsaid);\n          });\n          rsstdata[3].push({\n            type: 2,\n            data: write_shallow([[], [{\n              type: 0,\n              data: write_varint49(i)\n            }], [{\n              type: 0,\n              data: write_varint49(1)\n            }], [], [], [], [], [], [], [{\n              type: 2,\n              data: write_TSP_Reference(rtpaid)\n            }]])\n          });\n          numbers_add_oref(rsstroot, rtpaid);\n          numbers_iwa_doit(cfb, deps, 2, function (ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            numbers_meta_add_dep(mlist, deps, rsstref, rtpaid);\n            numbers_meta_add_dep(mlist, deps, rtpaid, tswpsaid);\n            numbers_meta_add_dep(mlist, deps, tswpsaid, tswpsarefs);\n            numbers_meta_add_dep(mlist, deps, tswpsaid, style_indices);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n        });\n        rsstroot.messages[0].data = write_shallow(rsstdata);\n      });\n      if (LUT.cmnt.length > 1) {\n        var cmntref = parse_TSP_Reference(store[19][0].data);\n        var authors = {},\n          iauthor = 0;\n        numbers_iwa_doit(cfb, deps, cmntref, function (cmntroot) {\n          var cmntdata = parse_shallow(cmntroot.messages[0].data);\n          {\n            cmntdata[3] = [];\n            LUT.cmnt.forEach(function (cc, i) {\n              if (i == 0) return;\n              var replies = [];\n              if (cc.replies) cc.replies.forEach(function (c) {\n                if (!authors[c.a || \"\"]) authors[c.a || \"\"] = numbers_add_msg(cfb, 212, [[], [{\n                  type: 2,\n                  data: stru8(c.a || \"\")\n                }], [{\n                  type: 2,\n                  data: get_author_color(++iauthor)\n                }], [], [{\n                  type: 0,\n                  data: write_varint49(0)\n                }]], \"/Index/Tables/DataList\", deps);\n                var aaaid2 = authors[c.a || \"\"];\n                var csaid2 = numbers_add_msg(cfb, 3056, [[], [{\n                  type: 2,\n                  data: stru8(c.t || \"\")\n                }], [{\n                  type: 2,\n                  data: write_shallow([[], [{\n                    type: 1,\n                    data: new Uint8Array([0, 0, 0, 128, 116, 109, 182, 65])\n                  }]])\n                }], [{\n                  type: 2,\n                  data: write_TSP_Reference(aaaid2)\n                }]], \"/Index/Tables/DataList\", deps);\n                numbers_iwa_doit(cfb, deps, csaid2, function (iwa) {\n                  return numbers_add_oref(iwa, aaaid2);\n                });\n                replies.push(csaid2);\n                numbers_iwa_doit(cfb, deps, 2, function (ai) {\n                  var mlist = parse_shallow(ai.messages[0].data);\n                  numbers_meta_add_dep(mlist, deps, csaid2, aaaid2);\n                  ai.messages[0].data = write_shallow(mlist);\n                });\n              });\n              if (!authors[cc.a || \"\"]) authors[cc.a || \"\"] = numbers_add_msg(cfb, 212, [[], [{\n                type: 2,\n                data: stru8(cc.a || \"\")\n              }], [{\n                type: 2,\n                data: get_author_color(++iauthor)\n              }], [], [{\n                type: 0,\n                data: write_varint49(0)\n              }]], \"/Index/Tables/DataList\", deps);\n              var aaaid = authors[cc.a || \"\"];\n              var csaid = numbers_add_msg(cfb, 3056, [[], [{\n                type: 2,\n                data: stru8(cc.t || \"\")\n              }], [{\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 1,\n                  data: new Uint8Array([0, 0, 0, 128, 116, 109, 182, 65])\n                }]])\n              }], [{\n                type: 2,\n                data: write_TSP_Reference(aaaid)\n              }], replies.map(function (r) {\n                return {\n                  type: 2,\n                  data: write_TSP_Reference(r)\n                };\n              }), [{\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 0,\n                  data: write_varint49(i)\n                }], [{\n                  type: 0,\n                  data: write_varint49(0)\n                }]])\n              }]], \"/Index/Tables/DataList\", deps);\n              numbers_iwa_doit(cfb, deps, csaid, function (iwa) {\n                numbers_add_oref(iwa, aaaid);\n                replies.forEach(function (r) {\n                  return numbers_add_oref(iwa, r);\n                });\n              });\n              cmntdata[3].push({\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 0,\n                  data: write_varint49(i)\n                }], [{\n                  type: 0,\n                  data: write_varint49(1)\n                }], [], [], [], [], [], [], [], [{\n                  type: 2,\n                  data: write_TSP_Reference(csaid)\n                }]])\n              });\n              numbers_add_oref(cmntroot, csaid);\n              numbers_iwa_doit(cfb, deps, 2, function (ai) {\n                var mlist = parse_shallow(ai.messages[0].data);\n                numbers_meta_add_dep(mlist, deps, cmntref, csaid);\n                numbers_meta_add_dep(mlist, deps, csaid, aaaid);\n                if (replies.length) numbers_meta_add_dep(mlist, deps, csaid, replies);\n                ai.messages[0].data = write_shallow(mlist);\n              });\n            });\n          }\n          cmntdata[2][0].data = write_varint49(LUT.cmnt.length + 1);\n          cmntroot.messages[0].data = write_shallow(cmntdata);\n        });\n      }\n    }\n    pb[4][0].data = write_shallow(store);\n  }\n  tmaroot.messages[0].data = write_shallow(pb);\n}\nfunction fix_opts_func(defaults /*:Array<Array<any> >*/) /*:{(o:any):void}*/{\n  return function fix_opts(opts) {\n    for (var i = 0; i != defaults.length; ++i) {\n      var d = defaults[i];\n      if (opts[d[0]] === undefined) opts[d[0]] = d[1];\n      if (d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n    }\n  };\n}\nfunction fix_read_opts(opts) {\n  fix_opts_func([['cellNF', false], /* emit cell number format string as .z */\n  ['cellHTML', true], /* emit html string as .h */\n  ['cellFormula', true], /* emit formulae as .f */\n  ['cellStyles', false], /* emits style/theme as .s */\n  ['cellText', true], /* emit formatted text as .w */\n  ['cellDates', false], /* emit date cells with type `d` */\n\n  ['sheetStubs', false], /* emit empty cells */\n  ['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n  ['bookDeps', false], /* parse calculation chains */\n  ['bookSheets', false], /* only try to get sheet names (no Sheets) */\n  ['bookProps', false], /* only try to get properties (no Sheets) */\n  ['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n  ['bookVBA', false], /* include vba raw data (vbaraw) */\n\n  ['password', ''], /* password */\n  ['WTF', false] /* WTF mode (throws errors) */])(opts);\n}\nfunction fix_write_opts(opts) {\n  fix_opts_func([['cellDates', false], /* write date cells with type `d` */\n\n  ['bookSST', false], /* Generate Shared String Table */\n\n  ['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n  ['compression', false], /* Use file compression */\n\n  ['WTF', false] /* WTF mode (throws errors) */])(opts);\n}\nfunction get_sheet_type(n /*:string*/) /*:string*/{\n  if (RELS.WS.indexOf(n) > -1) return \"sheet\";\n  if (RELS.CS && n == RELS.CS) return \"chart\";\n  if (RELS.DS && n == RELS.DS) return \"dialog\";\n  if (RELS.MS && n == RELS.MS) return \"macro\";\n  return n && n.length ? n : \"sheet\";\n}\nfunction safe_parse_wbrels(wbrels, sheets) {\n  if (!wbrels) return 0;\n  try {\n    wbrels = sheets.map(function pwbr(w) {\n      if (!w.id) w.id = w.strRelID;\n      return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)];\n    });\n  } catch (e) {\n    return null;\n  }\n  return !wbrels || wbrels.length === 0 ? null : wbrels;\n}\nfunction parse_sheet_legacy_drawing(sheet, type, zip, path, idx, opts, wb, comments) {\n  if (!sheet || !sheet['!legdrawel']) return;\n  var dfile = resolve_path(sheet['!legdrawel'].Target, path);\n  var draw = getzipstr(zip, dfile, true);\n  if (draw) parse_vml(utf8read(draw), sheet, comments || []);\n}\nfunction safe_parse_sheet(zip, path /*:string*/, relsPath /*:string*/, sheet, idx /*:number*/, sheetRels, sheets, stype /*:string*/, opts, wb, themes, styles) {\n  try {\n    sheetRels[sheet] = parse_rels(getzipstr(zip, relsPath, true), path);\n    var data = getzipdata(zip, path);\n    var _ws;\n    switch (stype) {\n      case 'sheet':\n        _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        break;\n      case 'chart':\n        _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        if (!_ws || !_ws['!drawel']) break;\n        var dfile = resolve_path(_ws['!drawel'].Target, path);\n        var drelsp = get_rels_path(dfile);\n        var draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n        var chartp = resolve_path(draw, dfile);\n        var crelsp = get_rels_path(chartp);\n        _ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n        break;\n      case 'macro':\n        _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        break;\n      case 'dialog':\n        _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        break;\n      default:\n        throw new Error(\"Unrecognized sheet type \" + stype);\n    }\n    sheets[sheet] = _ws;\n\n    /* scan rels for comments and threaded comments */\n    var comments = [],\n      tcomments = [];\n    if (sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function (n) {\n      var dfile = \"\";\n      if (sheetRels[sheet][n].Type == RELS.CMNT) {\n        dfile = resolve_path(sheetRels[sheet][n].Target, path);\n        comments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);\n        if (!comments || !comments.length) return;\n        sheet_insert_comments(_ws, comments, false);\n      }\n      if (sheetRels[sheet][n].Type == RELS.TCMNT) {\n        dfile = resolve_path(sheetRels[sheet][n].Target, path);\n        tcomments = tcomments.concat(parse_tcmnt_xml(getzipdata(zip, dfile, true), opts));\n      }\n    });\n    if (tcomments && tcomments.length) sheet_insert_comments(_ws, tcomments, true, opts.people || []);\n    parse_sheet_legacy_drawing(_ws, stype, zip, path, idx, opts, wb, comments);\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n}\nfunction strip_front_slash(x /*:string*/) /*:string*/{\n  return x.charAt(0) == '/' ? x.slice(1) : x;\n}\nfunction parse_zip(zip /*:ZIP*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  make_ssf();\n  opts = opts || {};\n  fix_read_opts(opts);\n\n  /* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n  if (safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n  /* UOC */\n  if (safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n  /* Numbers */\n  if (safegetzipfile(zip, 'Index/Document.iwa')) {\n    if (typeof Uint8Array == \"undefined\") throw new Error('NUMBERS file parsing requires Uint8Array support');\n    if (typeof parse_numbers_iwa != \"undefined\") {\n      if (zip.FileIndex) return parse_numbers_iwa(zip, opts);\n      var _zip = CFB.utils.cfb_new();\n      zipentries(zip).forEach(function (e) {\n        zip_add_file(_zip, e, getzipbin(zip, e));\n      });\n      return parse_numbers_iwa(_zip, opts);\n    }\n    throw new Error('Unsupported NUMBERS file');\n  }\n  if (!safegetzipfile(zip, '[Content_Types].xml')) {\n    if (safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');\n    if (safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');\n    var index_zip = CFB.find(zip, 'Index.zip');\n    if (index_zip) {\n      opts = dup(opts);\n      delete opts.type;\n      if (typeof index_zip.content == \"string\") opts.type = \"binary\";\n      // TODO: Bun buffer bug\n      if (typeof Bun !== \"undefined\" && Buffer.isBuffer(index_zip.content)) return readSync(new Uint8Array(index_zip.content), opts);\n      return readSync(index_zip.content, opts);\n    }\n    throw new Error('Unsupported ZIP file');\n  }\n  var entries = zipentries(zip);\n  var dir = parse_ct(getzipstr(zip, '[Content_Types].xml') /*:?any*/);\n  var xlsb = false;\n  var sheets, binname;\n  if (dir.workbooks.length === 0) {\n    binname = \"xl/workbook.xml\";\n    if (getzipdata(zip, binname, true)) dir.workbooks.push(binname);\n  }\n  if (dir.workbooks.length === 0) {\n    binname = \"xl/workbook.bin\";\n    if (!getzipdata(zip, binname, true)) throw new Error(\"Could not find workbook\");\n    dir.workbooks.push(binname);\n    xlsb = true;\n  }\n  if (dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n  var themes = {} /*:any*/;\n  var styles = {} /*:any*/;\n  if (!opts.bookSheets && !opts.bookProps) {\n    strs = [];\n    if (dir.sst) try {\n      strs = parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts);\n    } catch (e) {\n      if (opts.WTF) throw e;\n    }\n    if (opts.cellStyles && dir.themes.length) themes = parse_theme_xml(getzipstr(zip, dir.themes[0].replace(/^\\//, ''), true) || \"\", opts);\n    if (dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n  }\n\n  /*var externbooks = */\n  dir.links.map(function (link) {\n    try {\n      var rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);\n      return parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);\n    } catch (e) {}\n  });\n  var wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n  var props = {},\n    propdata = \"\";\n  if (dir.coreprops.length) {\n    propdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n    if (propdata) props = parse_core_props(propdata);\n    if (dir.extprops.length !== 0) {\n      propdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n      if (propdata) parse_ext_props(propdata, props, opts);\n    }\n  }\n  var custprops = {};\n  if (!opts.bookSheets || opts.bookProps) {\n    if (dir.custprops.length !== 0) {\n      propdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n      if (propdata) custprops = parse_cust_props(propdata, opts);\n    }\n  }\n  var out = {} /*:any*/;\n  if (opts.bookSheets || opts.bookProps) {\n    if (wb.Sheets) sheets = wb.Sheets.map(function pluck(x) {\n      return x.name;\n    });else if (props.Worksheets && props.SheetNames.length > 0) sheets = props.SheetNames;\n    if (opts.bookProps) {\n      out.Props = props;\n      out.Custprops = custprops;\n    }\n    if (opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n    if (opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n  }\n  sheets = {};\n  var deps = {};\n  if (opts.bookDeps && dir.calcchain) deps = parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)), dir.calcchain, opts);\n  var i = 0;\n  var sheetRels = {} /*:any*/;\n  var path, relsPath;\n  {\n    var wbsheets = wb.Sheets;\n    props.Worksheets = wbsheets.length;\n    props.SheetNames = [];\n    for (var j = 0; j != wbsheets.length; ++j) {\n      props.SheetNames[j] = wbsheets[j].name;\n    }\n  }\n  var wbext = xlsb ? \"bin\" : \"xml\";\n  var wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n  var wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi + 1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi + 1) + \".rels\").replace(/^\\//, \"\");\n  if (!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n  var wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, \"s5s\"));\n  if ((dir.metadata || []).length >= 1) {\n    /* TODO: MDX and other types of metadata */\n    opts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])), dir.metadata[0], opts);\n  }\n  if ((dir.people || []).length >= 1) {\n    opts.people = parse_people_xml(getzipdata(zip, strip_front_slash(dir.people[0])), opts);\n  }\n  if (wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n  /* Numbers iOS hack */\n  var nmode = getzipdata(zip, \"xl/worksheets/sheet.xml\", true) ? 1 : 0;\n  wsloop: for (i = 0; i != props.Worksheets; ++i) {\n    var stype = \"sheet\";\n    if (wbrels && wbrels[i]) {\n      path = 'xl/' + wbrels[i][1].replace(/[\\/]?xl\\//, \"\");\n      if (!safegetzipfile(zip, path)) path = wbrels[i][1];\n      if (!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/[\\S\\s]*$/, \"\") + wbrels[i][1];\n      stype = wbrels[i][2];\n    } else {\n      path = 'xl/worksheets/sheet' + (i + 1 - nmode) + \".\" + wbext;\n      path = path.replace(/sheet0\\./, \"sheet.\");\n    }\n    relsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n    if (opts && opts.sheets != null) switch (typeof opts.sheets) {\n      case \"number\":\n        if (i != opts.sheets) continue wsloop;\n        break;\n      case \"string\":\n        if (props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop;\n        break;\n      default:\n        if (Array.isArray && Array.isArray(opts.sheets)) {\n          var snjseen = false;\n          for (var snj = 0; snj != opts.sheets.length; ++snj) {\n            if (typeof opts.sheets[snj] == \"number\" && opts.sheets[snj] == i) snjseen = 1;\n            if (typeof opts.sheets[snj] == \"string\" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;\n          }\n          if (!snjseen) continue wsloop;\n        }\n    }\n    safe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n  }\n  out = {\n    Directory: dir,\n    Workbook: wb,\n    Props: props,\n    Custprops: custprops,\n    Deps: deps,\n    Sheets: sheets,\n    SheetNames: props.SheetNames,\n    Strings: strs,\n    Styles: styles,\n    Themes: themes,\n    SSF: dup(table_fmt)\n  } /*:any*/;\n  if (opts && opts.bookFiles) {\n    if (zip.files) {\n      out.keys = entries;\n      out.files = zip.files;\n    } else {\n      out.keys = [];\n      out.files = {};\n      zip.FullPaths.forEach(function (p, idx) {\n        p = p.replace(/^Root Entry[\\/]/, \"\");\n        out.keys.push(p);\n        out.files[p] = zip.FileIndex[idx];\n      });\n    }\n  }\n  if (opts && opts.bookVBA) {\n    if (dir.vba.length > 0) out.vbaraw = getzipdata(zip, strip_front_slash(dir.vba[0]), true);else if (dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin', true);\n  }\n  // TODO: pass back content types metadata for xlsm/xlsx resolution\n  out.bookType = xlsb ? \"xlsb\" : \"xlsx\";\n  return out;\n}\n\n/* [MS-OFFCRYPTO] 2.1.1 */\nfunction parse_xlsxcfb(cfb, _opts /*:?ParseOpts*/) /*:Workbook*/{\n  var opts = _opts || {};\n  var f = 'Workbook',\n    data = CFB.find(cfb, f);\n  try {\n    f = '/!DataSpaces/Version';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    /*var version = */\n    parse_DataSpaceVersionInfo(data.content);\n\n    /* 2.3.4.1 */\n    f = '/!DataSpaces/DataSpaceMap';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    var dsm = parse_DataSpaceMap(data.content);\n    if (dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\") throw new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n    /* 2.3.4.2 */\n    f = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    var seds = parse_DataSpaceDefinition(data.content);\n    if (seds.length != 1 || seds[0] != \"StrongEncryptionTransform\") throw new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n    /* 2.3.4.3 */\n    f = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    /*var hdr = */\n    parse_Primary(data.content);\n  } catch (e) {}\n  f = '/EncryptionInfo';\n  data = CFB.find(cfb, f);\n  if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n  var einfo = parse_EncryptionInfo(data.content);\n\n  /* 2.3.4.4 */\n  f = '/EncryptedPackage';\n  data = CFB.find(cfb, f);\n  if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n  /*global decrypt_agile */\n  /*:: declare var decrypt_agile:any; */\n  if (einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n  /*global decrypt_std76 */\n  /*:: declare var decrypt_std76:any; */\n  if (einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n  throw new Error(\"File is password-protected\");\n}\nfunction write_zip_xlsb(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:ZIP*/{\n  if (wb && !wb.SSF) {\n    wb.SSF = dup(table_fmt);\n  }\n  if (wb && wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    opts.revssf = evert_num(wb.SSF);\n    opts.revssf[wb.SSF[65535]] = 0;\n    opts.ssf = wb.SSF;\n  }\n  opts.rels = {};\n  opts.wbrels = {};\n  opts.Strings = /*::((*/[] /*:: :any):SST)*/;\n  opts.Strings.Count = 0;\n  opts.Strings.Unique = 0;\n  if (browser_has_Map) opts.revStrings = new Map();else {\n    opts.revStrings = {};\n    opts.revStrings.foo = [];\n    delete opts.revStrings.foo;\n  }\n  var wbext = \"bin\";\n  var vbafmt = true;\n  var ct = new_ct();\n  fix_write_opts(opts = opts || {});\n  var zip = zip_new();\n  var f = \"\",\n    rId = 0;\n  opts.cellXfs = [];\n  get_cell_style(opts.cellXfs, {}, {\n    revssf: {\n      \"General\": 0\n    }\n  });\n  if (!wb.Props) wb.Props = {};\n  f = \"docProps/core.xml\";\n  zip_add_file(zip, f, write_core_props(wb.Props, opts));\n  ct.coreprops.push(f);\n  add_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n  /*::if(!wb.Props) throw \"unreachable\"; */\n  f = \"docProps/app.xml\";\n  if (wb.Props && wb.Props.SheetNames) {/* empty */} else if (!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;else {\n    var _sn = [];\n    for (var _i = 0; _i < wb.SheetNames.length; ++_i) if ((wb.Workbook.Sheets[_i] || {}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n    wb.Props.SheetNames = _sn;\n  }\n  wb.Props.Worksheets = wb.Props.SheetNames.length;\n  zip_add_file(zip, f, write_ext_props(wb.Props, opts));\n  ct.extprops.push(f);\n  add_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n  if (wb.Custprops !== wb.Props && keys(wb.Custprops || {}).length > 0) {\n    f = \"docProps/custom.xml\";\n    zip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n    ct.custprops.push(f);\n    add_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n  }\n  var people = [\"SheetJ5\"];\n  opts.tcid = 0;\n  for (rId = 1; rId <= wb.SheetNames.length; ++rId) {\n    var wsrels = {\n      '!id': {}\n    };\n    var ws = wb.Sheets[wb.SheetNames[rId - 1]];\n    var _type = (ws || {})[\"!type\"] || \"sheet\";\n    switch (_type) {\n      case \"chart\":\n      /* falls through */\n      default:\n        f = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n        zip_add_file(zip, f, write_ws_bin(rId - 1, opts, wb, wsrels));\n        ct.sheets.push(f);\n        add_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n    }\n    if (ws) {\n      var comments = ws['!comments'];\n      var need_vml = false;\n      var cf = \"\";\n      if (comments && comments.length > 0) {\n        var needtc = false;\n        comments.forEach(function (carr) {\n          carr[1].forEach(function (c) {\n            if (c.T == true) needtc = true;\n          });\n        });\n        if (needtc) {\n          cf = \"xl/threadedComments/threadedComment\" + rId + \".xml\";\n          zip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n          ct.threadedcomments.push(cf);\n          add_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".xml\", RELS.TCMNT);\n        }\n        cf = \"xl/comments\" + rId + \".\" + wbext;\n        zip_add_file(zip, cf, write_comments_bin(comments, opts));\n        ct.comments.push(cf);\n        add_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n        need_vml = true;\n      }\n      if (ws['!legacy']) {\n        if (need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + rId + \".vml\", write_vml(rId, ws['!comments']));\n      }\n      delete ws['!comments'];\n      delete ws['!legacy'];\n    }\n    if (wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n  }\n  if (opts.Strings != null && opts.Strings.length > 0) {\n    f = \"xl/sharedStrings.\" + wbext;\n    zip_add_file(zip, f, write_sst_bin(opts.Strings, opts));\n    ct.strs.push(f);\n    add_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n  }\n  f = \"xl/workbook.\" + wbext;\n  zip_add_file(zip, f, write_wb_bin(wb, opts));\n  ct.workbooks.push(f);\n  add_rels(opts.rels, 1, f, RELS.WB);\n\n  /* TODO: something more intelligent with themes */\n\n  f = \"xl/theme/theme1.xml\";\n  var ww = write_theme(wb.Themes, opts);\n  zip_add_file(zip, f, ww);\n  ct.themes.push(f);\n  add_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n  /* TODO: something more intelligent with styles */\n\n  f = \"xl/styles.\" + wbext;\n  zip_add_file(zip, f, write_sty_bin(wb, opts));\n  ct.styles.push(f);\n  add_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n  if (wb.vbaraw && vbafmt) {\n    f = \"xl/vbaProject.bin\";\n    zip_add_file(zip, f, wb.vbaraw);\n    ct.vba.push(f);\n    add_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n  }\n  f = \"xl/metadata.\" + wbext;\n  zip_add_file(zip, f, write_xlmeta_bin());\n  ct.metadata.push(f);\n  add_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n  if (people.length > 1) {\n    f = \"xl/persons/person.xml\";\n    zip_add_file(zip, f, write_people_xml(people, opts));\n    ct.people.push(f);\n    add_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n  }\n  zip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n  zip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n  zip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n  delete opts.revssf;\n  delete opts.ssf;\n  return zip;\n}\nfunction write_zip_xlsx(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:ZIP*/{\n  if (wb && !wb.SSF) {\n    wb.SSF = dup(table_fmt);\n  }\n  if (wb && wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    opts.revssf = evert_num(wb.SSF);\n    opts.revssf[wb.SSF[65535]] = 0;\n    opts.ssf = wb.SSF;\n  }\n  opts.rels = {};\n  opts.wbrels = {};\n  opts.Strings = /*::((*/[] /*:: :any):SST)*/;\n  opts.Strings.Count = 0;\n  opts.Strings.Unique = 0;\n  if (browser_has_Map) opts.revStrings = new Map();else {\n    opts.revStrings = {};\n    opts.revStrings.foo = [];\n    delete opts.revStrings.foo;\n  }\n  var wbext = \"xml\";\n  var vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n  var ct = new_ct();\n  fix_write_opts(opts = opts || {});\n  var zip = zip_new();\n  var f = \"\",\n    rId = 0;\n  opts.cellXfs = [];\n  get_cell_style(opts.cellXfs, {}, {\n    revssf: {\n      \"General\": 0\n    }\n  });\n  if (!wb.Props) wb.Props = {};\n  f = \"docProps/core.xml\";\n  zip_add_file(zip, f, write_core_props(wb.Props, opts));\n  ct.coreprops.push(f);\n  add_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n  /*::if(!wb.Props) throw \"unreachable\"; */\n  f = \"docProps/app.xml\";\n  if (wb.Props && wb.Props.SheetNames) {/* empty */} else if (!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;else {\n    var _sn = [];\n    for (var _i = 0; _i < wb.SheetNames.length; ++_i) if ((wb.Workbook.Sheets[_i] || {}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n    wb.Props.SheetNames = _sn;\n  }\n  wb.Props.Worksheets = wb.Props.SheetNames.length;\n  zip_add_file(zip, f, write_ext_props(wb.Props, opts));\n  ct.extprops.push(f);\n  add_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n  if (wb.Custprops !== wb.Props && keys(wb.Custprops || {}).length > 0) {\n    f = \"docProps/custom.xml\";\n    zip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n    ct.custprops.push(f);\n    add_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n  }\n  var people = [\"SheetJ5\"];\n  opts.tcid = 0;\n  for (rId = 1; rId <= wb.SheetNames.length; ++rId) {\n    var wsrels = {\n      '!id': {}\n    };\n    var ws = wb.Sheets[wb.SheetNames[rId - 1]];\n    var _type = (ws || {})[\"!type\"] || \"sheet\";\n    switch (_type) {\n      case \"chart\":\n      /* falls through */\n      default:\n        f = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n        zip_add_file(zip, f, write_ws_xml(rId - 1, opts, wb, wsrels));\n        ct.sheets.push(f);\n        add_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n    }\n    if (ws) {\n      var comments = ws['!comments'];\n      var need_vml = false;\n      var cf = \"\";\n      if (comments && comments.length > 0) {\n        var needtc = false;\n        comments.forEach(function (carr) {\n          carr[1].forEach(function (c) {\n            if (c.T == true) needtc = true;\n          });\n        });\n        if (needtc) {\n          cf = \"xl/threadedComments/threadedComment\" + rId + \".xml\";\n          zip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n          ct.threadedcomments.push(cf);\n          add_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".xml\", RELS.TCMNT);\n        }\n        cf = \"xl/comments\" + rId + \".\" + wbext;\n        zip_add_file(zip, cf, write_comments_xml(comments, opts));\n        ct.comments.push(cf);\n        add_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n        need_vml = true;\n      }\n      if (ws['!legacy']) {\n        if (need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + rId + \".vml\", write_vml(rId, ws['!comments']));\n      }\n      delete ws['!comments'];\n      delete ws['!legacy'];\n    }\n    if (wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n  }\n  if (opts.Strings != null && opts.Strings.length > 0) {\n    f = \"xl/sharedStrings.\" + wbext;\n    zip_add_file(zip, f, write_sst_xml(opts.Strings, opts));\n    ct.strs.push(f);\n    add_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n  }\n  f = \"xl/workbook.\" + wbext;\n  zip_add_file(zip, f, write_wb_xml(wb, opts));\n  ct.workbooks.push(f);\n  add_rels(opts.rels, 1, f, RELS.WB);\n\n  /* TODO: something more intelligent with themes */\n\n  f = \"xl/theme/theme1.xml\";\n  zip_add_file(zip, f, write_theme(wb.Themes, opts));\n  ct.themes.push(f);\n  add_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n  /* TODO: something more intelligent with styles */\n\n  f = \"xl/styles.\" + wbext;\n  zip_add_file(zip, f, write_sty_xml(wb, opts));\n  ct.styles.push(f);\n  add_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n  if (wb.vbaraw && vbafmt) {\n    f = \"xl/vbaProject.bin\";\n    zip_add_file(zip, f, wb.vbaraw);\n    ct.vba.push(f);\n    add_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n  }\n  f = \"xl/metadata.\" + wbext;\n  zip_add_file(zip, f, write_xlmeta_xml());\n  ct.metadata.push(f);\n  add_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n  if (people.length > 1) {\n    f = \"xl/persons/person.xml\";\n    zip_add_file(zip, f, write_people_xml(people, opts));\n    ct.people.push(f);\n    add_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n  }\n  zip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n  zip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n  zip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n  delete opts.revssf;\n  delete opts.ssf;\n  return zip;\n}\nfunction firstbyte(f /*:RawData*/, o /*:?TypeOpts*/) /*:Array<number>*/{\n  var x = \"\";\n  switch ((o || {}).type || \"base64\") {\n    case 'buffer':\n      return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n    case 'base64':\n      x = Base64_decode(f.slice(0, 12));\n      break;\n    case 'binary':\n      x = f;\n      break;\n    case 'array':\n      return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n    default:\n      throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n  }\n  return [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];\n}\nfunction read_cfb(cfb /*:CFBContainer*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  if (CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n  return parse_xlscfb(cfb, opts);\n}\nfunction read_zip(data /*:RawData*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  var zip,\n    d = data;\n  var o = opts || {};\n  if (!o.type) o.type = has_buf && Buffer.isBuffer(data) ? \"buffer\" : \"base64\";\n  zip = zip_read(d, o);\n  return parse_zip(zip, o);\n}\nfunction read_plaintext(data /*:string*/, o /*:ParseOpts*/) /*:Workbook*/{\n  var i = 0;\n  main: while (i < data.length) switch (data.charCodeAt(i)) {\n    case 0x0A:\n    case 0x0D:\n    case 0x20:\n      ++i;\n      break;\n    case 0x3C:\n      return parse_xlml(data.slice(i), o);\n    default:\n      break main;\n  }\n  return PRN.to_workbook(data, o);\n}\nfunction read_plaintext_raw(data /*:RawData*/, o /*:ParseOpts*/) /*:Workbook*/{\n  var str = \"\",\n    bytes = firstbyte(data, o);\n  switch (o.type) {\n    case 'base64':\n      str = Base64_decode(data);\n      break;\n    case 'binary':\n      str = data;\n      break;\n    case 'buffer':\n      str = data.toString('binary');\n      break;\n    case 'array':\n      str = cc2str(data);\n      break;\n    default:\n      throw new Error(\"Unrecognized type \" + o.type);\n  }\n  if (bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n  o.type = \"binary\";\n  return read_plaintext(str, o);\n}\nfunction read_utf16(data /*:RawData*/, o /*:ParseOpts*/) /*:Workbook*/{\n  var d = data;\n  if (o.type == 'base64') d = Base64_decode(d);\n  if (typeof ArrayBuffer !== \"undefined\" && data instanceof ArrayBuffer) d = new Uint8Array(data);\n  d = typeof $cptable !== \"undefined\" ? $cptable.utils.decode(1200, d.slice(2), 'str') : has_buf && Buffer.isBuffer(data) ? data.slice(2).toString(\"utf16le\") : typeof Uint8Array !== \"undefined\" && d instanceof Uint8Array ? typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\").decode(d.slice(2)) : utf16lereadu(d.slice(2)) : utf16leread(d.slice(2));\n  o.type = \"binary\";\n  return read_plaintext(d, o);\n}\nfunction bstrify(data /*:string*/) /*:string*/{\n  return !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n}\nfunction read_prn(data, d, o, str) {\n  if (str) {\n    o.type = \"string\";\n    return PRN.to_workbook(data, o);\n  }\n  return PRN.to_workbook(d, o);\n}\nfunction readSync(data /*:RawData*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  reset_cp();\n  var o = opts || {};\n  if (o.codepage && typeof $cptable === \"undefined\") console.error(\"Codepage tables are not loaded.  Non-ASCII characters may not give expected results\");\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = \"array\", o));\n  if (typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== \"undefined\" ? \"buffer\" : \"array\";\n  var d = data,\n    n = [0, 0, 0, 0],\n    str = false;\n  if (o.cellStyles) {\n    o.cellNF = true;\n    o.sheetStubs = true;\n  }\n  _ssfopts = {};\n  if (o.dateNF) _ssfopts.dateNF = o.dateNF;\n  if (!o.type) o.type = has_buf && Buffer.isBuffer(data) ? \"buffer\" : \"base64\";\n  if (o.type == \"file\") {\n    o.type = has_buf ? \"buffer\" : \"binary\";\n    d = read_binary(data);\n    if (typeof Uint8Array !== 'undefined' && !has_buf) o.type = \"array\";\n  }\n  if (o.type == \"string\") {\n    str = true;\n    o.type = \"binary\";\n    o.codepage = 65001;\n    d = bstrify(data);\n  }\n  if (o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n    // $FlowIgnore\n    var ab = new ArrayBuffer(3),\n      vu = new Uint8Array(ab);\n    vu.foo = \"bar\";\n    // $FlowIgnore\n    if (!vu.foo) {\n      o = dup(o);\n      o.type = 'array';\n      return readSync(ab2a(d), o);\n    }\n  }\n  switch ((n = firstbyte(d, o))[0]) {\n    case 0xD0:\n      if (n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o);\n      break;\n    case 0x09:\n      if (n[1] <= 0x08) return parse_xlscfb(d, o);\n      break;\n    case 0x3C:\n      return parse_xlml(d, o);\n    case 0x49:\n      if (n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error(\"TIFF Image File is not a spreadsheet\");\n      if (n[1] === 0x44) return read_wb_ID(d, o);\n      break;\n    case 0x54:\n      if (n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o);\n      break;\n    case 0x50:\n      return n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09 ? read_zip(d, o) : read_prn(data, d, o, str);\n    case 0xEF:\n      return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n    case 0xFF:\n      if (n[1] === 0xFE) {\n        return read_utf16(d, o);\n      } else if (n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n      break;\n    case 0x00:\n      if (n[1] === 0x00) {\n        if (n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n        if (n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);\n      }\n      break;\n    case 0x03:\n    case 0x83:\n    case 0x8B:\n    case 0x8C:\n      return DBF.to_workbook(d, o);\n    case 0x7B:\n      if (n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return rtf_to_workbook(d, o);\n      break;\n    case 0x0A:\n    case 0x0D:\n    case 0x20:\n      return read_plaintext_raw(d, o);\n    case 0x89:\n      if (n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error(\"PNG Image File is not a spreadsheet\");\n      break;\n    case 0x08:\n      if (n[1] === 0xE7) throw new Error(\"Unsupported Multiplan 1.x file!\");\n      break;\n    case 0x0C:\n      if (n[1] === 0xEC) throw new Error(\"Unsupported Multiplan 2.x file!\");\n      if (n[1] === 0xED) throw new Error(\"Unsupported Multiplan 3.x file!\");\n      break;\n  }\n  if (DBF_SUPPORTED_VERSIONS.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n  return read_prn(data, d, o, str);\n}\nfunction readFileSync(filename /*:string*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  var o = opts || {};\n  o.type = 'file';\n  return readSync(filename, o);\n}\nfunction write_cfb_ctr(cfb /*:CFBContainer*/, o /*:WriteOpts*/) /*:any*/{\n  switch (o.type) {\n    case \"base64\":\n    case \"binary\":\n      break;\n    case \"buffer\":\n    case \"array\":\n      o.type = \"\";\n      break;\n    case \"file\":\n      return write_dl(o.file, CFB.write(cfb, {\n        type: has_buf ? 'buffer' : \"\"\n      }));\n    case \"string\":\n      throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n    default:\n      throw new Error(\"Unrecognized type \" + o.type);\n  }\n  return CFB.write(cfb, o);\n}\nfunction write_zip(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:ZIP*/{\n  switch (opts.bookType) {\n    case \"ods\":\n      return write_ods(wb, opts);\n    case \"numbers\":\n      return write_numbers_iwa(wb, opts);\n    case \"xlsb\":\n      return write_zip_xlsb(wb, opts);\n    default:\n      return write_zip_xlsx(wb, opts);\n  }\n}\n\n/*:: declare var encrypt_agile:any; */\nfunction write_zip_type(wb /*:Workbook*/, opts /*:?WriteOpts*/) /*:any*/{\n  var o = dup(opts || {});\n  var z = write_zip(wb, o);\n  return write_zip_denouement(z, o);\n}\nfunction write_zip_typeXLSX(wb /*:Workbook*/, opts /*:?WriteOpts*/) /*:any*/{\n  var o = dup(opts || {});\n  var z = write_zip_xlsx(wb, o);\n  return write_zip_denouement(z, o);\n}\nfunction write_zip_denouement(z /*:any*/, o /*:?WriteOpts*/) /*:any*/{\n  var oopts = {};\n  var ftype = has_buf ? \"nodebuffer\" : typeof Uint8Array !== \"undefined\" ? \"array\" : \"string\";\n  if (o.compression) oopts.compression = 'DEFLATE';\n  if (o.password) oopts.type = ftype;else switch (o.type) {\n    case \"base64\":\n      oopts.type = \"base64\";\n      break;\n    case \"binary\":\n      oopts.type = \"string\";\n      break;\n    case \"string\":\n      throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n    case \"buffer\":\n    case \"file\":\n      oopts.type = ftype;\n      break;\n    default:\n      throw new Error(\"Unrecognized type \" + o.type);\n  }\n  var out = z.FullPaths ? CFB.write(z, {\n    fileType: \"zip\",\n    type: /*::(*/{\n      \"nodebuffer\": \"buffer\",\n      \"string\": \"binary\"\n    } /*:: :any)*/[oopts.type] || oopts.type,\n    compression: !!o.compression\n  }) : z.generate(oopts);\n  if (typeof Deno !== \"undefined\") {\n    if (typeof out == \"string\") {\n      if (o.type == \"binary\" || o.type == \"base64\") return out;\n      out = new Uint8Array(s2ab(out));\n    }\n  }\n  /*jshint -W083 */\n  if (o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o); // eslint-disable-line no-undef\n  /*jshint +W083 */\n  if (o.type === \"file\") return write_dl(o.file, out);\n  return o.type == \"string\" ? utf8read( /*::(*/out /*:: :any)*/) : out;\n}\nfunction write_cfb_type(wb /*:Workbook*/, opts /*:?WriteOpts*/) /*:any*/{\n  var o = opts || {};\n  var cfb /*:CFBContainer*/ = write_xlscfb(wb, o);\n  return write_cfb_ctr(cfb, o);\n}\nfunction write_string_type(out /*:string*/, opts /*:WriteOpts*/, bom /*:?string*/) /*:any*/{\n  if (!bom) bom = \"\";\n  var o = bom + out;\n  switch (opts.type) {\n    case \"base64\":\n      return Base64_encode(utf8write(o));\n    case \"binary\":\n      return utf8write(o);\n    case \"string\":\n      return out;\n    case \"file\":\n      return write_dl(opts.file, o, 'utf8');\n    case \"buffer\":\n      {\n        if (has_buf) return Buffer_from(o, 'utf8');else if (typeof TextEncoder !== \"undefined\") return new TextEncoder().encode(o);else return write_string_type(o, {\n          type: 'binary'\n        }).split(\"\").map(function (c) {\n          return c.charCodeAt(0);\n        });\n      }\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\nfunction write_stxt_type(out /*:string*/, opts /*:WriteOpts*/) /*:any*/{\n  switch (opts.type) {\n    case \"base64\":\n      return Base64_encode_pass(out);\n    case \"binary\":\n      return out;\n    case \"string\":\n      return out;\n    /* override in sheet_to_txt */\n    case \"file\":\n      return write_dl(opts.file, out, 'binary');\n    case \"buffer\":\n      {\n        if (has_buf) return Buffer_from(out, 'binary');else return out.split(\"\").map(function (c) {\n          return c.charCodeAt(0);\n        });\n      }\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\n\n/* TODO: test consistency */\nfunction write_binary_type(out, opts /*:WriteOpts*/) /*:any*/{\n  switch (opts.type) {\n    case \"string\":\n    case \"base64\":\n    case \"binary\":\n      var bstr = \"\";\n      // $FlowIgnore\n      for (var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n      return opts.type == 'base64' ? Base64_encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n    case \"file\":\n      return write_dl(opts.file, out);\n    case \"buffer\":\n      return out;\n    default:\n      throw new Error(\"Unrecognized type \" + opts.type);\n  }\n}\nfunction writeSyncXLSX(wb /*:Workbook*/, opts /*:?WriteOpts*/) {\n  reset_cp();\n  check_wb(wb);\n  var o = dup(opts || {});\n  if (o.cellStyles) {\n    o.cellNF = true;\n    o.sheetStubs = true;\n  }\n  if (o.type == \"array\") {\n    o.type = \"binary\";\n    var out /*:string*/ = writeSyncXLSX(wb, o) /*:any*/;\n    o.type = \"array\";\n    return s2ab(out);\n  }\n  return write_zip_typeXLSX(wb, o);\n}\nfunction writeSync(wb /*:Workbook*/, opts /*:?WriteOpts*/) {\n  reset_cp();\n  check_wb(wb);\n  var o = dup(opts || {});\n  if (o.cellStyles) {\n    o.cellNF = true;\n    o.sheetStubs = true;\n  }\n  if (o.type == \"array\") {\n    o.type = \"binary\";\n    var out /*:string*/ = writeSync(wb, o) /*:any*/;\n    o.type = \"array\";\n    return s2ab(out);\n  }\n  var idx = 0;\n  if (o.sheet) {\n    if (typeof o.sheet == \"number\") idx = o.sheet;else idx = wb.SheetNames.indexOf(o.sheet);\n    if (!wb.SheetNames[idx]) throw new Error(\"Sheet not found: \" + o.sheet + \" : \" + typeof o.sheet);\n  }\n  switch (o.bookType || 'xlsb') {\n    case 'xml':\n    case 'xlml':\n      return write_string_type(write_xlml(wb, o), o);\n    case 'slk':\n    case 'sylk':\n      return write_string_type(SYLK.from_sheet(wb.Sheets[wb.SheetNames[idx]], o, wb), o);\n    case 'htm':\n    case 'html':\n      return write_string_type(sheet_to_html(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'txt':\n      return write_stxt_type(sheet_to_txt(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'csv':\n      return write_string_type(sheet_to_csv(wb.Sheets[wb.SheetNames[idx]], o), o, \"\\ufeff\");\n    case 'dif':\n      return write_string_type(DIF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'dbf':\n      return write_binary_type(DBF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'prn':\n      return write_string_type(PRN.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'rtf':\n      return write_string_type(sheet_to_rtf(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'eth':\n      return write_string_type(ETH.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'fods':\n      return write_string_type(write_ods(wb, o), o);\n    case 'wk1':\n      return write_binary_type(WK_.sheet_to_wk1(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'wk3':\n      return write_binary_type(WK_.book_to_wk3(wb, o), o);\n    case 'biff2':\n      if (!o.biff) o.biff = 2;\n    /* falls through */\n    case 'biff3':\n      if (!o.biff) o.biff = 3;\n    /* falls through */\n    case 'biff4':\n      if (!o.biff) o.biff = 4;\n      return write_binary_type(write_biff_buf(wb, o), o);\n    case 'biff5':\n      if (!o.biff) o.biff = 5;\n    /* falls through */\n    case 'biff8':\n    case 'xla':\n    case 'xls':\n      if (!o.biff) o.biff = 8;\n      return write_cfb_type(wb, o);\n    case 'xlsx':\n    case 'xlsm':\n    case 'xlam':\n    case 'xlsb':\n    case 'numbers':\n    case 'ods':\n      return write_zip_type(wb, o);\n    default:\n      throw new Error(\"Unrecognized bookType |\" + o.bookType + \"|\");\n  }\n}\nfunction resolve_book_type(o /*:WriteFileOpts*/) {\n  if (o.bookType) return;\n  var _BT = {\n    \"xls\": \"biff8\",\n    \"htm\": \"html\",\n    \"slk\": \"sylk\",\n    \"socialcalc\": \"eth\",\n    \"Sh33tJS\": \"WTF\"\n  };\n  var ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\n  if (ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\n  o.bookType = _BT[o.bookType] || o.bookType;\n}\nfunction writeFileSync(wb /*:Workbook*/, filename /*:string*/, opts /*:?WriteFileOpts*/) {\n  var o = opts || {};\n  o.type = 'file';\n  o.file = filename;\n  resolve_book_type(o);\n  return writeSync(wb, o);\n}\nfunction writeFileSyncXLSX(wb /*:Workbook*/, filename /*:string*/, opts /*:?WriteFileOpts*/) {\n  var o = opts || {};\n  o.type = 'file';\n  o.file = filename;\n  resolve_book_type(o);\n  return writeSyncXLSX(wb, o);\n}\nfunction writeFileAsync(filename /*:string*/, wb /*:Workbook*/, opts /*:?WriteFileOpts*/, cb /*:?(e?:ErrnoError)=>void*/) {\n  var o = opts || {};\n  o.type = 'file';\n  o.file = filename;\n  resolve_book_type(o);\n  o.type = 'buffer';\n  var _cb = cb;\n  if (!(_cb instanceof Function)) _cb = opts /*:any*/;\n  return _fs.writeFile(filename, writeSync(wb, o), _cb);\n}\n/*::\ntype MJRObject = {\n\trow: any;\n\tisempty: boolean;\n};\n*/\nfunction make_json_row(sheet /*:Worksheet*/, r /*:Range*/, R /*:number*/, cols /*:Array<string>*/, header /*:number*/, hdr /*:Array<any>*/, o /*:Sheet2JSONOpts*/) /*:MJRObject*/{\n  var rr = encode_row(R);\n  var defval = o.defval,\n    raw = o.raw || !Object.prototype.hasOwnProperty.call(o, \"raw\");\n  var isempty = true,\n    dense = sheet[\"!data\"] != null;\n  var row /*:any*/ = header === 1 ? [] : {};\n  if (header !== 1) {\n    if (Object.defineProperty) try {\n      Object.defineProperty(row, '__rowNum__', {\n        value: R,\n        enumerable: false\n      });\n    } catch (e) {\n      row.__rowNum__ = R;\n    } else row.__rowNum__ = R;\n  }\n  if (!dense || sheet[\"!data\"][R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n    var val = dense ? (sheet[\"!data\"][R] || [])[C] : sheet[cols[C] + rr];\n    if (val == null || val.t === undefined) {\n      if (defval === undefined) continue;\n      if (hdr[C] != null) {\n        row[hdr[C]] = defval;\n      }\n      continue;\n    }\n    var v = val.v;\n    switch (val.t) {\n      case 'z':\n        if (v == null) break;\n        continue;\n      case 'e':\n        v = v == 0 ? null : void 0;\n        break;\n      case 's':\n      case 'b':\n      case 'n':\n        if (!val.z || !fmt_is_date(val.z)) break;\n        v = numdate(v); // TODO: date1904 setting should also be stored in worksheet object\n        if (typeof v == \"number\") break;\n      /* falls through */\n      case 'd':\n        if (!(o && (o.UTC || o.raw === false))) v = utc_to_local(new Date(v));\n        break;\n      default:\n        throw new Error('unrecognized type ' + val.t);\n    }\n    if (hdr[C] != null) {\n      if (v == null) {\n        if (val.t == \"e\" && v === null) row[hdr[C]] = null;else if (defval !== undefined) row[hdr[C]] = defval;else if (raw && v === null) row[hdr[C]] = null;else continue;\n      } else {\n        row[hdr[C]] = (val.t === 'n' && typeof o.rawNumbers === 'boolean' ? o.rawNumbers : raw) ? v : format_cell(val, v, o);\n      }\n      if (v != null) isempty = false;\n    }\n  }\n  return {\n    row: row,\n    isempty: isempty\n  };\n}\nfunction sheet_to_json(sheet /*:Worksheet*/, opts /*:?Sheet2JSONOpts*/) {\n  if (sheet == null || sheet[\"!ref\"] == null) return [];\n  var val = {\n      t: 'n',\n      v: 0\n    },\n    header = 0,\n    offset = 1,\n    hdr /*:Array<any>*/ = [],\n    v = 0,\n    vv = \"\";\n  var r = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var o = opts || {};\n  var range = o.range != null ? o.range : sheet[\"!ref\"];\n  if (o.header === 1) header = 1;else if (o.header === \"A\") header = 2;else if (Array.isArray(o.header)) header = 3;else if (o.header == null) header = 0;\n  switch (typeof range) {\n    case 'string':\n      r = safe_decode_range(range);\n      break;\n    case 'number':\n      r = safe_decode_range(sheet[\"!ref\"]);\n      r.s.r = range;\n      break;\n    default:\n      r = range;\n  }\n  if (header > 0) offset = 0;\n  var rr = encode_row(r.s.r);\n  var cols /*:Array<string>*/ = [];\n  var out /*:Array<any>*/ = [];\n  var outi = 0,\n    counter = 0;\n  var dense = sheet[\"!data\"] != null;\n  var R = r.s.r,\n    C = 0;\n  var header_cnt = {};\n  if (dense && !sheet[\"!data\"][R]) sheet[\"!data\"][R] = [];\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (C = r.s.c; C <= r.e.c; ++C) {\n    if ((colinfo[C] || {}).hidden) continue;\n    cols[C] = encode_col(C);\n    val = dense ? sheet[\"!data\"][R][C] : sheet[cols[C] + rr];\n    switch (header) {\n      case 1:\n        hdr[C] = C - r.s.c;\n        break;\n      case 2:\n        hdr[C] = cols[C];\n        break;\n      case 3:\n        hdr[C] = o.header[C - r.s.c];\n        break;\n      default:\n        if (val == null) val = {\n          w: \"__EMPTY\",\n          t: \"s\"\n        };\n        vv = v = format_cell(val, null, o);\n        counter = header_cnt[v] || 0;\n        if (!counter) header_cnt[v] = 1;else {\n          do {\n            vv = v + \"_\" + counter++;\n          } while (header_cnt[vv]);\n          header_cnt[v] = counter;\n          header_cnt[vv] = 1;\n        }\n        hdr[C] = vv;\n    }\n  }\n  for (R = r.s.r + offset; R <= r.e.r; ++R) {\n    if ((rowinfo[R] || {}).hidden) continue;\n    var row = make_json_row(sheet, r, R, cols, header, hdr, o);\n    if (row.isempty === false || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n  }\n  out.length = outi;\n  return out;\n}\nvar qreg = /\"/g;\nfunction make_csv_row(sheet /*:Worksheet*/, r /*:Range*/, R /*:number*/, cols /*:Array<string>*/, fs /*:number*/, rs /*:number*/, FS /*:string*/, o /*:Sheet2CSVOpts*/) /*:?string*/{\n  var isempty = true;\n  var row /*:Array<string>*/ = [],\n    txt = \"\",\n    rr = encode_row(R);\n  var dense = sheet[\"!data\"] != null;\n  var datarow = dense && sheet[\"!data\"][R] || [];\n  for (var C = r.s.c; C <= r.e.c; ++C) {\n    if (!cols[C]) continue;\n    var val = dense ? datarow[C] : sheet[cols[C] + rr];\n    if (val == null) txt = \"\";else if (val.v != null) {\n      isempty = false;\n      txt = '' + (o.rawNumbers && val.t == \"n\" ? val.v : format_cell(val, null, o));\n      for (var i = 0, cc = 0; i !== txt.length; ++i) if ((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {\n        txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\";\n        break;\n      }\n      if (txt == \"ID\") txt = '\"ID\"';\n    } else if (val.f != null && !val.F) {\n      isempty = false;\n      txt = '=' + val.f;\n      if (txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n    } else txt = \"\";\n    /* NOTE: Excel CSV does not support array formulae */\n    row.push(txt);\n  }\n  if (o.strip) while (row[row.length - 1] === \"\") --row.length;\n  if (o.blankrows === false && isempty) return null;\n  return row.join(FS);\n}\nfunction sheet_to_csv(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) /*:string*/{\n  var out /*:Array<string>*/ = [];\n  var o = opts == null ? {} : opts;\n  if (sheet == null || sheet[\"!ref\"] == null) return \"\";\n  var r = safe_decode_range(sheet[\"!ref\"]);\n  var FS = o.FS !== undefined ? o.FS : \",\",\n    fs = FS.charCodeAt(0);\n  var RS = o.RS !== undefined ? o.RS : \"\\n\",\n    rs = RS.charCodeAt(0);\n  var row = \"\",\n    cols /*:Array<string>*/ = [];\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (var C = r.s.c; C <= r.e.c; ++C) if (!(colinfo[C] || {}).hidden) cols[C] = encode_col(C);\n  var w = 0;\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    if ((rowinfo[R] || {}).hidden) continue;\n    row = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n    if (row == null) {\n      continue;\n    }\n    if (row || o.blankrows !== false) out.push((w++ ? RS : \"\") + row);\n  }\n  return out.join(\"\");\n}\nfunction sheet_to_txt(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) {\n  if (!opts) opts = {};\n  opts.FS = \"\\t\";\n  opts.RS = \"\\n\";\n  var s = sheet_to_csv(sheet, opts);\n  if (typeof $cptable == 'undefined' || opts.type == 'string') return s;\n  var o = $cptable.utils.encode(1200, s, 'str');\n  return String.fromCharCode(255) + String.fromCharCode(254) + o;\n}\nfunction sheet_to_formulae(sheet /*:Worksheet*/) /*:Array<string>*/{\n  var y = \"\",\n    x,\n    val = \"\";\n  if (sheet == null || sheet[\"!ref\"] == null) return [];\n  var r = safe_decode_range(sheet['!ref']),\n    rr = \"\",\n    cols /*:Array<string>*/ = [],\n    C;\n  var cmds /*:Array<string>*/ = [];\n  var dense = sheet[\"!data\"] != null;\n  for (C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    rr = encode_row(R);\n    for (C = r.s.c; C <= r.e.c; ++C) {\n      y = cols[C] + rr;\n      x = dense ? (sheet[\"!data\"][R] || [])[C] : sheet[y];\n      val = \"\";\n      if (x === undefined) continue;else if (x.F != null) {\n        y = x.F;\n        if (!x.f) continue;\n        val = x.f;\n        if (y.indexOf(\":\") == -1) y = y + \":\" + y;\n      }\n      if (x.f != null) val = x.f;else if (x.t == 'z') continue;else if (x.t == 'n' && x.v != null) val = \"\" + x.v;else if (x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";else if (x.w !== undefined) val = \"'\" + x.w;else if (x.v === undefined) continue;else if (x.t == 's') val = \"'\" + x.v;else val = \"\" + x.v;\n      cmds[cmds.length] = y + \"=\" + val;\n    }\n  }\n  return cmds;\n}\nfunction sheet_add_json(_ws /*:?Worksheet*/, js /*:Array<any>*/, opts) /*:Worksheet*/{\n  var o = opts || {};\n  var dense = _ws ? _ws[\"!data\"] != null : o.dense;\n  if (DENSE != null && dense == null) dense = DENSE;\n  var offset = +!o.skipHeader;\n  var ws /*:Worksheet*/ = _ws || {};\n  if (!_ws && dense) ws[\"!data\"] = [];\n  var _R = 0,\n    _C = 0;\n  if (ws && o.origin != null) {\n    if (typeof o.origin == 'number') _R = o.origin;else {\n      var _origin /*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n      _R = _origin.r;\n      _C = _origin.c;\n    }\n  }\n  var range /*:Range*/ = {\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: _C,\n      r: _R + js.length - 1 + offset\n    }\n  } /*:any*/;\n  if (ws['!ref']) {\n    var _range = safe_decode_range(ws['!ref']);\n    range.e.c = Math.max(range.e.c, _range.e.c);\n    range.e.r = Math.max(range.e.r, _range.e.r);\n    if (_R == -1) {\n      _R = _range.e.r + 1;\n      range.e.r = _R + js.length - 1 + offset;\n    }\n  } else {\n    if (_R == -1) {\n      _R = 0;\n      range.e.r = js.length - 1 + offset;\n    }\n  }\n  var hdr /*:Array<string>*/ = o.header || [],\n    C = 0;\n  var ROW = [];\n  js.forEach(function (JS, R /*:number*/) {\n    if (dense && !ws[\"!data\"][_R + R + offset]) ws[\"!data\"][_R + R + offset] = [];\n    if (dense) ROW = ws[\"!data\"][_R + R + offset];\n    keys(JS).forEach(function (k) {\n      if ((C = hdr.indexOf(k)) == -1) hdr[C = hdr.length] = k;\n      var v = JS[k];\n      var t = 'z';\n      var z = \"\";\n      var ref = dense ? \"\" : encode_col(_C + C) + encode_row(_R + R + offset);\n      var cell /*:Cell*/ = dense ? ROW[_C + C] : ws[ref];\n      if (v && typeof v === 'object' && !(v instanceof Date)) {\n        if (dense) ROW[_C + C] = v;else ws[ref] = v;\n      } else {\n        if (typeof v == 'number') t = 'n';else if (typeof v == 'boolean') t = 'b';else if (typeof v == 'string') t = 's';else if (v instanceof Date) {\n          t = 'd';\n          if (!o.UTC) v = local_to_utc(v);\n          if (!o.cellDates) {\n            t = 'n';\n            v = datenum(v);\n          }\n          z = cell != null && cell.z && fmt_is_date(cell.z) ? cell.z : o.dateNF || table_fmt[14];\n        } else if (v === null && o.nullError) {\n          t = 'e';\n          v = 0;\n        }\n        if (!cell) {\n          if (!dense) ws[ref] = cell = {\n            t: t,\n            v: v\n          } /*:any*/;else ROW[_C + C] = cell = {\n            t: t,\n            v: v\n          } /*:any*/;\n        } else {\n          cell.t = t;\n          cell.v = v;\n          delete cell.w;\n          delete cell.R;\n          if (z) cell.z = z;\n        }\n        if (z) cell.z = z;\n      }\n    });\n  });\n  range.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n  var __R = encode_row(_R);\n  if (dense && !ws[\"!data\"][_R]) ws[\"!data\"][_R] = [];\n  if (offset) for (C = 0; C < hdr.length; ++C) {\n    if (dense) ws[\"!data\"][_R][C + _C] = {\n      t: 's',\n      v: hdr[C]\n    };else ws[encode_col(C + _C) + __R] = {\n      t: 's',\n      v: hdr[C]\n    };\n  }\n  ws['!ref'] = encode_range(range);\n  return ws;\n}\nfunction json_to_sheet(js /*:Array<any>*/, opts) /*:Worksheet*/{\n  return sheet_add_json(null, js, opts);\n}\n\n/* get cell, creating a stub if necessary */\nfunction ws_get_cell_stub(ws /*:Worksheet*/, R, C /*:?number*/) /*:Cell*/{\n  /* A1 cell address */\n  if (typeof R == \"string\") {\n    if (ws[\"!data\"] != null) {\n      var RC = decode_cell(R);\n      if (!ws[\"!data\"][RC.r]) ws[\"!data\"][RC.r] = [];\n      return ws[\"!data\"][RC.r][RC.c] || (ws[\"!data\"][RC.r][RC.c] = {\n        t: 'z'\n      });\n    }\n    return ws[R] || (ws[R] = {\n      t: 'z'\n    });\n  }\n  /* cell address object */\n  if (typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n  /* R and C are 0-based indices */\n  return ws_get_cell_stub(ws, encode_col(C || 0) + encode_row(R));\n}\n\n/* find sheet index for given name / validate index */\nfunction wb_sheet_idx(wb /*:Workbook*/, sh /*:number|string*/) {\n  if (typeof sh == \"number\") {\n    if (sh >= 0 && wb.SheetNames.length > sh) return sh;\n    throw new Error(\"Cannot find sheet # \" + sh);\n  } else if (typeof sh == \"string\") {\n    var idx = wb.SheetNames.indexOf(sh);\n    if (idx > -1) return idx;\n    throw new Error(\"Cannot find sheet name |\" + sh + \"|\");\n  } else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n}\n\n/* simple blank or single-sheet workbook object */\nfunction book_new(ws /*:?Worksheet*/, wsname /*:?string*/) /*:Workbook*/{\n  var wb = {\n    SheetNames: [],\n    Sheets: {}\n  };\n  if (ws) book_append_sheet(wb, ws, wsname || \"Sheet1\");\n  return wb;\n}\n\n/* add a worksheet to the end of a given workbook */\nfunction book_append_sheet(wb /*:Workbook*/, ws /*:Worksheet*/, name /*:?string*/, roll /*:?boolean*/) /*:string*/{\n  var i = 1;\n  if (!name) for (; i <= 0xFFFF; ++i, name = undefined) if (wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n  if (!name || wb.SheetNames.length >= 0xFFFF) throw new Error(\"Too many worksheets\");\n  if (roll && wb.SheetNames.indexOf(name) >= 0 && name.length < 32) {\n    var m = name.match(/\\d+$/); // at this point, name length is capped at 32\n    i = m && +m[0] || 0;\n    var root = m && name.slice(0, m.index) || name;\n    for (++i; i <= 0xFFFF; ++i) if (wb.SheetNames.indexOf(name = root + i) == -1) break;\n  }\n  check_ws_name(name);\n  if (wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n  wb.SheetNames.push(name);\n  wb.Sheets[name] = ws;\n  return name;\n}\n\n/* set sheet visibility (visible/hidden/very hidden) */\nfunction book_set_sheet_visibility(wb /*:Workbook*/, sh /*:number|string*/, vis /*:number*/) {\n  if (!wb.Workbook) wb.Workbook = {};\n  if (!wb.Workbook.Sheets) wb.Workbook.Sheets = [];\n  var idx = wb_sheet_idx(wb, sh);\n  // $FlowIgnore\n  if (!wb.Workbook.Sheets[idx]) wb.Workbook.Sheets[idx] = {};\n  switch (vis) {\n    case 0:\n    case 1:\n    case 2:\n      break;\n    default:\n      throw new Error(\"Bad sheet visibility setting \" + vis);\n  }\n  // $FlowIgnore\n  wb.Workbook.Sheets[idx].Hidden = vis;\n}\n\n/* set number format */\nfunction cell_set_number_format(cell /*:Cell*/, fmt /*:string|number*/) {\n  cell.z = fmt;\n  return cell;\n}\n\n/* set cell hyperlink */\nfunction cell_set_hyperlink(cell /*:Cell*/, target /*:string*/, tooltip /*:?string*/) {\n  if (!target) {\n    delete cell.l;\n  } else {\n    cell.l = {\n      Target: target\n    } /*:Hyperlink*/;\n    if (tooltip) cell.l.Tooltip = tooltip;\n  }\n  return cell;\n}\nfunction cell_set_internal_link(cell /*:Cell*/, range /*:string*/, tooltip /*:?string*/) {\n  return cell_set_hyperlink(cell, \"#\" + range, tooltip);\n}\n\n/* add to cell comments */\nfunction cell_add_comment(cell /*:Cell*/, text /*:string*/, author /*:?string*/) {\n  if (!cell.c) cell.c = [];\n  cell.c.push({\n    t: text,\n    a: author || \"SheetJS\"\n  });\n}\n\n/* set array formula and flush related cells */\nfunction sheet_set_array_formula(ws /*:Worksheet*/, range, formula /*:string*/, dynamic /*:boolean*/) {\n  var rng = typeof range != \"string\" ? range : safe_decode_range(range);\n  var rngstr = typeof range == \"string\" ? range : encode_range(range);\n  for (var R = rng.s.r; R <= rng.e.r; ++R) for (var C = rng.s.c; C <= rng.e.c; ++C) {\n    var cell = ws_get_cell_stub(ws, R, C);\n    cell.t = 'n';\n    cell.F = rngstr;\n    delete cell.v;\n    if (R == rng.s.r && C == rng.s.c) {\n      cell.f = formula;\n      if (dynamic) cell.D = true;\n    }\n  }\n  var wsr = decode_range(ws[\"!ref\"]);\n  if (wsr.s.r > rng.s.r) wsr.s.r = rng.s.r;\n  if (wsr.s.c > rng.s.c) wsr.s.c = rng.s.c;\n  if (wsr.e.r < rng.e.r) wsr.e.r = rng.e.r;\n  if (wsr.e.c < rng.e.c) wsr.e.c = rng.e.c;\n  ws[\"!ref\"] = encode_range(wsr);\n  return ws;\n}\nvar utils /*:any*/ = {\n  encode_col: encode_col,\n  encode_row: encode_row,\n  encode_cell: encode_cell,\n  encode_range: encode_range,\n  decode_col: decode_col,\n  decode_row: decode_row,\n  split_cell: split_cell,\n  decode_cell: decode_cell,\n  decode_range: decode_range,\n  format_cell: format_cell,\n  sheet_new: sheet_new,\n  sheet_add_aoa: sheet_add_aoa,\n  sheet_add_json: sheet_add_json,\n  sheet_add_dom: sheet_add_dom,\n  aoa_to_sheet: aoa_to_sheet,\n  json_to_sheet: json_to_sheet,\n  table_to_sheet: parse_dom_table,\n  table_to_book: table_to_book,\n  sheet_to_csv: sheet_to_csv,\n  sheet_to_txt: sheet_to_txt,\n  sheet_to_json: sheet_to_json,\n  sheet_to_html: sheet_to_html,\n  sheet_to_formulae: sheet_to_formulae,\n  sheet_to_row_object_array: sheet_to_json,\n  sheet_get_cell: ws_get_cell_stub,\n  book_new: book_new,\n  book_append_sheet: book_append_sheet,\n  book_set_sheet_visibility: book_set_sheet_visibility,\n  cell_set_number_format: cell_set_number_format,\n  cell_set_hyperlink: cell_set_hyperlink,\n  cell_set_internal_link: cell_set_internal_link,\n  cell_add_comment: cell_add_comment,\n  sheet_set_array_formula: sheet_set_array_formula,\n  consts: {\n    SHEET_VISIBLE: 0,\n    SHEET_HIDDEN: 1,\n    SHEET_VERY_HIDDEN: 2\n  }\n};\nvar _Readable;\nfunction set_readable(R) {\n  _Readable = R;\n}\nfunction write_csv_stream(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) {\n  var stream = _Readable();\n  var o = opts == null ? {} : opts;\n  if (sheet == null || sheet[\"!ref\"] == null) {\n    stream.push(null);\n    return stream;\n  }\n  var r = safe_decode_range(sheet[\"!ref\"]);\n  var FS = o.FS !== undefined ? o.FS : \",\",\n    fs = FS.charCodeAt(0);\n  var RS = o.RS !== undefined ? o.RS : \"\\n\",\n    rs = RS.charCodeAt(0);\n  var row /*:?string*/ = \"\",\n    cols /*:Array<string>*/ = [];\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (var C = r.s.c; C <= r.e.c; ++C) if (!(colinfo[C] || {}).hidden) cols[C] = encode_col(C);\n  var R = r.s.r;\n  var BOM = false,\n    w = 0;\n  stream._read = function () {\n    if (!BOM) {\n      BOM = true;\n      return stream.push(\"\\uFEFF\");\n    }\n    while (R <= r.e.r) {\n      ++R;\n      if ((rowinfo[R - 1] || {}).hidden) continue;\n      row = make_csv_row(sheet, r, R - 1, cols, fs, rs, FS, o);\n      if (row != null) {\n        if (row || o.blankrows !== false) return stream.push((w++ ? RS : \"\") + row);\n      }\n    }\n    return stream.push(null);\n  };\n  return stream;\n}\nfunction write_html_stream(ws /*:Worksheet*/, opts /*:?Sheet2HTMLOpts*/) {\n  var stream = _Readable();\n  var o = opts || {};\n  var header = o.header != null ? o.header : HTML_BEGIN;\n  var footer = o.footer != null ? o.footer : HTML_END;\n  stream.push(header);\n  var r = decode_range(ws['!ref']);\n  stream.push(make_html_preamble(ws, r, o));\n  var R = r.s.r;\n  var end = false;\n  stream._read = function () {\n    if (R > r.e.r) {\n      if (!end) {\n        end = true;\n        stream.push(\"</table>\" + footer);\n      }\n      return stream.push(null);\n    }\n    while (R <= r.e.r) {\n      stream.push(make_html_row(ws, r, R, o));\n      ++R;\n      break;\n    }\n  };\n  return stream;\n}\nfunction write_json_stream(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) {\n  var stream = _Readable({\n    objectMode: true\n  });\n  if (sheet == null || sheet[\"!ref\"] == null) {\n    stream.push(null);\n    return stream;\n  }\n  var val = {\n      t: 'n',\n      v: 0\n    },\n    header = 0,\n    offset = 1,\n    hdr /*:Array<any>*/ = [],\n    v = 0,\n    vv = \"\";\n  var r = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var o = opts || {};\n  var range = o.range != null ? o.range : sheet[\"!ref\"];\n  if (o.header === 1) header = 1;else if (o.header === \"A\") header = 2;else if (Array.isArray(o.header)) header = 3;\n  switch (typeof range) {\n    case 'string':\n      r = safe_decode_range(range);\n      break;\n    case 'number':\n      r = safe_decode_range(sheet[\"!ref\"]);\n      r.s.r = range;\n      break;\n    default:\n      r = range;\n  }\n  if (header > 0) offset = 0;\n  var rr = encode_row(r.s.r);\n  var cols /*:Array<string>*/ = [];\n  var counter = 0;\n  var dense = sheet[\"!data\"] != null;\n  var R = r.s.r,\n    C = 0;\n  var header_cnt = {};\n  if (dense && !sheet[\"!data\"][R]) sheet[\"!data\"][R] = [];\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (C = r.s.c; C <= r.e.c; ++C) {\n    if ((colinfo[C] || {}).hidden) continue;\n    cols[C] = encode_col(C);\n    val = dense ? sheet[\"!data\"][R][C] : sheet[cols[C] + rr];\n    switch (header) {\n      case 1:\n        hdr[C] = C - r.s.c;\n        break;\n      case 2:\n        hdr[C] = cols[C];\n        break;\n      case 3:\n        hdr[C] = o.header[C - r.s.c];\n        break;\n      default:\n        if (val == null) val = {\n          w: \"__EMPTY\",\n          t: \"s\"\n        };\n        vv = v = format_cell(val, null, o);\n        counter = header_cnt[v] || 0;\n        if (!counter) header_cnt[v] = 1;else {\n          do {\n            vv = v + \"_\" + counter++;\n          } while (header_cnt[vv]);\n          header_cnt[v] = counter;\n          header_cnt[vv] = 1;\n        }\n        hdr[C] = vv;\n    }\n  }\n  R = r.s.r + offset;\n  stream._read = function () {\n    while (R <= r.e.r) {\n      if ((rowinfo[R - 1] || {}).hidden) continue;\n      var row = make_json_row(sheet, r, R, cols, header, hdr, o);\n      ++R;\n      if (row.isempty === false || (header === 1 ? o.blankrows !== false : !!o.blankrows)) {\n        stream.push(row.row);\n        return;\n      }\n    }\n    return stream.push(null);\n  };\n  return stream;\n}\nvar __stream = {\n  to_json: write_json_stream,\n  to_html: write_html_stream,\n  to_csv: write_csv_stream,\n  set_readable: set_readable\n};\nexport const version = XLSX.version;\nexport { parse_xlscfb, parse_zip, readSync as read, readFileSync as readFile, readFileSync, writeSync as write, writeFileSync as writeFile, writeFileSync, writeFileAsync, writeSyncXLSX as writeXLSX, writeFileSyncXLSX as writeFileXLSX, utils, set_fs, set_cptable, __stream as stream, SSF, CFB };\nexport default {\n  parse_xlscfb,\n  parse_zip,\n  read: readSync,\n  readFile: readFileSync,\n  readFileSync,\n  write: writeSync,\n  writeFile: writeFileSync,\n  writeFileSync,\n  writeFileAsync,\n  writeXLSX: writeSyncXLSX,\n  writeFileXLSX: writeFileSyncXLSX,\n  utils,\n  set_fs,\n  set_cptable,\n  stream: __stream,\n  SSF,\n  CFB\n};"],"sourceRoot":""}